{
  "private": true,
  "type": "module",
  "scripts": {
    "build-library": "npm run babel -- --plugins @babel/plugin-transform-modules-commonjs ../../../../build/fable-library --out-dir out-lib/fable-library",
    "build-fable": "dotnet run -c Release -p ../../Fable.Compiler yarn-splitter",
    "build-fable-js": "fable bench-compiler.fsproj out-node --commonjs",
    "build-dotnet": "dotnet run -c Release bench-compiler.fsproj out-node && npm run build-transform",
    "build-dotnet-cls": "dotnet run -c Release bench-compiler.fsproj out-node --classTypes && npm run build-transform",
    "build-dotnet-opt": "dotnet run -c Release bench-compiler.fsproj out-node --optimize-fcs && npm run build-transform",
    "build-transform": "node transform bench-compiler.fsproj out-node ../../../../build/fable-library",
    "postbuild-transform": "npm run rollup-bundle",
    "build-node": "node dist/bundle.js bench-compiler.fsproj out-node2 && npm run build-node-transform",
    "build-node-cls": "node dist/bundle.js bench-compiler.fsproj out-node2 --classTypes && npm run build-node-transform",
    "build-node-es": "node out-node/app.js bench-compiler.fsproj out-node2 && npm run build-node-transform",
    "build-node-transform": "node transform bench-compiler.fsproj out-node2 ../../../../build/fable-library",
    "compile-native": "dotnet publish -c Release -r win-x64",
    "native": "cd . && \"bin/Release/netcoreapp2.1/win-x64/native/bench-compiler\"",
    "build-native": "npm run native bench-compiler.fsproj out-node && npm run build-transform",
    "build-test-native": "npm run native ../../../../../fable-test/fable-test.fsproj out-test && npm run build-test-transform",
    "build-tests-native": "npm run native ../../../../tests/Main/Fable.Tests.fsproj out-tests && npm run build-tests-transform",
    "rollup-bundle": "npm run rollup -- -i out-node/app.js -o dist/bundle.js --format esm",
    "terser-bundle": "npm run terser -- dist/bundle.js -o dist/bundle.min.js --mangle --compress",
    "webpack-bundle": "npm run webpack -- -p --entry ./out-node/app.js --output ./dist/bundle.min.js --target node",
    "prebuild-lib-dotnet": "if exist out-lib (rmdir /s /q out-lib)",
    "build-lib-dotnet": "dotnet run -c Release ../../../fable-library/Fable.Library.fsproj out-lib --typescript && npm run build-lib-transform",
    "build-lib-transform": "node transform ../../../fable-library/Fable.Library.fsproj out-lib ../../../../build/fable-library --typescript",
    "postbuild-lib-transform": "rmdir /s /q out-lib\\fable-library && xcopy /s /y ..\\..\\..\\fable-library\\*.ts out-lib\\",
    "tsc-lib-init": "npm run tsc -- --init --target es2020 --module es2020",
    "tsc-lib": "npm run tsc -p out-lib --outDir out-lib-js",
    "build-test-node": "node out-node/app.js ../../../../../fable-test/fable-test.fsproj out-test --classTypes --typescript && npm run build-test-transform",
    "build-test-dotnet": "dotnet run -c Release ../../../../../fable-test/fable-test.fsproj out-test --classTypes --typescript && npm run build-test-transform",
    "build-test-dotnet-opt": "dotnet run -c Release ../../../../../fable-test/fable-test.fsproj out-test --optimize-fcs && npm run build-test-transform",
    "build-test-transform": "node transform ../../../../../fable-test/fable-test.fsproj out-test ../../../../build/fable-library --typescript",
    "test-node": "node ./out-test/src/test.js",
    "build-tests-node": "node out-node/app.js ../../../../tests/Main/Fable.Tests.fsproj out-tests --classTypes --typescript && npm run build-tests-transform",
    "build-tests-dotnet": "dotnet run -c Release ../../../../tests/Main/Fable.Tests.fsproj out-tests --classTypes --typescript && npm run build-tests-transform",
    "build-tests-dotnet-opt": "dotnet run -c Release ../../../../tests/Main/Fable.Tests.fsproj out-tests --optimize-fcs && npm run build-tests-transform",
    "build-tests-transform": "node transform ../../../../tests/Main/Fable.Tests.fsproj out-tests ../../../../build/fable-library --typescript",
    "tsc": "node ../../../../node_modules/typescript/bin/tsc",
    "babel": "node ../../../../node_modules/@babel/cli/bin/babel",
    "mocha": "node ../../../../node_modules/mocha/bin/mocha --colors",
    "rollup": "node ../../../../node_modules/rollup/dist/bin/rollup",
    "terser": "node ../../../../node_modules/terser/bin/terser",
    "webpack": "node ../../../../node_modules/webpack-cli/bin/cli.js",
    "splitter": "node ../../../../node_modules/fable-splitter/dist/cli",
    "tests": "npm run mocha out-tests/Main.js",
    "profile": "node --prof dist/bundle.js bench-compiler.fsproj out-node2",
    "cpu-prof": "node --cpu-prof --cpu-prof-dir=out-prof dist/bundle.js bench-compiler.fsproj out-node2",
    "heap-prof": "node --heap-prof dist/bundle.js bench-compiler.fsproj out-node2",
    "prof-process": "node --prof-process isolate-*.log > profile.log",
    "prof-preprocess": "node --prof-process --preprocess isolate-*.log > profile.v8log.json",
    "flamegraph": "speedscope profile.v8log.json",
    "trace": "node --trace-deopt out-node/app bench-compiler.fsproj out-node2 > deopt.txt"
  }
}
