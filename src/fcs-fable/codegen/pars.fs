// Implementation file for parser generated by fsyacc
module internal FSharp.Compiler.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Compiler
open Internal.Utilities.Text.Lexing
open Internal.Utilities.Text.Parsing.ParseHelpers
//# 3 "../../../src/fsharp/pars.fsy"


#nowarn "1182"  // generated code has lots of unused "parseState"

open System

open Internal.Utilities
open Internal.Utilities.Text.Parsing

open FSharp.Compiler
open FSharp.Compiler.AbstractIL
open FSharp.Compiler.AbstractIL
open Internal.Utilities.Library
open FSharp.Compiler.ErrorLogger
open FSharp.Compiler.Features
open Internal.Utilities.Library.Extras
open FSharp.Compiler.ParseHelpers
open FSharp.Compiler.Syntax
open FSharp.Compiler.Syntax.PrettyNaming
open FSharp.Compiler.SyntaxTreeOps
open FSharp.Compiler.SyntaxTreeOps
open FSharp.Compiler.Text
open FSharp.Compiler.Text.Position
open FSharp.Compiler.Text.Range
open FSharp.Compiler.Xml

#if DEBUG
let debugPrint s =
    if Internal.Utilities.Text.Parsing.Flags.debug then 
        printfn "\n%s" s
#else
let debugPrint s = ignore s
#endif

let exprFromParseError (e:SynExpr) = SynExpr.FromParseError (e, e.Range)

let patFromParseError (e:SynPat) = SynPat.FromParseError(e, e.Range)

let mkSynOptionalExpr (m: range) xopt = 
    let m = m.MakeSynthetic()
    match xopt with 
    | None -> mkSynLidGet m FSharpLib.CorePath "None"
    | Some x  -> SynExpr.App (ExprAtomicFlag.NonAtomic, false, mkSynLidGet m FSharpLib.CorePath "Some", x, m)

// record bindings returned by the recdExprBindings rule has shape:
// (binding, separator-before-this-binding)
// this function converts arguments from form
// binding1 (binding2*sep1, binding3*sep2...) sepN
// to form
// binding1*sep1, binding2*sep2
let rebindRanges first fields lastSep = 
    let rec run (name, value) l acc = 
        match l with
        | [] -> List.rev ((name, value, lastSep) :: acc)
        | (f, m) :: xs -> run f xs ((name, value, m) :: acc)
    run first fields []

let mkUnderscoreRecdField m = LongIdentWithDots([ident("_", m)], []), false

let mkRecdField lidwd = lidwd, true

let mkSynDoBinding (vis, strict, expr, m) = 
    match vis with
    | Some vis -> errorR(Error(FSComp.SR.parsDoCannotHaveVisibilityDeclarations (vis.ToString()), m))
    | None -> ()
    SynBinding(None,
             (if strict then SynBindingKind.Do else SynBindingKind.StandaloneExpression),
             false, false, [], PreXmlDoc.Empty, SynInfo.emptySynValData,
             (if strict then SynPat.Const(SynConst.Unit, m) else SynPat.Wild m),
             None, expr, m, DebugPointAtBinding.NoneAtDo)

let mkSynDoDecl (e: SynExpr) = 
    let spExpr = if IsControlFlowExpression e then DebugPointAtBinding.NoneAtDo else DebugPointAtBinding.Yes e.Range
    SynModuleDecl.DoExpr(spExpr, e, e.Range)

let addAttribs attrs p =  SynPat.Attrib(p, attrs, p.Range)


// This function is called by the generated parser code. Returning initiates error recovery 
// It must be called precisely "parse_error_rich"
let parse_error_rich = Some (fun (ctxt: ParseErrorContext<_>) -> 
    errorR(SyntaxError(box ctxt, ctxt.ParseState.LexBuffer.LexemeRange)))

let reportParseErrorAt m s = errorR(Error(s, m))

let unionRangeWithPos (r:range) p =
    let r2 = mkRange r.FileName p p
    unionRanges r r2

let raiseParseErrorAt m s = 
    reportParseErrorAt m s; 
    // This initiates error recovery
    raise RecoverableParseError 

/// Report a good error at the end of file, e.g. for non-terminated strings
let checkEndOfFileError t = 
  match t with 
  | LexCont.IfDefSkip(_, _, _, m) ->
      reportParseErrorAt m (FSComp.SR.parsEofInHashIf())

  | LexCont.String (_, _, LexerStringStyle.SingleQuote, kind, m) -> 
     if kind.IsInterpolated then
         reportParseErrorAt m (FSComp.SR.parsEofInInterpolatedString())
     else
         reportParseErrorAt m (FSComp.SR.parsEofInString())

  | LexCont.String (_, _, LexerStringStyle.TripleQuote, kind, m) ->
     if kind.IsInterpolated then
         reportParseErrorAt m (FSComp.SR.parsEofInInterpolatedTripleQuoteString())
     else
         reportParseErrorAt m (FSComp.SR.parsEofInTripleQuoteString())

  | LexCont.String (_, _, LexerStringStyle.Verbatim, kind, m) ->
     if kind.IsInterpolated then
         reportParseErrorAt m (FSComp.SR.parsEofInInterpolatedVerbatimString())
     else
         reportParseErrorAt m (FSComp.SR.parsEofInVerbatimString())

  | LexCont.Comment (_, _, _, m) ->
     reportParseErrorAt m (FSComp.SR.parsEofInComment())

  | LexCont.SingleLineComment (_, _, _, m) ->
     reportParseErrorAt m (FSComp.SR.parsEofInComment())

  | LexCont.StringInComment (_, _, LexerStringStyle.SingleQuote, _, m) ->
     reportParseErrorAt m (FSComp.SR.parsEofInStringInComment())

  | LexCont.StringInComment (_, _, LexerStringStyle.Verbatim, _, m) ->
     reportParseErrorAt m (FSComp.SR.parsEofInVerbatimStringInComment())

  | LexCont.StringInComment (_, _, LexerStringStyle.TripleQuote, _, m) ->
     reportParseErrorAt m (FSComp.SR.parsEofInTripleQuoteStringInComment())

  | LexCont.MLOnly (_, _, m) ->
     reportParseErrorAt m (FSComp.SR.parsEofInIfOcaml())

  | LexCont.EndLine(_, _, LexerEndlineContinuation.Skip(_, m)) ->
     reportParseErrorAt m (FSComp.SR.parsEofInDirective())

  | LexCont.EndLine(endifs, nesting, LexerEndlineContinuation.Token)
  | LexCont.Token(endifs, nesting) -> 
      match endifs with 
      | [] -> ()
      | (_, m) :: _  -> reportParseErrorAt m (FSComp.SR.parsNoHashEndIfFound())
      match nesting with 
      | [] -> ()
      | (_, _, m) :: _  -> reportParseErrorAt m (FSComp.SR.parsEofInInterpolatedStringFill())

type BindingSet = BindingSetPreAttrs of range * bool * bool * (SynAttributes -> SynAccess option -> SynAttributes * SynBinding list) * range

let mkClassMemberLocalBindings(isStatic, initialRangeOpt, attrs, vis, BindingSetPreAttrs(_, isRec, isUse, declsPreAttrs, bindingSetRange)) = 
   let ignoredFreeAttrs, decls = declsPreAttrs attrs vis
   let wholeRange = 
       match initialRangeOpt with 
       | None -> bindingSetRange
       | Some m -> unionRanges m bindingSetRange
       // decls could have a leading attribute
       |> fun m -> (m, decls) ||> unionRangeWithListBy (fun (SynBinding(range = m)) -> m)
   if not (isNil ignoredFreeAttrs) then warning(Error(FSComp.SR.parsAttributesIgnored(), wholeRange));
   if isUse then errorR(Error(FSComp.SR.parsUseBindingsIllegalInImplicitClassConstructors(), wholeRange))
   SynMemberDefn.LetBindings (decls, isStatic, isRec, wholeRange)

let mkLocalBindings (mWhole, BindingSetPreAttrs(_, isRec, isUse, declsPreAttrs, _), body) = 
   let ignoredFreeAttrs, decls = declsPreAttrs [] None 
   if not (isNil ignoredFreeAttrs) then warning(Error(FSComp.SR.parsAttributesIgnored(), mWhole))
   SynExpr.LetOrUse (isRec, isUse, decls, body, mWhole) 

let mkDefnBindings (mWhole, BindingSetPreAttrs(_, isRec, isUse, declsPreAttrs, _bindingSetRange), attrs, vis, attrsm) = 
    if isUse then warning(Error(FSComp.SR.parsUseBindingsIllegalInModules(), mWhole))
    let freeAttrs, decls = declsPreAttrs attrs vis
    // decls might have an extended range due to leading attributes
    let mWhole = (mWhole, decls) ||> unionRangeWithListBy (fun (SynBinding(range = m)) -> m)
    let letDecls = [ SynModuleDecl.Let (isRec, decls, mWhole) ] 
    let attrDecls = if not (isNil freeAttrs) then [ SynModuleDecl.Attributes (freeAttrs, attrsm) ] else [] 
    attrDecls @ letDecls

let idOfPat (parseState:IParseState) m p = 
    match p with
    | SynPat.Wild r when parseState.LexBuffer.SupportsFeature LanguageFeature.WildCardInForLoop ->
        mkSynId r "_"
    | SynPat.Named (SynPat.Wild _, id, false, _, _) -> id
    | SynPat.LongIdent(LongIdentWithDots([id], _), _, None, SynArgPats.Pats [], None, _) -> id
    | _ -> raiseParseErrorAt m (FSComp.SR.parsIntegerForLoopRequiresSimpleIdentifier())

let checkForMultipleAugmentations m a1 a2 = 
    if not (isNil a1) && not (isNil a2) then raiseParseErrorAt m (FSComp.SR.parsOnlyOneWithAugmentationAllowed())
    a1 @ a2

let grabXmlDoc(parseState:IParseState, elemIdx) = 
    LexbufLocalXmlDocStore.GrabXmlDocBeforeMarker(parseState.LexBuffer, rhs parseState elemIdx)

let rangeOfLongIdent(lid:LongIdent) =
    System.Diagnostics.Debug.Assert(not lid.IsEmpty, "the parser should never produce a long-id that is the empty list") 
    (lid.Head.idRange, lid) ||> unionRangeWithListBy (fun id -> id.idRange) 


//# 204 "pars.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | HASH_IF of (range * string * ParseHelpers.LexerContinuation)
  | HASH_ELSE of (range * string * ParseHelpers.LexerContinuation)
  | HASH_ENDIF of (range * string * ParseHelpers.LexerContinuation)
  | COMMENT of (ParseHelpers.LexerContinuation)
  | WHITESPACE of (ParseHelpers.LexerContinuation)
  | HASH_LINE of (ParseHelpers.LexerContinuation)
  | HASH_LIGHT of (ParseHelpers.LexerContinuation)
  | INACTIVECODE of (ParseHelpers.LexerContinuation)
  | LINE_COMMENT of (ParseHelpers.LexerContinuation)
  | STRING_TEXT of (ParseHelpers.LexerContinuation)
  | EOF of (ParseHelpers.LexerContinuation)
  | LEX_FAILURE of (string)
  | ODUMMY of (token)
  | FIXED
  | OINTERFACE_MEMBER
  | OBLOCKEND
  | OBLOCKEND_COMING_SOON
  | OBLOCKEND_IS_HERE
  | ORIGHT_BLOCK_END
  | ODECLEND
  | OEND
  | OBLOCKSEP
  | OBLOCKBEGIN
  | ORESET
  | OFUN
  | OFUNCTION
  | OWITH
  | OELSE
  | OTHEN
  | ODO_BANG
  | ODO
  | OAND_BANG of (bool)
  | OBINDER of (string)
  | OLET of (bool)
  | HIGH_PRECEDENCE_TYAPP
  | HIGH_PRECEDENCE_PAREN_APP
  | HIGH_PRECEDENCE_BRACK_APP
  | TYPE_COMING_SOON
  | TYPE_IS_HERE
  | MODULE_COMING_SOON
  | MODULE_IS_HERE
  | EXTERN
  | VOID
  | PUBLIC
  | PRIVATE
  | INTERNAL
  | GLOBAL
  | STATIC
  | MEMBER
  | CLASS
  | ABSTRACT
  | OVERRIDE
  | DEFAULT
  | CONSTRUCTOR
  | INHERIT
  | GREATER_RBRACK
  | STRUCT
  | SIG
  | BAR
  | RBRACK
  | RBRACE_COMING_SOON
  | RBRACE_IS_HERE
  | MINUS
  | DOLLAR
  | BAR_RBRACK
  | BAR_RBRACE
  | UNDERSCORE
  | SEMICOLON_SEMICOLON
  | LARROW
  | EQUALS
  | LBRACK
  | LBRACK_BAR
  | LBRACE_BAR
  | LBRACK_LESS
  | QMARK
  | QMARK_QMARK
  | DOT
  | COLON
  | COLON_COLON
  | COLON_GREATER
  | COLON_QMARK_GREATER
  | COLON_QMARK
  | COLON_EQUALS
  | SEMICOLON
  | WHEN
  | WHILE
  | WITH
  | HASH
  | AMP
  | AMP_AMP
  | QUOTE
  | LPAREN
  | RPAREN
  | RPAREN_COMING_SOON
  | RPAREN_IS_HERE
  | STAR
  | COMMA
  | RARROW
  | GREATER_BAR_RBRACK
  | LPAREN_STAR_RPAREN
  | OPEN
  | OR
  | REC
  | THEN
  | TO
  | TRUE
  | TRY
  | TYPE
  | VAL
  | INLINE
  | INTERFACE
  | INSTANCE
  | CONST
  | LAZY
  | OLAZY
  | MATCH
  | MATCH_BANG
  | MUTABLE
  | NEW
  | OF
  | EXCEPTION
  | FALSE
  | FOR
  | FUN
  | FUNCTION
  | IF
  | IN
  | JOIN_IN
  | FINALLY
  | DO_BANG
  | AND
  | AS
  | ASSERT
  | OASSERT
  | ASR
  | BEGIN
  | DO
  | DONE
  | DOWNTO
  | ELSE
  | ELIF
  | END
  | DOT_DOT
  | DOT_DOT_HAT
  | BAR_BAR
  | UPCAST
  | DOWNCAST
  | NULL
  | RESERVED
  | MODULE
  | NAMESPACE
  | DELEGATE
  | CONSTRAINT
  | BASE
  | LQUOTE of (string * bool)
  | RQUOTE of (string * bool)
  | RQUOTE_DOT of (string * bool)
  | PERCENT_OP of (string)
  | BINDER of (string)
  | LESS of (bool)
  | GREATER of (bool)
  | LET of (bool)
  | YIELD of (bool)
  | YIELD_BANG of (bool)
  | AND_BANG of (bool)
  | BIGNUM of ((string * string))
  | DECIMAL of (System.Decimal)
  | CHAR of (char)
  | IEEE64 of (double)
  | IEEE32 of (single)
  | UNATIVEINT of (uint64)
  | UINT64 of (uint64)
  | UINT32 of (uint32)
  | UINT16 of (uint16)
  | UINT8 of (byte)
  | NATIVEINT of (int64 * bool)
  | INT64 of (int64 * bool)
  | INT32 of (int32 * bool)
  | INT32_DOT_DOT of (int32 * bool)
  | INT16 of (int16 * bool)
  | INT8 of (sbyte * bool)
  | FUNKY_OPERATOR_NAME of (string)
  | ADJACENT_PREFIX_OP of (string)
  | PLUS_MINUS_OP of (string)
  | INFIX_AMP_OP of (string)
  | INFIX_STAR_DIV_MOD_OP of (string)
  | PREFIX_OP of (string)
  | INFIX_BAR_OP of (string)
  | INFIX_AT_HAT_OP of (string)
  | INFIX_COMPARE_OP of (string)
  | INFIX_STAR_STAR_OP of (string)
  | HASH_IDENT of (string)
  | IDENT of (string)
  | KEYWORD_STRING of (string * string)
  | LBRACE of (ParseHelpers.LexerContinuation)
  | RBRACE of (ParseHelpers.LexerContinuation)
  | INTERP_STRING_END of (string * ParseHelpers.LexerContinuation)
  | INTERP_STRING_PART of (string * ParseHelpers.LexerContinuation)
  | INTERP_STRING_BEGIN_PART of (string * SynStringKind * ParseHelpers.LexerContinuation)
  | INTERP_STRING_BEGIN_END of (string * SynStringKind * ParseHelpers.LexerContinuation)
  | STRING of (string * SynStringKind * ParseHelpers.LexerContinuation)
  | BYTEARRAY of (byte[] * SynByteStringKind * ParseHelpers.LexerContinuation)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_HASH_IF
    | TOKEN_HASH_ELSE
    | TOKEN_HASH_ENDIF
    | TOKEN_COMMENT
    | TOKEN_WHITESPACE
    | TOKEN_HASH_LINE
    | TOKEN_HASH_LIGHT
    | TOKEN_INACTIVECODE
    | TOKEN_LINE_COMMENT
    | TOKEN_STRING_TEXT
    | TOKEN_EOF
    | TOKEN_LEX_FAILURE
    | TOKEN_ODUMMY
    | TOKEN_FIXED
    | TOKEN_OINTERFACE_MEMBER
    | TOKEN_OBLOCKEND
    | TOKEN_OBLOCKEND_COMING_SOON
    | TOKEN_OBLOCKEND_IS_HERE
    | TOKEN_ORIGHT_BLOCK_END
    | TOKEN_ODECLEND
    | TOKEN_OEND
    | TOKEN_OBLOCKSEP
    | TOKEN_OBLOCKBEGIN
    | TOKEN_ORESET
    | TOKEN_OFUN
    | TOKEN_OFUNCTION
    | TOKEN_OWITH
    | TOKEN_OELSE
    | TOKEN_OTHEN
    | TOKEN_ODO_BANG
    | TOKEN_ODO
    | TOKEN_OAND_BANG
    | TOKEN_OBINDER
    | TOKEN_OLET
    | TOKEN_HIGH_PRECEDENCE_TYAPP
    | TOKEN_HIGH_PRECEDENCE_PAREN_APP
    | TOKEN_HIGH_PRECEDENCE_BRACK_APP
    | TOKEN_TYPE_COMING_SOON
    | TOKEN_TYPE_IS_HERE
    | TOKEN_MODULE_COMING_SOON
    | TOKEN_MODULE_IS_HERE
    | TOKEN_EXTERN
    | TOKEN_VOID
    | TOKEN_PUBLIC
    | TOKEN_PRIVATE
    | TOKEN_INTERNAL
    | TOKEN_GLOBAL
    | TOKEN_STATIC
    | TOKEN_MEMBER
    | TOKEN_CLASS
    | TOKEN_ABSTRACT
    | TOKEN_OVERRIDE
    | TOKEN_DEFAULT
    | TOKEN_CONSTRUCTOR
    | TOKEN_INHERIT
    | TOKEN_GREATER_RBRACK
    | TOKEN_STRUCT
    | TOKEN_SIG
    | TOKEN_BAR
    | TOKEN_RBRACK
    | TOKEN_RBRACE_COMING_SOON
    | TOKEN_RBRACE_IS_HERE
    | TOKEN_MINUS
    | TOKEN_DOLLAR
    | TOKEN_BAR_RBRACK
    | TOKEN_BAR_RBRACE
    | TOKEN_UNDERSCORE
    | TOKEN_SEMICOLON_SEMICOLON
    | TOKEN_LARROW
    | TOKEN_EQUALS
    | TOKEN_LBRACK
    | TOKEN_LBRACK_BAR
    | TOKEN_LBRACE_BAR
    | TOKEN_LBRACK_LESS
    | TOKEN_QMARK
    | TOKEN_QMARK_QMARK
    | TOKEN_DOT
    | TOKEN_COLON
    | TOKEN_COLON_COLON
    | TOKEN_COLON_GREATER
    | TOKEN_COLON_QMARK_GREATER
    | TOKEN_COLON_QMARK
    | TOKEN_COLON_EQUALS
    | TOKEN_SEMICOLON
    | TOKEN_WHEN
    | TOKEN_WHILE
    | TOKEN_WITH
    | TOKEN_HASH
    | TOKEN_AMP
    | TOKEN_AMP_AMP
    | TOKEN_QUOTE
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_RPAREN_COMING_SOON
    | TOKEN_RPAREN_IS_HERE
    | TOKEN_STAR
    | TOKEN_COMMA
    | TOKEN_RARROW
    | TOKEN_GREATER_BAR_RBRACK
    | TOKEN_LPAREN_STAR_RPAREN
    | TOKEN_OPEN
    | TOKEN_OR
    | TOKEN_REC
    | TOKEN_THEN
    | TOKEN_TO
    | TOKEN_TRUE
    | TOKEN_TRY
    | TOKEN_TYPE
    | TOKEN_VAL
    | TOKEN_INLINE
    | TOKEN_INTERFACE
    | TOKEN_INSTANCE
    | TOKEN_CONST
    | TOKEN_LAZY
    | TOKEN_OLAZY
    | TOKEN_MATCH
    | TOKEN_MATCH_BANG
    | TOKEN_MUTABLE
    | TOKEN_NEW
    | TOKEN_OF
    | TOKEN_EXCEPTION
    | TOKEN_FALSE
    | TOKEN_FOR
    | TOKEN_FUN
    | TOKEN_FUNCTION
    | TOKEN_IF
    | TOKEN_IN
    | TOKEN_JOIN_IN
    | TOKEN_FINALLY
    | TOKEN_DO_BANG
    | TOKEN_AND
    | TOKEN_AS
    | TOKEN_ASSERT
    | TOKEN_OASSERT
    | TOKEN_ASR
    | TOKEN_BEGIN
    | TOKEN_DO
    | TOKEN_DONE
    | TOKEN_DOWNTO
    | TOKEN_ELSE
    | TOKEN_ELIF
    | TOKEN_END
    | TOKEN_DOT_DOT
    | TOKEN_DOT_DOT_HAT
    | TOKEN_BAR_BAR
    | TOKEN_UPCAST
    | TOKEN_DOWNCAST
    | TOKEN_NULL
    | TOKEN_RESERVED
    | TOKEN_MODULE
    | TOKEN_NAMESPACE
    | TOKEN_DELEGATE
    | TOKEN_CONSTRAINT
    | TOKEN_BASE
    | TOKEN_LQUOTE
    | TOKEN_RQUOTE
    | TOKEN_RQUOTE_DOT
    | TOKEN_PERCENT_OP
    | TOKEN_BINDER
    | TOKEN_LESS
    | TOKEN_GREATER
    | TOKEN_LET
    | TOKEN_YIELD
    | TOKEN_YIELD_BANG
    | TOKEN_AND_BANG
    | TOKEN_BIGNUM
    | TOKEN_DECIMAL
    | TOKEN_CHAR
    | TOKEN_IEEE64
    | TOKEN_IEEE32
    | TOKEN_UNATIVEINT
    | TOKEN_UINT64
    | TOKEN_UINT32
    | TOKEN_UINT16
    | TOKEN_UINT8
    | TOKEN_NATIVEINT
    | TOKEN_INT64
    | TOKEN_INT32
    | TOKEN_INT32_DOT_DOT
    | TOKEN_INT16
    | TOKEN_INT8
    | TOKEN_FUNKY_OPERATOR_NAME
    | TOKEN_ADJACENT_PREFIX_OP
    | TOKEN_PLUS_MINUS_OP
    | TOKEN_INFIX_AMP_OP
    | TOKEN_INFIX_STAR_DIV_MOD_OP
    | TOKEN_PREFIX_OP
    | TOKEN_INFIX_BAR_OP
    | TOKEN_INFIX_AT_HAT_OP
    | TOKEN_INFIX_COMPARE_OP
    | TOKEN_INFIX_STAR_STAR_OP
    | TOKEN_HASH_IDENT
    | TOKEN_IDENT
    | TOKEN_KEYWORD_STRING
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_INTERP_STRING_END
    | TOKEN_INTERP_STRING_PART
    | TOKEN_INTERP_STRING_BEGIN_PART
    | TOKEN_INTERP_STRING_BEGIN_END
    | TOKEN_STRING
    | TOKEN_BYTEARRAY
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startsignatureFile
    | NONTERM__startimplementationFile
    | NONTERM__startinteraction
    | NONTERM__starttypedSeqExprEOF
    | NONTERM__starttypEOF
    | NONTERM_interaction
    | NONTERM_interactiveTerminator
    | NONTERM_interactiveItemsTerminator
    | NONTERM_interactiveDefns
    | NONTERM_interactiveExpr
    | NONTERM_interactiveHash
    | NONTERM_interactiveSeparators
    | NONTERM_interactiveSeparator
    | NONTERM_hashDirective
    | NONTERM_hashDirectiveArgs
    | NONTERM_hashDirectiveArg
    | NONTERM_signatureFile
    | NONTERM_moduleIntro
    | NONTERM_namespaceIntro
    | NONTERM_fileNamespaceSpecs
    | NONTERM_fileNamespaceSpecList
    | NONTERM_fileNamespaceSpec
    | NONTERM_fileModuleSpec
    | NONTERM_moduleSpfnsPossiblyEmptyBlock
    | NONTERM_moduleSpfnsPossiblyEmpty
    | NONTERM_moduleSpfns
    | NONTERM_moduleSpfn
    | NONTERM_valSpfn
    | NONTERM_optLiteralValueSpfn
    | NONTERM_moduleSpecBlock
    | NONTERM_tyconSpfns
    | NONTERM_tyconSpfnList
    | NONTERM_tyconSpfn
    | NONTERM_tyconSpfnRhsBlock
    | NONTERM_tyconSpfnRhs
    | NONTERM_tyconClassSpfn
    | NONTERM_classSpfnBlockKindUnspecified
    | NONTERM_classSpfnBlock
    | NONTERM_classSpfnMembers
    | NONTERM_classSpfnMembersAtLeastOne
    | NONTERM_classMemberSpfn
    | NONTERM_classMemberSpfnGetSet
    | NONTERM_classMemberSpfnGetSetElements
    | NONTERM_memberSpecFlags
    | NONTERM_exconSpfn
    | NONTERM_opt_classSpfn
    | NONTERM_implementationFile
    | NONTERM_fileNamespaceImpls
    | NONTERM_fileNamespaceImplList
    | NONTERM_fileNamespaceImpl
    | NONTERM_fileModuleImpl
    | NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock
    | NONTERM_moduleDefnsOrExprPossiblyEmpty
    | NONTERM_moduleDefnsOrExpr
    | NONTERM_moduleDefns
    | NONTERM_moduleDefnOrDirective
    | NONTERM_moduleDefn
    | NONTERM_openDecl
    | NONTERM_namedModuleAbbrevBlock
    | NONTERM_namedModuleDefnBlock
    | NONTERM_wrappedNamedModuleDefn
    | NONTERM_tyconDefnAugmentation
    | NONTERM_opt_attributes
    | NONTERM_attributes
    | NONTERM_attributeList
    | NONTERM_attributeListElements
    | NONTERM_attribute
    | NONTERM_attributeTarget
    | NONTERM_memberFlags
    | NONTERM_typeNameInfo
    | NONTERM_tyconDefnList
    | NONTERM_tyconDefn
    | NONTERM_tyconDefnRhsBlock
    | NONTERM_tyconDefnRhs
    | NONTERM_tyconClassDefn
    | NONTERM_classDefnBlockKindUnspecified
    | NONTERM_classDefnBlock
    | NONTERM_classDefnMembers
    | NONTERM_classDefnMembersAtLeastOne
    | NONTERM_classDefnMemberGetSet
    | NONTERM_classDefnMemberGetSetElements
    | NONTERM_classDefnMemberGetSetElement
    | NONTERM_memberCore
    | NONTERM_abstractMemberFlags
    | NONTERM_classDefnMember
    | NONTERM_valDefnDecl
    | NONTERM_autoPropsDefnDecl
    | NONTERM_opt_typ
    | NONTERM_atomicPatternLongIdent
    | NONTERM_opt_access
    | NONTERM_access
    | NONTERM_opt_declVisibility
    | NONTERM_opt_interfaceImplDefn
    | NONTERM_opt_classDefn
    | NONTERM_inheritsDefn
    | NONTERM_optAsSpec
    | NONTERM_asSpec
    | NONTERM_optBaseSpec
    | NONTERM_baseSpec
    | NONTERM_objectImplementationBlock
    | NONTERM_objectImplementationMembers
    | NONTERM_objectImplementationMember
    | NONTERM_memberOrOverride
    | NONTERM_tyconDefnOrSpfnSimpleRepr
    | NONTERM_braceFieldDeclList
    | NONTERM_anonRecdType
    | NONTERM_braceBarFieldDeclListCore
    | NONTERM_classOrInterfaceOrStruct
    | NONTERM_interfaceMember
    | NONTERM_tyconNameAndTyparDecls
    | NONTERM_prefixTyparDecls
    | NONTERM_typarDeclList
    | NONTERM_typarDecl
    | NONTERM_postfixTyparDecls
    | NONTERM_explicitValTyparDeclsCore
    | NONTERM_explicitValTyparDecls
    | NONTERM_opt_explicitValTyparDecls
    | NONTERM_opt_explicitValTyparDecls2
    | NONTERM_opt_typeConstraints
    | NONTERM_typeConstraints
    | NONTERM_typeConstraint
    | NONTERM_typarAlts
    | NONTERM_unionTypeRepr
    | NONTERM_barAndgrabXmlDoc
    | NONTERM_attrUnionCaseDecls
    | NONTERM_attrUnionCaseDecl
    | NONTERM_unionCaseName
    | NONTERM_firstUnionCaseDeclOfMany
    | NONTERM_firstUnionCaseDecl
    | NONTERM_unionCaseReprElements
    | NONTERM_unionCaseReprElement
    | NONTERM_unionCaseRepr
    | NONTERM_recdFieldDeclList
    | NONTERM_recdFieldDecl
    | NONTERM_fieldDecl
    | NONTERM_exconDefn
    | NONTERM_exceptionAndGrabDoc
    | NONTERM_exconCore
    | NONTERM_exconIntro
    | NONTERM_exconRepr
    | NONTERM_defnBindings
    | NONTERM_doBinding
    | NONTERM_hardwhiteLetBindings
    | NONTERM_hardwhiteDoBinding
    | NONTERM_classDefnBindings
    | NONTERM_hardwhiteDefnBindingsTerminator
    | NONTERM_cPrototype
    | NONTERM_cArgs
    | NONTERM_cMoreArgs
    | NONTERM_cArg
    | NONTERM_cType
    | NONTERM_cRetType
    | NONTERM_localBindings
    | NONTERM_moreLocalBindings
    | NONTERM_attr_localBinding
    | NONTERM_localBinding
    | NONTERM_typedExprWithStaticOptimizationsBlock
    | NONTERM_typedExprWithStaticOptimizations
    | NONTERM_opt_staticOptimizations
    | NONTERM_staticOptimization
    | NONTERM_staticOptimizationConditions
    | NONTERM_staticOptimizationCondition
    | NONTERM_rawConstant
    | NONTERM_rationalConstant
    | NONTERM_atomicUnsignedRationalConstant
    | NONTERM_atomicRationalConstant
    | NONTERM_constant
    | NONTERM_bindingPattern
    | NONTERM_simplePattern
    | NONTERM_simplePatternCommaList
    | NONTERM_simplePatterns
    | NONTERM_headBindingPattern
    | NONTERM_tuplePatternElements
    | NONTERM_conjPatternElements
    | NONTERM_namePatPairs
    | NONTERM_namePatPair
    | NONTERM_constrPattern
    | NONTERM_atomicPatsOrNamePatPairs
    | NONTERM_atomicPatterns
    | NONTERM_atomicPattern
    | NONTERM_parenPatternBody
    | NONTERM_parenPattern
    | NONTERM_tupleParenPatternElements
    | NONTERM_conjParenPatternElements
    | NONTERM_recordPatternElementsAux
    | NONTERM_recordPatternElement
    | NONTERM_listPatternElements
    | NONTERM_typedSeqExprBlock
    | NONTERM_declExprBlock
    | NONTERM_typedSeqExprBlockR
    | NONTERM_typedSeqExpr
    | NONTERM_typedSeqExprEOF
    | NONTERM_seqExpr
    | NONTERM_recover
    | NONTERM_moreBinders
    | NONTERM_declExpr
    | NONTERM_dynamicArg
    | NONTERM_withClauses
    | NONTERM_withPatternClauses
    | NONTERM_patternAndGuard
    | NONTERM_patternClauses
    | NONTERM_patternGuard
    | NONTERM_patternResult
    | NONTERM_ifExprCases
    | NONTERM_ifExprThen
    | NONTERM_ifExprElifs
    | NONTERM_tupleExpr
    | NONTERM_minusExpr
    | NONTERM_appExpr
    | NONTERM_argExpr
    | NONTERM_atomicExpr
    | NONTERM_atomicExprQualification
    | NONTERM_optRangeSeqExpr
    | NONTERM_optRange
    | NONTERM_rangeDeclExpr
    | NONTERM_atomicExprAfterType
    | NONTERM_beginEndExpr
    | NONTERM_quoteExpr
    | NONTERM_arrayExpr
    | NONTERM_parenExpr
    | NONTERM_parenExprBody
    | NONTERM_staticallyKnownHeadTypars
    | NONTERM_staticallyKnownHeadTyparAlts
    | NONTERM_braceExpr
    | NONTERM_braceExprBody
    | NONTERM_listExprElements
    | NONTERM_monadicExprInitial
    | NONTERM_rangeSequenceExpr
    | NONTERM_arrowThenExprR
    | NONTERM_forLoopBinder
    | NONTERM_forLoopRange
    | NONTERM_forLoopDirection
    | NONTERM_inlineAssemblyExpr
    | NONTERM_optCurriedArgExprs
    | NONTERM_opt_atomicExprAfterType
    | NONTERM_opt_inlineAssemblyTypeArg
    | NONTERM_optInlineAssemblyReturnTypes
    | NONTERM_recdExpr
    | NONTERM_recdExprCore
    | NONTERM_opt_seps_recd
    | NONTERM_seps_recd
    | NONTERM_pathOrUnderscore
    | NONTERM_recdExprBindings
    | NONTERM_recdBinding
    | NONTERM_objExpr
    | NONTERM_objExprBaseCall
    | NONTERM_opt_objExprBindings
    | NONTERM_objExprBindings
    | NONTERM_objExprInterfaces
    | NONTERM_opt_objExprInterfaces
    | NONTERM_objExprInterface
    | NONTERM_braceBarExpr
    | NONTERM_braceBarExprCore
    | NONTERM_anonLambdaExpr
    | NONTERM_anonMatchingExpr
    | NONTERM_typeWithTypeConstraints
    | NONTERM_topTypeWithTypeConstraints
    | NONTERM_opt_topReturnTypeWithTypeConstraints
    | NONTERM_topType
    | NONTERM_topTupleType
    | NONTERM_topTupleTypeElements
    | NONTERM_topAppType
    | NONTERM_typ
    | NONTERM_typEOF
    | NONTERM_tupleType
    | NONTERM_tupleOrQuotTypeElements
    | NONTERM_appTypeCon
    | NONTERM_appTypeConPower
    | NONTERM_appType
    | NONTERM_arrayTypeSuffix
    | NONTERM_appTypePrefixArguments
    | NONTERM_typeArgListElements
    | NONTERM_powerType
    | NONTERM_atomTypeNonAtomicDeprecated
    | NONTERM_atomTypeOrAnonRecdType
    | NONTERM_atomType
    | NONTERM_typeArgsNoHpaDeprecated
    | NONTERM_typeArgsActual
    | NONTERM_typeArgActual
    | NONTERM_typeArgActualOrDummyIfEmpty
    | NONTERM_dummyTypeArg
    | NONTERM_measureTypeArg
    | NONTERM_measureTypeAtom
    | NONTERM_measureTypePower
    | NONTERM_measureTypeSeq
    | NONTERM_measureTypeExpr
    | NONTERM_typar
    | NONTERM_staticallyKnownHeadTypar
    | NONTERM_ident
    | NONTERM_path
    | NONTERM_opName
    | NONTERM_operatorName
    | NONTERM_activePatternCaseName
    | NONTERM_activePatternCaseNames
    | NONTERM_identOrOp
    | NONTERM_pathOp
    | NONTERM_nameop
    | NONTERM_identExpr
    | NONTERM_topSeparator
    | NONTERM_topSeparators
    | NONTERM_opt_topSeparators
    | NONTERM_seps
    | NONTERM_declEnd
    | NONTERM_opt_declEnd
    | NONTERM_opt_ODECLEND
    | NONTERM_deprecated_opt_equals
    | NONTERM_opt_equals
    | NONTERM_opt_OBLOCKSEP
    | NONTERM_opt_seps
    | NONTERM_opt_rec
    | NONTERM_opt_bar
    | NONTERM_opt_inline
    | NONTERM_opt_mutable
    | NONTERM_doToken
    | NONTERM_doneDeclEnd
    | NONTERM_structOrBegin
    | NONTERM_sigOrBegin
    | NONTERM_colonOrEquals
    | NONTERM_string
    | NONTERM_sourceIdentifier
    | NONTERM_interpolatedStringFill
    | NONTERM_interpolatedStringParts
    | NONTERM_interpolatedString
    | NONTERM_opt_HIGH_PRECEDENCE_APP
    | NONTERM_opt_HIGH_PRECEDENCE_TYAPP
    | NONTERM_typeKeyword
    | NONTERM_moduleKeyword
    | NONTERM_rbrace
    | NONTERM_bar_rbrace
    | NONTERM_rparen
    | NONTERM_oblockend
    | NONTERM_ends_other_than_rparen_coming_soon_or_recover
    | NONTERM_ends_coming_soon_or_recover

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | HASH_IF _ -> 0 
  | HASH_ELSE _ -> 1 
  | HASH_ENDIF _ -> 2 
  | COMMENT _ -> 3 
  | WHITESPACE _ -> 4 
  | HASH_LINE _ -> 5 
  | HASH_LIGHT _ -> 6 
  | INACTIVECODE _ -> 7 
  | LINE_COMMENT _ -> 8 
  | STRING_TEXT _ -> 9 
  | EOF _ -> 10 
  | LEX_FAILURE _ -> 11 
  | ODUMMY _ -> 12 
  | FIXED  -> 13 
  | OINTERFACE_MEMBER  -> 14 
  | OBLOCKEND  -> 15 
  | OBLOCKEND_COMING_SOON  -> 16 
  | OBLOCKEND_IS_HERE  -> 17 
  | ORIGHT_BLOCK_END  -> 18 
  | ODECLEND  -> 19 
  | OEND  -> 20 
  | OBLOCKSEP  -> 21 
  | OBLOCKBEGIN  -> 22 
  | ORESET  -> 23 
  | OFUN  -> 24 
  | OFUNCTION  -> 25 
  | OWITH  -> 26 
  | OELSE  -> 27 
  | OTHEN  -> 28 
  | ODO_BANG  -> 29 
  | ODO  -> 30 
  | OAND_BANG _ -> 31 
  | OBINDER _ -> 32 
  | OLET _ -> 33 
  | HIGH_PRECEDENCE_TYAPP  -> 34 
  | HIGH_PRECEDENCE_PAREN_APP  -> 35 
  | HIGH_PRECEDENCE_BRACK_APP  -> 36 
  | TYPE_COMING_SOON  -> 37 
  | TYPE_IS_HERE  -> 38 
  | MODULE_COMING_SOON  -> 39 
  | MODULE_IS_HERE  -> 40 
  | EXTERN  -> 41 
  | VOID  -> 42 
  | PUBLIC  -> 43 
  | PRIVATE  -> 44 
  | INTERNAL  -> 45 
  | GLOBAL  -> 46 
  | STATIC  -> 47 
  | MEMBER  -> 48 
  | CLASS  -> 49 
  | ABSTRACT  -> 50 
  | OVERRIDE  -> 51 
  | DEFAULT  -> 52 
  | CONSTRUCTOR  -> 53 
  | INHERIT  -> 54 
  | GREATER_RBRACK  -> 55 
  | STRUCT  -> 56 
  | SIG  -> 57 
  | BAR  -> 58 
  | RBRACK  -> 59 
  | RBRACE_COMING_SOON  -> 60 
  | RBRACE_IS_HERE  -> 61 
  | MINUS  -> 62 
  | DOLLAR  -> 63 
  | BAR_RBRACK  -> 64 
  | BAR_RBRACE  -> 65 
  | UNDERSCORE  -> 66 
  | SEMICOLON_SEMICOLON  -> 67 
  | LARROW  -> 68 
  | EQUALS  -> 69 
  | LBRACK  -> 70 
  | LBRACK_BAR  -> 71 
  | LBRACE_BAR  -> 72 
  | LBRACK_LESS  -> 73 
  | QMARK  -> 74 
  | QMARK_QMARK  -> 75 
  | DOT  -> 76 
  | COLON  -> 77 
  | COLON_COLON  -> 78 
  | COLON_GREATER  -> 79 
  | COLON_QMARK_GREATER  -> 80 
  | COLON_QMARK  -> 81 
  | COLON_EQUALS  -> 82 
  | SEMICOLON  -> 83 
  | WHEN  -> 84 
  | WHILE  -> 85 
  | WITH  -> 86 
  | HASH  -> 87 
  | AMP  -> 88 
  | AMP_AMP  -> 89 
  | QUOTE  -> 90 
  | LPAREN  -> 91 
  | RPAREN  -> 92 
  | RPAREN_COMING_SOON  -> 93 
  | RPAREN_IS_HERE  -> 94 
  | STAR  -> 95 
  | COMMA  -> 96 
  | RARROW  -> 97 
  | GREATER_BAR_RBRACK  -> 98 
  | LPAREN_STAR_RPAREN  -> 99 
  | OPEN  -> 100 
  | OR  -> 101 
  | REC  -> 102 
  | THEN  -> 103 
  | TO  -> 104 
  | TRUE  -> 105 
  | TRY  -> 106 
  | TYPE  -> 107 
  | VAL  -> 108 
  | INLINE  -> 109 
  | INTERFACE  -> 110 
  | INSTANCE  -> 111 
  | CONST  -> 112 
  | LAZY  -> 113 
  | OLAZY  -> 114 
  | MATCH  -> 115 
  | MATCH_BANG  -> 116 
  | MUTABLE  -> 117 
  | NEW  -> 118 
  | OF  -> 119 
  | EXCEPTION  -> 120 
  | FALSE  -> 121 
  | FOR  -> 122 
  | FUN  -> 123 
  | FUNCTION  -> 124 
  | IF  -> 125 
  | IN  -> 126 
  | JOIN_IN  -> 127 
  | FINALLY  -> 128 
  | DO_BANG  -> 129 
  | AND  -> 130 
  | AS  -> 131 
  | ASSERT  -> 132 
  | OASSERT  -> 133 
  | ASR  -> 134 
  | BEGIN  -> 135 
  | DO  -> 136 
  | DONE  -> 137 
  | DOWNTO  -> 138 
  | ELSE  -> 139 
  | ELIF  -> 140 
  | END  -> 141 
  | DOT_DOT  -> 142 
  | DOT_DOT_HAT  -> 143 
  | BAR_BAR  -> 144 
  | UPCAST  -> 145 
  | DOWNCAST  -> 146 
  | NULL  -> 147 
  | RESERVED  -> 148 
  | MODULE  -> 149 
  | NAMESPACE  -> 150 
  | DELEGATE  -> 151 
  | CONSTRAINT  -> 152 
  | BASE  -> 153 
  | LQUOTE _ -> 154 
  | RQUOTE _ -> 155 
  | RQUOTE_DOT _ -> 156 
  | PERCENT_OP _ -> 157 
  | BINDER _ -> 158 
  | LESS _ -> 159 
  | GREATER _ -> 160 
  | LET _ -> 161 
  | YIELD _ -> 162 
  | YIELD_BANG _ -> 163 
  | AND_BANG _ -> 164 
  | BIGNUM _ -> 165 
  | DECIMAL _ -> 166 
  | CHAR _ -> 167 
  | IEEE64 _ -> 168 
  | IEEE32 _ -> 169 
  | UNATIVEINT _ -> 170 
  | UINT64 _ -> 171 
  | UINT32 _ -> 172 
  | UINT16 _ -> 173 
  | UINT8 _ -> 174 
  | NATIVEINT _ -> 175 
  | INT64 _ -> 176 
  | INT32 _ -> 177 
  | INT32_DOT_DOT _ -> 178 
  | INT16 _ -> 179 
  | INT8 _ -> 180 
  | FUNKY_OPERATOR_NAME _ -> 181 
  | ADJACENT_PREFIX_OP _ -> 182 
  | PLUS_MINUS_OP _ -> 183 
  | INFIX_AMP_OP _ -> 184 
  | INFIX_STAR_DIV_MOD_OP _ -> 185 
  | PREFIX_OP _ -> 186 
  | INFIX_BAR_OP _ -> 187 
  | INFIX_AT_HAT_OP _ -> 188 
  | INFIX_COMPARE_OP _ -> 189 
  | INFIX_STAR_STAR_OP _ -> 190 
  | HASH_IDENT _ -> 191 
  | IDENT _ -> 192 
  | KEYWORD_STRING _ -> 193 
  | LBRACE _ -> 194 
  | RBRACE _ -> 195 
  | INTERP_STRING_END _ -> 196 
  | INTERP_STRING_PART _ -> 197 
  | INTERP_STRING_BEGIN_PART _ -> 198 
  | INTERP_STRING_BEGIN_END _ -> 199 
  | STRING _ -> 200 
  | BYTEARRAY _ -> 201 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_HASH_IF 
  | 1 -> TOKEN_HASH_ELSE 
  | 2 -> TOKEN_HASH_ENDIF 
  | 3 -> TOKEN_COMMENT 
  | 4 -> TOKEN_WHITESPACE 
  | 5 -> TOKEN_HASH_LINE 
  | 6 -> TOKEN_HASH_LIGHT 
  | 7 -> TOKEN_INACTIVECODE 
  | 8 -> TOKEN_LINE_COMMENT 
  | 9 -> TOKEN_STRING_TEXT 
  | 10 -> TOKEN_EOF 
  | 11 -> TOKEN_LEX_FAILURE 
  | 12 -> TOKEN_ODUMMY 
  | 13 -> TOKEN_FIXED 
  | 14 -> TOKEN_OINTERFACE_MEMBER 
  | 15 -> TOKEN_OBLOCKEND 
  | 16 -> TOKEN_OBLOCKEND_COMING_SOON 
  | 17 -> TOKEN_OBLOCKEND_IS_HERE 
  | 18 -> TOKEN_ORIGHT_BLOCK_END 
  | 19 -> TOKEN_ODECLEND 
  | 20 -> TOKEN_OEND 
  | 21 -> TOKEN_OBLOCKSEP 
  | 22 -> TOKEN_OBLOCKBEGIN 
  | 23 -> TOKEN_ORESET 
  | 24 -> TOKEN_OFUN 
  | 25 -> TOKEN_OFUNCTION 
  | 26 -> TOKEN_OWITH 
  | 27 -> TOKEN_OELSE 
  | 28 -> TOKEN_OTHEN 
  | 29 -> TOKEN_ODO_BANG 
  | 30 -> TOKEN_ODO 
  | 31 -> TOKEN_OAND_BANG 
  | 32 -> TOKEN_OBINDER 
  | 33 -> TOKEN_OLET 
  | 34 -> TOKEN_HIGH_PRECEDENCE_TYAPP 
  | 35 -> TOKEN_HIGH_PRECEDENCE_PAREN_APP 
  | 36 -> TOKEN_HIGH_PRECEDENCE_BRACK_APP 
  | 37 -> TOKEN_TYPE_COMING_SOON 
  | 38 -> TOKEN_TYPE_IS_HERE 
  | 39 -> TOKEN_MODULE_COMING_SOON 
  | 40 -> TOKEN_MODULE_IS_HERE 
  | 41 -> TOKEN_EXTERN 
  | 42 -> TOKEN_VOID 
  | 43 -> TOKEN_PUBLIC 
  | 44 -> TOKEN_PRIVATE 
  | 45 -> TOKEN_INTERNAL 
  | 46 -> TOKEN_GLOBAL 
  | 47 -> TOKEN_STATIC 
  | 48 -> TOKEN_MEMBER 
  | 49 -> TOKEN_CLASS 
  | 50 -> TOKEN_ABSTRACT 
  | 51 -> TOKEN_OVERRIDE 
  | 52 -> TOKEN_DEFAULT 
  | 53 -> TOKEN_CONSTRUCTOR 
  | 54 -> TOKEN_INHERIT 
  | 55 -> TOKEN_GREATER_RBRACK 
  | 56 -> TOKEN_STRUCT 
  | 57 -> TOKEN_SIG 
  | 58 -> TOKEN_BAR 
  | 59 -> TOKEN_RBRACK 
  | 60 -> TOKEN_RBRACE_COMING_SOON 
  | 61 -> TOKEN_RBRACE_IS_HERE 
  | 62 -> TOKEN_MINUS 
  | 63 -> TOKEN_DOLLAR 
  | 64 -> TOKEN_BAR_RBRACK 
  | 65 -> TOKEN_BAR_RBRACE 
  | 66 -> TOKEN_UNDERSCORE 
  | 67 -> TOKEN_SEMICOLON_SEMICOLON 
  | 68 -> TOKEN_LARROW 
  | 69 -> TOKEN_EQUALS 
  | 70 -> TOKEN_LBRACK 
  | 71 -> TOKEN_LBRACK_BAR 
  | 72 -> TOKEN_LBRACE_BAR 
  | 73 -> TOKEN_LBRACK_LESS 
  | 74 -> TOKEN_QMARK 
  | 75 -> TOKEN_QMARK_QMARK 
  | 76 -> TOKEN_DOT 
  | 77 -> TOKEN_COLON 
  | 78 -> TOKEN_COLON_COLON 
  | 79 -> TOKEN_COLON_GREATER 
  | 80 -> TOKEN_COLON_QMARK_GREATER 
  | 81 -> TOKEN_COLON_QMARK 
  | 82 -> TOKEN_COLON_EQUALS 
  | 83 -> TOKEN_SEMICOLON 
  | 84 -> TOKEN_WHEN 
  | 85 -> TOKEN_WHILE 
  | 86 -> TOKEN_WITH 
  | 87 -> TOKEN_HASH 
  | 88 -> TOKEN_AMP 
  | 89 -> TOKEN_AMP_AMP 
  | 90 -> TOKEN_QUOTE 
  | 91 -> TOKEN_LPAREN 
  | 92 -> TOKEN_RPAREN 
  | 93 -> TOKEN_RPAREN_COMING_SOON 
  | 94 -> TOKEN_RPAREN_IS_HERE 
  | 95 -> TOKEN_STAR 
  | 96 -> TOKEN_COMMA 
  | 97 -> TOKEN_RARROW 
  | 98 -> TOKEN_GREATER_BAR_RBRACK 
  | 99 -> TOKEN_LPAREN_STAR_RPAREN 
  | 100 -> TOKEN_OPEN 
  | 101 -> TOKEN_OR 
  | 102 -> TOKEN_REC 
  | 103 -> TOKEN_THEN 
  | 104 -> TOKEN_TO 
  | 105 -> TOKEN_TRUE 
  | 106 -> TOKEN_TRY 
  | 107 -> TOKEN_TYPE 
  | 108 -> TOKEN_VAL 
  | 109 -> TOKEN_INLINE 
  | 110 -> TOKEN_INTERFACE 
  | 111 -> TOKEN_INSTANCE 
  | 112 -> TOKEN_CONST 
  | 113 -> TOKEN_LAZY 
  | 114 -> TOKEN_OLAZY 
  | 115 -> TOKEN_MATCH 
  | 116 -> TOKEN_MATCH_BANG 
  | 117 -> TOKEN_MUTABLE 
  | 118 -> TOKEN_NEW 
  | 119 -> TOKEN_OF 
  | 120 -> TOKEN_EXCEPTION 
  | 121 -> TOKEN_FALSE 
  | 122 -> TOKEN_FOR 
  | 123 -> TOKEN_FUN 
  | 124 -> TOKEN_FUNCTION 
  | 125 -> TOKEN_IF 
  | 126 -> TOKEN_IN 
  | 127 -> TOKEN_JOIN_IN 
  | 128 -> TOKEN_FINALLY 
  | 129 -> TOKEN_DO_BANG 
  | 130 -> TOKEN_AND 
  | 131 -> TOKEN_AS 
  | 132 -> TOKEN_ASSERT 
  | 133 -> TOKEN_OASSERT 
  | 134 -> TOKEN_ASR 
  | 135 -> TOKEN_BEGIN 
  | 136 -> TOKEN_DO 
  | 137 -> TOKEN_DONE 
  | 138 -> TOKEN_DOWNTO 
  | 139 -> TOKEN_ELSE 
  | 140 -> TOKEN_ELIF 
  | 141 -> TOKEN_END 
  | 142 -> TOKEN_DOT_DOT 
  | 143 -> TOKEN_DOT_DOT_HAT 
  | 144 -> TOKEN_BAR_BAR 
  | 145 -> TOKEN_UPCAST 
  | 146 -> TOKEN_DOWNCAST 
  | 147 -> TOKEN_NULL 
  | 148 -> TOKEN_RESERVED 
  | 149 -> TOKEN_MODULE 
  | 150 -> TOKEN_NAMESPACE 
  | 151 -> TOKEN_DELEGATE 
  | 152 -> TOKEN_CONSTRAINT 
  | 153 -> TOKEN_BASE 
  | 154 -> TOKEN_LQUOTE 
  | 155 -> TOKEN_RQUOTE 
  | 156 -> TOKEN_RQUOTE_DOT 
  | 157 -> TOKEN_PERCENT_OP 
  | 158 -> TOKEN_BINDER 
  | 159 -> TOKEN_LESS 
  | 160 -> TOKEN_GREATER 
  | 161 -> TOKEN_LET 
  | 162 -> TOKEN_YIELD 
  | 163 -> TOKEN_YIELD_BANG 
  | 164 -> TOKEN_AND_BANG 
  | 165 -> TOKEN_BIGNUM 
  | 166 -> TOKEN_DECIMAL 
  | 167 -> TOKEN_CHAR 
  | 168 -> TOKEN_IEEE64 
  | 169 -> TOKEN_IEEE32 
  | 170 -> TOKEN_UNATIVEINT 
  | 171 -> TOKEN_UINT64 
  | 172 -> TOKEN_UINT32 
  | 173 -> TOKEN_UINT16 
  | 174 -> TOKEN_UINT8 
  | 175 -> TOKEN_NATIVEINT 
  | 176 -> TOKEN_INT64 
  | 177 -> TOKEN_INT32 
  | 178 -> TOKEN_INT32_DOT_DOT 
  | 179 -> TOKEN_INT16 
  | 180 -> TOKEN_INT8 
  | 181 -> TOKEN_FUNKY_OPERATOR_NAME 
  | 182 -> TOKEN_ADJACENT_PREFIX_OP 
  | 183 -> TOKEN_PLUS_MINUS_OP 
  | 184 -> TOKEN_INFIX_AMP_OP 
  | 185 -> TOKEN_INFIX_STAR_DIV_MOD_OP 
  | 186 -> TOKEN_PREFIX_OP 
  | 187 -> TOKEN_INFIX_BAR_OP 
  | 188 -> TOKEN_INFIX_AT_HAT_OP 
  | 189 -> TOKEN_INFIX_COMPARE_OP 
  | 190 -> TOKEN_INFIX_STAR_STAR_OP 
  | 191 -> TOKEN_HASH_IDENT 
  | 192 -> TOKEN_IDENT 
  | 193 -> TOKEN_KEYWORD_STRING 
  | 194 -> TOKEN_LBRACE 
  | 195 -> TOKEN_RBRACE 
  | 196 -> TOKEN_INTERP_STRING_END 
  | 197 -> TOKEN_INTERP_STRING_PART 
  | 198 -> TOKEN_INTERP_STRING_BEGIN_PART 
  | 199 -> TOKEN_INTERP_STRING_BEGIN_END 
  | 200 -> TOKEN_STRING 
  | 201 -> TOKEN_BYTEARRAY 
  | 204 -> TOKEN_end_of_input
  | 202 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startsignatureFile 
    | 1 -> NONTERM__startimplementationFile 
    | 2 -> NONTERM__startinteraction 
    | 3 -> NONTERM__starttypedSeqExprEOF 
    | 4 -> NONTERM__starttypEOF 
    | 5 -> NONTERM_interaction 
    | 6 -> NONTERM_interaction 
    | 7 -> NONTERM_interaction 
    | 8 -> NONTERM_interactiveTerminator 
    | 9 -> NONTERM_interactiveTerminator 
    | 10 -> NONTERM_interactiveItemsTerminator 
    | 11 -> NONTERM_interactiveItemsTerminator 
    | 12 -> NONTERM_interactiveItemsTerminator 
    | 13 -> NONTERM_interactiveItemsTerminator 
    | 14 -> NONTERM_interactiveItemsTerminator 
    | 15 -> NONTERM_interactiveItemsTerminator 
    | 16 -> NONTERM_interactiveItemsTerminator 
    | 17 -> NONTERM_interactiveDefns 
    | 18 -> NONTERM_interactiveDefns 
    | 19 -> NONTERM_interactiveExpr 
    | 20 -> NONTERM_interactiveHash 
    | 21 -> NONTERM_interactiveSeparators 
    | 22 -> NONTERM_interactiveSeparators 
    | 23 -> NONTERM_interactiveSeparator 
    | 24 -> NONTERM_interactiveSeparator 
    | 25 -> NONTERM_hashDirective 
    | 26 -> NONTERM_hashDirectiveArgs 
    | 27 -> NONTERM_hashDirectiveArgs 
    | 28 -> NONTERM_hashDirectiveArg 
    | 29 -> NONTERM_signatureFile 
    | 30 -> NONTERM_signatureFile 
    | 31 -> NONTERM_signatureFile 
    | 32 -> NONTERM_moduleIntro 
    | 33 -> NONTERM_namespaceIntro 
    | 34 -> NONTERM_fileNamespaceSpecs 
    | 35 -> NONTERM_fileNamespaceSpecs 
    | 36 -> NONTERM_fileNamespaceSpecList 
    | 37 -> NONTERM_fileNamespaceSpecList 
    | 38 -> NONTERM_fileNamespaceSpec 
    | 39 -> NONTERM_fileModuleSpec 
    | 40 -> NONTERM_fileModuleSpec 
    | 41 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 42 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 43 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 44 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 45 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 46 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 47 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 48 -> NONTERM_moduleSpfns 
    | 49 -> NONTERM_moduleSpfns 
    | 50 -> NONTERM_moduleSpfns 
    | 51 -> NONTERM_moduleSpfn 
    | 52 -> NONTERM_moduleSpfn 
    | 53 -> NONTERM_moduleSpfn 
    | 54 -> NONTERM_moduleSpfn 
    | 55 -> NONTERM_moduleSpfn 
    | 56 -> NONTERM_moduleSpfn 
    | 57 -> NONTERM_moduleSpfn 
    | 58 -> NONTERM_valSpfn 
    | 59 -> NONTERM_optLiteralValueSpfn 
    | 60 -> NONTERM_optLiteralValueSpfn 
    | 61 -> NONTERM_optLiteralValueSpfn 
    | 62 -> NONTERM_moduleSpecBlock 
    | 63 -> NONTERM_moduleSpecBlock 
    | 64 -> NONTERM_moduleSpecBlock 
    | 65 -> NONTERM_tyconSpfns 
    | 66 -> NONTERM_tyconSpfnList 
    | 67 -> NONTERM_tyconSpfnList 
    | 68 -> NONTERM_tyconSpfn 
    | 69 -> NONTERM_tyconSpfn 
    | 70 -> NONTERM_tyconSpfnRhsBlock 
    | 71 -> NONTERM_tyconSpfnRhsBlock 
    | 72 -> NONTERM_tyconSpfnRhs 
    | 73 -> NONTERM_tyconSpfnRhs 
    | 74 -> NONTERM_tyconSpfnRhs 
    | 75 -> NONTERM_tyconClassSpfn 
    | 76 -> NONTERM_tyconClassSpfn 
    | 77 -> NONTERM_tyconClassSpfn 
    | 78 -> NONTERM_tyconClassSpfn 
    | 79 -> NONTERM_classSpfnBlockKindUnspecified 
    | 80 -> NONTERM_classSpfnBlockKindUnspecified 
    | 81 -> NONTERM_classSpfnBlockKindUnspecified 
    | 82 -> NONTERM_classSpfnBlockKindUnspecified 
    | 83 -> NONTERM_classSpfnBlock 
    | 84 -> NONTERM_classSpfnBlock 
    | 85 -> NONTERM_classSpfnBlock 
    | 86 -> NONTERM_classSpfnMembers 
    | 87 -> NONTERM_classSpfnMembers 
    | 88 -> NONTERM_classSpfnMembersAtLeastOne 
    | 89 -> NONTERM_classMemberSpfn 
    | 90 -> NONTERM_classMemberSpfn 
    | 91 -> NONTERM_classMemberSpfn 
    | 92 -> NONTERM_classMemberSpfn 
    | 93 -> NONTERM_classMemberSpfn 
    | 94 -> NONTERM_classMemberSpfn 
    | 95 -> NONTERM_classMemberSpfn 
    | 96 -> NONTERM_classMemberSpfnGetSet 
    | 97 -> NONTERM_classMemberSpfnGetSet 
    | 98 -> NONTERM_classMemberSpfnGetSet 
    | 99 -> NONTERM_classMemberSpfnGetSet 
    | 100 -> NONTERM_classMemberSpfnGetSetElements 
    | 101 -> NONTERM_classMemberSpfnGetSetElements 
    | 102 -> NONTERM_memberSpecFlags 
    | 103 -> NONTERM_memberSpecFlags 
    | 104 -> NONTERM_memberSpecFlags 
    | 105 -> NONTERM_exconSpfn 
    | 106 -> NONTERM_opt_classSpfn 
    | 107 -> NONTERM_opt_classSpfn 
    | 108 -> NONTERM_implementationFile 
    | 109 -> NONTERM_implementationFile 
    | 110 -> NONTERM_implementationFile 
    | 111 -> NONTERM_fileNamespaceImpls 
    | 112 -> NONTERM_fileNamespaceImpls 
    | 113 -> NONTERM_fileNamespaceImplList 
    | 114 -> NONTERM_fileNamespaceImplList 
    | 115 -> NONTERM_fileNamespaceImpl 
    | 116 -> NONTERM_fileModuleImpl 
    | 117 -> NONTERM_fileModuleImpl 
    | 118 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 119 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 120 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 121 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 122 -> NONTERM_moduleDefnsOrExprPossiblyEmpty 
    | 123 -> NONTERM_moduleDefnsOrExprPossiblyEmpty 
    | 124 -> NONTERM_moduleDefnsOrExpr 
    | 125 -> NONTERM_moduleDefnsOrExpr 
    | 126 -> NONTERM_moduleDefnsOrExpr 
    | 127 -> NONTERM_moduleDefnsOrExpr 
    | 128 -> NONTERM_moduleDefnsOrExpr 
    | 129 -> NONTERM_moduleDefns 
    | 130 -> NONTERM_moduleDefns 
    | 131 -> NONTERM_moduleDefns 
    | 132 -> NONTERM_moduleDefns 
    | 133 -> NONTERM_moduleDefns 
    | 134 -> NONTERM_moduleDefnOrDirective 
    | 135 -> NONTERM_moduleDefnOrDirective 
    | 136 -> NONTERM_moduleDefn 
    | 137 -> NONTERM_moduleDefn 
    | 138 -> NONTERM_moduleDefn 
    | 139 -> NONTERM_moduleDefn 
    | 140 -> NONTERM_moduleDefn 
    | 141 -> NONTERM_moduleDefn 
    | 142 -> NONTERM_moduleDefn 
    | 143 -> NONTERM_moduleDefn 
    | 144 -> NONTERM_openDecl 
    | 145 -> NONTERM_openDecl 
    | 146 -> NONTERM_namedModuleAbbrevBlock 
    | 147 -> NONTERM_namedModuleAbbrevBlock 
    | 148 -> NONTERM_namedModuleDefnBlock 
    | 149 -> NONTERM_namedModuleDefnBlock 
    | 150 -> NONTERM_namedModuleDefnBlock 
    | 151 -> NONTERM_namedModuleDefnBlock 
    | 152 -> NONTERM_namedModuleDefnBlock 
    | 153 -> NONTERM_namedModuleDefnBlock 
    | 154 -> NONTERM_namedModuleDefnBlock 
    | 155 -> NONTERM_wrappedNamedModuleDefn 
    | 156 -> NONTERM_wrappedNamedModuleDefn 
    | 157 -> NONTERM_wrappedNamedModuleDefn 
    | 158 -> NONTERM_tyconDefnAugmentation 
    | 159 -> NONTERM_opt_attributes 
    | 160 -> NONTERM_opt_attributes 
    | 161 -> NONTERM_attributes 
    | 162 -> NONTERM_attributes 
    | 163 -> NONTERM_attributeList 
    | 164 -> NONTERM_attributeList 
    | 165 -> NONTERM_attributeList 
    | 166 -> NONTERM_attributeList 
    | 167 -> NONTERM_attributeListElements 
    | 168 -> NONTERM_attributeListElements 
    | 169 -> NONTERM_attribute 
    | 170 -> NONTERM_attribute 
    | 171 -> NONTERM_attribute 
    | 172 -> NONTERM_attributeTarget 
    | 173 -> NONTERM_attributeTarget 
    | 174 -> NONTERM_attributeTarget 
    | 175 -> NONTERM_attributeTarget 
    | 176 -> NONTERM_memberFlags 
    | 177 -> NONTERM_memberFlags 
    | 178 -> NONTERM_memberFlags 
    | 179 -> NONTERM_memberFlags 
    | 180 -> NONTERM_typeNameInfo 
    | 181 -> NONTERM_tyconDefnList 
    | 182 -> NONTERM_tyconDefnList 
    | 183 -> NONTERM_tyconDefn 
    | 184 -> NONTERM_tyconDefn 
    | 185 -> NONTERM_tyconDefn 
    | 186 -> NONTERM_tyconDefn 
    | 187 -> NONTERM_tyconDefnRhsBlock 
    | 188 -> NONTERM_tyconDefnRhsBlock 
    | 189 -> NONTERM_tyconDefnRhsBlock 
    | 190 -> NONTERM_tyconDefnRhs 
    | 191 -> NONTERM_tyconDefnRhs 
    | 192 -> NONTERM_tyconDefnRhs 
    | 193 -> NONTERM_tyconClassDefn 
    | 194 -> NONTERM_tyconClassDefn 
    | 195 -> NONTERM_tyconClassDefn 
    | 196 -> NONTERM_tyconClassDefn 
    | 197 -> NONTERM_classDefnBlockKindUnspecified 
    | 198 -> NONTERM_classDefnBlockKindUnspecified 
    | 199 -> NONTERM_classDefnBlock 
    | 200 -> NONTERM_classDefnBlock 
    | 201 -> NONTERM_classDefnBlock 
    | 202 -> NONTERM_classDefnMembers 
    | 203 -> NONTERM_classDefnMembers 
    | 204 -> NONTERM_classDefnMembers 
    | 205 -> NONTERM_classDefnMembersAtLeastOne 
    | 206 -> NONTERM_classDefnMemberGetSet 
    | 207 -> NONTERM_classDefnMemberGetSet 
    | 208 -> NONTERM_classDefnMemberGetSet 
    | 209 -> NONTERM_classDefnMemberGetSetElements 
    | 210 -> NONTERM_classDefnMemberGetSetElements 
    | 211 -> NONTERM_classDefnMemberGetSetElement 
    | 212 -> NONTERM_memberCore 
    | 213 -> NONTERM_memberCore 
    | 214 -> NONTERM_abstractMemberFlags 
    | 215 -> NONTERM_abstractMemberFlags 
    | 216 -> NONTERM_classDefnMember 
    | 217 -> NONTERM_classDefnMember 
    | 218 -> NONTERM_classDefnMember 
    | 219 -> NONTERM_classDefnMember 
    | 220 -> NONTERM_classDefnMember 
    | 221 -> NONTERM_classDefnMember 
    | 222 -> NONTERM_classDefnMember 
    | 223 -> NONTERM_classDefnMember 
    | 224 -> NONTERM_classDefnMember 
    | 225 -> NONTERM_classDefnMember 
    | 226 -> NONTERM_classDefnMember 
    | 227 -> NONTERM_valDefnDecl 
    | 228 -> NONTERM_autoPropsDefnDecl 
    | 229 -> NONTERM_opt_typ 
    | 230 -> NONTERM_opt_typ 
    | 231 -> NONTERM_atomicPatternLongIdent 
    | 232 -> NONTERM_atomicPatternLongIdent 
    | 233 -> NONTERM_atomicPatternLongIdent 
    | 234 -> NONTERM_atomicPatternLongIdent 
    | 235 -> NONTERM_atomicPatternLongIdent 
    | 236 -> NONTERM_opt_access 
    | 237 -> NONTERM_opt_access 
    | 238 -> NONTERM_access 
    | 239 -> NONTERM_access 
    | 240 -> NONTERM_access 
    | 241 -> NONTERM_opt_declVisibility 
    | 242 -> NONTERM_opt_declVisibility 
    | 243 -> NONTERM_opt_interfaceImplDefn 
    | 244 -> NONTERM_opt_interfaceImplDefn 
    | 245 -> NONTERM_opt_interfaceImplDefn 
    | 246 -> NONTERM_opt_classDefn 
    | 247 -> NONTERM_opt_classDefn 
    | 248 -> NONTERM_inheritsDefn 
    | 249 -> NONTERM_inheritsDefn 
    | 250 -> NONTERM_inheritsDefn 
    | 251 -> NONTERM_optAsSpec 
    | 252 -> NONTERM_optAsSpec 
    | 253 -> NONTERM_asSpec 
    | 254 -> NONTERM_optBaseSpec 
    | 255 -> NONTERM_optBaseSpec 
    | 256 -> NONTERM_baseSpec 
    | 257 -> NONTERM_baseSpec 
    | 258 -> NONTERM_objectImplementationBlock 
    | 259 -> NONTERM_objectImplementationBlock 
    | 260 -> NONTERM_objectImplementationBlock 
    | 261 -> NONTERM_objectImplementationMembers 
    | 262 -> NONTERM_objectImplementationMembers 
    | 263 -> NONTERM_objectImplementationMember 
    | 264 -> NONTERM_objectImplementationMember 
    | 265 -> NONTERM_objectImplementationMember 
    | 266 -> NONTERM_objectImplementationMember 
    | 267 -> NONTERM_memberOrOverride 
    | 268 -> NONTERM_memberOrOverride 
    | 269 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 270 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 271 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 272 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 273 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 274 -> NONTERM_braceFieldDeclList 
    | 275 -> NONTERM_braceFieldDeclList 
    | 276 -> NONTERM_braceFieldDeclList 
    | 277 -> NONTERM_anonRecdType 
    | 278 -> NONTERM_anonRecdType 
    | 279 -> NONTERM_braceBarFieldDeclListCore 
    | 280 -> NONTERM_braceBarFieldDeclListCore 
    | 281 -> NONTERM_braceBarFieldDeclListCore 
    | 282 -> NONTERM_classOrInterfaceOrStruct 
    | 283 -> NONTERM_classOrInterfaceOrStruct 
    | 284 -> NONTERM_classOrInterfaceOrStruct 
    | 285 -> NONTERM_interfaceMember 
    | 286 -> NONTERM_interfaceMember 
    | 287 -> NONTERM_tyconNameAndTyparDecls 
    | 288 -> NONTERM_tyconNameAndTyparDecls 
    | 289 -> NONTERM_tyconNameAndTyparDecls 
    | 290 -> NONTERM_prefixTyparDecls 
    | 291 -> NONTERM_prefixTyparDecls 
    | 292 -> NONTERM_typarDeclList 
    | 293 -> NONTERM_typarDeclList 
    | 294 -> NONTERM_typarDecl 
    | 295 -> NONTERM_postfixTyparDecls 
    | 296 -> NONTERM_explicitValTyparDeclsCore 
    | 297 -> NONTERM_explicitValTyparDeclsCore 
    | 298 -> NONTERM_explicitValTyparDeclsCore 
    | 299 -> NONTERM_explicitValTyparDecls 
    | 300 -> NONTERM_opt_explicitValTyparDecls 
    | 301 -> NONTERM_opt_explicitValTyparDecls 
    | 302 -> NONTERM_opt_explicitValTyparDecls2 
    | 303 -> NONTERM_opt_explicitValTyparDecls2 
    | 304 -> NONTERM_opt_typeConstraints 
    | 305 -> NONTERM_opt_typeConstraints 
    | 306 -> NONTERM_typeConstraints 
    | 307 -> NONTERM_typeConstraints 
    | 308 -> NONTERM_typeConstraint 
    | 309 -> NONTERM_typeConstraint 
    | 310 -> NONTERM_typeConstraint 
    | 311 -> NONTERM_typeConstraint 
    | 312 -> NONTERM_typeConstraint 
    | 313 -> NONTERM_typeConstraint 
    | 314 -> NONTERM_typeConstraint 
    | 315 -> NONTERM_typeConstraint 
    | 316 -> NONTERM_typeConstraint 
    | 317 -> NONTERM_typeConstraint 
    | 318 -> NONTERM_typarAlts 
    | 319 -> NONTERM_typarAlts 
    | 320 -> NONTERM_unionTypeRepr 
    | 321 -> NONTERM_unionTypeRepr 
    | 322 -> NONTERM_unionTypeRepr 
    | 323 -> NONTERM_barAndgrabXmlDoc 
    | 324 -> NONTERM_attrUnionCaseDecls 
    | 325 -> NONTERM_attrUnionCaseDecls 
    | 326 -> NONTERM_attrUnionCaseDecl 
    | 327 -> NONTERM_attrUnionCaseDecl 
    | 328 -> NONTERM_attrUnionCaseDecl 
    | 329 -> NONTERM_attrUnionCaseDecl 
    | 330 -> NONTERM_attrUnionCaseDecl 
    | 331 -> NONTERM_unionCaseName 
    | 332 -> NONTERM_unionCaseName 
    | 333 -> NONTERM_unionCaseName 
    | 334 -> NONTERM_firstUnionCaseDeclOfMany 
    | 335 -> NONTERM_firstUnionCaseDeclOfMany 
    | 336 -> NONTERM_firstUnionCaseDeclOfMany 
    | 337 -> NONTERM_firstUnionCaseDecl 
    | 338 -> NONTERM_firstUnionCaseDecl 
    | 339 -> NONTERM_unionCaseReprElements 
    | 340 -> NONTERM_unionCaseReprElements 
    | 341 -> NONTERM_unionCaseReprElement 
    | 342 -> NONTERM_unionCaseReprElement 
    | 343 -> NONTERM_unionCaseRepr 
    | 344 -> NONTERM_unionCaseRepr 
    | 345 -> NONTERM_recdFieldDeclList 
    | 346 -> NONTERM_recdFieldDeclList 
    | 347 -> NONTERM_recdFieldDecl 
    | 348 -> NONTERM_fieldDecl 
    | 349 -> NONTERM_exconDefn 
    | 350 -> NONTERM_exceptionAndGrabDoc 
    | 351 -> NONTERM_exconCore 
    | 352 -> NONTERM_exconIntro 
    | 353 -> NONTERM_exconIntro 
    | 354 -> NONTERM_exconIntro 
    | 355 -> NONTERM_exconRepr 
    | 356 -> NONTERM_exconRepr 
    | 357 -> NONTERM_defnBindings 
    | 358 -> NONTERM_defnBindings 
    | 359 -> NONTERM_doBinding 
    | 360 -> NONTERM_hardwhiteLetBindings 
    | 361 -> NONTERM_hardwhiteDoBinding 
    | 362 -> NONTERM_classDefnBindings 
    | 363 -> NONTERM_classDefnBindings 
    | 364 -> NONTERM_classDefnBindings 
    | 365 -> NONTERM_classDefnBindings 
    | 366 -> NONTERM_hardwhiteDefnBindingsTerminator 
    | 367 -> NONTERM_hardwhiteDefnBindingsTerminator 
    | 368 -> NONTERM_cPrototype 
    | 369 -> NONTERM_cArgs 
    | 370 -> NONTERM_cArgs 
    | 371 -> NONTERM_cArgs 
    | 372 -> NONTERM_cMoreArgs 
    | 373 -> NONTERM_cMoreArgs 
    | 374 -> NONTERM_cArg 
    | 375 -> NONTERM_cArg 
    | 376 -> NONTERM_cType 
    | 377 -> NONTERM_cType 
    | 378 -> NONTERM_cType 
    | 379 -> NONTERM_cType 
    | 380 -> NONTERM_cType 
    | 381 -> NONTERM_cRetType 
    | 382 -> NONTERM_cRetType 
    | 383 -> NONTERM_localBindings 
    | 384 -> NONTERM_moreLocalBindings 
    | 385 -> NONTERM_moreLocalBindings 
    | 386 -> NONTERM_attr_localBinding 
    | 387 -> NONTERM_attr_localBinding 
    | 388 -> NONTERM_localBinding 
    | 389 -> NONTERM_localBinding 
    | 390 -> NONTERM_localBinding 
    | 391 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 392 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 393 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 394 -> NONTERM_typedExprWithStaticOptimizations 
    | 395 -> NONTERM_opt_staticOptimizations 
    | 396 -> NONTERM_opt_staticOptimizations 
    | 397 -> NONTERM_staticOptimization 
    | 398 -> NONTERM_staticOptimizationConditions 
    | 399 -> NONTERM_staticOptimizationConditions 
    | 400 -> NONTERM_staticOptimizationCondition 
    | 401 -> NONTERM_staticOptimizationCondition 
    | 402 -> NONTERM_rawConstant 
    | 403 -> NONTERM_rawConstant 
    | 404 -> NONTERM_rawConstant 
    | 405 -> NONTERM_rawConstant 
    | 406 -> NONTERM_rawConstant 
    | 407 -> NONTERM_rawConstant 
    | 408 -> NONTERM_rawConstant 
    | 409 -> NONTERM_rawConstant 
    | 410 -> NONTERM_rawConstant 
    | 411 -> NONTERM_rawConstant 
    | 412 -> NONTERM_rawConstant 
    | 413 -> NONTERM_rawConstant 
    | 414 -> NONTERM_rawConstant 
    | 415 -> NONTERM_rawConstant 
    | 416 -> NONTERM_rawConstant 
    | 417 -> NONTERM_rawConstant 
    | 418 -> NONTERM_rawConstant 
    | 419 -> NONTERM_rawConstant 
    | 420 -> NONTERM_rationalConstant 
    | 421 -> NONTERM_rationalConstant 
    | 422 -> NONTERM_rationalConstant 
    | 423 -> NONTERM_rationalConstant 
    | 424 -> NONTERM_atomicUnsignedRationalConstant 
    | 425 -> NONTERM_atomicUnsignedRationalConstant 
    | 426 -> NONTERM_atomicRationalConstant 
    | 427 -> NONTERM_atomicRationalConstant 
    | 428 -> NONTERM_constant 
    | 429 -> NONTERM_constant 
    | 430 -> NONTERM_bindingPattern 
    | 431 -> NONTERM_simplePattern 
    | 432 -> NONTERM_simplePattern 
    | 433 -> NONTERM_simplePattern 
    | 434 -> NONTERM_simplePattern 
    | 435 -> NONTERM_simplePatternCommaList 
    | 436 -> NONTERM_simplePatternCommaList 
    | 437 -> NONTERM_simplePatterns 
    | 438 -> NONTERM_simplePatterns 
    | 439 -> NONTERM_simplePatterns 
    | 440 -> NONTERM_simplePatterns 
    | 441 -> NONTERM_simplePatterns 
    | 442 -> NONTERM_headBindingPattern 
    | 443 -> NONTERM_headBindingPattern 
    | 444 -> NONTERM_headBindingPattern 
    | 445 -> NONTERM_headBindingPattern 
    | 446 -> NONTERM_headBindingPattern 
    | 447 -> NONTERM_headBindingPattern 
    | 448 -> NONTERM_tuplePatternElements 
    | 449 -> NONTERM_tuplePatternElements 
    | 450 -> NONTERM_conjPatternElements 
    | 451 -> NONTERM_conjPatternElements 
    | 452 -> NONTERM_namePatPairs 
    | 453 -> NONTERM_namePatPairs 
    | 454 -> NONTERM_namePatPair 
    | 455 -> NONTERM_constrPattern 
    | 456 -> NONTERM_constrPattern 
    | 457 -> NONTERM_constrPattern 
    | 458 -> NONTERM_constrPattern 
    | 459 -> NONTERM_constrPattern 
    | 460 -> NONTERM_constrPattern 
    | 461 -> NONTERM_atomicPatsOrNamePatPairs 
    | 462 -> NONTERM_atomicPatsOrNamePatPairs 
    | 463 -> NONTERM_atomicPatterns 
    | 464 -> NONTERM_atomicPatterns 
    | 465 -> NONTERM_atomicPatterns 
    | 466 -> NONTERM_atomicPatterns 
    | 467 -> NONTERM_atomicPattern 
    | 468 -> NONTERM_atomicPattern 
    | 469 -> NONTERM_atomicPattern 
    | 470 -> NONTERM_atomicPattern 
    | 471 -> NONTERM_atomicPattern 
    | 472 -> NONTERM_atomicPattern 
    | 473 -> NONTERM_atomicPattern 
    | 474 -> NONTERM_atomicPattern 
    | 475 -> NONTERM_atomicPattern 
    | 476 -> NONTERM_atomicPattern 
    | 477 -> NONTERM_atomicPattern 
    | 478 -> NONTERM_atomicPattern 
    | 479 -> NONTERM_atomicPattern 
    | 480 -> NONTERM_atomicPattern 
    | 481 -> NONTERM_atomicPattern 
    | 482 -> NONTERM_atomicPattern 
    | 483 -> NONTERM_atomicPattern 
    | 484 -> NONTERM_atomicPattern 
    | 485 -> NONTERM_atomicPattern 
    | 486 -> NONTERM_atomicPattern 
    | 487 -> NONTERM_parenPatternBody 
    | 488 -> NONTERM_parenPatternBody 
    | 489 -> NONTERM_parenPattern 
    | 490 -> NONTERM_parenPattern 
    | 491 -> NONTERM_parenPattern 
    | 492 -> NONTERM_parenPattern 
    | 493 -> NONTERM_parenPattern 
    | 494 -> NONTERM_parenPattern 
    | 495 -> NONTERM_parenPattern 
    | 496 -> NONTERM_parenPattern 
    | 497 -> NONTERM_tupleParenPatternElements 
    | 498 -> NONTERM_tupleParenPatternElements 
    | 499 -> NONTERM_conjParenPatternElements 
    | 500 -> NONTERM_conjParenPatternElements 
    | 501 -> NONTERM_recordPatternElementsAux 
    | 502 -> NONTERM_recordPatternElementsAux 
    | 503 -> NONTERM_recordPatternElement 
    | 504 -> NONTERM_listPatternElements 
    | 505 -> NONTERM_listPatternElements 
    | 506 -> NONTERM_listPatternElements 
    | 507 -> NONTERM_typedSeqExprBlock 
    | 508 -> NONTERM_typedSeqExprBlock 
    | 509 -> NONTERM_typedSeqExprBlock 
    | 510 -> NONTERM_declExprBlock 
    | 511 -> NONTERM_declExprBlock 
    | 512 -> NONTERM_typedSeqExprBlockR 
    | 513 -> NONTERM_typedSeqExprBlockR 
    | 514 -> NONTERM_typedSeqExpr 
    | 515 -> NONTERM_typedSeqExpr 
    | 516 -> NONTERM_typedSeqExprEOF 
    | 517 -> NONTERM_seqExpr 
    | 518 -> NONTERM_seqExpr 
    | 519 -> NONTERM_seqExpr 
    | 520 -> NONTERM_seqExpr 
    | 521 -> NONTERM_seqExpr 
    | 522 -> NONTERM_seqExpr 
    | 523 -> NONTERM_recover 
    | 524 -> NONTERM_recover 
    | 525 -> NONTERM_moreBinders 
    | 526 -> NONTERM_moreBinders 
    | 527 -> NONTERM_moreBinders 
    | 528 -> NONTERM_declExpr 
    | 529 -> NONTERM_declExpr 
    | 530 -> NONTERM_declExpr 
    | 531 -> NONTERM_declExpr 
    | 532 -> NONTERM_declExpr 
    | 533 -> NONTERM_declExpr 
    | 534 -> NONTERM_declExpr 
    | 535 -> NONTERM_declExpr 
    | 536 -> NONTERM_declExpr 
    | 537 -> NONTERM_declExpr 
    | 538 -> NONTERM_declExpr 
    | 539 -> NONTERM_declExpr 
    | 540 -> NONTERM_declExpr 
    | 541 -> NONTERM_declExpr 
    | 542 -> NONTERM_declExpr 
    | 543 -> NONTERM_declExpr 
    | 544 -> NONTERM_declExpr 
    | 545 -> NONTERM_declExpr 
    | 546 -> NONTERM_declExpr 
    | 547 -> NONTERM_declExpr 
    | 548 -> NONTERM_declExpr 
    | 549 -> NONTERM_declExpr 
    | 550 -> NONTERM_declExpr 
    | 551 -> NONTERM_declExpr 
    | 552 -> NONTERM_declExpr 
    | 553 -> NONTERM_declExpr 
    | 554 -> NONTERM_declExpr 
    | 555 -> NONTERM_declExpr 
    | 556 -> NONTERM_declExpr 
    | 557 -> NONTERM_declExpr 
    | 558 -> NONTERM_declExpr 
    | 559 -> NONTERM_declExpr 
    | 560 -> NONTERM_declExpr 
    | 561 -> NONTERM_declExpr 
    | 562 -> NONTERM_declExpr 
    | 563 -> NONTERM_declExpr 
    | 564 -> NONTERM_declExpr 
    | 565 -> NONTERM_declExpr 
    | 566 -> NONTERM_declExpr 
    | 567 -> NONTERM_declExpr 
    | 568 -> NONTERM_declExpr 
    | 569 -> NONTERM_declExpr 
    | 570 -> NONTERM_declExpr 
    | 571 -> NONTERM_declExpr 
    | 572 -> NONTERM_declExpr 
    | 573 -> NONTERM_declExpr 
    | 574 -> NONTERM_declExpr 
    | 575 -> NONTERM_declExpr 
    | 576 -> NONTERM_declExpr 
    | 577 -> NONTERM_declExpr 
    | 578 -> NONTERM_declExpr 
    | 579 -> NONTERM_declExpr 
    | 580 -> NONTERM_declExpr 
    | 581 -> NONTERM_declExpr 
    | 582 -> NONTERM_declExpr 
    | 583 -> NONTERM_declExpr 
    | 584 -> NONTERM_declExpr 
    | 585 -> NONTERM_declExpr 
    | 586 -> NONTERM_declExpr 
    | 587 -> NONTERM_declExpr 
    | 588 -> NONTERM_declExpr 
    | 589 -> NONTERM_declExpr 
    | 590 -> NONTERM_declExpr 
    | 591 -> NONTERM_declExpr 
    | 592 -> NONTERM_declExpr 
    | 593 -> NONTERM_declExpr 
    | 594 -> NONTERM_declExpr 
    | 595 -> NONTERM_declExpr 
    | 596 -> NONTERM_declExpr 
    | 597 -> NONTERM_declExpr 
    | 598 -> NONTERM_declExpr 
    | 599 -> NONTERM_declExpr 
    | 600 -> NONTERM_declExpr 
    | 601 -> NONTERM_declExpr 
    | 602 -> NONTERM_declExpr 
    | 603 -> NONTERM_declExpr 
    | 604 -> NONTERM_declExpr 
    | 605 -> NONTERM_declExpr 
    | 606 -> NONTERM_declExpr 
    | 607 -> NONTERM_declExpr 
    | 608 -> NONTERM_declExpr 
    | 609 -> NONTERM_declExpr 
    | 610 -> NONTERM_declExpr 
    | 611 -> NONTERM_declExpr 
    | 612 -> NONTERM_declExpr 
    | 613 -> NONTERM_declExpr 
    | 614 -> NONTERM_declExpr 
    | 615 -> NONTERM_declExpr 
    | 616 -> NONTERM_declExpr 
    | 617 -> NONTERM_declExpr 
    | 618 -> NONTERM_declExpr 
    | 619 -> NONTERM_declExpr 
    | 620 -> NONTERM_declExpr 
    | 621 -> NONTERM_declExpr 
    | 622 -> NONTERM_declExpr 
    | 623 -> NONTERM_declExpr 
    | 624 -> NONTERM_declExpr 
    | 625 -> NONTERM_declExpr 
    | 626 -> NONTERM_declExpr 
    | 627 -> NONTERM_declExpr 
    | 628 -> NONTERM_declExpr 
    | 629 -> NONTERM_declExpr 
    | 630 -> NONTERM_declExpr 
    | 631 -> NONTERM_declExpr 
    | 632 -> NONTERM_declExpr 
    | 633 -> NONTERM_dynamicArg 
    | 634 -> NONTERM_dynamicArg 
    | 635 -> NONTERM_withClauses 
    | 636 -> NONTERM_withClauses 
    | 637 -> NONTERM_withClauses 
    | 638 -> NONTERM_withPatternClauses 
    | 639 -> NONTERM_withPatternClauses 
    | 640 -> NONTERM_withPatternClauses 
    | 641 -> NONTERM_withPatternClauses 
    | 642 -> NONTERM_patternAndGuard 
    | 643 -> NONTERM_patternClauses 
    | 644 -> NONTERM_patternClauses 
    | 645 -> NONTERM_patternClauses 
    | 646 -> NONTERM_patternClauses 
    | 647 -> NONTERM_patternClauses 
    | 648 -> NONTERM_patternGuard 
    | 649 -> NONTERM_patternGuard 
    | 650 -> NONTERM_patternResult 
    | 651 -> NONTERM_ifExprCases 
    | 652 -> NONTERM_ifExprThen 
    | 653 -> NONTERM_ifExprThen 
    | 654 -> NONTERM_ifExprThen 
    | 655 -> NONTERM_ifExprElifs 
    | 656 -> NONTERM_ifExprElifs 
    | 657 -> NONTERM_ifExprElifs 
    | 658 -> NONTERM_ifExprElifs 
    | 659 -> NONTERM_ifExprElifs 
    | 660 -> NONTERM_ifExprElifs 
    | 661 -> NONTERM_tupleExpr 
    | 662 -> NONTERM_tupleExpr 
    | 663 -> NONTERM_tupleExpr 
    | 664 -> NONTERM_tupleExpr 
    | 665 -> NONTERM_minusExpr 
    | 666 -> NONTERM_minusExpr 
    | 667 -> NONTERM_minusExpr 
    | 668 -> NONTERM_minusExpr 
    | 669 -> NONTERM_minusExpr 
    | 670 -> NONTERM_minusExpr 
    | 671 -> NONTERM_minusExpr 
    | 672 -> NONTERM_minusExpr 
    | 673 -> NONTERM_minusExpr 
    | 674 -> NONTERM_minusExpr 
    | 675 -> NONTERM_minusExpr 
    | 676 -> NONTERM_minusExpr 
    | 677 -> NONTERM_appExpr 
    | 678 -> NONTERM_appExpr 
    | 679 -> NONTERM_argExpr 
    | 680 -> NONTERM_argExpr 
    | 681 -> NONTERM_atomicExpr 
    | 682 -> NONTERM_atomicExpr 
    | 683 -> NONTERM_atomicExpr 
    | 684 -> NONTERM_atomicExpr 
    | 685 -> NONTERM_atomicExpr 
    | 686 -> NONTERM_atomicExpr 
    | 687 -> NONTERM_atomicExpr 
    | 688 -> NONTERM_atomicExpr 
    | 689 -> NONTERM_atomicExpr 
    | 690 -> NONTERM_atomicExpr 
    | 691 -> NONTERM_atomicExpr 
    | 692 -> NONTERM_atomicExpr 
    | 693 -> NONTERM_atomicExpr 
    | 694 -> NONTERM_atomicExpr 
    | 695 -> NONTERM_atomicExpr 
    | 696 -> NONTERM_atomicExpr 
    | 697 -> NONTERM_atomicExpr 
    | 698 -> NONTERM_atomicExprQualification 
    | 699 -> NONTERM_atomicExprQualification 
    | 700 -> NONTERM_atomicExprQualification 
    | 701 -> NONTERM_atomicExprQualification 
    | 702 -> NONTERM_atomicExprQualification 
    | 703 -> NONTERM_atomicExprQualification 
    | 704 -> NONTERM_atomicExprQualification 
    | 705 -> NONTERM_atomicExprQualification 
    | 706 -> NONTERM_atomicExprQualification 
    | 707 -> NONTERM_atomicExprQualification 
    | 708 -> NONTERM_atomicExprQualification 
    | 709 -> NONTERM_atomicExprQualification 
    | 710 -> NONTERM_optRangeSeqExpr 
    | 711 -> NONTERM_optRangeSeqExpr 
    | 712 -> NONTERM_optRange 
    | 713 -> NONTERM_optRange 
    | 714 -> NONTERM_optRange 
    | 715 -> NONTERM_optRange 
    | 716 -> NONTERM_optRange 
    | 717 -> NONTERM_rangeDeclExpr 
    | 718 -> NONTERM_rangeDeclExpr 
    | 719 -> NONTERM_atomicExprAfterType 
    | 720 -> NONTERM_atomicExprAfterType 
    | 721 -> NONTERM_atomicExprAfterType 
    | 722 -> NONTERM_atomicExprAfterType 
    | 723 -> NONTERM_atomicExprAfterType 
    | 724 -> NONTERM_atomicExprAfterType 
    | 725 -> NONTERM_atomicExprAfterType 
    | 726 -> NONTERM_atomicExprAfterType 
    | 727 -> NONTERM_atomicExprAfterType 
    | 728 -> NONTERM_atomicExprAfterType 
    | 729 -> NONTERM_atomicExprAfterType 
    | 730 -> NONTERM_beginEndExpr 
    | 731 -> NONTERM_beginEndExpr 
    | 732 -> NONTERM_beginEndExpr 
    | 733 -> NONTERM_beginEndExpr 
    | 734 -> NONTERM_quoteExpr 
    | 735 -> NONTERM_quoteExpr 
    | 736 -> NONTERM_quoteExpr 
    | 737 -> NONTERM_quoteExpr 
    | 738 -> NONTERM_arrayExpr 
    | 739 -> NONTERM_arrayExpr 
    | 740 -> NONTERM_arrayExpr 
    | 741 -> NONTERM_arrayExpr 
    | 742 -> NONTERM_parenExpr 
    | 743 -> NONTERM_parenExpr 
    | 744 -> NONTERM_parenExpr 
    | 745 -> NONTERM_parenExpr 
    | 746 -> NONTERM_parenExpr 
    | 747 -> NONTERM_parenExpr 
    | 748 -> NONTERM_parenExpr 
    | 749 -> NONTERM_parenExpr 
    | 750 -> NONTERM_parenExpr 
    | 751 -> NONTERM_parenExprBody 
    | 752 -> NONTERM_parenExprBody 
    | 753 -> NONTERM_parenExprBody 
    | 754 -> NONTERM_staticallyKnownHeadTypars 
    | 755 -> NONTERM_staticallyKnownHeadTypars 
    | 756 -> NONTERM_staticallyKnownHeadTyparAlts 
    | 757 -> NONTERM_staticallyKnownHeadTyparAlts 
    | 758 -> NONTERM_braceExpr 
    | 759 -> NONTERM_braceExpr 
    | 760 -> NONTERM_braceExpr 
    | 761 -> NONTERM_braceExpr 
    | 762 -> NONTERM_braceExpr 
    | 763 -> NONTERM_braceExprBody 
    | 764 -> NONTERM_braceExprBody 
    | 765 -> NONTERM_braceExprBody 
    | 766 -> NONTERM_listExprElements 
    | 767 -> NONTERM_listExprElements 
    | 768 -> NONTERM_monadicExprInitial 
    | 769 -> NONTERM_monadicExprInitial 
    | 770 -> NONTERM_rangeSequenceExpr 
    | 771 -> NONTERM_rangeSequenceExpr 
    | 772 -> NONTERM_rangeSequenceExpr 
    | 773 -> NONTERM_arrowThenExprR 
    | 774 -> NONTERM_forLoopBinder 
    | 775 -> NONTERM_forLoopBinder 
    | 776 -> NONTERM_forLoopBinder 
    | 777 -> NONTERM_forLoopBinder 
    | 778 -> NONTERM_forLoopRange 
    | 779 -> NONTERM_forLoopRange 
    | 780 -> NONTERM_forLoopDirection 
    | 781 -> NONTERM_forLoopDirection 
    | 782 -> NONTERM_inlineAssemblyExpr 
    | 783 -> NONTERM_optCurriedArgExprs 
    | 784 -> NONTERM_optCurriedArgExprs 
    | 785 -> NONTERM_opt_atomicExprAfterType 
    | 786 -> NONTERM_opt_atomicExprAfterType 
    | 787 -> NONTERM_opt_inlineAssemblyTypeArg 
    | 788 -> NONTERM_opt_inlineAssemblyTypeArg 
    | 789 -> NONTERM_optInlineAssemblyReturnTypes 
    | 790 -> NONTERM_optInlineAssemblyReturnTypes 
    | 791 -> NONTERM_optInlineAssemblyReturnTypes 
    | 792 -> NONTERM_recdExpr 
    | 793 -> NONTERM_recdExpr 
    | 794 -> NONTERM_recdExprCore 
    | 795 -> NONTERM_recdExprCore 
    | 796 -> NONTERM_recdExprCore 
    | 797 -> NONTERM_recdExprCore 
    | 798 -> NONTERM_recdExprCore 
    | 799 -> NONTERM_recdExprCore 
    | 800 -> NONTERM_recdExprCore 
    | 801 -> NONTERM_opt_seps_recd 
    | 802 -> NONTERM_opt_seps_recd 
    | 803 -> NONTERM_seps_recd 
    | 804 -> NONTERM_seps_recd 
    | 805 -> NONTERM_seps_recd 
    | 806 -> NONTERM_seps_recd 
    | 807 -> NONTERM_pathOrUnderscore 
    | 808 -> NONTERM_pathOrUnderscore 
    | 809 -> NONTERM_recdExprBindings 
    | 810 -> NONTERM_recdExprBindings 
    | 811 -> NONTERM_recdBinding 
    | 812 -> NONTERM_recdBinding 
    | 813 -> NONTERM_recdBinding 
    | 814 -> NONTERM_recdBinding 
    | 815 -> NONTERM_recdBinding 
    | 816 -> NONTERM_objExpr 
    | 817 -> NONTERM_objExpr 
    | 818 -> NONTERM_objExpr 
    | 819 -> NONTERM_objExprBaseCall 
    | 820 -> NONTERM_objExprBaseCall 
    | 821 -> NONTERM_objExprBaseCall 
    | 822 -> NONTERM_opt_objExprBindings 
    | 823 -> NONTERM_opt_objExprBindings 
    | 824 -> NONTERM_objExprBindings 
    | 825 -> NONTERM_objExprBindings 
    | 826 -> NONTERM_objExprBindings 
    | 827 -> NONTERM_objExprInterfaces 
    | 828 -> NONTERM_opt_objExprInterfaces 
    | 829 -> NONTERM_opt_objExprInterfaces 
    | 830 -> NONTERM_opt_objExprInterfaces 
    | 831 -> NONTERM_objExprInterface 
    | 832 -> NONTERM_braceBarExpr 
    | 833 -> NONTERM_braceBarExpr 
    | 834 -> NONTERM_braceBarExprCore 
    | 835 -> NONTERM_braceBarExprCore 
    | 836 -> NONTERM_braceBarExprCore 
    | 837 -> NONTERM_braceBarExprCore 
    | 838 -> NONTERM_braceBarExprCore 
    | 839 -> NONTERM_anonLambdaExpr 
    | 840 -> NONTERM_anonLambdaExpr 
    | 841 -> NONTERM_anonLambdaExpr 
    | 842 -> NONTERM_anonLambdaExpr 
    | 843 -> NONTERM_anonLambdaExpr 
    | 844 -> NONTERM_anonLambdaExpr 
    | 845 -> NONTERM_anonLambdaExpr 
    | 846 -> NONTERM_anonLambdaExpr 
    | 847 -> NONTERM_anonMatchingExpr 
    | 848 -> NONTERM_anonMatchingExpr 
    | 849 -> NONTERM_typeWithTypeConstraints 
    | 850 -> NONTERM_typeWithTypeConstraints 
    | 851 -> NONTERM_topTypeWithTypeConstraints 
    | 852 -> NONTERM_topTypeWithTypeConstraints 
    | 853 -> NONTERM_opt_topReturnTypeWithTypeConstraints 
    | 854 -> NONTERM_opt_topReturnTypeWithTypeConstraints 
    | 855 -> NONTERM_topType 
    | 856 -> NONTERM_topType 
    | 857 -> NONTERM_topTupleType 
    | 858 -> NONTERM_topTupleType 
    | 859 -> NONTERM_topTupleTypeElements 
    | 860 -> NONTERM_topTupleTypeElements 
    | 861 -> NONTERM_topAppType 
    | 862 -> NONTERM_topAppType 
    | 863 -> NONTERM_topAppType 
    | 864 -> NONTERM_topAppType 
    | 865 -> NONTERM_topAppType 
    | 866 -> NONTERM_topAppType 
    | 867 -> NONTERM_typ 
    | 868 -> NONTERM_typ 
    | 869 -> NONTERM_typEOF 
    | 870 -> NONTERM_tupleType 
    | 871 -> NONTERM_tupleType 
    | 872 -> NONTERM_tupleType 
    | 873 -> NONTERM_tupleType 
    | 874 -> NONTERM_tupleOrQuotTypeElements 
    | 875 -> NONTERM_tupleOrQuotTypeElements 
    | 876 -> NONTERM_tupleOrQuotTypeElements 
    | 877 -> NONTERM_appTypeCon 
    | 878 -> NONTERM_appTypeCon 
    | 879 -> NONTERM_appTypeConPower 
    | 880 -> NONTERM_appTypeConPower 
    | 881 -> NONTERM_appType 
    | 882 -> NONTERM_appType 
    | 883 -> NONTERM_appType 
    | 884 -> NONTERM_appType 
    | 885 -> NONTERM_appType 
    | 886 -> NONTERM_appType 
    | 887 -> NONTERM_appType 
    | 888 -> NONTERM_arrayTypeSuffix 
    | 889 -> NONTERM_arrayTypeSuffix 
    | 890 -> NONTERM_arrayTypeSuffix 
    | 891 -> NONTERM_arrayTypeSuffix 
    | 892 -> NONTERM_appTypePrefixArguments 
    | 893 -> NONTERM_typeArgListElements 
    | 894 -> NONTERM_typeArgListElements 
    | 895 -> NONTERM_typeArgListElements 
    | 896 -> NONTERM_powerType 
    | 897 -> NONTERM_powerType 
    | 898 -> NONTERM_atomTypeNonAtomicDeprecated 
    | 899 -> NONTERM_atomTypeNonAtomicDeprecated 
    | 900 -> NONTERM_atomTypeOrAnonRecdType 
    | 901 -> NONTERM_atomTypeOrAnonRecdType 
    | 902 -> NONTERM_atomType 
    | 903 -> NONTERM_atomType 
    | 904 -> NONTERM_atomType 
    | 905 -> NONTERM_atomType 
    | 906 -> NONTERM_atomType 
    | 907 -> NONTERM_atomType 
    | 908 -> NONTERM_atomType 
    | 909 -> NONTERM_atomType 
    | 910 -> NONTERM_atomType 
    | 911 -> NONTERM_atomType 
    | 912 -> NONTERM_atomType 
    | 913 -> NONTERM_atomType 
    | 914 -> NONTERM_atomType 
    | 915 -> NONTERM_atomType 
    | 916 -> NONTERM_atomType 
    | 917 -> NONTERM_atomType 
    | 918 -> NONTERM_atomType 
    | 919 -> NONTERM_atomType 
    | 920 -> NONTERM_atomType 
    | 921 -> NONTERM_atomType 
    | 922 -> NONTERM_typeArgsNoHpaDeprecated 
    | 923 -> NONTERM_typeArgsNoHpaDeprecated 
    | 924 -> NONTERM_typeArgsActual 
    | 925 -> NONTERM_typeArgsActual 
    | 926 -> NONTERM_typeArgsActual 
    | 927 -> NONTERM_typeArgsActual 
    | 928 -> NONTERM_typeArgsActual 
    | 929 -> NONTERM_typeArgsActual 
    | 930 -> NONTERM_typeArgsActual 
    | 931 -> NONTERM_typeArgActual 
    | 932 -> NONTERM_typeArgActual 
    | 933 -> NONTERM_typeArgActual 
    | 934 -> NONTERM_typeArgActualOrDummyIfEmpty 
    | 935 -> NONTERM_typeArgActualOrDummyIfEmpty 
    | 936 -> NONTERM_dummyTypeArg 
    | 937 -> NONTERM_measureTypeArg 
    | 938 -> NONTERM_measureTypeArg 
    | 939 -> NONTERM_measureTypeAtom 
    | 940 -> NONTERM_measureTypeAtom 
    | 941 -> NONTERM_measureTypeAtom 
    | 942 -> NONTERM_measureTypePower 
    | 943 -> NONTERM_measureTypePower 
    | 944 -> NONTERM_measureTypePower 
    | 945 -> NONTERM_measureTypeSeq 
    | 946 -> NONTERM_measureTypeSeq 
    | 947 -> NONTERM_measureTypeExpr 
    | 948 -> NONTERM_measureTypeExpr 
    | 949 -> NONTERM_measureTypeExpr 
    | 950 -> NONTERM_measureTypeExpr 
    | 951 -> NONTERM_typar 
    | 952 -> NONTERM_typar 
    | 953 -> NONTERM_staticallyKnownHeadTypar 
    | 954 -> NONTERM_ident 
    | 955 -> NONTERM_path 
    | 956 -> NONTERM_path 
    | 957 -> NONTERM_path 
    | 958 -> NONTERM_path 
    | 959 -> NONTERM_opName 
    | 960 -> NONTERM_opName 
    | 961 -> NONTERM_opName 
    | 962 -> NONTERM_opName 
    | 963 -> NONTERM_opName 
    | 964 -> NONTERM_operatorName 
    | 965 -> NONTERM_operatorName 
    | 966 -> NONTERM_operatorName 
    | 967 -> NONTERM_operatorName 
    | 968 -> NONTERM_operatorName 
    | 969 -> NONTERM_operatorName 
    | 970 -> NONTERM_operatorName 
    | 971 -> NONTERM_operatorName 
    | 972 -> NONTERM_operatorName 
    | 973 -> NONTERM_operatorName 
    | 974 -> NONTERM_operatorName 
    | 975 -> NONTERM_operatorName 
    | 976 -> NONTERM_operatorName 
    | 977 -> NONTERM_operatorName 
    | 978 -> NONTERM_operatorName 
    | 979 -> NONTERM_operatorName 
    | 980 -> NONTERM_operatorName 
    | 981 -> NONTERM_operatorName 
    | 982 -> NONTERM_operatorName 
    | 983 -> NONTERM_operatorName 
    | 984 -> NONTERM_operatorName 
    | 985 -> NONTERM_operatorName 
    | 986 -> NONTERM_operatorName 
    | 987 -> NONTERM_operatorName 
    | 988 -> NONTERM_operatorName 
    | 989 -> NONTERM_operatorName 
    | 990 -> NONTERM_activePatternCaseName 
    | 991 -> NONTERM_activePatternCaseNames 
    | 992 -> NONTERM_activePatternCaseNames 
    | 993 -> NONTERM_identOrOp 
    | 994 -> NONTERM_identOrOp 
    | 995 -> NONTERM_pathOp 
    | 996 -> NONTERM_pathOp 
    | 997 -> NONTERM_pathOp 
    | 998 -> NONTERM_pathOp 
    | 999 -> NONTERM_nameop 
    | 1000 -> NONTERM_identExpr 
    | 1001 -> NONTERM_identExpr 
    | 1002 -> NONTERM_topSeparator 
    | 1003 -> NONTERM_topSeparator 
    | 1004 -> NONTERM_topSeparator 
    | 1005 -> NONTERM_topSeparators 
    | 1006 -> NONTERM_topSeparators 
    | 1007 -> NONTERM_opt_topSeparators 
    | 1008 -> NONTERM_opt_topSeparators 
    | 1009 -> NONTERM_seps 
    | 1010 -> NONTERM_seps 
    | 1011 -> NONTERM_seps 
    | 1012 -> NONTERM_seps 
    | 1013 -> NONTERM_declEnd 
    | 1014 -> NONTERM_declEnd 
    | 1015 -> NONTERM_declEnd 
    | 1016 -> NONTERM_opt_declEnd 
    | 1017 -> NONTERM_opt_declEnd 
    | 1018 -> NONTERM_opt_declEnd 
    | 1019 -> NONTERM_opt_declEnd 
    | 1020 -> NONTERM_opt_ODECLEND 
    | 1021 -> NONTERM_opt_ODECLEND 
    | 1022 -> NONTERM_deprecated_opt_equals 
    | 1023 -> NONTERM_deprecated_opt_equals 
    | 1024 -> NONTERM_opt_equals 
    | 1025 -> NONTERM_opt_equals 
    | 1026 -> NONTERM_opt_OBLOCKSEP 
    | 1027 -> NONTERM_opt_OBLOCKSEP 
    | 1028 -> NONTERM_opt_seps 
    | 1029 -> NONTERM_opt_seps 
    | 1030 -> NONTERM_opt_rec 
    | 1031 -> NONTERM_opt_rec 
    | 1032 -> NONTERM_opt_bar 
    | 1033 -> NONTERM_opt_bar 
    | 1034 -> NONTERM_opt_inline 
    | 1035 -> NONTERM_opt_inline 
    | 1036 -> NONTERM_opt_mutable 
    | 1037 -> NONTERM_opt_mutable 
    | 1038 -> NONTERM_doToken 
    | 1039 -> NONTERM_doToken 
    | 1040 -> NONTERM_doneDeclEnd 
    | 1041 -> NONTERM_doneDeclEnd 
    | 1042 -> NONTERM_structOrBegin 
    | 1043 -> NONTERM_structOrBegin 
    | 1044 -> NONTERM_sigOrBegin 
    | 1045 -> NONTERM_sigOrBegin 
    | 1046 -> NONTERM_colonOrEquals 
    | 1047 -> NONTERM_colonOrEquals 
    | 1048 -> NONTERM_string 
    | 1049 -> NONTERM_sourceIdentifier 
    | 1050 -> NONTERM_interpolatedStringFill 
    | 1051 -> NONTERM_interpolatedStringFill 
    | 1052 -> NONTERM_interpolatedStringParts 
    | 1053 -> NONTERM_interpolatedStringParts 
    | 1054 -> NONTERM_interpolatedStringParts 
    | 1055 -> NONTERM_interpolatedString 
    | 1056 -> NONTERM_interpolatedString 
    | 1057 -> NONTERM_interpolatedString 
    | 1058 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 1059 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 1060 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 1061 -> NONTERM_opt_HIGH_PRECEDENCE_TYAPP 
    | 1062 -> NONTERM_opt_HIGH_PRECEDENCE_TYAPP 
    | 1063 -> NONTERM_typeKeyword 
    | 1064 -> NONTERM_typeKeyword 
    | 1065 -> NONTERM_typeKeyword 
    | 1066 -> NONTERM_moduleKeyword 
    | 1067 -> NONTERM_moduleKeyword 
    | 1068 -> NONTERM_moduleKeyword 
    | 1069 -> NONTERM_rbrace 
    | 1070 -> NONTERM_rbrace 
    | 1071 -> NONTERM_rbrace 
    | 1072 -> NONTERM_bar_rbrace 
    | 1073 -> NONTERM_rparen 
    | 1074 -> NONTERM_rparen 
    | 1075 -> NONTERM_rparen 
    | 1076 -> NONTERM_oblockend 
    | 1077 -> NONTERM_oblockend 
    | 1078 -> NONTERM_oblockend 
    | 1079 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1080 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1081 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1082 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1083 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1084 -> NONTERM_ends_coming_soon_or_recover 
    | 1085 -> NONTERM_ends_coming_soon_or_recover 
    | 1086 -> NONTERM_ends_coming_soon_or_recover 
    | 1087 -> NONTERM_ends_coming_soon_or_recover 
    | 1088 -> NONTERM_ends_coming_soon_or_recover 
    | 1089 -> NONTERM_ends_coming_soon_or_recover 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 204 
let _fsyacc_tagOfErrorTerminal = 202

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | HASH_IF _ -> "HASH_IF" 
  | HASH_ELSE _ -> "HASH_ELSE" 
  | HASH_ENDIF _ -> "HASH_ENDIF" 
  | COMMENT _ -> "COMMENT" 
  | WHITESPACE _ -> "WHITESPACE" 
  | HASH_LINE _ -> "HASH_LINE" 
  | HASH_LIGHT _ -> "HASH_LIGHT" 
  | INACTIVECODE _ -> "INACTIVECODE" 
  | LINE_COMMENT _ -> "LINE_COMMENT" 
  | STRING_TEXT _ -> "STRING_TEXT" 
  | EOF _ -> "EOF" 
  | LEX_FAILURE _ -> "LEX_FAILURE" 
  | ODUMMY _ -> "ODUMMY" 
  | FIXED  -> "FIXED" 
  | OINTERFACE_MEMBER  -> "OINTERFACE_MEMBER" 
  | OBLOCKEND  -> "OBLOCKEND" 
  | OBLOCKEND_COMING_SOON  -> "OBLOCKEND_COMING_SOON" 
  | OBLOCKEND_IS_HERE  -> "OBLOCKEND_IS_HERE" 
  | ORIGHT_BLOCK_END  -> "ORIGHT_BLOCK_END" 
  | ODECLEND  -> "ODECLEND" 
  | OEND  -> "OEND" 
  | OBLOCKSEP  -> "OBLOCKSEP" 
  | OBLOCKBEGIN  -> "OBLOCKBEGIN" 
  | ORESET  -> "ORESET" 
  | OFUN  -> "OFUN" 
  | OFUNCTION  -> "OFUNCTION" 
  | OWITH  -> "OWITH" 
  | OELSE  -> "OELSE" 
  | OTHEN  -> "OTHEN" 
  | ODO_BANG  -> "ODO_BANG" 
  | ODO  -> "ODO" 
  | OAND_BANG _ -> "OAND_BANG" 
  | OBINDER _ -> "OBINDER" 
  | OLET _ -> "OLET" 
  | HIGH_PRECEDENCE_TYAPP  -> "HIGH_PRECEDENCE_TYAPP" 
  | HIGH_PRECEDENCE_PAREN_APP  -> "HIGH_PRECEDENCE_PAREN_APP" 
  | HIGH_PRECEDENCE_BRACK_APP  -> "HIGH_PRECEDENCE_BRACK_APP" 
  | TYPE_COMING_SOON  -> "TYPE_COMING_SOON" 
  | TYPE_IS_HERE  -> "TYPE_IS_HERE" 
  | MODULE_COMING_SOON  -> "MODULE_COMING_SOON" 
  | MODULE_IS_HERE  -> "MODULE_IS_HERE" 
  | EXTERN  -> "EXTERN" 
  | VOID  -> "VOID" 
  | PUBLIC  -> "PUBLIC" 
  | PRIVATE  -> "PRIVATE" 
  | INTERNAL  -> "INTERNAL" 
  | GLOBAL  -> "GLOBAL" 
  | STATIC  -> "STATIC" 
  | MEMBER  -> "MEMBER" 
  | CLASS  -> "CLASS" 
  | ABSTRACT  -> "ABSTRACT" 
  | OVERRIDE  -> "OVERRIDE" 
  | DEFAULT  -> "DEFAULT" 
  | CONSTRUCTOR  -> "CONSTRUCTOR" 
  | INHERIT  -> "INHERIT" 
  | GREATER_RBRACK  -> "GREATER_RBRACK" 
  | STRUCT  -> "STRUCT" 
  | SIG  -> "SIG" 
  | BAR  -> "BAR" 
  | RBRACK  -> "RBRACK" 
  | RBRACE_COMING_SOON  -> "RBRACE_COMING_SOON" 
  | RBRACE_IS_HERE  -> "RBRACE_IS_HERE" 
  | MINUS  -> "MINUS" 
  | DOLLAR  -> "DOLLAR" 
  | BAR_RBRACK  -> "BAR_RBRACK" 
  | BAR_RBRACE  -> "BAR_RBRACE" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | SEMICOLON_SEMICOLON  -> "SEMICOLON_SEMICOLON" 
  | LARROW  -> "LARROW" 
  | EQUALS  -> "EQUALS" 
  | LBRACK  -> "LBRACK" 
  | LBRACK_BAR  -> "LBRACK_BAR" 
  | LBRACE_BAR  -> "LBRACE_BAR" 
  | LBRACK_LESS  -> "LBRACK_LESS" 
  | QMARK  -> "QMARK" 
  | QMARK_QMARK  -> "QMARK_QMARK" 
  | DOT  -> "DOT" 
  | COLON  -> "COLON" 
  | COLON_COLON  -> "COLON_COLON" 
  | COLON_GREATER  -> "COLON_GREATER" 
  | COLON_QMARK_GREATER  -> "COLON_QMARK_GREATER" 
  | COLON_QMARK  -> "COLON_QMARK" 
  | COLON_EQUALS  -> "COLON_EQUALS" 
  | SEMICOLON  -> "SEMICOLON" 
  | WHEN  -> "WHEN" 
  | WHILE  -> "WHILE" 
  | WITH  -> "WITH" 
  | HASH  -> "HASH" 
  | AMP  -> "AMP" 
  | AMP_AMP  -> "AMP_AMP" 
  | QUOTE  -> "QUOTE" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | RPAREN_COMING_SOON  -> "RPAREN_COMING_SOON" 
  | RPAREN_IS_HERE  -> "RPAREN_IS_HERE" 
  | STAR  -> "STAR" 
  | COMMA  -> "COMMA" 
  | RARROW  -> "RARROW" 
  | GREATER_BAR_RBRACK  -> "GREATER_BAR_RBRACK" 
  | LPAREN_STAR_RPAREN  -> "LPAREN_STAR_RPAREN" 
  | OPEN  -> "OPEN" 
  | OR  -> "OR" 
  | REC  -> "REC" 
  | THEN  -> "THEN" 
  | TO  -> "TO" 
  | TRUE  -> "TRUE" 
  | TRY  -> "TRY" 
  | TYPE  -> "TYPE" 
  | VAL  -> "VAL" 
  | INLINE  -> "INLINE" 
  | INTERFACE  -> "INTERFACE" 
  | INSTANCE  -> "INSTANCE" 
  | CONST  -> "CONST" 
  | LAZY  -> "LAZY" 
  | OLAZY  -> "OLAZY" 
  | MATCH  -> "MATCH" 
  | MATCH_BANG  -> "MATCH_BANG" 
  | MUTABLE  -> "MUTABLE" 
  | NEW  -> "NEW" 
  | OF  -> "OF" 
  | EXCEPTION  -> "EXCEPTION" 
  | FALSE  -> "FALSE" 
  | FOR  -> "FOR" 
  | FUN  -> "FUN" 
  | FUNCTION  -> "FUNCTION" 
  | IF  -> "IF" 
  | IN  -> "IN" 
  | JOIN_IN  -> "JOIN_IN" 
  | FINALLY  -> "FINALLY" 
  | DO_BANG  -> "DO_BANG" 
  | AND  -> "AND" 
  | AS  -> "AS" 
  | ASSERT  -> "ASSERT" 
  | OASSERT  -> "OASSERT" 
  | ASR  -> "ASR" 
  | BEGIN  -> "BEGIN" 
  | DO  -> "DO" 
  | DONE  -> "DONE" 
  | DOWNTO  -> "DOWNTO" 
  | ELSE  -> "ELSE" 
  | ELIF  -> "ELIF" 
  | END  -> "END" 
  | DOT_DOT  -> "DOT_DOT" 
  | DOT_DOT_HAT  -> "DOT_DOT_HAT" 
  | BAR_BAR  -> "BAR_BAR" 
  | UPCAST  -> "UPCAST" 
  | DOWNCAST  -> "DOWNCAST" 
  | NULL  -> "NULL" 
  | RESERVED  -> "RESERVED" 
  | MODULE  -> "MODULE" 
  | NAMESPACE  -> "NAMESPACE" 
  | DELEGATE  -> "DELEGATE" 
  | CONSTRAINT  -> "CONSTRAINT" 
  | BASE  -> "BASE" 
  | LQUOTE _ -> "LQUOTE" 
  | RQUOTE _ -> "RQUOTE" 
  | RQUOTE_DOT _ -> "RQUOTE_DOT" 
  | PERCENT_OP _ -> "PERCENT_OP" 
  | BINDER _ -> "BINDER" 
  | LESS _ -> "LESS" 
  | GREATER _ -> "GREATER" 
  | LET _ -> "LET" 
  | YIELD _ -> "YIELD" 
  | YIELD_BANG _ -> "YIELD_BANG" 
  | AND_BANG _ -> "AND_BANG" 
  | BIGNUM _ -> "BIGNUM" 
  | DECIMAL _ -> "DECIMAL" 
  | CHAR _ -> "CHAR" 
  | IEEE64 _ -> "IEEE64" 
  | IEEE32 _ -> "IEEE32" 
  | UNATIVEINT _ -> "UNATIVEINT" 
  | UINT64 _ -> "UINT64" 
  | UINT32 _ -> "UINT32" 
  | UINT16 _ -> "UINT16" 
  | UINT8 _ -> "UINT8" 
  | NATIVEINT _ -> "NATIVEINT" 
  | INT64 _ -> "INT64" 
  | INT32 _ -> "INT32" 
  | INT32_DOT_DOT _ -> "INT32_DOT_DOT" 
  | INT16 _ -> "INT16" 
  | INT8 _ -> "INT8" 
  | FUNKY_OPERATOR_NAME _ -> "FUNKY_OPERATOR_NAME" 
  | ADJACENT_PREFIX_OP _ -> "ADJACENT_PREFIX_OP" 
  | PLUS_MINUS_OP _ -> "PLUS_MINUS_OP" 
  | INFIX_AMP_OP _ -> "INFIX_AMP_OP" 
  | INFIX_STAR_DIV_MOD_OP _ -> "INFIX_STAR_DIV_MOD_OP" 
  | PREFIX_OP _ -> "PREFIX_OP" 
  | INFIX_BAR_OP _ -> "INFIX_BAR_OP" 
  | INFIX_AT_HAT_OP _ -> "INFIX_AT_HAT_OP" 
  | INFIX_COMPARE_OP _ -> "INFIX_COMPARE_OP" 
  | INFIX_STAR_STAR_OP _ -> "INFIX_STAR_STAR_OP" 
  | HASH_IDENT _ -> "HASH_IDENT" 
  | IDENT _ -> "IDENT" 
  | KEYWORD_STRING _ -> "KEYWORD_STRING" 
  | LBRACE _ -> "LBRACE" 
  | RBRACE _ -> "RBRACE" 
  | INTERP_STRING_END _ -> "INTERP_STRING_END" 
  | INTERP_STRING_PART _ -> "INTERP_STRING_PART" 
  | INTERP_STRING_BEGIN_PART _ -> "INTERP_STRING_BEGIN_PART" 
  | INTERP_STRING_BEGIN_END _ -> "INTERP_STRING_BEGIN_END" 
  | STRING _ -> "STRING" 
  | BYTEARRAY _ -> "BYTEARRAY" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | HASH_IF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_ELSE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_ENDIF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | WHITESPACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_LINE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_LIGHT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INACTIVECODE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LINE_COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING_TEXT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EOF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LEX_FAILURE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ODUMMY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FIXED  -> (null : System.Object) 
  | OINTERFACE_MEMBER  -> (null : System.Object) 
  | OBLOCKEND  -> (null : System.Object) 
  | OBLOCKEND_COMING_SOON  -> (null : System.Object) 
  | OBLOCKEND_IS_HERE  -> (null : System.Object) 
  | ORIGHT_BLOCK_END  -> (null : System.Object) 
  | ODECLEND  -> (null : System.Object) 
  | OEND  -> (null : System.Object) 
  | OBLOCKSEP  -> (null : System.Object) 
  | OBLOCKBEGIN  -> (null : System.Object) 
  | ORESET  -> (null : System.Object) 
  | OFUN  -> (null : System.Object) 
  | OFUNCTION  -> (null : System.Object) 
  | OWITH  -> (null : System.Object) 
  | OELSE  -> (null : System.Object) 
  | OTHEN  -> (null : System.Object) 
  | ODO_BANG  -> (null : System.Object) 
  | ODO  -> (null : System.Object) 
  | OAND_BANG _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OBINDER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OLET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HIGH_PRECEDENCE_TYAPP  -> (null : System.Object) 
  | HIGH_PRECEDENCE_PAREN_APP  -> (null : System.Object) 
  | HIGH_PRECEDENCE_BRACK_APP  -> (null : System.Object) 
  | TYPE_COMING_SOON  -> (null : System.Object) 
  | TYPE_IS_HERE  -> (null : System.Object) 
  | MODULE_COMING_SOON  -> (null : System.Object) 
  | MODULE_IS_HERE  -> (null : System.Object) 
  | EXTERN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | PUBLIC  -> (null : System.Object) 
  | PRIVATE  -> (null : System.Object) 
  | INTERNAL  -> (null : System.Object) 
  | GLOBAL  -> (null : System.Object) 
  | STATIC  -> (null : System.Object) 
  | MEMBER  -> (null : System.Object) 
  | CLASS  -> (null : System.Object) 
  | ABSTRACT  -> (null : System.Object) 
  | OVERRIDE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | CONSTRUCTOR  -> (null : System.Object) 
  | INHERIT  -> (null : System.Object) 
  | GREATER_RBRACK  -> (null : System.Object) 
  | STRUCT  -> (null : System.Object) 
  | SIG  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | RBRACE_COMING_SOON  -> (null : System.Object) 
  | RBRACE_IS_HERE  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | DOLLAR  -> (null : System.Object) 
  | BAR_RBRACK  -> (null : System.Object) 
  | BAR_RBRACE  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | SEMICOLON_SEMICOLON  -> (null : System.Object) 
  | LARROW  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | LBRACK_BAR  -> (null : System.Object) 
  | LBRACE_BAR  -> (null : System.Object) 
  | LBRACK_LESS  -> (null : System.Object) 
  | QMARK  -> (null : System.Object) 
  | QMARK_QMARK  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | COLON_COLON  -> (null : System.Object) 
  | COLON_GREATER  -> (null : System.Object) 
  | COLON_QMARK_GREATER  -> (null : System.Object) 
  | COLON_QMARK  -> (null : System.Object) 
  | COLON_EQUALS  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | WHEN  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | HASH  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | AMP_AMP  -> (null : System.Object) 
  | QUOTE  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | RPAREN_COMING_SOON  -> (null : System.Object) 
  | RPAREN_IS_HERE  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | RARROW  -> (null : System.Object) 
  | GREATER_BAR_RBRACK  -> (null : System.Object) 
  | LPAREN_STAR_RPAREN  -> (null : System.Object) 
  | OPEN  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | REC  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | TO  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | TRY  -> (null : System.Object) 
  | TYPE  -> (null : System.Object) 
  | VAL  -> (null : System.Object) 
  | INLINE  -> (null : System.Object) 
  | INTERFACE  -> (null : System.Object) 
  | INSTANCE  -> (null : System.Object) 
  | CONST  -> (null : System.Object) 
  | LAZY  -> (null : System.Object) 
  | OLAZY  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | MATCH_BANG  -> (null : System.Object) 
  | MUTABLE  -> (null : System.Object) 
  | NEW  -> (null : System.Object) 
  | OF  -> (null : System.Object) 
  | EXCEPTION  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | FUNCTION  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | JOIN_IN  -> (null : System.Object) 
  | FINALLY  -> (null : System.Object) 
  | DO_BANG  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | AS  -> (null : System.Object) 
  | ASSERT  -> (null : System.Object) 
  | OASSERT  -> (null : System.Object) 
  | ASR  -> (null : System.Object) 
  | BEGIN  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | DONE  -> (null : System.Object) 
  | DOWNTO  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | ELIF  -> (null : System.Object) 
  | END  -> (null : System.Object) 
  | DOT_DOT  -> (null : System.Object) 
  | DOT_DOT_HAT  -> (null : System.Object) 
  | BAR_BAR  -> (null : System.Object) 
  | UPCAST  -> (null : System.Object) 
  | DOWNCAST  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | RESERVED  -> (null : System.Object) 
  | MODULE  -> (null : System.Object) 
  | NAMESPACE  -> (null : System.Object) 
  | DELEGATE  -> (null : System.Object) 
  | CONSTRAINT  -> (null : System.Object) 
  | BASE  -> (null : System.Object) 
  | LQUOTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RQUOTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RQUOTE_DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PERCENT_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BINDER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LESS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | GREATER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | YIELD _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | YIELD_BANG _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | AND_BANG _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BIGNUM _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECIMAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IEEE64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IEEE32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UNATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT8 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32_DOT_DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT8 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FUNKY_OPERATOR_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ADJACENT_PREFIX_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PLUS_MINUS_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_AMP_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_STAR_DIV_MOD_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PREFIX_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_BAR_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_AT_HAT_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_COMPARE_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_STAR_STAR_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_IDENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IDENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | KEYWORD_STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LBRACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RBRACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INTERP_STRING_END _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INTERP_STRING_PART _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INTERP_STRING_BEGIN_PART _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INTERP_STRING_BEGIN_END _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BYTEARRAY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 1us; 65535us; 4us; 5us; 7us; 65535us; 4us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 15us; 24us; 15us; 26us; 15us; 4us; 65535us; 4us; 10us; 22us; 23us; 24us; 25us; 26us; 27us; 5us; 65535us; 4us; 16us; 22us; 16us; 24us; 16us; 26us; 16us; 28us; 29us; 4us; 65535us; 4us; 18us; 22us; 18us; 24us; 18us; 26us; 18us; 4us; 65535us; 4us; 20us; 22us; 20us; 24us; 20us; 26us; 20us; 4us; 65535us; 16us; 22us; 18us; 24us; 20us; 26us; 34us; 35us; 4us; 65535us; 16us; 34us; 18us; 34us; 20us; 34us; 34us; 34us; 23us; 65535us; 0us; 84us; 2us; 256us; 4us; 33us; 22us; 33us; 24us; 33us; 26us; 33us; 61us; 84us; 65us; 84us; 69us; 84us; 79us; 84us; 82us; 84us; 111us; 84us; 114us; 84us; 118us; 84us; 223us; 256us; 227us; 256us; 230us; 256us; 242us; 256us; 246us; 256us; 248us; 256us; 253us; 256us; 281us; 256us; 291us; 256us; 1us; 65535us; 39us; 40us; 1us; 65535us; 40us; 41us; 1us; 65535us; 0us; 1us; 6us; 65535us; 31us; 268us; 64us; 65us; 87us; 88us; 226us; 227us; 240us; 268us; 258us; 268us; 4us; 65535us; 56us; 60us; 58us; 60us; 218us; 222us; 220us; 222us; 1us; 65535us; 0us; 43us; 2us; 65535us; 56us; 57us; 58us; 59us; 2us; 65535us; 56us; 58us; 58us; 58us; 2us; 65535us; 0us; 56us; 61us; 62us; 3us; 65535us; 0us; 67us; 61us; 67us; 65us; 66us; 6us; 65535us; 0us; 68us; 61us; 68us; 65us; 68us; 69us; 70us; 114us; 115us; 118us; 119us; 9us; 65535us; 0us; 76us; 61us; 76us; 65us; 76us; 69us; 76us; 79us; 80us; 82us; 83us; 111us; 112us; 114us; 76us; 118us; 76us; 9us; 65535us; 0us; 78us; 61us; 78us; 65us; 78us; 69us; 78us; 79us; 78us; 82us; 78us; 111us; 78us; 114us; 78us; 118us; 78us; 9us; 65535us; 0us; 85us; 61us; 85us; 65us; 85us; 69us; 85us; 79us; 85us; 82us; 85us; 111us; 85us; 114us; 85us; 118us; 85us; 2us; 65535us; 103us; 104us; 179us; 180us; 1us; 65535us; 89us; 91us; 2us; 65535us; 64us; 92us; 87us; 92us; 2us; 65535us; 121us; 122us; 124us; 125us; 3us; 65535us; 121us; 123us; 124us; 123us; 190us; 191us; 1us; 65535us; 127us; 128us; 2us; 65535us; 127us; 137us; 130us; 131us; 2us; 65535us; 127us; 140us; 130us; 140us; 2us; 65535us; 127us; 144us; 130us; 144us; 3us; 65535us; 145us; 146us; 155us; 156us; 209us; 210us; 8us; 65535us; 130us; 152us; 132us; 133us; 145us; 163us; 151us; 152us; 155us; 163us; 159us; 160us; 166us; 167us; 209us; 163us; 8us; 65535us; 130us; 164us; 132us; 164us; 145us; 164us; 151us; 164us; 155us; 164us; 159us; 164us; 166us; 164us; 209us; 164us; 11us; 65535us; 130us; 165us; 132us; 165us; 145us; 165us; 151us; 165us; 155us; 165us; 159us; 165us; 166us; 165us; 209us; 165us; 608us; 609us; 615us; 616us; 1398us; 1399us; 3us; 65535us; 178us; 179us; 434us; 435us; 464us; 465us; 2us; 65535us; 195us; 196us; 197us; 198us; 2us; 65535us; 170us; 172us; 171us; 172us; 2us; 65535us; 64us; 93us; 87us; 93us; 5us; 65535us; 126us; 129us; 133us; 134us; 135us; 136us; 137us; 138us; 207us; 208us; 1us; 65535us; 2us; 3us; 1us; 65535us; 2us; 212us; 2us; 65535us; 218us; 219us; 220us; 221us; 2us; 65535us; 218us; 220us; 220us; 220us; 2us; 65535us; 2us; 218us; 223us; 224us; 3us; 65535us; 2us; 229us; 223us; 229us; 227us; 228us; 5us; 65535us; 2us; 237us; 223us; 237us; 227us; 237us; 230us; 231us; 291us; 292us; 9us; 65535us; 2us; 238us; 223us; 238us; 227us; 238us; 230us; 238us; 242us; 243us; 248us; 249us; 253us; 254us; 281us; 285us; 291us; 238us; 10us; 65535us; 2us; 244us; 223us; 244us; 227us; 244us; 230us; 244us; 242us; 244us; 246us; 247us; 248us; 244us; 253us; 244us; 281us; 244us; 291us; 244us; 10us; 65535us; 2us; 246us; 223us; 246us; 227us; 246us; 230us; 246us; 242us; 246us; 246us; 246us; 248us; 246us; 253us; 246us; 281us; 246us; 291us; 246us; 15us; 65535us; 2us; 255us; 4us; 28us; 22us; 28us; 24us; 28us; 26us; 28us; 28us; 28us; 223us; 255us; 227us; 255us; 230us; 255us; 242us; 255us; 246us; 255us; 248us; 255us; 253us; 255us; 281us; 255us; 291us; 255us; 24us; 65535us; 0us; 94us; 2us; 273us; 4us; 273us; 22us; 273us; 24us; 273us; 26us; 273us; 28us; 273us; 61us; 94us; 65us; 94us; 69us; 94us; 79us; 94us; 82us; 94us; 111us; 94us; 114us; 94us; 118us; 94us; 223us; 273us; 227us; 273us; 230us; 273us; 242us; 273us; 246us; 273us; 248us; 273us; 253us; 273us; 281us; 273us; 291us; 273us; 1us; 65535us; 89us; 90us; 1us; 65535us; 269us; 270us; 2us; 65535us; 269us; 289us; 281us; 282us; 1us; 65535us; 346us; 349us; 81us; 65535us; 0us; 63us; 2us; 225us; 4us; 30us; 22us; 30us; 24us; 30us; 26us; 30us; 28us; 257us; 61us; 63us; 65us; 86us; 69us; 86us; 79us; 86us; 82us; 86us; 95us; 96us; 111us; 86us; 114us; 86us; 118us; 86us; 121us; 340us; 124us; 340us; 127us; 526us; 130us; 169us; 132us; 168us; 145us; 168us; 151us; 168us; 155us; 168us; 159us; 168us; 166us; 168us; 190us; 340us; 209us; 168us; 223us; 225us; 227us; 239us; 230us; 239us; 242us; 239us; 246us; 257us; 248us; 239us; 253us; 239us; 264us; 340us; 281us; 239us; 291us; 239us; 296us; 417us; 343us; 340us; 346us; 350us; 347us; 526us; 355us; 526us; 357us; 418us; 359us; 417us; 373us; 417us; 377us; 417us; 379us; 417us; 383us; 417us; 389us; 417us; 392us; 417us; 403us; 404us; 450us; 340us; 485us; 513us; 488us; 417us; 505us; 513us; 511us; 513us; 540us; 672us; 549us; 672us; 566us; 575us; 571us; 575us; 572us; 575us; 578us; 575us; 583us; 575us; 608us; 168us; 615us; 168us; 624us; 634us; 627us; 634us; 632us; 634us; 669us; 672us; 682us; 683us; 694us; 745us; 700us; 745us; 712us; 739us; 717us; 726us; 722us; 726us; 724us; 726us; 742us; 745us; 1398us; 168us; 1502us; 514us; 1504us; 745us; 118us; 65535us; 0us; 299us; 2us; 271us; 4us; 271us; 22us; 271us; 24us; 271us; 26us; 271us; 28us; 271us; 61us; 299us; 65us; 299us; 69us; 299us; 79us; 299us; 82us; 299us; 95us; 299us; 102us; 1568us; 111us; 299us; 114us; 299us; 118us; 299us; 121us; 299us; 124us; 299us; 127us; 299us; 130us; 299us; 132us; 299us; 142us; 1568us; 145us; 299us; 151us; 299us; 155us; 299us; 159us; 299us; 166us; 299us; 177us; 1568us; 190us; 299us; 193us; 1568us; 209us; 299us; 223us; 271us; 227us; 271us; 230us; 271us; 242us; 271us; 246us; 271us; 248us; 271us; 253us; 271us; 264us; 299us; 281us; 271us; 291us; 271us; 296us; 299us; 300us; 301us; 343us; 299us; 346us; 299us; 347us; 299us; 355us; 299us; 357us; 299us; 359us; 299us; 370us; 1568us; 373us; 299us; 377us; 299us; 379us; 299us; 383us; 299us; 389us; 299us; 392us; 299us; 403us; 299us; 433us; 1568us; 450us; 299us; 485us; 299us; 488us; 299us; 505us; 299us; 511us; 299us; 540us; 299us; 549us; 299us; 566us; 299us; 571us; 299us; 572us; 299us; 578us; 299us; 583us; 299us; 608us; 299us; 615us; 299us; 624us; 299us; 627us; 299us; 632us; 299us; 640us; 1568us; 669us; 299us; 682us; 299us; 694us; 299us; 700us; 299us; 712us; 299us; 717us; 299us; 722us; 299us; 724us; 299us; 742us; 299us; 819us; 819us; 820us; 819us; 822us; 819us; 857us; 934us; 869us; 934us; 885us; 934us; 888us; 934us; 899us; 934us; 907us; 934us; 929us; 934us; 934us; 934us; 935us; 934us; 937us; 934us; 938us; 934us; 939us; 934us; 940us; 934us; 946us; 934us; 948us; 934us; 1055us; 934us; 1206us; 934us; 1208us; 934us; 1213us; 934us; 1220us; 934us; 1398us; 299us; 1502us; 299us; 1504us; 299us; 1548us; 934us; 1550us; 934us; 1557us; 1568us; 1560us; 1568us; 1563us; 1568us; 1566us; 1568us; 118us; 65535us; 0us; 300us; 2us; 300us; 4us; 300us; 22us; 300us; 24us; 300us; 26us; 300us; 28us; 300us; 61us; 300us; 65us; 300us; 69us; 300us; 79us; 300us; 82us; 300us; 95us; 300us; 102us; 300us; 111us; 300us; 114us; 300us; 118us; 300us; 121us; 300us; 124us; 300us; 127us; 300us; 130us; 300us; 132us; 300us; 142us; 300us; 145us; 300us; 151us; 300us; 155us; 300us; 159us; 300us; 166us; 300us; 177us; 300us; 190us; 300us; 193us; 300us; 209us; 300us; 223us; 300us; 227us; 300us; 230us; 300us; 242us; 300us; 246us; 300us; 248us; 300us; 253us; 300us; 264us; 300us; 281us; 300us; 291us; 300us; 296us; 300us; 300us; 300us; 343us; 300us; 346us; 300us; 347us; 300us; 355us; 300us; 357us; 300us; 359us; 300us; 370us; 300us; 373us; 300us; 377us; 300us; 379us; 300us; 383us; 300us; 389us; 300us; 392us; 300us; 403us; 300us; 433us; 300us; 450us; 300us; 485us; 300us; 488us; 300us; 505us; 300us; 511us; 300us; 540us; 300us; 549us; 300us; 566us; 300us; 571us; 300us; 572us; 300us; 578us; 300us; 583us; 300us; 608us; 300us; 615us; 300us; 624us; 300us; 627us; 300us; 632us; 300us; 640us; 300us; 669us; 300us; 682us; 300us; 694us; 300us; 700us; 300us; 712us; 300us; 717us; 300us; 722us; 300us; 724us; 300us; 742us; 300us; 819us; 300us; 820us; 300us; 822us; 300us; 857us; 300us; 869us; 300us; 885us; 300us; 888us; 300us; 899us; 300us; 907us; 300us; 929us; 300us; 934us; 300us; 935us; 300us; 937us; 300us; 938us; 300us; 939us; 300us; 940us; 300us; 946us; 300us; 948us; 300us; 1055us; 300us; 1206us; 300us; 1208us; 300us; 1213us; 300us; 1220us; 300us; 1398us; 300us; 1502us; 300us; 1504us; 300us; 1548us; 300us; 1550us; 300us; 1557us; 300us; 1560us; 300us; 1563us; 300us; 1566us; 300us; 1us; 65535us; 302us; 303us; 2us; 65535us; 302us; 312us; 313us; 314us; 2us; 65535us; 302us; 318us; 313us; 318us; 4us; 65535us; 170us; 204us; 171us; 204us; 419us; 423us; 420us; 423us; 6us; 65535us; 121us; 126us; 124us; 126us; 190us; 126us; 264us; 346us; 343us; 346us; 450us; 346us; 2us; 65535us; 265us; 266us; 344us; 345us; 3us; 65535us; 264us; 265us; 343us; 344us; 450us; 451us; 2us; 65535us; 347us; 348us; 355us; 356us; 3us; 65535us; 347us; 365us; 355us; 365us; 357us; 358us; 3us; 65535us; 347us; 368us; 355us; 368us; 357us; 368us; 3us; 65535us; 347us; 372us; 355us; 372us; 357us; 372us; 3us; 65535us; 296us; 297us; 373us; 374us; 488us; 489us; 10us; 65535us; 296us; 387us; 357us; 380us; 359us; 360us; 373us; 387us; 377us; 390us; 379us; 380us; 383us; 384us; 389us; 390us; 392us; 393us; 488us; 387us; 10us; 65535us; 296us; 388us; 357us; 388us; 359us; 388us; 373us; 388us; 377us; 388us; 379us; 388us; 383us; 388us; 389us; 388us; 392us; 388us; 488us; 388us; 1us; 65535us; 411us; 414us; 2us; 65535us; 394us; 395us; 396us; 397us; 3us; 65535us; 394us; 400us; 396us; 400us; 401us; 402us; 3us; 65535us; 423us; 424us; 515us; 516us; 521us; 522us; 2us; 65535us; 419us; 429us; 420us; 429us; 10us; 65535us; 296us; 391us; 357us; 391us; 359us; 391us; 373us; 391us; 377us; 391us; 379us; 391us; 383us; 391us; 389us; 391us; 392us; 391us; 488us; 391us; 3us; 65535us; 335us; 440us; 419us; 438us; 420us; 438us; 2us; 65535us; 423us; 442us; 515us; 518us; 1us; 65535us; 461us; 462us; 44us; 65535us; 404us; 859us; 409us; 859us; 444us; 894us; 749us; 859us; 842us; 859us; 843us; 859us; 847us; 859us; 848us; 859us; 849us; 859us; 850us; 859us; 857us; 859us; 860us; 894us; 862us; 894us; 864us; 894us; 869us; 859us; 873us; 894us; 875us; 894us; 877us; 894us; 885us; 859us; 888us; 859us; 899us; 859us; 907us; 859us; 929us; 859us; 934us; 859us; 935us; 859us; 937us; 859us; 938us; 859us; 939us; 859us; 940us; 859us; 946us; 859us; 948us; 859us; 993us; 859us; 998us; 859us; 1055us; 859us; 1084us; 859us; 1091us; 859us; 1206us; 859us; 1208us; 859us; 1213us; 859us; 1220us; 859us; 1530us; 894us; 1535us; 894us; 1548us; 859us; 1550us; 859us; 10us; 65535us; 49us; 50us; 98us; 99us; 173us; 174us; 340us; 560us; 453us; 454us; 459us; 460us; 634us; 635us; 674us; 675us; 683us; 684us; 713us; 714us; 66us; 65535us; 30us; 484us; 49us; 480us; 63us; 484us; 86us; 484us; 98us; 480us; 168us; 484us; 169us; 484us; 173us; 480us; 225us; 484us; 239us; 484us; 257us; 484us; 340us; 480us; 350us; 484us; 404us; 475us; 409us; 475us; 417us; 484us; 418us; 484us; 444us; 475us; 453us; 480us; 459us; 480us; 526us; 484us; 634us; 480us; 674us; 480us; 683us; 480us; 713us; 480us; 749us; 475us; 842us; 475us; 843us; 475us; 847us; 475us; 848us; 475us; 849us; 475us; 850us; 475us; 857us; 475us; 860us; 475us; 862us; 475us; 864us; 475us; 869us; 475us; 873us; 475us; 875us; 475us; 877us; 475us; 885us; 475us; 888us; 475us; 899us; 475us; 907us; 475us; 929us; 475us; 934us; 475us; 935us; 475us; 937us; 475us; 938us; 475us; 939us; 475us; 940us; 475us; 946us; 475us; 948us; 475us; 993us; 475us; 998us; 475us; 1055us; 475us; 1084us; 475us; 1091us; 475us; 1206us; 475us; 1208us; 475us; 1213us; 475us; 1220us; 475us; 1530us; 475us; 1535us; 475us; 1548us; 475us; 1550us; 475us; 12us; 65535us; 30us; 31us; 63us; 64us; 86us; 87us; 168us; 170us; 169us; 171us; 225us; 226us; 239us; 240us; 257us; 258us; 350us; 351us; 417us; 419us; 418us; 420us; 526us; 527us; 1us; 65535us; 427us; 428us; 4us; 65535us; 360us; 361us; 362us; 363us; 365us; 366us; 679us; 680us; 2us; 65535us; 419us; 437us; 420us; 437us; 2us; 65535us; 353us; 354us; 445us; 446us; 2us; 65535us; 353us; 498us; 445us; 498us; 2us; 65535us; 492us; 493us; 495us; 496us; 3us; 65535us; 492us; 501us; 495us; 501us; 1274us; 1500us; 2us; 65535us; 485us; 486us; 1502us; 1507us; 4us; 65535us; 485us; 509us; 505us; 506us; 511us; 512us; 1502us; 509us; 4us; 65535us; 485us; 510us; 505us; 510us; 511us; 510us; 1502us; 510us; 2us; 65535us; 513us; 515us; 514us; 515us; 5us; 65535us; 127us; 139us; 130us; 139us; 347us; 367us; 355us; 367us; 357us; 367us; 6us; 65535us; 171us; 534us; 420us; 534us; 527us; 534us; 637us; 666us; 657us; 666us; 688us; 666us; 67us; 65535us; 8us; 1647us; 102us; 1647us; 142us; 1647us; 171us; 1647us; 177us; 1647us; 181us; 1647us; 183us; 1647us; 193us; 1647us; 276us; 1647us; 370us; 1647us; 420us; 1647us; 426us; 1647us; 433us; 1647us; 456us; 1647us; 466us; 1647us; 527us; 1647us; 535us; 1647us; 598us; 1647us; 601us; 1647us; 611us; 1647us; 621us; 1647us; 637us; 1647us; 640us; 1647us; 657us; 1647us; 660us; 1647us; 663us; 1647us; 677us; 1647us; 688us; 1647us; 772us; 1647us; 817us; 1647us; 866us; 1647us; 932us; 1647us; 962us; 1647us; 1149us; 1647us; 1151us; 1647us; 1153us; 1647us; 1446us; 1647us; 1449us; 1647us; 1451us; 1647us; 1515us; 1647us; 1557us; 1647us; 1560us; 1647us; 1563us; 1647us; 1566us; 1647us; 1568us; 1647us; 1570us; 1647us; 1574us; 1647us; 1577us; 1647us; 1581us; 1647us; 1584us; 1647us; 1589us; 1647us; 1591us; 1647us; 1593us; 1647us; 1596us; 1647us; 1598us; 1647us; 1612us; 1647us; 1617us; 1647us; 1620us; 1647us; 1631us; 1647us; 1635us; 1647us; 1641us; 1647us; 1652us; 1647us; 1658us; 1647us; 1659us; 1647us; 1682us; 1647us; 1684us; 1647us; 1695us; 1647us; 68us; 65535us; 8us; 548us; 102us; 548us; 142us; 548us; 171us; 548us; 177us; 548us; 181us; 548us; 183us; 548us; 193us; 548us; 276us; 548us; 370us; 548us; 420us; 548us; 426us; 548us; 433us; 548us; 456us; 548us; 466us; 548us; 527us; 548us; 535us; 548us; 546us; 547us; 598us; 548us; 601us; 548us; 611us; 548us; 621us; 548us; 637us; 548us; 640us; 548us; 657us; 548us; 660us; 548us; 663us; 548us; 677us; 548us; 688us; 548us; 772us; 548us; 817us; 548us; 866us; 548us; 932us; 548us; 962us; 548us; 1149us; 548us; 1151us; 548us; 1153us; 548us; 1446us; 548us; 1449us; 548us; 1451us; 548us; 1515us; 548us; 1557us; 548us; 1560us; 548us; 1563us; 548us; 1566us; 548us; 1568us; 548us; 1570us; 548us; 1574us; 548us; 1577us; 548us; 1581us; 548us; 1584us; 548us; 1589us; 548us; 1591us; 548us; 1593us; 548us; 1596us; 548us; 1598us; 548us; 1612us; 548us; 1617us; 548us; 1620us; 548us; 1631us; 548us; 1635us; 548us; 1641us; 548us; 1652us; 548us; 1658us; 548us; 1659us; 548us; 1682us; 548us; 1684us; 548us; 1695us; 548us; 5us; 65535us; 127us; 145us; 130us; 145us; 347us; 373us; 355us; 373us; 357us; 373us; 9us; 65535us; 170us; 181us; 171us; 181us; 419us; 426us; 420us; 426us; 1496us; 1515us; 1498us; 1515us; 1509us; 1515us; 1511us; 1515us; 1513us; 1515us; 1us; 65535us; 340us; 341us; 1us; 65535us; 560us; 562us; 3us; 65535us; 566us; 567us; 578us; 569us; 583us; 570us; 5us; 65535us; 566us; 574us; 571us; 573us; 572us; 573us; 578us; 574us; 583us; 574us; 1us; 65535us; 561us; 564us; 1us; 65535us; 583us; 584us; 4us; 65535us; 100us; 587us; 175us; 587us; 431us; 587us; 859us; 588us; 3us; 65535us; 100us; 101us; 175us; 176us; 431us; 432us; 1us; 65535us; 859us; 860us; 3us; 65535us; 341us; 342us; 569us; 579us; 584us; 585us; 3us; 65535us; 589us; 590us; 1554us; 591us; 1556us; 592us; 4us; 65535us; 589us; 595us; 593us; 594us; 1554us; 595us; 1556us; 595us; 1us; 65535us; 611us; 612us; 3us; 65535us; 171us; 533us; 420us; 533us; 527us; 533us; 5us; 65535us; 171us; 624us; 420us; 624us; 527us; 624us; 626us; 627us; 631us; 632us; 3us; 65535us; 624us; 625us; 627us; 628us; 632us; 633us; 3us; 65535us; 624us; 631us; 627us; 631us; 632us; 631us; 1us; 65535us; 635us; 636us; 3us; 65535us; 171us; 626us; 420us; 626us; 527us; 626us; 3us; 65535us; 171us; 629us; 420us; 629us; 527us; 629us; 4us; 65535us; 637us; 667us; 657us; 667us; 660us; 661us; 688us; 667us; 4us; 65535us; 637us; 659us; 657us; 659us; 660us; 659us; 688us; 659us; 3us; 65535us; 637us; 638us; 657us; 658us; 688us; 689us; 3us; 65535us; 540us; 541us; 549us; 550us; 669us; 670us; 3us; 65535us; 540us; 668us; 549us; 668us; 669us; 668us; 3us; 65535us; 185us; 186us; 188us; 189us; 672us; 673us; 4us; 65535us; 31us; 267us; 226us; 267us; 240us; 267us; 258us; 267us; 6us; 65535us; 31us; 682us; 64us; 682us; 87us; 682us; 226us; 682us; 240us; 682us; 258us; 682us; 6us; 65535us; 31us; 679us; 64us; 207us; 87us; 207us; 226us; 679us; 240us; 679us; 258us; 679us; 1us; 65535us; 684us; 685us; 1us; 65535us; 685us; 686us; 118us; 65535us; 6us; 1004us; 31us; 260us; 105us; 1004us; 107us; 1004us; 226us; 260us; 240us; 260us; 258us; 259us; 262us; 1004us; 335us; 706us; 407us; 1004us; 412us; 1004us; 419us; 706us; 420us; 706us; 447us; 1004us; 463us; 1004us; 697us; 1004us; 703us; 1004us; 752us; 1004us; 756us; 1004us; 766us; 1004us; 950us; 1004us; 955us; 1004us; 969us; 1004us; 971us; 1004us; 974us; 1004us; 977us; 1004us; 994us; 1004us; 999us; 1004us; 1005us; 1004us; 1008us; 1004us; 1011us; 1004us; 1017us; 1004us; 1021us; 1004us; 1025us; 1004us; 1029us; 1004us; 1031us; 1004us; 1036us; 1004us; 1038us; 1004us; 1040us; 1004us; 1042us; 1004us; 1044us; 1004us; 1046us; 1004us; 1057us; 1004us; 1065us; 1004us; 1072us; 1004us; 1078us; 1004us; 1080us; 1004us; 1085us; 1004us; 1089us; 1004us; 1092us; 1004us; 1096us; 1004us; 1099us; 1004us; 1102us; 1004us; 1104us; 1004us; 1109us; 1004us; 1111us; 1004us; 1155us; 1004us; 1157us; 1004us; 1161us; 1004us; 1162us; 1004us; 1163us; 1004us; 1164us; 1004us; 1165us; 1004us; 1166us; 1004us; 1167us; 1004us; 1168us; 1004us; 1169us; 1004us; 1170us; 1004us; 1171us; 1004us; 1173us; 1004us; 1174us; 1004us; 1175us; 1004us; 1176us; 1004us; 1177us; 1004us; 1178us; 1004us; 1179us; 1004us; 1180us; 1004us; 1181us; 1004us; 1203us; 1004us; 1225us; 1004us; 1226us; 1004us; 1230us; 1004us; 1232us; 1004us; 1236us; 1004us; 1238us; 1004us; 1242us; 1004us; 1245us; 1004us; 1247us; 1004us; 1311us; 1004us; 1318us; 1004us; 1325us; 1004us; 1332us; 1004us; 1342us; 1004us; 1345us; 1004us; 1347us; 1004us; 1350us; 1004us; 1362us; 1004us; 1369us; 1004us; 1370us; 1004us; 1376us; 1004us; 1382us; 1004us; 1383us; 1004us; 1384us; 1004us; 1400us; 1004us; 1410us; 1004us; 1423us; 1004us; 1424us; 1004us; 1426us; 1004us; 1428us; 1004us; 1432us; 1004us; 1433us; 1004us; 1460us; 1004us; 1465us; 1004us; 1490us; 1004us; 1532us; 1004us; 1537us; 1004us; 1827us; 1004us; 1831us; 1004us; 7us; 65535us; 31us; 263us; 226us; 263us; 240us; 263us; 258us; 263us; 335us; 707us; 419us; 707us; 420us; 707us; 118us; 65535us; 6us; 977us; 31us; 262us; 105us; 1008us; 107us; 1008us; 226us; 262us; 240us; 262us; 258us; 261us; 262us; 977us; 335us; 708us; 407us; 977us; 412us; 977us; 419us; 708us; 420us; 708us; 447us; 977us; 463us; 977us; 697us; 977us; 703us; 977us; 752us; 977us; 756us; 977us; 766us; 977us; 950us; 977us; 955us; 977us; 969us; 977us; 971us; 977us; 974us; 977us; 977us; 977us; 994us; 977us; 999us; 977us; 1005us; 977us; 1008us; 977us; 1011us; 977us; 1017us; 977us; 1021us; 977us; 1025us; 977us; 1029us; 977us; 1031us; 1008us; 1036us; 1008us; 1038us; 1008us; 1040us; 1008us; 1042us; 1008us; 1044us; 1008us; 1046us; 977us; 1057us; 977us; 1065us; 977us; 1072us; 977us; 1078us; 1008us; 1080us; 1008us; 1085us; 977us; 1089us; 977us; 1092us; 977us; 1096us; 977us; 1099us; 977us; 1102us; 977us; 1104us; 977us; 1109us; 1008us; 1111us; 977us; 1155us; 1008us; 1157us; 1008us; 1161us; 1008us; 1162us; 1008us; 1163us; 1008us; 1164us; 1008us; 1165us; 1008us; 1166us; 1008us; 1167us; 1008us; 1168us; 1008us; 1169us; 1008us; 1170us; 1008us; 1171us; 1008us; 1173us; 1008us; 1174us; 1008us; 1175us; 1008us; 1176us; 1008us; 1177us; 1008us; 1178us; 1008us; 1179us; 1008us; 1180us; 1008us; 1181us; 1008us; 1203us; 977us; 1225us; 1008us; 1226us; 977us; 1230us; 1008us; 1232us; 977us; 1236us; 1008us; 1238us; 977us; 1242us; 1008us; 1245us; 1008us; 1247us; 1008us; 1311us; 977us; 1318us; 1008us; 1325us; 977us; 1332us; 977us; 1342us; 1008us; 1345us; 1008us; 1347us; 1008us; 1350us; 1008us; 1362us; 977us; 1369us; 977us; 1370us; 977us; 1376us; 977us; 1382us; 977us; 1383us; 977us; 1384us; 977us; 1400us; 977us; 1410us; 977us; 1423us; 1008us; 1424us; 1008us; 1426us; 977us; 1428us; 1008us; 1432us; 1008us; 1433us; 1008us; 1460us; 1008us; 1465us; 1008us; 1490us; 1008us; 1532us; 977us; 1537us; 977us; 1827us; 1008us; 1831us; 1008us; 117us; 65535us; 6us; 1014us; 31us; 1014us; 105us; 1014us; 107us; 1014us; 226us; 1014us; 240us; 1014us; 262us; 1014us; 335us; 709us; 407us; 1014us; 412us; 1014us; 419us; 709us; 420us; 709us; 447us; 1014us; 463us; 1014us; 697us; 1014us; 703us; 1014us; 752us; 1014us; 756us; 1014us; 766us; 1014us; 950us; 1014us; 955us; 1014us; 969us; 1014us; 971us; 1014us; 974us; 1014us; 977us; 1014us; 994us; 1014us; 999us; 1014us; 1005us; 1014us; 1008us; 1014us; 1011us; 1014us; 1017us; 1014us; 1021us; 1014us; 1025us; 1014us; 1029us; 1014us; 1031us; 1014us; 1036us; 1014us; 1038us; 1014us; 1040us; 1014us; 1042us; 1014us; 1044us; 1014us; 1046us; 1014us; 1057us; 1014us; 1065us; 1014us; 1072us; 1014us; 1078us; 1014us; 1080us; 1014us; 1085us; 1014us; 1089us; 1014us; 1092us; 1014us; 1096us; 1014us; 1099us; 1014us; 1102us; 1014us; 1104us; 1014us; 1109us; 1014us; 1111us; 1014us; 1155us; 1014us; 1157us; 1014us; 1161us; 1014us; 1162us; 1014us; 1163us; 1014us; 1164us; 1014us; 1165us; 1014us; 1166us; 1014us; 1167us; 1014us; 1168us; 1014us; 1169us; 1014us; 1170us; 1014us; 1171us; 1014us; 1173us; 1014us; 1174us; 1014us; 1175us; 1014us; 1176us; 1014us; 1177us; 1014us; 1178us; 1014us; 1179us; 1014us; 1180us; 1014us; 1181us; 1014us; 1203us; 1014us; 1225us; 1014us; 1226us; 1014us; 1230us; 1014us; 1232us; 1014us; 1236us; 1014us; 1238us; 1014us; 1242us; 1014us; 1245us; 1014us; 1247us; 1014us; 1311us; 1014us; 1318us; 1014us; 1325us; 1014us; 1332us; 1014us; 1342us; 1014us; 1345us; 1014us; 1347us; 1014us; 1350us; 1014us; 1362us; 1014us; 1369us; 1014us; 1370us; 1014us; 1376us; 1014us; 1382us; 1014us; 1383us; 1014us; 1384us; 1014us; 1400us; 1014us; 1410us; 1014us; 1423us; 1014us; 1424us; 1014us; 1426us; 1014us; 1428us; 1014us; 1432us; 1014us; 1433us; 1014us; 1460us; 1014us; 1465us; 1014us; 1490us; 1014us; 1532us; 1014us; 1537us; 1014us; 1827us; 1014us; 1831us; 1014us; 3us; 65535us; 335us; 422us; 419us; 421us; 420us; 421us; 5us; 65535us; 701us; 702us; 704us; 705us; 1000us; 1001us; 1093us; 1094us; 1105us; 1106us; 118us; 65535us; 6us; 696us; 31us; 696us; 105us; 696us; 107us; 696us; 226us; 696us; 240us; 696us; 258us; 696us; 262us; 696us; 335us; 696us; 407us; 696us; 412us; 696us; 419us; 696us; 420us; 696us; 447us; 696us; 463us; 696us; 697us; 696us; 703us; 696us; 752us; 696us; 756us; 696us; 766us; 696us; 950us; 696us; 955us; 696us; 969us; 696us; 971us; 696us; 974us; 696us; 977us; 696us; 994us; 696us; 999us; 696us; 1005us; 696us; 1008us; 696us; 1011us; 696us; 1017us; 696us; 1021us; 696us; 1025us; 696us; 1029us; 696us; 1031us; 696us; 1036us; 696us; 1038us; 696us; 1040us; 696us; 1042us; 696us; 1044us; 696us; 1046us; 696us; 1057us; 696us; 1065us; 696us; 1072us; 696us; 1078us; 696us; 1080us; 696us; 1085us; 696us; 1089us; 696us; 1092us; 696us; 1096us; 696us; 1099us; 696us; 1102us; 696us; 1104us; 696us; 1109us; 696us; 1111us; 696us; 1155us; 696us; 1157us; 696us; 1161us; 696us; 1162us; 696us; 1163us; 696us; 1164us; 696us; 1165us; 696us; 1166us; 696us; 1167us; 696us; 1168us; 696us; 1169us; 696us; 1170us; 696us; 1171us; 696us; 1173us; 696us; 1174us; 696us; 1175us; 696us; 1176us; 696us; 1177us; 696us; 1178us; 696us; 1179us; 696us; 1180us; 696us; 1181us; 696us; 1203us; 696us; 1225us; 696us; 1226us; 696us; 1230us; 696us; 1232us; 696us; 1236us; 696us; 1238us; 696us; 1242us; 696us; 1245us; 696us; 1247us; 696us; 1311us; 696us; 1318us; 696us; 1325us; 696us; 1332us; 696us; 1342us; 696us; 1345us; 696us; 1347us; 696us; 1350us; 696us; 1362us; 696us; 1369us; 696us; 1370us; 696us; 1376us; 696us; 1382us; 696us; 1383us; 696us; 1384us; 696us; 1400us; 696us; 1410us; 696us; 1423us; 696us; 1424us; 696us; 1426us; 696us; 1428us; 696us; 1432us; 696us; 1433us; 696us; 1460us; 696us; 1465us; 696us; 1490us; 696us; 1532us; 696us; 1537us; 696us; 1827us; 696us; 1831us; 696us; 1us; 65535us; 717us; 718us; 1us; 65535us; 717us; 720us; 3us; 65535us; 717us; 721us; 722us; 723us; 724us; 725us; 2us; 65535us; 726us; 727us; 739us; 730us; 1us; 65535us; 712us; 713us; 4us; 65535us; 694us; 695us; 700us; 701us; 1502us; 1503us; 1504us; 1505us; 2us; 65535us; 740us; 741us; 743us; 744us; 5us; 65535us; 694us; 740us; 700us; 740us; 742us; 743us; 1502us; 740us; 1504us; 740us; 2us; 65535us; 514us; 746us; 745us; 746us; 1us; 65535us; 752us; 753us; 2us; 65535us; 752us; 760us; 756us; 757us; 1us; 65535us; 761us; 762us; 1us; 65535us; 762us; 763us; 1us; 65535us; 764us; 765us; 2us; 65535us; 764us; 770us; 768us; 769us; 265us; 65535us; 6us; 808us; 8us; 1666us; 31us; 808us; 102us; 1666us; 105us; 808us; 107us; 808us; 142us; 1666us; 171us; 1666us; 177us; 1666us; 181us; 1666us; 183us; 1666us; 193us; 1666us; 226us; 808us; 240us; 808us; 262us; 808us; 276us; 1666us; 316us; 808us; 320us; 808us; 325us; 808us; 370us; 1666us; 404us; 808us; 407us; 808us; 409us; 808us; 412us; 808us; 420us; 1666us; 426us; 1666us; 433us; 1666us; 444us; 808us; 447us; 808us; 456us; 1666us; 463us; 808us; 466us; 1666us; 491us; 1666us; 494us; 808us; 527us; 1666us; 535us; 1666us; 536us; 1666us; 598us; 1666us; 601us; 1666us; 611us; 1666us; 621us; 1666us; 637us; 1666us; 640us; 1666us; 642us; 808us; 653us; 808us; 657us; 1666us; 660us; 1666us; 663us; 1666us; 677us; 1666us; 688us; 1666us; 697us; 808us; 703us; 808us; 749us; 808us; 752us; 808us; 756us; 808us; 766us; 808us; 772us; 1666us; 817us; 1666us; 842us; 808us; 843us; 808us; 847us; 808us; 848us; 808us; 849us; 808us; 850us; 808us; 857us; 808us; 860us; 808us; 862us; 808us; 864us; 808us; 866us; 1666us; 869us; 808us; 873us; 808us; 875us; 808us; 877us; 808us; 885us; 808us; 888us; 808us; 899us; 808us; 907us; 808us; 929us; 808us; 932us; 1666us; 934us; 808us; 935us; 808us; 937us; 808us; 938us; 808us; 939us; 808us; 940us; 808us; 946us; 808us; 948us; 808us; 950us; 808us; 955us; 808us; 962us; 1666us; 969us; 808us; 971us; 808us; 974us; 808us; 977us; 808us; 993us; 808us; 994us; 808us; 998us; 808us; 999us; 808us; 1005us; 808us; 1008us; 808us; 1011us; 808us; 1017us; 808us; 1021us; 808us; 1025us; 808us; 1029us; 808us; 1031us; 808us; 1036us; 808us; 1038us; 808us; 1040us; 808us; 1042us; 808us; 1044us; 808us; 1046us; 808us; 1055us; 808us; 1057us; 808us; 1065us; 808us; 1072us; 808us; 1078us; 808us; 1080us; 808us; 1084us; 808us; 1085us; 808us; 1089us; 808us; 1091us; 808us; 1092us; 808us; 1096us; 808us; 1099us; 808us; 1102us; 808us; 1104us; 808us; 1109us; 808us; 1111us; 808us; 1149us; 1666us; 1151us; 1666us; 1153us; 1666us; 1155us; 808us; 1157us; 808us; 1161us; 808us; 1162us; 808us; 1163us; 808us; 1164us; 808us; 1165us; 808us; 1166us; 808us; 1167us; 808us; 1168us; 808us; 1169us; 808us; 1170us; 808us; 1171us; 808us; 1173us; 808us; 1174us; 808us; 1175us; 808us; 1176us; 808us; 1177us; 808us; 1178us; 808us; 1179us; 808us; 1180us; 808us; 1181us; 808us; 1203us; 808us; 1206us; 808us; 1208us; 808us; 1213us; 808us; 1220us; 808us; 1225us; 808us; 1226us; 808us; 1230us; 808us; 1232us; 808us; 1236us; 808us; 1238us; 808us; 1242us; 808us; 1245us; 808us; 1247us; 808us; 1249us; 808us; 1250us; 808us; 1252us; 808us; 1253us; 808us; 1255us; 808us; 1256us; 808us; 1258us; 808us; 1259us; 808us; 1261us; 808us; 1262us; 808us; 1264us; 808us; 1265us; 808us; 1267us; 1666us; 1268us; 1666us; 1271us; 808us; 1272us; 808us; 1277us; 808us; 1279us; 808us; 1281us; 808us; 1282us; 808us; 1283us; 808us; 1286us; 808us; 1293us; 808us; 1294us; 808us; 1297us; 808us; 1298us; 808us; 1311us; 808us; 1318us; 808us; 1325us; 808us; 1332us; 808us; 1342us; 808us; 1345us; 808us; 1347us; 808us; 1350us; 808us; 1362us; 808us; 1369us; 808us; 1370us; 808us; 1376us; 808us; 1382us; 808us; 1383us; 808us; 1384us; 808us; 1400us; 808us; 1410us; 808us; 1423us; 808us; 1424us; 808us; 1426us; 808us; 1428us; 808us; 1432us; 808us; 1433us; 808us; 1440us; 808us; 1446us; 1666us; 1449us; 1666us; 1451us; 1666us; 1453us; 1666us; 1455us; 808us; 1460us; 808us; 1465us; 808us; 1490us; 808us; 1515us; 1666us; 1523us; 808us; 1530us; 808us; 1532us; 808us; 1535us; 808us; 1537us; 808us; 1548us; 808us; 1550us; 808us; 1557us; 1666us; 1560us; 1666us; 1563us; 1666us; 1566us; 1666us; 1568us; 1666us; 1570us; 1666us; 1574us; 1666us; 1577us; 1666us; 1581us; 1666us; 1584us; 1666us; 1589us; 1666us; 1591us; 1666us; 1593us; 1666us; 1596us; 1666us; 1598us; 1666us; 1612us; 1666us; 1617us; 1666us; 1620us; 1666us; 1631us; 1666us; 1635us; 1666us; 1641us; 1666us; 1648us; 1666us; 1652us; 1666us; 1658us; 1666us; 1659us; 1666us; 1668us; 808us; 1682us; 1666us; 1684us; 1666us; 1695us; 1666us; 1827us; 808us; 1831us; 808us; 1us; 65535us; 802us; 803us; 4us; 65535us; 806us; 807us; 1605us; 805us; 1639us; 805us; 1710us; 805us; 3us; 65535us; 1605us; 1606us; 1639us; 1640us; 1710us; 1711us; 192us; 65535us; 6us; 1351us; 31us; 1351us; 105us; 1351us; 107us; 1351us; 226us; 1351us; 240us; 1351us; 262us; 1351us; 316us; 1351us; 320us; 1351us; 325us; 1351us; 404us; 895us; 407us; 1351us; 409us; 895us; 412us; 1351us; 444us; 895us; 447us; 1351us; 463us; 1351us; 494us; 1351us; 642us; 643us; 653us; 654us; 697us; 1351us; 703us; 1351us; 749us; 895us; 752us; 1351us; 756us; 1351us; 766us; 1351us; 842us; 895us; 843us; 895us; 847us; 895us; 848us; 895us; 849us; 895us; 850us; 895us; 857us; 895us; 860us; 895us; 862us; 895us; 864us; 895us; 869us; 895us; 873us; 895us; 875us; 895us; 877us; 895us; 885us; 895us; 888us; 895us; 899us; 895us; 907us; 895us; 929us; 895us; 934us; 895us; 935us; 895us; 937us; 895us; 938us; 895us; 939us; 895us; 940us; 895us; 946us; 895us; 948us; 895us; 950us; 1351us; 955us; 1351us; 969us; 1351us; 971us; 1351us; 974us; 1351us; 977us; 1351us; 993us; 895us; 994us; 1351us; 998us; 895us; 999us; 1351us; 1005us; 1351us; 1008us; 1351us; 1011us; 1351us; 1017us; 1351us; 1021us; 1351us; 1025us; 1351us; 1029us; 1351us; 1031us; 1351us; 1036us; 1351us; 1038us; 1351us; 1040us; 1351us; 1042us; 1351us; 1044us; 1351us; 1046us; 1351us; 1055us; 895us; 1057us; 1351us; 1065us; 1351us; 1072us; 1351us; 1078us; 1351us; 1080us; 1351us; 1084us; 895us; 1085us; 1351us; 1089us; 1351us; 1091us; 895us; 1092us; 1351us; 1096us; 1351us; 1099us; 1351us; 1102us; 1351us; 1104us; 1351us; 1109us; 1351us; 1111us; 1351us; 1155us; 1351us; 1157us; 1351us; 1161us; 1351us; 1162us; 1351us; 1163us; 1351us; 1164us; 1351us; 1165us; 1351us; 1166us; 1351us; 1167us; 1351us; 1168us; 1351us; 1169us; 1351us; 1170us; 1351us; 1171us; 1351us; 1173us; 1351us; 1174us; 1351us; 1175us; 1351us; 1176us; 1351us; 1177us; 1351us; 1178us; 1351us; 1179us; 1351us; 1180us; 1351us; 1181us; 1351us; 1203us; 1351us; 1206us; 895us; 1208us; 895us; 1213us; 895us; 1220us; 895us; 1225us; 1351us; 1226us; 1351us; 1230us; 1351us; 1232us; 1351us; 1236us; 1351us; 1238us; 1351us; 1242us; 1351us; 1245us; 1351us; 1247us; 1351us; 1249us; 1351us; 1250us; 1351us; 1252us; 1351us; 1253us; 1351us; 1255us; 1351us; 1256us; 1351us; 1258us; 1351us; 1259us; 1351us; 1261us; 1351us; 1262us; 1351us; 1264us; 1351us; 1265us; 1351us; 1271us; 1351us; 1272us; 1351us; 1277us; 1351us; 1279us; 1351us; 1281us; 1351us; 1282us; 1351us; 1283us; 1351us; 1286us; 1351us; 1293us; 1351us; 1294us; 1351us; 1297us; 1351us; 1298us; 1351us; 1311us; 1351us; 1318us; 1351us; 1325us; 1351us; 1332us; 1351us; 1342us; 1351us; 1345us; 1351us; 1347us; 1351us; 1350us; 1351us; 1362us; 1351us; 1369us; 1351us; 1370us; 1351us; 1376us; 1351us; 1382us; 1351us; 1383us; 1351us; 1384us; 1351us; 1400us; 1351us; 1410us; 1351us; 1423us; 1351us; 1424us; 1351us; 1426us; 1351us; 1428us; 1351us; 1432us; 1351us; 1433us; 1351us; 1440us; 1351us; 1455us; 1351us; 1460us; 1351us; 1465us; 1351us; 1490us; 1351us; 1523us; 1351us; 1530us; 895us; 1532us; 1351us; 1535us; 895us; 1537us; 1351us; 1548us; 895us; 1550us; 895us; 1668us; 1351us; 1827us; 1351us; 1831us; 1351us; 3us; 65535us; 404us; 405us; 409us; 410us; 749us; 750us; 3us; 65535us; 819us; 815us; 820us; 816us; 822us; 816us; 2us; 65535us; 820us; 821us; 822us; 823us; 1us; 65535us; 352us; 353us; 13us; 65535us; 404us; 811us; 409us; 811us; 749us; 811us; 842us; 830us; 843us; 831us; 847us; 832us; 848us; 833us; 849us; 834us; 850us; 835us; 993us; 836us; 998us; 837us; 1084us; 838us; 1091us; 839us; 13us; 65535us; 404us; 844us; 409us; 844us; 749us; 844us; 842us; 844us; 843us; 844us; 847us; 844us; 848us; 844us; 849us; 844us; 850us; 844us; 993us; 844us; 998us; 844us; 1084us; 844us; 1091us; 844us; 13us; 65535us; 404us; 845us; 409us; 845us; 749us; 845us; 842us; 845us; 843us; 845us; 847us; 845us; 848us; 845us; 849us; 845us; 850us; 845us; 993us; 845us; 998us; 845us; 1084us; 845us; 1091us; 845us; 2us; 65535us; 853us; 854us; 869us; 870us; 2us; 65535us; 853us; 851us; 869us; 851us; 35us; 65535us; 404us; 846us; 409us; 846us; 749us; 846us; 842us; 846us; 843us; 846us; 847us; 846us; 848us; 846us; 849us; 846us; 850us; 846us; 857us; 936us; 869us; 936us; 885us; 936us; 888us; 936us; 899us; 936us; 907us; 936us; 929us; 936us; 934us; 936us; 935us; 936us; 937us; 936us; 938us; 936us; 939us; 936us; 940us; 936us; 946us; 936us; 948us; 936us; 993us; 846us; 998us; 846us; 1055us; 936us; 1084us; 846us; 1091us; 846us; 1206us; 936us; 1208us; 936us; 1213us; 936us; 1220us; 936us; 1548us; 936us; 1550us; 936us; 3us; 65535us; 860us; 861us; 862us; 863us; 864us; 865us; 8us; 65535us; 860us; 872us; 862us; 872us; 864us; 872us; 873us; 874us; 875us; 876us; 877us; 878us; 1530us; 1531us; 1535us; 1536us; 44us; 65535us; 404us; 868us; 409us; 868us; 444us; 445us; 749us; 868us; 842us; 868us; 843us; 868us; 847us; 868us; 848us; 868us; 849us; 868us; 850us; 868us; 857us; 868us; 860us; 873us; 862us; 873us; 864us; 873us; 869us; 868us; 873us; 873us; 875us; 873us; 877us; 873us; 885us; 868us; 888us; 868us; 899us; 868us; 907us; 868us; 929us; 868us; 934us; 868us; 935us; 868us; 937us; 868us; 938us; 868us; 939us; 868us; 940us; 868us; 946us; 868us; 948us; 868us; 993us; 868us; 998us; 868us; 1055us; 868us; 1084us; 868us; 1091us; 868us; 1206us; 868us; 1208us; 868us; 1213us; 868us; 1220us; 868us; 1530us; 873us; 1535us; 873us; 1548us; 868us; 1550us; 868us; 2us; 65535us; 869us; 900us; 899us; 900us; 22us; 65535us; 857us; 858us; 869us; 914us; 885us; 924us; 888us; 924us; 899us; 914us; 907us; 921us; 929us; 915us; 934us; 916us; 935us; 917us; 937us; 918us; 938us; 919us; 939us; 920us; 940us; 922us; 946us; 923us; 948us; 924us; 1055us; 925us; 1206us; 926us; 1208us; 926us; 1213us; 926us; 1220us; 926us; 1548us; 926us; 1550us; 926us; 22us; 65535us; 857us; 930us; 869us; 930us; 885us; 930us; 888us; 930us; 899us; 930us; 907us; 908us; 929us; 930us; 934us; 930us; 935us; 930us; 937us; 930us; 938us; 930us; 939us; 930us; 940us; 930us; 946us; 930us; 948us; 930us; 1055us; 930us; 1206us; 930us; 1208us; 930us; 1213us; 930us; 1220us; 930us; 1548us; 930us; 1550us; 930us; 22us; 65535us; 857us; 931us; 869us; 931us; 885us; 931us; 888us; 931us; 899us; 931us; 907us; 931us; 929us; 931us; 934us; 931us; 935us; 931us; 937us; 931us; 938us; 931us; 939us; 931us; 940us; 931us; 946us; 931us; 948us; 931us; 1055us; 931us; 1206us; 931us; 1208us; 931us; 1213us; 931us; 1220us; 931us; 1548us; 931us; 1550us; 931us; 2us; 65535us; 882us; 883us; 943us; 944us; 2us; 65535us; 882us; 941us; 943us; 941us; 3us; 65535us; 885us; 886us; 888us; 889us; 948us; 949us; 25us; 65535us; 262us; 1009us; 407us; 408us; 412us; 413us; 447us; 448us; 463us; 464us; 697us; 698us; 703us; 704us; 766us; 767us; 977us; 1009us; 994us; 995us; 999us; 1000us; 1008us; 1009us; 1011us; 1012us; 1029us; 1030us; 1046us; 1047us; 1057us; 1058us; 1065us; 1066us; 1072us; 1073us; 1085us; 1086us; 1089us; 1090us; 1092us; 1093us; 1096us; 1097us; 1102us; 1103us; 1104us; 1105us; 1532us; 1533us; 6us; 65535us; 1040us; 1041us; 1042us; 1043us; 1157us; 1158us; 1460us; 1461us; 1465us; 1466us; 1490us; 1491us; 5us; 65535us; 1025us; 1026us; 1111us; 1112us; 1226us; 1227us; 1426us; 1427us; 1537us; 1538us; 52us; 65535us; 6us; 964us; 262us; 954us; 407us; 954us; 412us; 954us; 447us; 954us; 463us; 954us; 697us; 954us; 703us; 954us; 752us; 761us; 756us; 761us; 766us; 954us; 950us; 951us; 955us; 956us; 974us; 975us; 977us; 954us; 994us; 954us; 999us; 954us; 1005us; 1006us; 1008us; 954us; 1011us; 954us; 1017us; 1018us; 1021us; 1022us; 1025us; 959us; 1029us; 954us; 1046us; 954us; 1057us; 954us; 1065us; 954us; 1072us; 954us; 1085us; 954us; 1089us; 954us; 1092us; 954us; 1096us; 954us; 1099us; 1100us; 1102us; 954us; 1104us; 954us; 1111us; 959us; 1203us; 1204us; 1226us; 959us; 1232us; 1233us; 1238us; 1239us; 1325us; 1330us; 1332us; 1333us; 1362us; 1363us; 1369us; 1371us; 1370us; 1371us; 1382us; 1402us; 1383us; 1402us; 1384us; 1402us; 1400us; 1401us; 1426us; 959us; 1532us; 954us; 1537us; 959us; 1us; 65535us; 6us; 7us; 57us; 65535us; 6us; 961us; 262us; 961us; 407us; 961us; 412us; 961us; 447us; 961us; 463us; 961us; 697us; 961us; 703us; 961us; 752us; 961us; 756us; 961us; 766us; 961us; 950us; 961us; 955us; 961us; 969us; 970us; 971us; 972us; 974us; 961us; 977us; 961us; 994us; 961us; 999us; 961us; 1005us; 961us; 1008us; 961us; 1011us; 961us; 1017us; 961us; 1021us; 961us; 1025us; 961us; 1029us; 961us; 1046us; 961us; 1057us; 961us; 1065us; 961us; 1072us; 961us; 1085us; 961us; 1089us; 961us; 1092us; 961us; 1096us; 961us; 1099us; 961us; 1102us; 961us; 1104us; 961us; 1111us; 961us; 1203us; 961us; 1226us; 961us; 1232us; 961us; 1238us; 961us; 1311us; 1421us; 1325us; 961us; 1332us; 961us; 1362us; 961us; 1369us; 961us; 1370us; 961us; 1376us; 1421us; 1382us; 961us; 1383us; 961us; 1384us; 961us; 1400us; 961us; 1410us; 1421us; 1426us; 961us; 1532us; 961us; 1537us; 961us; 103us; 65535us; 70us; 73us; 146us; 148us; 152us; 154us; 156us; 158us; 160us; 162us; 231us; 234us; 271us; 272us; 282us; 284us; 285us; 287us; 292us; 294us; 302us; 1872us; 304us; 1872us; 361us; 364us; 374us; 376us; 380us; 381us; 384us; 385us; 491us; 1872us; 506us; 508us; 530us; 531us; 541us; 543us; 550us; 552us; 637us; 639us; 688us; 690us; 701us; 711us; 704us; 711us; 751us; 755us; 757us; 759us; 822us; 829us; 823us; 826us; 869us; 905us; 899us; 905us; 900us; 902us; 907us; 913us; 908us; 910us; 925us; 1077us; 951us; 953us; 1000us; 711us; 1018us; 1020us; 1022us; 1024us; 1026us; 1028us; 1031us; 1035us; 1032us; 1034us; 1044us; 1053us; 1045us; 1052us; 1047us; 1049us; 1055us; 1872us; 1056us; 1872us; 1057us; 1872us; 1058us; 1872us; 1064us; 1071us; 1065us; 1070us; 1066us; 1068us; 1078us; 1082us; 1080us; 1083us; 1093us; 711us; 1105us; 711us; 1137us; 1244us; 1160us; 1320us; 1171us; 1172us; 1209us; 1211us; 1233us; 1235us; 1239us; 1241us; 1245us; 1872us; 1247us; 1872us; 1299us; 1324us; 1302us; 1324us; 1311us; 1316us; 1312us; 1314us; 1332us; 1340us; 1333us; 1335us; 1336us; 1338us; 1363us; 1365us; 1369us; 1375us; 1370us; 1375us; 1371us; 1373us; 1376us; 1381us; 1377us; 1379us; 1382us; 1395us; 1383us; 1395us; 1384us; 1395us; 1386us; 1866us; 1410us; 1415us; 1411us; 1413us; 1423us; 1425us; 1428us; 1872us; 1489us; 1872us; 1490us; 1872us; 1523us; 1528us; 1524us; 1526us; 1537us; 1543us; 1538us; 1540us; 1607us; 1664us; 1634us; 1687us; 1653us; 1656us; 1654us; 1656us; 1658us; 1665us; 1659us; 1663us; 1660us; 1662us; 1677us; 1872us; 1682us; 1693us; 1684us; 1872us; 1689us; 1872us; 1731us; 1872us; 4us; 65535us; 996us; 997us; 1002us; 1003us; 1088us; 1089us; 1095us; 1096us; 114us; 65535us; 6us; 966us; 31us; 32us; 105us; 106us; 107us; 108us; 226us; 241us; 240us; 241us; 262us; 966us; 407us; 966us; 412us; 966us; 447us; 966us; 463us; 966us; 697us; 966us; 703us; 966us; 752us; 966us; 756us; 966us; 766us; 966us; 950us; 966us; 955us; 966us; 969us; 966us; 971us; 966us; 974us; 966us; 977us; 966us; 994us; 966us; 999us; 966us; 1005us; 966us; 1008us; 966us; 1011us; 966us; 1017us; 966us; 1021us; 966us; 1025us; 966us; 1029us; 966us; 1031us; 1032us; 1036us; 1037us; 1038us; 1039us; 1040us; 958us; 1042us; 958us; 1044us; 1045us; 1046us; 966us; 1057us; 966us; 1065us; 966us; 1072us; 966us; 1078us; 1079us; 1080us; 1081us; 1085us; 966us; 1089us; 966us; 1092us; 966us; 1096us; 966us; 1099us; 966us; 1102us; 966us; 1104us; 966us; 1109us; 1110us; 1111us; 966us; 1155us; 1113us; 1157us; 958us; 1161us; 1114us; 1162us; 1115us; 1163us; 1116us; 1164us; 1117us; 1165us; 1118us; 1166us; 1119us; 1167us; 1120us; 1168us; 1121us; 1169us; 1122us; 1170us; 1123us; 1171us; 1124us; 1173us; 1125us; 1174us; 1126us; 1175us; 1127us; 1176us; 1128us; 1177us; 1129us; 1178us; 1130us; 1179us; 1131us; 1180us; 1132us; 1181us; 1133us; 1203us; 966us; 1225us; 1134us; 1226us; 966us; 1230us; 1135us; 1232us; 966us; 1236us; 1136us; 1238us; 966us; 1242us; 1137us; 1245us; 1138us; 1247us; 1140us; 1311us; 968us; 1318us; 1139us; 1325us; 966us; 1332us; 967us; 1342us; 1141us; 1345us; 1141us; 1347us; 1141us; 1350us; 1142us; 1362us; 966us; 1369us; 966us; 1370us; 966us; 1376us; 968us; 1382us; 966us; 1383us; 966us; 1384us; 966us; 1400us; 966us; 1410us; 968us; 1423us; 1145us; 1424us; 1146us; 1426us; 966us; 1428us; 1143us; 1432us; 1144us; 1433us; 1147us; 1460us; 958us; 1465us; 958us; 1490us; 958us; 1532us; 966us; 1537us; 966us; 1827us; 1148us; 1831us; 1148us; 1us; 65535us; 1307us; 1308us; 3us; 65535us; 1018us; 1019us; 1022us; 1023us; 1026us; 1027us; 4us; 65535us; 1206us; 1207us; 1208us; 1209us; 1548us; 1549us; 1550us; 1551us; 6us; 65535us; 1206us; 1218us; 1208us; 1218us; 1213us; 1218us; 1220us; 1218us; 1548us; 1218us; 1550us; 1218us; 6us; 65535us; 1206us; 1212us; 1208us; 1212us; 1213us; 1214us; 1220us; 1221us; 1548us; 1212us; 1550us; 1212us; 1us; 65535us; 926us; 1217us; 1us; 65535us; 1218us; 1219us; 2us; 65535us; 1032us; 1033us; 1137us; 1243us; 2us; 65535us; 1032us; 1228us; 1137us; 1228us; 1us; 65535us; 1228us; 1229us; 114us; 65535us; 6us; 1159us; 31us; 1159us; 105us; 1159us; 107us; 1159us; 226us; 1159us; 240us; 1159us; 262us; 1159us; 407us; 1159us; 412us; 1159us; 447us; 1159us; 463us; 1159us; 697us; 1159us; 703us; 1159us; 752us; 1159us; 756us; 1159us; 766us; 1159us; 950us; 1159us; 955us; 1159us; 969us; 1159us; 971us; 1159us; 974us; 1159us; 977us; 1159us; 994us; 1159us; 999us; 1159us; 1005us; 1159us; 1008us; 1159us; 1011us; 1159us; 1017us; 1159us; 1021us; 1159us; 1025us; 1159us; 1029us; 1159us; 1031us; 1159us; 1036us; 1159us; 1038us; 1159us; 1040us; 1159us; 1042us; 1159us; 1044us; 1159us; 1046us; 1159us; 1057us; 1159us; 1065us; 1159us; 1072us; 1159us; 1078us; 1159us; 1080us; 1159us; 1085us; 1159us; 1089us; 1159us; 1092us; 1159us; 1096us; 1159us; 1099us; 1159us; 1102us; 1159us; 1104us; 1159us; 1109us; 1159us; 1111us; 1159us; 1155us; 1159us; 1157us; 1159us; 1161us; 1159us; 1162us; 1159us; 1163us; 1159us; 1164us; 1159us; 1165us; 1159us; 1166us; 1159us; 1167us; 1159us; 1168us; 1159us; 1169us; 1159us; 1170us; 1159us; 1171us; 1159us; 1173us; 1159us; 1174us; 1159us; 1175us; 1159us; 1176us; 1159us; 1177us; 1159us; 1178us; 1159us; 1179us; 1159us; 1180us; 1159us; 1181us; 1159us; 1203us; 1159us; 1225us; 1159us; 1226us; 1159us; 1230us; 1159us; 1232us; 1159us; 1236us; 1159us; 1238us; 1159us; 1242us; 1159us; 1245us; 1159us; 1247us; 1159us; 1311us; 1159us; 1318us; 1160us; 1325us; 1159us; 1332us; 1159us; 1342us; 1159us; 1345us; 1159us; 1347us; 1159us; 1350us; 1159us; 1362us; 1159us; 1369us; 1159us; 1370us; 1159us; 1376us; 1159us; 1382us; 1159us; 1383us; 1159us; 1384us; 1159us; 1400us; 1159us; 1410us; 1159us; 1423us; 1159us; 1424us; 1159us; 1426us; 1159us; 1428us; 1159us; 1432us; 1159us; 1433us; 1159us; 1460us; 1159us; 1465us; 1159us; 1490us; 1159us; 1532us; 1159us; 1537us; 1159us; 1827us; 1159us; 1831us; 1159us; 128us; 65535us; 6us; 1156us; 31us; 1156us; 105us; 1156us; 107us; 1156us; 226us; 1156us; 240us; 1156us; 262us; 1156us; 407us; 1156us; 412us; 1156us; 447us; 1156us; 463us; 1156us; 697us; 1156us; 703us; 1156us; 752us; 1156us; 756us; 1156us; 766us; 1156us; 950us; 1156us; 955us; 1156us; 969us; 1156us; 971us; 1156us; 974us; 1156us; 977us; 1156us; 994us; 1156us; 999us; 1156us; 1005us; 1156us; 1008us; 1156us; 1011us; 1156us; 1017us; 1156us; 1021us; 1156us; 1025us; 1156us; 1029us; 1156us; 1031us; 1156us; 1036us; 1156us; 1038us; 1156us; 1040us; 1156us; 1042us; 1156us; 1044us; 1156us; 1046us; 1156us; 1057us; 1156us; 1065us; 1156us; 1072us; 1156us; 1078us; 1156us; 1080us; 1156us; 1085us; 1156us; 1089us; 1156us; 1092us; 1156us; 1096us; 1156us; 1099us; 1156us; 1102us; 1156us; 1104us; 1156us; 1109us; 1156us; 1111us; 1156us; 1155us; 1156us; 1157us; 1156us; 1161us; 1156us; 1162us; 1156us; 1163us; 1156us; 1164us; 1156us; 1165us; 1156us; 1166us; 1156us; 1167us; 1156us; 1168us; 1156us; 1169us; 1156us; 1170us; 1156us; 1171us; 1156us; 1173us; 1156us; 1174us; 1156us; 1175us; 1156us; 1176us; 1156us; 1177us; 1156us; 1178us; 1156us; 1179us; 1156us; 1180us; 1156us; 1181us; 1156us; 1203us; 1156us; 1225us; 1156us; 1226us; 1156us; 1230us; 1156us; 1232us; 1156us; 1236us; 1156us; 1238us; 1156us; 1242us; 1156us; 1245us; 1156us; 1247us; 1156us; 1249us; 1251us; 1250us; 1251us; 1252us; 1254us; 1253us; 1254us; 1255us; 1257us; 1256us; 1257us; 1258us; 1260us; 1259us; 1260us; 1261us; 1263us; 1262us; 1263us; 1264us; 1266us; 1265us; 1266us; 1277us; 1278us; 1279us; 1280us; 1311us; 1156us; 1318us; 1156us; 1325us; 1156us; 1332us; 1156us; 1342us; 1156us; 1345us; 1156us; 1347us; 1156us; 1350us; 1156us; 1362us; 1156us; 1369us; 1156us; 1370us; 1156us; 1376us; 1156us; 1382us; 1156us; 1383us; 1156us; 1384us; 1156us; 1400us; 1156us; 1410us; 1156us; 1423us; 1156us; 1424us; 1156us; 1426us; 1156us; 1428us; 1156us; 1432us; 1156us; 1433us; 1156us; 1460us; 1156us; 1465us; 1156us; 1490us; 1156us; 1532us; 1156us; 1537us; 1156us; 1827us; 1156us; 1831us; 1156us; 129us; 65535us; 6us; 1281us; 31us; 1281us; 105us; 1281us; 107us; 1281us; 226us; 1281us; 240us; 1281us; 262us; 1281us; 407us; 1281us; 412us; 1281us; 447us; 1281us; 463us; 1281us; 697us; 1281us; 703us; 1281us; 752us; 1281us; 756us; 1281us; 766us; 1281us; 950us; 1281us; 955us; 1281us; 969us; 1281us; 971us; 1281us; 974us; 1281us; 977us; 1281us; 994us; 1281us; 999us; 1281us; 1005us; 1281us; 1008us; 1281us; 1011us; 1281us; 1017us; 1281us; 1021us; 1281us; 1025us; 1281us; 1029us; 1281us; 1031us; 1281us; 1036us; 1281us; 1038us; 1281us; 1040us; 1281us; 1042us; 1281us; 1044us; 1281us; 1046us; 1281us; 1057us; 1281us; 1065us; 1281us; 1072us; 1281us; 1078us; 1281us; 1080us; 1281us; 1085us; 1281us; 1089us; 1281us; 1092us; 1281us; 1096us; 1281us; 1099us; 1281us; 1102us; 1281us; 1104us; 1281us; 1109us; 1281us; 1111us; 1281us; 1155us; 1281us; 1157us; 1281us; 1161us; 1281us; 1162us; 1281us; 1163us; 1281us; 1164us; 1281us; 1165us; 1281us; 1166us; 1281us; 1167us; 1281us; 1168us; 1281us; 1169us; 1281us; 1170us; 1281us; 1171us; 1281us; 1173us; 1281us; 1174us; 1281us; 1175us; 1281us; 1176us; 1281us; 1177us; 1281us; 1178us; 1281us; 1179us; 1281us; 1180us; 1281us; 1181us; 1281us; 1203us; 1281us; 1225us; 1281us; 1226us; 1281us; 1230us; 1281us; 1232us; 1281us; 1236us; 1281us; 1238us; 1281us; 1242us; 1281us; 1245us; 1281us; 1247us; 1281us; 1249us; 1281us; 1250us; 1281us; 1252us; 1281us; 1253us; 1281us; 1255us; 1281us; 1256us; 1281us; 1258us; 1281us; 1259us; 1281us; 1261us; 1281us; 1262us; 1281us; 1264us; 1281us; 1265us; 1281us; 1277us; 1281us; 1279us; 1281us; 1311us; 1281us; 1318us; 1281us; 1325us; 1281us; 1332us; 1281us; 1342us; 1281us; 1345us; 1281us; 1347us; 1281us; 1350us; 1281us; 1362us; 1281us; 1369us; 1281us; 1370us; 1281us; 1376us; 1281us; 1382us; 1281us; 1383us; 1281us; 1384us; 1281us; 1400us; 1281us; 1410us; 1282us; 1423us; 1281us; 1424us; 1281us; 1426us; 1281us; 1428us; 1281us; 1432us; 1281us; 1433us; 1281us; 1460us; 1281us; 1465us; 1281us; 1490us; 1281us; 1523us; 1283us; 1532us; 1281us; 1537us; 1281us; 1827us; 1281us; 1831us; 1281us; 4us; 65535us; 1281us; 1284us; 1282us; 1284us; 1283us; 1284us; 1440us; 1443us; 139us; 65535us; 6us; 1285us; 31us; 1285us; 105us; 1285us; 107us; 1285us; 226us; 1285us; 240us; 1285us; 262us; 1285us; 407us; 1285us; 412us; 1285us; 447us; 1285us; 463us; 1285us; 697us; 1285us; 703us; 1285us; 752us; 1285us; 756us; 1285us; 766us; 1285us; 950us; 1285us; 955us; 1285us; 969us; 1285us; 971us; 1285us; 974us; 1285us; 977us; 1285us; 994us; 1285us; 999us; 1285us; 1005us; 1285us; 1008us; 1285us; 1011us; 1285us; 1017us; 1285us; 1021us; 1285us; 1025us; 1285us; 1029us; 1285us; 1031us; 1285us; 1036us; 1285us; 1038us; 1285us; 1040us; 1285us; 1042us; 1285us; 1044us; 1285us; 1046us; 1285us; 1057us; 1285us; 1065us; 1285us; 1072us; 1285us; 1078us; 1285us; 1080us; 1285us; 1085us; 1285us; 1089us; 1285us; 1092us; 1285us; 1096us; 1285us; 1099us; 1285us; 1102us; 1285us; 1104us; 1285us; 1109us; 1285us; 1111us; 1285us; 1155us; 1285us; 1157us; 1285us; 1161us; 1285us; 1162us; 1285us; 1163us; 1285us; 1164us; 1285us; 1165us; 1285us; 1166us; 1285us; 1167us; 1285us; 1168us; 1285us; 1169us; 1285us; 1170us; 1285us; 1171us; 1285us; 1173us; 1285us; 1174us; 1285us; 1175us; 1285us; 1176us; 1285us; 1177us; 1285us; 1178us; 1285us; 1179us; 1285us; 1180us; 1285us; 1181us; 1285us; 1203us; 1285us; 1225us; 1285us; 1226us; 1285us; 1230us; 1285us; 1232us; 1285us; 1236us; 1285us; 1238us; 1285us; 1242us; 1285us; 1245us; 1285us; 1247us; 1285us; 1249us; 1285us; 1250us; 1285us; 1252us; 1285us; 1253us; 1285us; 1255us; 1285us; 1256us; 1285us; 1258us; 1285us; 1259us; 1285us; 1261us; 1285us; 1262us; 1285us; 1264us; 1285us; 1265us; 1285us; 1277us; 1285us; 1279us; 1285us; 1281us; 1288us; 1282us; 1288us; 1283us; 1288us; 1286us; 1287us; 1293us; 1289us; 1294us; 1290us; 1297us; 1291us; 1298us; 1291us; 1311us; 1285us; 1318us; 1285us; 1325us; 1285us; 1332us; 1285us; 1342us; 1285us; 1345us; 1285us; 1347us; 1285us; 1350us; 1285us; 1362us; 1285us; 1369us; 1285us; 1370us; 1285us; 1376us; 1285us; 1382us; 1285us; 1383us; 1285us; 1384us; 1285us; 1400us; 1285us; 1410us; 1285us; 1423us; 1285us; 1424us; 1285us; 1426us; 1285us; 1428us; 1285us; 1432us; 1285us; 1433us; 1285us; 1440us; 1288us; 1460us; 1285us; 1465us; 1285us; 1490us; 1285us; 1523us; 1285us; 1532us; 1285us; 1537us; 1285us; 1668us; 1292us; 1827us; 1285us; 1831us; 1285us; 2us; 65535us; 1299us; 1300us; 1302us; 1303us; 2us; 65535us; 1332us; 1336us; 1342us; 1343us; 2us; 65535us; 1332us; 1341us; 1342us; 1341us; 4us; 65535us; 1332us; 1344us; 1342us; 1344us; 1345us; 1346us; 1347us; 1348us; 146us; 65535us; 6us; 1321us; 31us; 1321us; 105us; 1321us; 107us; 1321us; 226us; 1321us; 240us; 1321us; 262us; 1321us; 316us; 1444us; 320us; 1444us; 325us; 1444us; 407us; 1321us; 412us; 1321us; 447us; 1321us; 463us; 1321us; 494us; 495us; 697us; 1321us; 703us; 1321us; 752us; 1321us; 756us; 1321us; 766us; 1321us; 950us; 1321us; 955us; 1321us; 969us; 1321us; 971us; 1321us; 974us; 1321us; 977us; 1321us; 994us; 1321us; 999us; 1321us; 1005us; 1321us; 1008us; 1321us; 1011us; 1321us; 1017us; 1321us; 1021us; 1321us; 1025us; 1321us; 1029us; 1321us; 1031us; 1321us; 1036us; 1321us; 1038us; 1321us; 1040us; 1321us; 1042us; 1321us; 1044us; 1321us; 1046us; 1321us; 1057us; 1321us; 1065us; 1321us; 1072us; 1321us; 1078us; 1321us; 1080us; 1321us; 1085us; 1321us; 1089us; 1321us; 1092us; 1321us; 1096us; 1321us; 1099us; 1321us; 1102us; 1321us; 1104us; 1321us; 1109us; 1321us; 1111us; 1321us; 1155us; 1321us; 1157us; 1321us; 1161us; 1321us; 1162us; 1321us; 1163us; 1321us; 1164us; 1321us; 1165us; 1321us; 1166us; 1321us; 1167us; 1321us; 1168us; 1321us; 1169us; 1321us; 1170us; 1321us; 1171us; 1321us; 1173us; 1321us; 1174us; 1321us; 1175us; 1321us; 1176us; 1321us; 1177us; 1321us; 1178us; 1321us; 1179us; 1321us; 1180us; 1321us; 1181us; 1321us; 1203us; 1321us; 1225us; 1321us; 1226us; 1321us; 1230us; 1321us; 1232us; 1321us; 1236us; 1321us; 1238us; 1321us; 1242us; 1321us; 1245us; 1321us; 1247us; 1321us; 1249us; 1321us; 1250us; 1321us; 1252us; 1321us; 1253us; 1321us; 1255us; 1321us; 1256us; 1321us; 1258us; 1321us; 1259us; 1321us; 1261us; 1321us; 1262us; 1321us; 1264us; 1321us; 1265us; 1321us; 1271us; 1273us; 1272us; 1274us; 1277us; 1321us; 1279us; 1321us; 1281us; 1321us; 1282us; 1321us; 1283us; 1321us; 1286us; 1321us; 1293us; 1321us; 1294us; 1321us; 1297us; 1321us; 1298us; 1321us; 1311us; 1321us; 1318us; 1321us; 1325us; 1321us; 1332us; 1321us; 1342us; 1321us; 1345us; 1321us; 1347us; 1321us; 1350us; 1321us; 1362us; 1321us; 1369us; 1321us; 1370us; 1321us; 1376us; 1321us; 1382us; 1321us; 1383us; 1321us; 1384us; 1321us; 1400us; 1321us; 1410us; 1321us; 1423us; 1321us; 1424us; 1321us; 1426us; 1321us; 1428us; 1321us; 1432us; 1321us; 1433us; 1321us; 1440us; 1321us; 1455us; 1444us; 1460us; 1321us; 1465us; 1321us; 1490us; 1321us; 1523us; 1321us; 1532us; 1321us; 1537us; 1321us; 1668us; 1321us; 1827us; 1321us; 1831us; 1321us; 146us; 65535us; 6us; 1361us; 31us; 1361us; 105us; 1361us; 107us; 1361us; 226us; 1361us; 240us; 1361us; 262us; 1361us; 316us; 1361us; 320us; 1361us; 325us; 1361us; 407us; 1361us; 412us; 1361us; 447us; 1361us; 463us; 1361us; 494us; 1361us; 697us; 1361us; 703us; 1361us; 752us; 1361us; 756us; 1361us; 766us; 1361us; 950us; 1361us; 955us; 1361us; 969us; 1361us; 971us; 1361us; 974us; 1361us; 977us; 1361us; 994us; 1361us; 999us; 1361us; 1005us; 1361us; 1008us; 1361us; 1011us; 1361us; 1017us; 1361us; 1021us; 1361us; 1025us; 1361us; 1029us; 1361us; 1031us; 1361us; 1036us; 1361us; 1038us; 1361us; 1040us; 1361us; 1042us; 1361us; 1044us; 1361us; 1046us; 1361us; 1057us; 1361us; 1065us; 1361us; 1072us; 1361us; 1078us; 1361us; 1080us; 1361us; 1085us; 1361us; 1089us; 1361us; 1092us; 1361us; 1096us; 1361us; 1099us; 1361us; 1102us; 1361us; 1104us; 1361us; 1109us; 1361us; 1111us; 1361us; 1155us; 1361us; 1157us; 1361us; 1161us; 1361us; 1162us; 1361us; 1163us; 1361us; 1164us; 1361us; 1165us; 1361us; 1166us; 1361us; 1167us; 1361us; 1168us; 1361us; 1169us; 1361us; 1170us; 1361us; 1171us; 1361us; 1173us; 1361us; 1174us; 1361us; 1175us; 1361us; 1176us; 1361us; 1177us; 1361us; 1178us; 1361us; 1179us; 1361us; 1180us; 1361us; 1181us; 1361us; 1203us; 1361us; 1225us; 1361us; 1226us; 1361us; 1230us; 1361us; 1232us; 1361us; 1236us; 1361us; 1238us; 1361us; 1242us; 1361us; 1245us; 1361us; 1247us; 1361us; 1249us; 1361us; 1250us; 1361us; 1252us; 1361us; 1253us; 1361us; 1255us; 1361us; 1256us; 1361us; 1258us; 1361us; 1259us; 1361us; 1261us; 1361us; 1262us; 1361us; 1264us; 1361us; 1265us; 1361us; 1271us; 1361us; 1272us; 1361us; 1277us; 1361us; 1279us; 1361us; 1281us; 1361us; 1282us; 1361us; 1283us; 1361us; 1286us; 1361us; 1293us; 1361us; 1294us; 1361us; 1297us; 1361us; 1298us; 1361us; 1311us; 1361us; 1318us; 1361us; 1325us; 1361us; 1332us; 1361us; 1342us; 1361us; 1345us; 1361us; 1347us; 1361us; 1350us; 1361us; 1362us; 1361us; 1369us; 1361us; 1370us; 1361us; 1376us; 1361us; 1382us; 1361us; 1383us; 1361us; 1384us; 1361us; 1400us; 1361us; 1410us; 1361us; 1423us; 1361us; 1424us; 1361us; 1426us; 1361us; 1428us; 1361us; 1432us; 1361us; 1433us; 1361us; 1440us; 1361us; 1455us; 1361us; 1460us; 1361us; 1465us; 1361us; 1490us; 1361us; 1523us; 1361us; 1532us; 1361us; 1537us; 1361us; 1668us; 1361us; 1827us; 1361us; 1831us; 1361us; 190us; 65535us; 6us; 1359us; 31us; 1359us; 105us; 1359us; 107us; 1359us; 226us; 1359us; 240us; 1359us; 262us; 1359us; 316us; 1359us; 320us; 1359us; 325us; 1359us; 404us; 879us; 407us; 1359us; 409us; 879us; 412us; 1359us; 444us; 879us; 447us; 1359us; 463us; 1359us; 494us; 1359us; 697us; 1359us; 703us; 1359us; 749us; 879us; 752us; 1359us; 756us; 1359us; 766us; 1359us; 842us; 879us; 843us; 879us; 847us; 879us; 848us; 879us; 849us; 879us; 850us; 879us; 857us; 879us; 860us; 879us; 862us; 879us; 864us; 879us; 869us; 879us; 873us; 879us; 875us; 879us; 877us; 879us; 885us; 879us; 888us; 879us; 899us; 879us; 907us; 879us; 929us; 879us; 934us; 879us; 935us; 879us; 937us; 879us; 938us; 879us; 939us; 879us; 940us; 879us; 946us; 879us; 948us; 879us; 950us; 1359us; 955us; 1359us; 969us; 1359us; 971us; 1359us; 974us; 1359us; 977us; 1359us; 993us; 879us; 994us; 1359us; 998us; 879us; 999us; 1359us; 1005us; 1359us; 1008us; 1359us; 1011us; 1359us; 1017us; 1359us; 1021us; 1359us; 1025us; 1359us; 1029us; 1359us; 1031us; 1359us; 1036us; 1359us; 1038us; 1359us; 1040us; 1359us; 1042us; 1359us; 1044us; 1359us; 1046us; 1359us; 1055us; 879us; 1057us; 1359us; 1065us; 1359us; 1072us; 1359us; 1078us; 1359us; 1080us; 1359us; 1084us; 879us; 1085us; 1359us; 1089us; 1359us; 1091us; 879us; 1092us; 1359us; 1096us; 1359us; 1099us; 1359us; 1102us; 1359us; 1104us; 1359us; 1109us; 1359us; 1111us; 1359us; 1155us; 1359us; 1157us; 1359us; 1161us; 1359us; 1162us; 1359us; 1163us; 1359us; 1164us; 1359us; 1165us; 1359us; 1166us; 1359us; 1167us; 1359us; 1168us; 1359us; 1169us; 1359us; 1170us; 1359us; 1171us; 1359us; 1173us; 1359us; 1174us; 1359us; 1175us; 1359us; 1176us; 1359us; 1177us; 1359us; 1178us; 1359us; 1179us; 1359us; 1180us; 1359us; 1181us; 1359us; 1203us; 1359us; 1206us; 879us; 1208us; 879us; 1213us; 879us; 1220us; 879us; 1225us; 1359us; 1226us; 1359us; 1230us; 1359us; 1232us; 1359us; 1236us; 1359us; 1238us; 1359us; 1242us; 1359us; 1245us; 1359us; 1247us; 1359us; 1249us; 1359us; 1250us; 1359us; 1252us; 1359us; 1253us; 1359us; 1255us; 1359us; 1256us; 1359us; 1258us; 1359us; 1259us; 1359us; 1261us; 1359us; 1262us; 1359us; 1264us; 1359us; 1265us; 1359us; 1271us; 1359us; 1272us; 1359us; 1277us; 1359us; 1279us; 1359us; 1281us; 1359us; 1282us; 1359us; 1283us; 1359us; 1286us; 1359us; 1293us; 1359us; 1294us; 1359us; 1297us; 1359us; 1298us; 1359us; 1311us; 1359us; 1318us; 1359us; 1325us; 1359us; 1332us; 1359us; 1342us; 1359us; 1345us; 1359us; 1347us; 1359us; 1350us; 1359us; 1362us; 1359us; 1369us; 1359us; 1370us; 1359us; 1376us; 1359us; 1382us; 1359us; 1383us; 1359us; 1384us; 1359us; 1400us; 1359us; 1410us; 1359us; 1423us; 1359us; 1424us; 1359us; 1426us; 1359us; 1428us; 1359us; 1432us; 1359us; 1433us; 1359us; 1440us; 1359us; 1455us; 1359us; 1460us; 1359us; 1465us; 1359us; 1490us; 1359us; 1523us; 1359us; 1530us; 879us; 1532us; 1359us; 1535us; 879us; 1537us; 1359us; 1548us; 879us; 1550us; 879us; 1668us; 1359us; 1827us; 1359us; 1831us; 1359us; 146us; 65535us; 6us; 1360us; 31us; 1360us; 105us; 1360us; 107us; 1360us; 226us; 1360us; 240us; 1360us; 262us; 1360us; 316us; 1360us; 320us; 1360us; 325us; 1360us; 407us; 1360us; 412us; 1360us; 447us; 1360us; 463us; 1360us; 494us; 1360us; 697us; 1360us; 703us; 1360us; 752us; 1360us; 756us; 1360us; 766us; 1360us; 950us; 1360us; 955us; 1360us; 969us; 1360us; 971us; 1360us; 974us; 1360us; 977us; 1360us; 994us; 1360us; 999us; 1360us; 1005us; 1360us; 1008us; 1360us; 1011us; 1360us; 1017us; 1360us; 1021us; 1360us; 1025us; 1360us; 1029us; 1360us; 1031us; 1360us; 1036us; 1360us; 1038us; 1360us; 1040us; 1360us; 1042us; 1360us; 1044us; 1360us; 1046us; 1360us; 1057us; 1360us; 1065us; 1360us; 1072us; 1360us; 1078us; 1360us; 1080us; 1360us; 1085us; 1360us; 1089us; 1360us; 1092us; 1360us; 1096us; 1360us; 1099us; 1360us; 1102us; 1360us; 1104us; 1360us; 1109us; 1360us; 1111us; 1360us; 1155us; 1360us; 1157us; 1360us; 1161us; 1360us; 1162us; 1360us; 1163us; 1360us; 1164us; 1360us; 1165us; 1360us; 1166us; 1360us; 1167us; 1360us; 1168us; 1360us; 1169us; 1360us; 1170us; 1360us; 1171us; 1360us; 1173us; 1360us; 1174us; 1360us; 1175us; 1360us; 1176us; 1360us; 1177us; 1360us; 1178us; 1360us; 1179us; 1360us; 1180us; 1360us; 1181us; 1360us; 1203us; 1360us; 1225us; 1360us; 1226us; 1360us; 1230us; 1360us; 1232us; 1360us; 1236us; 1360us; 1238us; 1360us; 1242us; 1360us; 1245us; 1360us; 1247us; 1360us; 1249us; 1360us; 1250us; 1360us; 1252us; 1360us; 1253us; 1360us; 1255us; 1360us; 1256us; 1360us; 1258us; 1360us; 1259us; 1360us; 1261us; 1360us; 1262us; 1360us; 1264us; 1360us; 1265us; 1360us; 1271us; 1360us; 1272us; 1360us; 1277us; 1360us; 1279us; 1360us; 1281us; 1360us; 1282us; 1360us; 1283us; 1360us; 1286us; 1360us; 1293us; 1360us; 1294us; 1360us; 1297us; 1360us; 1298us; 1360us; 1311us; 1360us; 1318us; 1360us; 1325us; 1360us; 1332us; 1360us; 1342us; 1360us; 1345us; 1360us; 1347us; 1360us; 1350us; 1360us; 1362us; 1360us; 1369us; 1360us; 1370us; 1360us; 1376us; 1360us; 1382us; 1360us; 1383us; 1360us; 1384us; 1360us; 1400us; 1360us; 1410us; 1360us; 1423us; 1360us; 1424us; 1360us; 1426us; 1360us; 1428us; 1360us; 1432us; 1360us; 1433us; 1360us; 1440us; 1360us; 1455us; 1360us; 1460us; 1360us; 1465us; 1360us; 1490us; 1360us; 1523us; 1360us; 1532us; 1360us; 1537us; 1360us; 1668us; 1360us; 1827us; 1360us; 1831us; 1360us; 146us; 65535us; 6us; 1352us; 31us; 1352us; 105us; 1352us; 107us; 1352us; 226us; 1352us; 240us; 1352us; 262us; 1352us; 316us; 1352us; 320us; 1352us; 325us; 1352us; 407us; 1352us; 412us; 1352us; 447us; 1352us; 463us; 1352us; 494us; 1352us; 697us; 1352us; 703us; 1352us; 752us; 1352us; 756us; 1352us; 766us; 1352us; 950us; 1352us; 955us; 1352us; 969us; 1352us; 971us; 1352us; 974us; 1352us; 977us; 1352us; 994us; 1352us; 999us; 1352us; 1005us; 1352us; 1008us; 1352us; 1011us; 1352us; 1017us; 1352us; 1021us; 1352us; 1025us; 1352us; 1029us; 1352us; 1031us; 1352us; 1036us; 1352us; 1038us; 1352us; 1040us; 1352us; 1042us; 1352us; 1044us; 1352us; 1046us; 1352us; 1057us; 1352us; 1065us; 1352us; 1072us; 1352us; 1078us; 1352us; 1080us; 1352us; 1085us; 1352us; 1089us; 1352us; 1092us; 1352us; 1096us; 1352us; 1099us; 1352us; 1102us; 1352us; 1104us; 1352us; 1109us; 1352us; 1111us; 1352us; 1155us; 1352us; 1157us; 1352us; 1161us; 1352us; 1162us; 1352us; 1163us; 1352us; 1164us; 1352us; 1165us; 1352us; 1166us; 1352us; 1167us; 1352us; 1168us; 1352us; 1169us; 1352us; 1170us; 1352us; 1171us; 1352us; 1173us; 1352us; 1174us; 1352us; 1175us; 1352us; 1176us; 1352us; 1177us; 1352us; 1178us; 1352us; 1179us; 1352us; 1180us; 1352us; 1181us; 1352us; 1203us; 1352us; 1225us; 1352us; 1226us; 1352us; 1230us; 1352us; 1232us; 1352us; 1236us; 1352us; 1238us; 1352us; 1242us; 1352us; 1245us; 1352us; 1247us; 1352us; 1249us; 1352us; 1250us; 1352us; 1252us; 1352us; 1253us; 1352us; 1255us; 1352us; 1256us; 1352us; 1258us; 1352us; 1259us; 1352us; 1261us; 1352us; 1262us; 1352us; 1264us; 1352us; 1265us; 1352us; 1271us; 1352us; 1272us; 1352us; 1277us; 1352us; 1279us; 1352us; 1281us; 1352us; 1282us; 1352us; 1283us; 1352us; 1286us; 1352us; 1293us; 1352us; 1294us; 1352us; 1297us; 1352us; 1298us; 1352us; 1311us; 1352us; 1318us; 1352us; 1325us; 1352us; 1332us; 1352us; 1342us; 1352us; 1345us; 1352us; 1347us; 1352us; 1350us; 1352us; 1362us; 1352us; 1369us; 1352us; 1370us; 1352us; 1376us; 1352us; 1382us; 1352us; 1383us; 1352us; 1384us; 1352us; 1400us; 1352us; 1410us; 1352us; 1423us; 1352us; 1424us; 1352us; 1426us; 1352us; 1428us; 1352us; 1432us; 1352us; 1433us; 1352us; 1440us; 1352us; 1455us; 1352us; 1460us; 1352us; 1465us; 1352us; 1490us; 1352us; 1523us; 1352us; 1532us; 1352us; 1537us; 1352us; 1668us; 1352us; 1827us; 1352us; 1831us; 1352us; 3us; 65535us; 1382us; 1386us; 1383us; 1386us; 1384us; 1386us; 3us; 65535us; 1382us; 1396us; 1383us; 1396us; 1384us; 1396us; 1us; 65535us; 1383us; 1406us; 146us; 65535us; 6us; 1353us; 31us; 1353us; 105us; 1353us; 107us; 1353us; 226us; 1353us; 240us; 1353us; 262us; 1353us; 316us; 1353us; 320us; 1353us; 325us; 1353us; 407us; 1353us; 412us; 1353us; 447us; 1353us; 463us; 1353us; 494us; 1353us; 697us; 1353us; 703us; 1353us; 752us; 1353us; 756us; 1353us; 766us; 1353us; 950us; 1353us; 955us; 1353us; 969us; 1353us; 971us; 1353us; 974us; 1353us; 977us; 1353us; 994us; 1353us; 999us; 1353us; 1005us; 1353us; 1008us; 1353us; 1011us; 1353us; 1017us; 1353us; 1021us; 1353us; 1025us; 1353us; 1029us; 1353us; 1031us; 1353us; 1036us; 1353us; 1038us; 1353us; 1040us; 1353us; 1042us; 1353us; 1044us; 1353us; 1046us; 1353us; 1057us; 1353us; 1065us; 1353us; 1072us; 1353us; 1078us; 1353us; 1080us; 1353us; 1085us; 1353us; 1089us; 1353us; 1092us; 1353us; 1096us; 1353us; 1099us; 1353us; 1102us; 1353us; 1104us; 1353us; 1109us; 1353us; 1111us; 1353us; 1155us; 1353us; 1157us; 1353us; 1161us; 1353us; 1162us; 1353us; 1163us; 1353us; 1164us; 1353us; 1165us; 1353us; 1166us; 1353us; 1167us; 1353us; 1168us; 1353us; 1169us; 1353us; 1170us; 1353us; 1171us; 1353us; 1173us; 1353us; 1174us; 1353us; 1175us; 1353us; 1176us; 1353us; 1177us; 1353us; 1178us; 1353us; 1179us; 1353us; 1180us; 1353us; 1181us; 1353us; 1203us; 1353us; 1225us; 1353us; 1226us; 1353us; 1230us; 1353us; 1232us; 1353us; 1236us; 1353us; 1238us; 1353us; 1242us; 1353us; 1245us; 1353us; 1247us; 1353us; 1249us; 1353us; 1250us; 1353us; 1252us; 1353us; 1253us; 1353us; 1255us; 1353us; 1256us; 1353us; 1258us; 1353us; 1259us; 1353us; 1261us; 1353us; 1262us; 1353us; 1264us; 1353us; 1265us; 1353us; 1271us; 1353us; 1272us; 1353us; 1277us; 1353us; 1279us; 1353us; 1281us; 1353us; 1282us; 1353us; 1283us; 1353us; 1286us; 1353us; 1293us; 1353us; 1294us; 1353us; 1297us; 1353us; 1298us; 1353us; 1311us; 1353us; 1318us; 1353us; 1325us; 1353us; 1332us; 1353us; 1342us; 1353us; 1345us; 1353us; 1347us; 1353us; 1350us; 1353us; 1362us; 1353us; 1369us; 1353us; 1370us; 1353us; 1376us; 1353us; 1382us; 1353us; 1383us; 1353us; 1384us; 1353us; 1400us; 1353us; 1410us; 1353us; 1423us; 1353us; 1424us; 1353us; 1426us; 1353us; 1428us; 1353us; 1432us; 1353us; 1433us; 1353us; 1440us; 1353us; 1455us; 1353us; 1460us; 1353us; 1465us; 1353us; 1490us; 1353us; 1523us; 1353us; 1532us; 1353us; 1537us; 1353us; 1668us; 1353us; 1827us; 1353us; 1831us; 1353us; 1us; 65535us; 1410us; 1411us; 2us; 65535us; 1311us; 1312us; 1376us; 1377us; 3us; 65535us; 1311us; 1420us; 1376us; 1420us; 1410us; 1419us; 5us; 65535us; 1311us; 1422us; 1376us; 1422us; 1410us; 1422us; 1428us; 1429us; 1432us; 1434us; 1us; 65535us; 1107us; 1108us; 1us; 65535us; 1055us; 1056us; 1us; 65535us; 1055us; 1064us; 1us; 65535us; 1144us; 1433us; 3us; 65535us; 1382us; 1403us; 1383us; 1403us; 1384us; 1403us; 1us; 65535us; 1439us; 1440us; 4us; 65535us; 316us; 317us; 320us; 321us; 325us; 326us; 1455us; 1456us; 1us; 65535us; 1438us; 1439us; 1us; 65535us; 1440us; 1441us; 1us; 65535us; 1410us; 1417us; 2us; 65535us; 1410us; 1459us; 1523us; 1524us; 6us; 65535us; 1457us; 1458us; 1462us; 1463us; 1467us; 1468us; 1471us; 1472us; 1473us; 1474us; 1477us; 1478us; 6us; 65535us; 1457us; 1481us; 1462us; 1481us; 1467us; 1481us; 1471us; 1481us; 1473us; 1480us; 1477us; 1481us; 3us; 65535us; 1469us; 1489us; 1473us; 1489us; 1481us; 1489us; 5us; 65535us; 1456us; 1457us; 1461us; 1462us; 1466us; 1467us; 1470us; 1471us; 1476us; 1477us; 3us; 65535us; 1469us; 1470us; 1473us; 1476us; 1481us; 1488us; 1us; 65535us; 1410us; 1418us; 1us; 65535us; 1410us; 1494us; 1us; 65535us; 1516us; 1517us; 2us; 65535us; 1494us; 1495us; 1516us; 1501us; 1us; 65535us; 1498us; 1499us; 4us; 65535us; 1496us; 1497us; 1509us; 1510us; 1511us; 1512us; 1513us; 1514us; 5us; 65535us; 1496us; 1511us; 1498us; 1509us; 1509us; 1511us; 1511us; 1511us; 1513us; 1511us; 146us; 65535us; 6us; 1354us; 31us; 1354us; 105us; 1354us; 107us; 1354us; 226us; 1354us; 240us; 1354us; 262us; 1354us; 316us; 1354us; 320us; 1354us; 325us; 1354us; 407us; 1354us; 412us; 1354us; 447us; 1354us; 463us; 1354us; 494us; 1354us; 697us; 1354us; 703us; 1354us; 752us; 1354us; 756us; 1354us; 766us; 1354us; 950us; 1354us; 955us; 1354us; 969us; 1354us; 971us; 1354us; 974us; 1354us; 977us; 1354us; 994us; 1354us; 999us; 1354us; 1005us; 1354us; 1008us; 1354us; 1011us; 1354us; 1017us; 1354us; 1021us; 1354us; 1025us; 1354us; 1029us; 1354us; 1031us; 1354us; 1036us; 1354us; 1038us; 1354us; 1040us; 1354us; 1042us; 1354us; 1044us; 1354us; 1046us; 1354us; 1057us; 1354us; 1065us; 1354us; 1072us; 1354us; 1078us; 1354us; 1080us; 1354us; 1085us; 1354us; 1089us; 1354us; 1092us; 1354us; 1096us; 1354us; 1099us; 1354us; 1102us; 1354us; 1104us; 1354us; 1109us; 1354us; 1111us; 1354us; 1155us; 1354us; 1157us; 1354us; 1161us; 1354us; 1162us; 1354us; 1163us; 1354us; 1164us; 1354us; 1165us; 1354us; 1166us; 1354us; 1167us; 1354us; 1168us; 1354us; 1169us; 1354us; 1170us; 1354us; 1171us; 1354us; 1173us; 1354us; 1174us; 1354us; 1175us; 1354us; 1176us; 1354us; 1177us; 1354us; 1178us; 1354us; 1179us; 1354us; 1180us; 1354us; 1181us; 1354us; 1203us; 1354us; 1225us; 1354us; 1226us; 1354us; 1230us; 1354us; 1232us; 1354us; 1236us; 1354us; 1238us; 1354us; 1242us; 1354us; 1245us; 1354us; 1247us; 1354us; 1249us; 1354us; 1250us; 1354us; 1252us; 1354us; 1253us; 1354us; 1255us; 1354us; 1256us; 1354us; 1258us; 1354us; 1259us; 1354us; 1261us; 1354us; 1262us; 1354us; 1264us; 1354us; 1265us; 1354us; 1271us; 1354us; 1272us; 1354us; 1277us; 1354us; 1279us; 1354us; 1281us; 1354us; 1282us; 1354us; 1283us; 1354us; 1286us; 1354us; 1293us; 1354us; 1294us; 1354us; 1297us; 1354us; 1298us; 1354us; 1311us; 1354us; 1318us; 1354us; 1325us; 1354us; 1332us; 1354us; 1342us; 1354us; 1345us; 1354us; 1347us; 1354us; 1350us; 1354us; 1362us; 1354us; 1369us; 1354us; 1370us; 1354us; 1376us; 1354us; 1382us; 1354us; 1383us; 1354us; 1384us; 1354us; 1400us; 1354us; 1410us; 1354us; 1423us; 1354us; 1424us; 1354us; 1426us; 1354us; 1428us; 1354us; 1432us; 1354us; 1433us; 1354us; 1440us; 1354us; 1455us; 1354us; 1460us; 1354us; 1465us; 1354us; 1490us; 1354us; 1523us; 1354us; 1532us; 1354us; 1537us; 1354us; 1668us; 1354us; 1827us; 1354us; 1831us; 1354us; 148us; 65535us; 6us; 1522us; 31us; 1522us; 105us; 1522us; 107us; 1522us; 226us; 1522us; 240us; 1522us; 262us; 1522us; 316us; 1522us; 320us; 1522us; 325us; 1522us; 407us; 1522us; 412us; 1522us; 447us; 1522us; 463us; 1522us; 494us; 1522us; 697us; 1522us; 703us; 1522us; 752us; 1522us; 756us; 1522us; 766us; 1522us; 950us; 1522us; 955us; 1522us; 969us; 1522us; 971us; 1522us; 974us; 1522us; 977us; 1522us; 994us; 1522us; 999us; 1522us; 1005us; 1522us; 1008us; 1522us; 1011us; 1522us; 1017us; 1522us; 1021us; 1522us; 1025us; 1522us; 1029us; 1522us; 1031us; 1522us; 1036us; 1522us; 1038us; 1522us; 1040us; 1522us; 1042us; 1522us; 1044us; 1522us; 1046us; 1522us; 1057us; 1522us; 1065us; 1522us; 1072us; 1522us; 1078us; 1522us; 1080us; 1522us; 1085us; 1522us; 1089us; 1522us; 1092us; 1522us; 1096us; 1522us; 1099us; 1522us; 1102us; 1522us; 1104us; 1522us; 1109us; 1522us; 1111us; 1522us; 1155us; 1522us; 1157us; 1522us; 1161us; 1522us; 1162us; 1522us; 1163us; 1522us; 1164us; 1522us; 1165us; 1522us; 1166us; 1522us; 1167us; 1522us; 1168us; 1522us; 1169us; 1522us; 1170us; 1522us; 1171us; 1522us; 1173us; 1522us; 1174us; 1522us; 1175us; 1522us; 1176us; 1522us; 1177us; 1522us; 1178us; 1522us; 1179us; 1522us; 1180us; 1522us; 1181us; 1522us; 1203us; 1522us; 1225us; 1522us; 1226us; 1522us; 1230us; 1522us; 1232us; 1522us; 1236us; 1522us; 1238us; 1522us; 1242us; 1522us; 1245us; 1522us; 1247us; 1522us; 1249us; 1522us; 1250us; 1522us; 1252us; 1522us; 1253us; 1522us; 1255us; 1522us; 1256us; 1522us; 1258us; 1522us; 1259us; 1522us; 1261us; 1522us; 1262us; 1522us; 1264us; 1522us; 1265us; 1522us; 1271us; 1522us; 1272us; 1522us; 1277us; 1522us; 1279us; 1522us; 1281us; 1522us; 1282us; 1522us; 1283us; 1522us; 1286us; 1522us; 1293us; 1522us; 1294us; 1522us; 1297us; 1522us; 1298us; 1522us; 1311us; 1522us; 1317us; 1521us; 1318us; 1522us; 1325us; 1522us; 1332us; 1522us; 1342us; 1522us; 1345us; 1522us; 1347us; 1522us; 1350us; 1522us; 1362us; 1522us; 1369us; 1522us; 1370us; 1522us; 1376us; 1522us; 1382us; 1522us; 1383us; 1522us; 1384us; 1522us; 1400us; 1522us; 1410us; 1522us; 1423us; 1522us; 1424us; 1522us; 1426us; 1522us; 1428us; 1522us; 1432us; 1522us; 1433us; 1522us; 1440us; 1522us; 1455us; 1522us; 1460us; 1522us; 1465us; 1522us; 1490us; 1522us; 1520us; 1521us; 1523us; 1522us; 1532us; 1522us; 1537us; 1522us; 1668us; 1522us; 1827us; 1522us; 1831us; 1522us; 114us; 65535us; 6us; 1016us; 31us; 1016us; 105us; 1016us; 107us; 1016us; 226us; 1016us; 240us; 1016us; 262us; 1016us; 407us; 1016us; 412us; 1016us; 447us; 1016us; 463us; 1016us; 697us; 1016us; 703us; 1016us; 752us; 1016us; 756us; 1016us; 766us; 1016us; 950us; 1016us; 955us; 1016us; 969us; 1016us; 971us; 1016us; 974us; 1016us; 977us; 1016us; 994us; 1016us; 999us; 1016us; 1005us; 1016us; 1008us; 1016us; 1011us; 1016us; 1017us; 1016us; 1021us; 1016us; 1025us; 1016us; 1029us; 1016us; 1031us; 1016us; 1036us; 1016us; 1038us; 1016us; 1040us; 1016us; 1042us; 1016us; 1044us; 1016us; 1046us; 1016us; 1057us; 1016us; 1065us; 1016us; 1072us; 1016us; 1078us; 1016us; 1080us; 1016us; 1085us; 1016us; 1089us; 1016us; 1092us; 1016us; 1096us; 1016us; 1099us; 1016us; 1102us; 1016us; 1104us; 1016us; 1109us; 1016us; 1111us; 1016us; 1155us; 1016us; 1157us; 1016us; 1161us; 1016us; 1162us; 1016us; 1163us; 1016us; 1164us; 1016us; 1165us; 1016us; 1166us; 1016us; 1167us; 1016us; 1168us; 1016us; 1169us; 1016us; 1170us; 1016us; 1171us; 1016us; 1173us; 1016us; 1174us; 1016us; 1175us; 1016us; 1176us; 1016us; 1177us; 1016us; 1178us; 1016us; 1179us; 1016us; 1180us; 1016us; 1181us; 1016us; 1203us; 1016us; 1225us; 1016us; 1226us; 1016us; 1230us; 1016us; 1232us; 1016us; 1236us; 1016us; 1238us; 1016us; 1242us; 1016us; 1245us; 1016us; 1247us; 1016us; 1311us; 1016us; 1318us; 1016us; 1325us; 1016us; 1332us; 1016us; 1342us; 1016us; 1345us; 1016us; 1347us; 1016us; 1350us; 1016us; 1362us; 1016us; 1369us; 1016us; 1370us; 1016us; 1376us; 1016us; 1382us; 1016us; 1383us; 1016us; 1384us; 1016us; 1400us; 1016us; 1410us; 1016us; 1423us; 1016us; 1424us; 1016us; 1426us; 1016us; 1428us; 1016us; 1432us; 1016us; 1433us; 1016us; 1460us; 1016us; 1465us; 1016us; 1490us; 1016us; 1532us; 1016us; 1537us; 1016us; 1827us; 1016us; 1831us; 1016us; 114us; 65535us; 6us; 1015us; 31us; 1015us; 105us; 1015us; 107us; 1015us; 226us; 1015us; 240us; 1015us; 262us; 1015us; 407us; 1015us; 412us; 1015us; 447us; 1015us; 463us; 1015us; 697us; 1015us; 703us; 1015us; 752us; 1015us; 756us; 1015us; 766us; 1015us; 950us; 1015us; 955us; 1015us; 969us; 1015us; 971us; 1015us; 974us; 1015us; 977us; 1015us; 994us; 1015us; 999us; 1015us; 1005us; 1015us; 1008us; 1015us; 1011us; 1015us; 1017us; 1015us; 1021us; 1015us; 1025us; 1015us; 1029us; 1015us; 1031us; 1015us; 1036us; 1015us; 1038us; 1015us; 1040us; 1015us; 1042us; 1015us; 1044us; 1015us; 1046us; 1015us; 1057us; 1015us; 1065us; 1015us; 1072us; 1015us; 1078us; 1015us; 1080us; 1015us; 1085us; 1015us; 1089us; 1015us; 1092us; 1015us; 1096us; 1015us; 1099us; 1015us; 1102us; 1015us; 1104us; 1015us; 1109us; 1015us; 1111us; 1015us; 1155us; 1015us; 1157us; 1015us; 1161us; 1015us; 1162us; 1015us; 1163us; 1015us; 1164us; 1015us; 1165us; 1015us; 1166us; 1015us; 1167us; 1015us; 1168us; 1015us; 1169us; 1015us; 1170us; 1015us; 1171us; 1015us; 1173us; 1015us; 1174us; 1015us; 1175us; 1015us; 1176us; 1015us; 1177us; 1015us; 1178us; 1015us; 1179us; 1015us; 1180us; 1015us; 1181us; 1015us; 1203us; 1015us; 1225us; 1015us; 1226us; 1015us; 1230us; 1015us; 1232us; 1015us; 1236us; 1015us; 1238us; 1015us; 1242us; 1015us; 1245us; 1015us; 1247us; 1015us; 1311us; 1015us; 1318us; 1015us; 1325us; 1015us; 1332us; 1015us; 1342us; 1015us; 1345us; 1015us; 1347us; 1015us; 1350us; 1015us; 1362us; 1015us; 1369us; 1015us; 1370us; 1015us; 1376us; 1015us; 1382us; 1015us; 1383us; 1015us; 1384us; 1015us; 1400us; 1015us; 1410us; 1015us; 1423us; 1015us; 1424us; 1015us; 1426us; 1015us; 1428us; 1015us; 1432us; 1015us; 1433us; 1015us; 1460us; 1015us; 1465us; 1015us; 1490us; 1015us; 1532us; 1015us; 1537us; 1015us; 1827us; 1015us; 1831us; 1015us; 3us; 65535us; 817us; 818us; 932us; 933us; 962us; 963us; 5us; 65535us; 102us; 103us; 177us; 178us; 193us; 194us; 433us; 434us; 1557us; 1558us; 3us; 65535us; 405us; 406us; 410us; 411us; 750us; 751us; 9us; 65535us; 102us; 1555us; 142us; 143us; 177us; 1555us; 193us; 1555us; 370us; 371us; 433us; 1555us; 640us; 641us; 1557us; 1555us; 1560us; 1561us; 9us; 65535us; 102us; 1559us; 142us; 1559us; 177us; 1559us; 193us; 1559us; 370us; 1559us; 433us; 1559us; 640us; 1559us; 1557us; 1559us; 1560us; 1559us; 2us; 65535us; 1563us; 1564us; 1566us; 1567us; 11us; 65535us; 102us; 1562us; 142us; 1562us; 177us; 1562us; 193us; 1562us; 370us; 1562us; 433us; 1562us; 640us; 1562us; 1557us; 1562us; 1560us; 1562us; 1563us; 1565us; 1566us; 1565us; 31us; 65535us; 8us; 1586us; 171us; 532us; 420us; 532us; 456us; 457us; 466us; 467us; 527us; 532us; 535us; 1654us; 598us; 599us; 601us; 602us; 677us; 678us; 772us; 773us; 817us; 1553us; 932us; 1553us; 962us; 1553us; 1149us; 1150us; 1151us; 1152us; 1153us; 1154us; 1446us; 1447us; 1449us; 1450us; 1451us; 1654us; 1584us; 1585us; 1612us; 1654us; 1617us; 1618us; 1620us; 1621us; 1631us; 1694us; 1635us; 1694us; 1641us; 1654us; 1652us; 1653us; 1682us; 1694us; 1684us; 1694us; 1695us; 1696us; 1us; 65535us; 8us; 9us; 31us; 65535us; 8us; 1583us; 171us; 1583us; 420us; 1583us; 456us; 1583us; 466us; 1583us; 527us; 1583us; 535us; 1583us; 598us; 1583us; 601us; 1583us; 677us; 1583us; 772us; 1583us; 817us; 1583us; 932us; 1583us; 962us; 1583us; 1149us; 1583us; 1151us; 1583us; 1153us; 1583us; 1446us; 1583us; 1449us; 1583us; 1451us; 1583us; 1584us; 1583us; 1612us; 1583us; 1617us; 1583us; 1620us; 1583us; 1631us; 1583us; 1635us; 1583us; 1641us; 1583us; 1652us; 1583us; 1682us; 1583us; 1684us; 1583us; 1695us; 1583us; 6us; 65535us; 1589us; 1590us; 1591us; 1592us; 1593us; 1594us; 1596us; 1597us; 1598us; 1599us; 1659us; 1660us; 93us; 65535us; 8us; 1604us; 102us; 1604us; 142us; 1604us; 171us; 1604us; 177us; 1604us; 181us; 1604us; 182us; 1603us; 183us; 1604us; 184us; 1603us; 193us; 1604us; 276us; 1604us; 277us; 1603us; 370us; 1604us; 420us; 1604us; 426us; 1604us; 427us; 1603us; 433us; 1604us; 456us; 1604us; 466us; 1604us; 491us; 1604us; 527us; 1604us; 535us; 1604us; 536us; 1604us; 598us; 1604us; 601us; 1604us; 611us; 1604us; 621us; 1604us; 622us; 1603us; 623us; 1603us; 637us; 1604us; 640us; 1604us; 657us; 1604us; 660us; 1604us; 663us; 1604us; 664us; 1603us; 665us; 1603us; 677us; 1604us; 688us; 1604us; 772us; 1604us; 817us; 1604us; 866us; 1604us; 932us; 1604us; 962us; 1604us; 1149us; 1604us; 1151us; 1604us; 1153us; 1604us; 1267us; 1604us; 1268us; 1604us; 1446us; 1604us; 1449us; 1604us; 1451us; 1604us; 1453us; 1604us; 1515us; 1604us; 1516us; 1603us; 1557us; 1604us; 1560us; 1604us; 1563us; 1604us; 1566us; 1604us; 1568us; 1604us; 1569us; 1603us; 1570us; 1604us; 1571us; 1603us; 1574us; 1604us; 1575us; 1603us; 1576us; 1603us; 1577us; 1604us; 1578us; 1603us; 1581us; 1604us; 1582us; 1603us; 1584us; 1604us; 1588us; 1603us; 1589us; 1604us; 1591us; 1604us; 1593us; 1604us; 1595us; 1603us; 1596us; 1604us; 1598us; 1604us; 1607us; 1603us; 1612us; 1604us; 1614us; 1603us; 1617us; 1604us; 1620us; 1604us; 1631us; 1604us; 1635us; 1604us; 1641us; 1604us; 1643us; 1603us; 1648us; 1604us; 1652us; 1604us; 1658us; 1604us; 1659us; 1604us; 1682us; 1604us; 1684us; 1604us; 1695us; 1604us; 93us; 65535us; 8us; 1650us; 102us; 1650us; 142us; 1650us; 171us; 1650us; 177us; 1650us; 181us; 1650us; 182us; 1611us; 183us; 1650us; 184us; 1611us; 193us; 1650us; 276us; 1650us; 277us; 1611us; 370us; 1650us; 420us; 1650us; 426us; 1650us; 427us; 1611us; 433us; 1650us; 456us; 1650us; 466us; 1650us; 491us; 1650us; 527us; 1650us; 535us; 1650us; 536us; 1650us; 598us; 1650us; 601us; 1650us; 611us; 1650us; 621us; 1650us; 622us; 1611us; 623us; 1611us; 637us; 1650us; 640us; 1650us; 657us; 1650us; 660us; 1650us; 663us; 1650us; 664us; 1611us; 665us; 1611us; 677us; 1650us; 688us; 1650us; 772us; 1650us; 817us; 1650us; 866us; 1650us; 932us; 1650us; 962us; 1650us; 1149us; 1650us; 1151us; 1650us; 1153us; 1650us; 1267us; 1650us; 1268us; 1650us; 1446us; 1650us; 1449us; 1650us; 1451us; 1650us; 1453us; 1650us; 1515us; 1650us; 1516us; 1611us; 1557us; 1650us; 1560us; 1650us; 1563us; 1650us; 1566us; 1650us; 1568us; 1650us; 1569us; 1611us; 1570us; 1650us; 1571us; 1611us; 1574us; 1650us; 1575us; 1611us; 1576us; 1611us; 1577us; 1650us; 1578us; 1611us; 1581us; 1650us; 1582us; 1611us; 1584us; 1650us; 1588us; 1611us; 1589us; 1650us; 1591us; 1650us; 1593us; 1650us; 1595us; 1611us; 1596us; 1650us; 1598us; 1650us; 1607us; 1611us; 1612us; 1650us; 1614us; 1615us; 1617us; 1650us; 1620us; 1650us; 1631us; 1650us; 1635us; 1650us; 1641us; 1650us; 1643us; 1644us; 1648us; 1650us; 1652us; 1650us; 1658us; 1650us; 1659us; 1650us; 1682us; 1650us; 1684us; 1650us; 1695us; 1650us; 66us; 65535us; 8us; 1588us; 102us; 1576us; 142us; 1576us; 171us; 1588us; 177us; 1576us; 181us; 182us; 183us; 184us; 193us; 1576us; 276us; 277us; 370us; 1576us; 420us; 1588us; 426us; 427us; 433us; 1576us; 456us; 1588us; 466us; 1588us; 527us; 1588us; 535us; 1588us; 598us; 1588us; 601us; 1588us; 611us; 623us; 621us; 622us; 637us; 665us; 640us; 1576us; 657us; 665us; 660us; 665us; 663us; 664us; 677us; 1588us; 688us; 665us; 772us; 1588us; 817us; 1588us; 932us; 1588us; 962us; 1588us; 1149us; 1588us; 1151us; 1588us; 1153us; 1588us; 1446us; 1588us; 1449us; 1588us; 1451us; 1588us; 1515us; 1516us; 1557us; 1576us; 1560us; 1576us; 1563us; 1576us; 1566us; 1576us; 1568us; 1569us; 1570us; 1571us; 1574us; 1575us; 1577us; 1578us; 1581us; 1582us; 1584us; 1588us; 1589us; 1595us; 1591us; 1595us; 1593us; 1595us; 1596us; 1595us; 1598us; 1595us; 1612us; 1588us; 1617us; 1588us; 1620us; 1588us; 1631us; 1588us; 1635us; 1588us; 1641us; 1588us; 1652us; 1588us; 1658us; 1607us; 1659us; 1595us; 1682us; 1588us; 1684us; 1588us; 1695us; 1588us; 19us; 65535us; 182us; 1608us; 184us; 1608us; 277us; 1608us; 427us; 1608us; 622us; 1608us; 623us; 1608us; 664us; 1608us; 665us; 1608us; 1516us; 1608us; 1569us; 1608us; 1571us; 1608us; 1575us; 1608us; 1576us; 1608us; 1578us; 1608us; 1582us; 1608us; 1588us; 1608us; 1595us; 1608us; 1607us; 1608us; 1609us; 1610us; 4us; 65535us; 535us; 1613us; 1451us; 1613us; 1612us; 1613us; 1641us; 1642us; 2us; 65535us; 1632us; 1633us; 1685us; 1634us; 66us; 65535us; 8us; 1616us; 102us; 1616us; 142us; 1616us; 171us; 1616us; 177us; 1616us; 181us; 1616us; 183us; 1616us; 193us; 1616us; 276us; 1616us; 370us; 1616us; 420us; 1616us; 426us; 1616us; 433us; 1616us; 456us; 1616us; 466us; 1616us; 527us; 1616us; 535us; 1616us; 598us; 1616us; 601us; 1616us; 611us; 1616us; 621us; 1616us; 637us; 1616us; 640us; 1616us; 657us; 1616us; 660us; 1616us; 663us; 1616us; 677us; 1616us; 688us; 1616us; 772us; 1616us; 817us; 1616us; 932us; 1616us; 962us; 1616us; 1149us; 1616us; 1151us; 1616us; 1153us; 1616us; 1446us; 1616us; 1449us; 1616us; 1451us; 1616us; 1515us; 1616us; 1557us; 1616us; 1560us; 1616us; 1563us; 1616us; 1566us; 1616us; 1568us; 1616us; 1570us; 1616us; 1574us; 1616us; 1577us; 1616us; 1581us; 1616us; 1584us; 1616us; 1589us; 1616us; 1591us; 1616us; 1593us; 1616us; 1596us; 1616us; 1598us; 1616us; 1612us; 1616us; 1617us; 1616us; 1620us; 1616us; 1631us; 1616us; 1635us; 1616us; 1641us; 1616us; 1652us; 1616us; 1658us; 1616us; 1659us; 1616us; 1682us; 1616us; 1684us; 1616us; 1695us; 1616us; 4us; 65535us; 491us; 492us; 1267us; 1269us; 1268us; 1270us; 1453us; 1454us; 67us; 65535us; 8us; 1638us; 102us; 1638us; 142us; 1638us; 171us; 1638us; 177us; 1638us; 181us; 1638us; 183us; 1638us; 193us; 1638us; 276us; 1638us; 370us; 1638us; 420us; 1638us; 426us; 1638us; 433us; 1638us; 456us; 1638us; 466us; 1638us; 527us; 1638us; 535us; 1638us; 598us; 1638us; 601us; 1638us; 611us; 1638us; 621us; 1638us; 637us; 1638us; 640us; 1638us; 657us; 1638us; 660us; 1638us; 663us; 1638us; 677us; 1638us; 688us; 1638us; 772us; 1638us; 817us; 1638us; 866us; 867us; 932us; 1638us; 962us; 1638us; 1149us; 1638us; 1151us; 1638us; 1153us; 1638us; 1446us; 1638us; 1449us; 1638us; 1451us; 1638us; 1515us; 1638us; 1557us; 1638us; 1560us; 1638us; 1563us; 1638us; 1566us; 1638us; 1568us; 1638us; 1570us; 1638us; 1574us; 1638us; 1577us; 1638us; 1581us; 1638us; 1584us; 1638us; 1589us; 1638us; 1591us; 1638us; 1593us; 1638us; 1596us; 1638us; 1598us; 1638us; 1612us; 1638us; 1617us; 1638us; 1620us; 1638us; 1631us; 1638us; 1635us; 1638us; 1641us; 1638us; 1652us; 1638us; 1658us; 1638us; 1659us; 1638us; 1682us; 1638us; 1684us; 1638us; 1695us; 1638us; 73us; 65535us; 8us; 1646us; 102us; 1646us; 142us; 1646us; 171us; 1646us; 177us; 1646us; 181us; 1646us; 183us; 1646us; 193us; 1646us; 276us; 1646us; 370us; 1646us; 420us; 1646us; 426us; 1646us; 433us; 1646us; 456us; 1646us; 466us; 1646us; 491us; 1645us; 527us; 1646us; 535us; 1646us; 536us; 1649us; 598us; 1646us; 601us; 1646us; 611us; 1646us; 621us; 1646us; 637us; 1646us; 640us; 1646us; 657us; 1646us; 660us; 1646us; 663us; 1646us; 677us; 1646us; 688us; 1646us; 772us; 1646us; 817us; 1646us; 866us; 1646us; 932us; 1646us; 962us; 1646us; 1149us; 1646us; 1151us; 1646us; 1153us; 1646us; 1267us; 1645us; 1268us; 1645us; 1446us; 1646us; 1449us; 1646us; 1451us; 1646us; 1453us; 1645us; 1515us; 1646us; 1557us; 1646us; 1560us; 1646us; 1563us; 1646us; 1566us; 1646us; 1568us; 1646us; 1570us; 1646us; 1574us; 1646us; 1577us; 1646us; 1581us; 1646us; 1584us; 1646us; 1589us; 1646us; 1591us; 1646us; 1593us; 1646us; 1596us; 1646us; 1598us; 1646us; 1612us; 1646us; 1617us; 1646us; 1620us; 1646us; 1631us; 1646us; 1635us; 1646us; 1641us; 1646us; 1648us; 1649us; 1652us; 1646us; 1658us; 1646us; 1659us; 1646us; 1682us; 1646us; 1684us; 1646us; 1695us; 1646us; 4us; 65535us; 605us; 620us; 618us; 619us; 1604us; 1673us; 1675us; 1676us; 6us; 65535us; 605us; 1679us; 618us; 1679us; 1295us; 1296us; 1604us; 1679us; 1675us; 1679us; 1680us; 1681us; 8us; 65535us; 535us; 1630us; 1451us; 1630us; 1612us; 1630us; 1631us; 1632us; 1635us; 1636us; 1641us; 1630us; 1682us; 1689us; 1684us; 1697us; 2us; 65535us; 1682us; 1683us; 1684us; 1685us; 3us; 65535us; 1635us; 1637us; 1682us; 1698us; 1684us; 1698us; 1us; 65535us; 809us; 810us; 6us; 65535us; 1699us; 1709us; 1706us; 1709us; 1713us; 1709us; 1719us; 1709us; 1720us; 1709us; 1721us; 1709us; 6us; 65535us; 1699us; 1713us; 1706us; 1713us; 1713us; 1713us; 1719us; 1713us; 1720us; 1713us; 1721us; 1713us; 6us; 65535us; 1699us; 1715us; 1706us; 1715us; 1713us; 1714us; 1719us; 1715us; 1720us; 1715us; 1721us; 1715us; 5us; 65535us; 1699us; 1700us; 1706us; 1707us; 1719us; 1716us; 1720us; 1717us; 1721us; 1718us; 108us; 65535us; 8us; 1602us; 102us; 1602us; 142us; 1602us; 171us; 1602us; 177us; 1602us; 181us; 1602us; 182us; 1601us; 183us; 1602us; 184us; 1601us; 193us; 1602us; 276us; 1602us; 277us; 1601us; 370us; 1602us; 420us; 1602us; 426us; 1602us; 427us; 1601us; 433us; 1602us; 456us; 1602us; 466us; 1602us; 491us; 1601us; 527us; 1602us; 535us; 1602us; 536us; 1601us; 560us; 565us; 575us; 576us; 589us; 600us; 593us; 600us; 596us; 597us; 598us; 1602us; 601us; 1602us; 611us; 1602us; 621us; 1602us; 622us; 1601us; 623us; 1601us; 637us; 1602us; 640us; 1602us; 657us; 1602us; 660us; 1602us; 663us; 1602us; 664us; 1601us; 665us; 1601us; 677us; 1602us; 688us; 1602us; 764us; 771us; 768us; 771us; 772us; 1602us; 817us; 1602us; 866us; 1601us; 932us; 1602us; 962us; 1602us; 1149us; 1602us; 1151us; 1602us; 1153us; 1602us; 1267us; 1601us; 1268us; 1601us; 1446us; 1602us; 1449us; 1602us; 1451us; 1602us; 1453us; 1601us; 1515us; 1602us; 1516us; 1601us; 1554us; 600us; 1556us; 600us; 1557us; 1602us; 1560us; 1602us; 1563us; 1602us; 1566us; 1602us; 1568us; 1602us; 1569us; 1601us; 1570us; 1602us; 1571us; 1601us; 1574us; 1602us; 1575us; 1601us; 1576us; 1601us; 1577us; 1602us; 1578us; 1601us; 1581us; 1602us; 1582us; 1601us; 1584us; 1602us; 1588us; 1601us; 1589us; 1602us; 1591us; 1602us; 1593us; 1602us; 1595us; 1601us; 1596us; 1602us; 1598us; 1602us; 1607us; 1601us; 1612us; 1602us; 1614us; 1601us; 1617us; 1602us; 1620us; 1602us; 1631us; 1602us; 1635us; 1602us; 1641us; 1602us; 1643us; 1601us; 1648us; 1601us; 1652us; 1602us; 1658us; 1602us; 1659us; 1602us; 1682us; 1602us; 1684us; 1602us; 1695us; 1602us; 1699us; 1705us; 1706us; 1705us; 1713us; 1705us; 1719us; 1705us; 1720us; 1705us; 1721us; 1705us; 112us; 65535us; 8us; 1724us; 102us; 1724us; 142us; 1724us; 171us; 1724us; 177us; 1724us; 181us; 1724us; 182us; 1724us; 183us; 1724us; 184us; 1724us; 193us; 1724us; 276us; 1724us; 277us; 1724us; 370us; 1724us; 420us; 1724us; 426us; 1724us; 427us; 1724us; 433us; 1724us; 456us; 1724us; 466us; 1724us; 491us; 1724us; 527us; 1724us; 535us; 1724us; 536us; 1724us; 560us; 1724us; 575us; 1724us; 589us; 1724us; 593us; 1724us; 596us; 1724us; 598us; 1724us; 601us; 1724us; 611us; 1724us; 621us; 1724us; 622us; 1724us; 623us; 1724us; 637us; 1724us; 640us; 1724us; 657us; 1724us; 660us; 1724us; 663us; 1724us; 664us; 1724us; 665us; 1724us; 677us; 1724us; 688us; 1724us; 764us; 1724us; 768us; 1724us; 772us; 1724us; 817us; 1724us; 866us; 1724us; 932us; 1724us; 962us; 1724us; 1149us; 1724us; 1151us; 1724us; 1153us; 1724us; 1267us; 1724us; 1268us; 1724us; 1382us; 1404us; 1383us; 1405us; 1384us; 1404us; 1408us; 1409us; 1446us; 1724us; 1449us; 1724us; 1451us; 1724us; 1453us; 1724us; 1515us; 1724us; 1516us; 1724us; 1554us; 1724us; 1556us; 1724us; 1557us; 1724us; 1560us; 1724us; 1563us; 1724us; 1566us; 1724us; 1568us; 1724us; 1569us; 1724us; 1570us; 1724us; 1571us; 1724us; 1574us; 1724us; 1575us; 1724us; 1576us; 1724us; 1577us; 1724us; 1578us; 1724us; 1581us; 1724us; 1582us; 1724us; 1584us; 1724us; 1588us; 1724us; 1589us; 1724us; 1591us; 1724us; 1593us; 1724us; 1595us; 1724us; 1596us; 1724us; 1598us; 1724us; 1607us; 1724us; 1612us; 1724us; 1614us; 1724us; 1617us; 1724us; 1620us; 1724us; 1631us; 1724us; 1635us; 1724us; 1641us; 1724us; 1643us; 1724us; 1648us; 1724us; 1652us; 1724us; 1658us; 1724us; 1659us; 1724us; 1682us; 1724us; 1684us; 1724us; 1695us; 1724us; 1699us; 1724us; 1706us; 1724us; 1713us; 1724us; 1719us; 1724us; 1720us; 1724us; 1721us; 1724us; 343us; 65535us; 6us; 1785us; 8us; 1730us; 31us; 1785us; 51us; 1730us; 54us; 1730us; 89us; 1730us; 99us; 1777us; 102us; 1730us; 105us; 1785us; 107us; 1785us; 111us; 1730us; 142us; 1730us; 171us; 651us; 174us; 1777us; 177us; 1730us; 181us; 1730us; 182us; 1730us; 183us; 1730us; 184us; 1730us; 193us; 1730us; 195us; 1777us; 197us; 1777us; 202us; 1777us; 226us; 1785us; 240us; 1785us; 262us; 1785us; 269us; 1730us; 274us; 1730us; 276us; 1730us; 277us; 1730us; 302us; 331us; 313us; 331us; 318us; 1730us; 322us; 1730us; 370us; 1730us; 404us; 1779us; 407us; 1785us; 409us; 1779us; 412us; 1785us; 420us; 651us; 426us; 1730us; 427us; 1730us; 430us; 1777us; 433us; 1730us; 444us; 1779us; 447us; 1785us; 454us; 455us; 456us; 1730us; 460us; 461us; 463us; 1785us; 466us; 1730us; 469us; 1779us; 472us; 1779us; 475us; 1779us; 477us; 1779us; 491us; 1730us; 499us; 500us; 502us; 503us; 527us; 651us; 535us; 1730us; 536us; 1730us; 560us; 1730us; 562us; 1730us; 598us; 1730us; 601us; 1730us; 611us; 1730us; 621us; 1730us; 622us; 1730us; 623us; 1730us; 635us; 1777us; 637us; 662us; 640us; 1730us; 657us; 662us; 660us; 662us; 663us; 1730us; 664us; 1730us; 665us; 1730us; 675us; 676us; 677us; 1730us; 684us; 687us; 688us; 662us; 691us; 1730us; 697us; 1785us; 703us; 1785us; 714us; 715us; 726us; 1730us; 727us; 728us; 739us; 1730us; 749us; 1779us; 752us; 1785us; 756us; 1785us; 766us; 1785us; 772us; 1730us; 813us; 814us; 817us; 1730us; 819us; 812us; 820us; 812us; 822us; 812us; 840us; 841us; 842us; 1779us; 843us; 1779us; 847us; 1779us; 848us; 1779us; 849us; 1779us; 850us; 1779us; 853us; 855us; 857us; 1779us; 860us; 1779us; 862us; 1779us; 864us; 1779us; 866us; 1730us; 869us; 856us; 873us; 1779us; 875us; 1779us; 877us; 1779us; 882us; 1730us; 885us; 1779us; 888us; 1779us; 891us; 893us; 892us; 893us; 899us; 1779us; 907us; 1779us; 927us; 928us; 929us; 1779us; 932us; 1730us; 934us; 1779us; 935us; 1779us; 937us; 1779us; 938us; 1779us; 939us; 1779us; 940us; 1779us; 943us; 1730us; 946us; 1779us; 948us; 1779us; 950us; 1785us; 955us; 1785us; 962us; 1730us; 969us; 1785us; 971us; 1785us; 974us; 1785us; 977us; 1785us; 993us; 1779us; 994us; 1785us; 998us; 1779us; 999us; 1785us; 1005us; 1785us; 1008us; 1785us; 1011us; 1785us; 1017us; 1785us; 1021us; 1785us; 1025us; 1785us; 1029us; 1785us; 1031us; 1785us; 1036us; 1785us; 1038us; 1785us; 1040us; 1785us; 1042us; 1785us; 1044us; 1785us; 1046us; 1785us; 1055us; 1779us; 1057us; 1785us; 1065us; 1785us; 1072us; 1785us; 1078us; 1785us; 1080us; 1785us; 1084us; 1779us; 1085us; 1785us; 1089us; 1785us; 1091us; 1779us; 1092us; 1785us; 1096us; 1785us; 1099us; 1785us; 1102us; 1785us; 1104us; 1785us; 1109us; 1785us; 1111us; 1785us; 1149us; 1730us; 1151us; 1730us; 1153us; 1730us; 1155us; 1785us; 1157us; 1785us; 1161us; 1785us; 1162us; 1785us; 1163us; 1785us; 1164us; 1785us; 1165us; 1785us; 1166us; 1785us; 1167us; 1785us; 1168us; 1785us; 1169us; 1785us; 1170us; 1785us; 1171us; 1785us; 1173us; 1785us; 1174us; 1785us; 1175us; 1785us; 1176us; 1785us; 1177us; 1785us; 1178us; 1785us; 1179us; 1785us; 1180us; 1785us; 1181us; 1785us; 1203us; 1785us; 1206us; 1779us; 1208us; 1779us; 1213us; 1779us; 1220us; 1779us; 1225us; 1785us; 1226us; 1785us; 1230us; 1785us; 1232us; 1785us; 1236us; 1785us; 1238us; 1785us; 1242us; 1785us; 1245us; 1785us; 1247us; 1785us; 1249us; 1785us; 1250us; 1785us; 1252us; 1785us; 1253us; 1785us; 1255us; 1785us; 1256us; 1785us; 1258us; 1785us; 1259us; 1785us; 1261us; 1785us; 1262us; 1785us; 1264us; 1785us; 1265us; 1785us; 1267us; 1730us; 1268us; 1730us; 1277us; 1785us; 1279us; 1785us; 1281us; 1785us; 1282us; 1785us; 1283us; 1785us; 1286us; 1785us; 1293us; 1785us; 1294us; 1785us; 1297us; 1785us; 1298us; 1785us; 1299us; 1777us; 1302us; 1777us; 1304us; 1777us; 1305us; 1777us; 1311us; 1785us; 1318us; 1785us; 1325us; 1785us; 1332us; 1785us; 1342us; 1785us; 1345us; 1785us; 1347us; 1785us; 1350us; 1785us; 1362us; 1785us; 1369us; 1785us; 1370us; 1785us; 1376us; 1785us; 1382us; 1785us; 1383us; 1785us; 1384us; 1785us; 1400us; 1785us; 1410us; 1785us; 1423us; 1785us; 1424us; 1785us; 1426us; 1785us; 1428us; 1785us; 1432us; 1785us; 1433us; 1785us; 1440us; 1785us; 1446us; 1730us; 1449us; 1730us; 1451us; 1730us; 1453us; 1730us; 1460us; 1785us; 1465us; 1785us; 1469us; 1730us; 1473us; 1730us; 1481us; 1730us; 1490us; 1785us; 1515us; 1730us; 1516us; 1730us; 1523us; 1785us; 1530us; 1779us; 1532us; 1785us; 1535us; 1779us; 1537us; 1785us; 1548us; 1779us; 1550us; 1779us; 1557us; 1730us; 1560us; 1730us; 1563us; 1730us; 1566us; 1730us; 1568us; 1730us; 1569us; 1730us; 1570us; 1730us; 1571us; 1730us; 1572us; 1573us; 1574us; 1730us; 1575us; 1730us; 1576us; 1730us; 1577us; 1730us; 1578us; 1730us; 1579us; 1580us; 1581us; 1730us; 1582us; 1730us; 1584us; 1730us; 1588us; 1730us; 1589us; 1730us; 1591us; 1730us; 1593us; 1730us; 1595us; 1730us; 1596us; 1730us; 1598us; 1730us; 1607us; 1730us; 1612us; 1730us; 1614us; 1730us; 1617us; 1730us; 1620us; 1730us; 1631us; 1730us; 1635us; 1730us; 1641us; 1730us; 1643us; 1730us; 1648us; 1730us; 1652us; 1730us; 1658us; 1730us; 1659us; 1730us; 1668us; 1785us; 1674us; 1730us; 1682us; 1730us; 1684us; 1730us; 1695us; 1730us; 1699us; 1730us; 1706us; 1730us; 1713us; 1730us; 1719us; 1730us; 1720us; 1730us; 1721us; 1730us; 1722us; 1723us; 1725us; 1727us; 1726us; 1727us; 1731us; 1732us; 1781us; 1779us; 1824us; 1825us; 1827us; 1785us; 1831us; 1785us; 120us; 65535us; 8us; 1600us; 51us; 52us; 54us; 55us; 89us; 280us; 102us; 1600us; 111us; 278us; 142us; 1600us; 171us; 528us; 177us; 1600us; 181us; 1600us; 182us; 1600us; 183us; 1600us; 184us; 1600us; 193us; 1600us; 269us; 290us; 274us; 275us; 276us; 1600us; 277us; 1600us; 302us; 315us; 313us; 315us; 318us; 319us; 322us; 323us; 370us; 1600us; 420us; 528us; 426us; 1600us; 427us; 1600us; 433us; 1600us; 456us; 1600us; 466us; 1600us; 491us; 1600us; 527us; 528us; 535us; 1600us; 536us; 1600us; 560us; 561us; 562us; 563us; 598us; 1600us; 601us; 1600us; 611us; 1600us; 621us; 1600us; 622us; 1600us; 623us; 1600us; 637us; 1600us; 640us; 1600us; 657us; 1600us; 660us; 1600us; 663us; 1600us; 664us; 1600us; 665us; 1600us; 677us; 1600us; 688us; 1600us; 691us; 692us; 726us; 729us; 739us; 729us; 772us; 1600us; 817us; 1600us; 866us; 1600us; 882us; 945us; 932us; 1600us; 943us; 945us; 962us; 1600us; 1149us; 1600us; 1151us; 1600us; 1153us; 1600us; 1267us; 1600us; 1268us; 1600us; 1446us; 1600us; 1449us; 1600us; 1451us; 1600us; 1453us; 1600us; 1469us; 1486us; 1473us; 1486us; 1481us; 1486us; 1515us; 1600us; 1516us; 1600us; 1557us; 1600us; 1560us; 1600us; 1563us; 1600us; 1566us; 1600us; 1568us; 1600us; 1569us; 1600us; 1570us; 1600us; 1571us; 1600us; 1574us; 1600us; 1575us; 1600us; 1576us; 1600us; 1577us; 1600us; 1578us; 1600us; 1581us; 1600us; 1582us; 1600us; 1584us; 1600us; 1588us; 1600us; 1589us; 1600us; 1591us; 1600us; 1593us; 1600us; 1595us; 1600us; 1596us; 1600us; 1598us; 1600us; 1607us; 1600us; 1612us; 1600us; 1614us; 1600us; 1617us; 1600us; 1620us; 1600us; 1631us; 1600us; 1635us; 1600us; 1641us; 1600us; 1643us; 1600us; 1648us; 1600us; 1652us; 1600us; 1658us; 1600us; 1659us; 1600us; 1674us; 1675us; 1682us; 1600us; 1684us; 1600us; 1695us; 1600us; 1699us; 1704us; 1706us; 1704us; 1713us; 1704us; 1719us; 1704us; 1720us; 1704us; 1721us; 1704us; 199us; 65535us; 6us; 1786us; 31us; 1786us; 99us; 1778us; 105us; 1786us; 107us; 1786us; 174us; 1778us; 195us; 1778us; 197us; 1778us; 202us; 1778us; 226us; 1786us; 240us; 1786us; 262us; 1786us; 404us; 1780us; 407us; 1786us; 409us; 1780us; 412us; 1786us; 430us; 1778us; 444us; 1780us; 447us; 1786us; 463us; 1786us; 469us; 1780us; 472us; 1780us; 475us; 1780us; 477us; 1780us; 635us; 1778us; 697us; 1786us; 703us; 1786us; 749us; 1780us; 752us; 1786us; 756us; 1786us; 766us; 1786us; 842us; 1780us; 843us; 1780us; 847us; 1780us; 848us; 1780us; 849us; 1780us; 850us; 1780us; 857us; 1780us; 860us; 1780us; 862us; 1780us; 864us; 1780us; 869us; 1780us; 873us; 1780us; 875us; 1780us; 877us; 1780us; 885us; 1780us; 888us; 1780us; 899us; 1780us; 907us; 1780us; 929us; 1780us; 934us; 1780us; 935us; 1780us; 937us; 1780us; 938us; 1780us; 939us; 1780us; 940us; 1780us; 946us; 1780us; 948us; 1780us; 950us; 1786us; 955us; 1786us; 969us; 1786us; 971us; 1786us; 974us; 1786us; 977us; 1786us; 993us; 1780us; 994us; 1786us; 998us; 1780us; 999us; 1786us; 1005us; 1786us; 1008us; 1786us; 1011us; 1786us; 1017us; 1786us; 1021us; 1786us; 1025us; 1786us; 1029us; 1786us; 1031us; 1786us; 1036us; 1786us; 1038us; 1786us; 1040us; 1786us; 1042us; 1786us; 1044us; 1786us; 1046us; 1786us; 1055us; 1780us; 1057us; 1786us; 1065us; 1786us; 1072us; 1786us; 1078us; 1786us; 1080us; 1786us; 1084us; 1780us; 1085us; 1786us; 1089us; 1786us; 1091us; 1780us; 1092us; 1786us; 1096us; 1786us; 1099us; 1786us; 1102us; 1786us; 1104us; 1786us; 1109us; 1786us; 1111us; 1786us; 1155us; 1786us; 1157us; 1786us; 1161us; 1786us; 1162us; 1786us; 1163us; 1786us; 1164us; 1786us; 1165us; 1786us; 1166us; 1786us; 1167us; 1786us; 1168us; 1786us; 1169us; 1786us; 1170us; 1786us; 1171us; 1786us; 1173us; 1786us; 1174us; 1786us; 1175us; 1786us; 1176us; 1786us; 1177us; 1786us; 1178us; 1786us; 1179us; 1786us; 1180us; 1786us; 1181us; 1786us; 1203us; 1786us; 1206us; 1780us; 1208us; 1780us; 1213us; 1780us; 1220us; 1780us; 1225us; 1786us; 1226us; 1786us; 1230us; 1786us; 1232us; 1786us; 1236us; 1786us; 1238us; 1786us; 1242us; 1786us; 1245us; 1786us; 1247us; 1786us; 1249us; 1786us; 1250us; 1786us; 1252us; 1786us; 1253us; 1786us; 1255us; 1786us; 1256us; 1786us; 1258us; 1786us; 1259us; 1786us; 1261us; 1786us; 1262us; 1786us; 1264us; 1786us; 1265us; 1786us; 1277us; 1786us; 1279us; 1786us; 1281us; 1786us; 1282us; 1786us; 1283us; 1786us; 1286us; 1786us; 1293us; 1786us; 1294us; 1786us; 1297us; 1786us; 1298us; 1786us; 1299us; 1778us; 1302us; 1778us; 1304us; 1778us; 1305us; 1778us; 1311us; 1786us; 1318us; 1786us; 1325us; 1786us; 1332us; 1786us; 1342us; 1786us; 1345us; 1786us; 1347us; 1786us; 1350us; 1786us; 1362us; 1786us; 1369us; 1786us; 1370us; 1786us; 1376us; 1786us; 1382us; 1786us; 1383us; 1786us; 1384us; 1786us; 1400us; 1786us; 1410us; 1786us; 1423us; 1786us; 1424us; 1786us; 1426us; 1786us; 1428us; 1786us; 1432us; 1786us; 1433us; 1786us; 1440us; 1786us; 1460us; 1786us; 1465us; 1786us; 1490us; 1786us; 1523us; 1786us; 1530us; 1780us; 1532us; 1786us; 1535us; 1780us; 1537us; 1786us; 1548us; 1780us; 1550us; 1780us; 1668us; 1786us; 1781us; 1780us; 1827us; 1786us; 1831us; 1786us; 7us; 65535us; 645us; 1735us; 869us; 1735us; 899us; 1735us; 1325us; 1735us; 1383us; 1735us; 1384us; 1735us; 1734us; 1735us; 2us; 65535us; 1741us; 1776us; 1774us; 1775us; 7us; 65535us; 645us; 1740us; 869us; 1740us; 899us; 1740us; 1325us; 1740us; 1383us; 1740us; 1384us; 1740us; 1734us; 1740us; 11us; 65535us; 99us; 1784us; 174us; 1784us; 195us; 1784us; 197us; 1784us; 202us; 1784us; 430us; 1784us; 635us; 1784us; 1299us; 1322us; 1302us; 1322us; 1304us; 1784us; 1305us; 1784us; 49us; 65535us; 404us; 474us; 409us; 474us; 444us; 474us; 469us; 470us; 472us; 473us; 475us; 479us; 477us; 478us; 749us; 474us; 842us; 474us; 843us; 474us; 847us; 474us; 848us; 474us; 849us; 474us; 850us; 474us; 857us; 474us; 860us; 474us; 862us; 474us; 864us; 474us; 869us; 474us; 873us; 474us; 875us; 474us; 877us; 474us; 885us; 474us; 888us; 474us; 899us; 474us; 907us; 474us; 929us; 474us; 934us; 474us; 935us; 474us; 937us; 474us; 938us; 474us; 939us; 474us; 940us; 474us; 946us; 474us; 948us; 474us; 993us; 474us; 998us; 474us; 1055us; 474us; 1084us; 474us; 1091us; 474us; 1206us; 474us; 1208us; 474us; 1213us; 474us; 1220us; 474us; 1530us; 474us; 1535us; 474us; 1548us; 474us; 1550us; 474us; 1781us; 1782us; 9us; 65535us; 99us; 100us; 174us; 175us; 195us; 201us; 197us; 201us; 202us; 203us; 430us; 431us; 635us; 644us; 1304us; 1306us; 1305us; 1306us; 139us; 65535us; 6us; 1310us; 31us; 1310us; 105us; 1310us; 107us; 1310us; 226us; 1310us; 240us; 1310us; 262us; 1310us; 407us; 1310us; 412us; 1310us; 447us; 1310us; 463us; 1310us; 697us; 1310us; 703us; 1310us; 752us; 1310us; 756us; 1310us; 766us; 1310us; 950us; 1310us; 955us; 1310us; 969us; 1310us; 971us; 1310us; 974us; 1310us; 977us; 1310us; 994us; 1310us; 999us; 1310us; 1005us; 1310us; 1008us; 1310us; 1011us; 1310us; 1017us; 1310us; 1021us; 1310us; 1025us; 1310us; 1029us; 1310us; 1031us; 1310us; 1036us; 1310us; 1038us; 1310us; 1040us; 1310us; 1042us; 1310us; 1044us; 1310us; 1046us; 1310us; 1057us; 1310us; 1065us; 1310us; 1072us; 1310us; 1078us; 1310us; 1080us; 1310us; 1085us; 1310us; 1089us; 1310us; 1092us; 1310us; 1096us; 1310us; 1099us; 1310us; 1102us; 1310us; 1104us; 1310us; 1109us; 1310us; 1111us; 1310us; 1155us; 1310us; 1157us; 1310us; 1161us; 1310us; 1162us; 1310us; 1163us; 1310us; 1164us; 1310us; 1165us; 1310us; 1166us; 1310us; 1167us; 1310us; 1168us; 1310us; 1169us; 1310us; 1170us; 1310us; 1171us; 1310us; 1173us; 1310us; 1174us; 1310us; 1175us; 1310us; 1176us; 1310us; 1177us; 1310us; 1178us; 1310us; 1179us; 1310us; 1180us; 1310us; 1181us; 1310us; 1203us; 1310us; 1225us; 1310us; 1226us; 1310us; 1230us; 1310us; 1232us; 1310us; 1236us; 1310us; 1238us; 1310us; 1242us; 1310us; 1245us; 1310us; 1247us; 1310us; 1249us; 1310us; 1250us; 1310us; 1252us; 1310us; 1253us; 1310us; 1255us; 1310us; 1256us; 1310us; 1258us; 1310us; 1259us; 1310us; 1261us; 1310us; 1262us; 1310us; 1264us; 1310us; 1265us; 1310us; 1277us; 1310us; 1279us; 1310us; 1281us; 1310us; 1282us; 1310us; 1283us; 1310us; 1286us; 1310us; 1293us; 1310us; 1294us; 1310us; 1297us; 1310us; 1298us; 1310us; 1311us; 1310us; 1318us; 1310us; 1325us; 1310us; 1332us; 1310us; 1342us; 1310us; 1345us; 1310us; 1347us; 1310us; 1350us; 1310us; 1362us; 1310us; 1369us; 1310us; 1370us; 1310us; 1376us; 1310us; 1382us; 1310us; 1383us; 1310us; 1384us; 1310us; 1400us; 1310us; 1410us; 1310us; 1423us; 1310us; 1424us; 1310us; 1426us; 1310us; 1428us; 1310us; 1432us; 1310us; 1433us; 1310us; 1440us; 1310us; 1460us; 1310us; 1465us; 1310us; 1490us; 1310us; 1523us; 1310us; 1532us; 1310us; 1537us; 1310us; 1668us; 1310us; 1827us; 1310us; 1831us; 1310us; 14us; 65535us; 47us; 1790us; 74us; 1790us; 77us; 1790us; 78us; 1792us; 81us; 1790us; 216us; 1790us; 235us; 1790us; 241us; 1790us; 246us; 1790us; 250us; 1790us; 251us; 1790us; 252us; 1790us; 1790us; 1790us; 1792us; 1792us; 12us; 65535us; 47us; 82us; 74us; 82us; 77us; 82us; 81us; 82us; 216us; 253us; 235us; 253us; 241us; 242us; 246us; 248us; 250us; 253us; 251us; 253us; 252us; 253us; 1790us; 1791us; 2us; 65535us; 78us; 79us; 1792us; 1793us; 11us; 65535us; 165us; 1808us; 303us; 313us; 391us; 1808us; 510us; 1808us; 668us; 669us; 851us; 853us; 924us; 948us; 941us; 943us; 966us; 969us; 967us; 969us; 968us; 969us; 4us; 65535us; 210us; 211us; 297us; 298us; 486us; 487us; 489us; 490us; 2us; 65535us; 1507us; 1508us; 1517us; 1518us; 10us; 65535us; 109us; 110us; 424us; 425us; 435us; 436us; 438us; 439us; 440us; 441us; 442us; 443us; 448us; 449us; 516us; 517us; 518us; 519us; 522us; 523us; 2us; 65535us; 60us; 61us; 222us; 223us; 1us; 65535us; 346us; 347us; 17us; 65535us; 71us; 72us; 131us; 132us; 232us; 233us; 305us; 306us; 308us; 309us; 358us; 359us; 629us; 656us; 651us; 652us; 654us; 655us; 1001us; 1002us; 1056us; 1107us; 1087us; 1088us; 1094us; 1095us; 1101us; 1102us; 1494us; 1498us; 1495us; 1496us; 1518us; 1519us; 8us; 65535us; 165us; 166us; 303us; 304us; 391us; 392us; 510us; 511us; 668us; 671us; 851us; 852us; 924us; 947us; 941us; 942us; 4us; 65535us; 50us; 51us; 53us; 54us; 693us; 694us; 699us; 700us; 0us; 65535us; 11us; 65535us; 96us; 97us; 172us; 173us; 394us; 403us; 396us; 403us; 401us; 403us; 423us; 409us; 429us; 430us; 514us; 748us; 515us; 409us; 521us; 409us; 745us; 748us; 7us; 65535us; 97us; 98us; 185us; 674us; 188us; 674us; 452us; 453us; 458us; 459us; 672us; 674us; 748us; 749us; 4us; 65535us; 982us; 1072us; 1045us; 1046us; 1056us; 1057us; 1064us; 1065us; 9us; 65535us; 979us; 1054us; 980us; 1061us; 981us; 1069us; 983us; 1076us; 1047us; 1048us; 1050us; 1051us; 1058us; 1059us; 1066us; 1067us; 1073us; 1074us; 2us; 65535us; 269us; 291us; 281us; 291us; 2us; 65535us; 89us; 118us; 111us; 114us; 2us; 65535us; 65us; 89us; 88us; 89us; 267us; 65535us; 6us; 791us; 8us; 791us; 31us; 791us; 40us; 42us; 102us; 791us; 105us; 791us; 107us; 791us; 142us; 791us; 171us; 791us; 177us; 791us; 181us; 791us; 183us; 791us; 193us; 791us; 226us; 791us; 240us; 791us; 262us; 791us; 276us; 791us; 316us; 791us; 320us; 791us; 325us; 791us; 370us; 791us; 404us; 791us; 407us; 791us; 409us; 791us; 412us; 791us; 420us; 791us; 426us; 791us; 433us; 791us; 444us; 791us; 447us; 791us; 456us; 791us; 463us; 791us; 466us; 791us; 491us; 791us; 494us; 791us; 527us; 791us; 535us; 791us; 536us; 537us; 598us; 791us; 601us; 791us; 611us; 791us; 621us; 791us; 637us; 791us; 640us; 791us; 642us; 791us; 653us; 791us; 657us; 791us; 660us; 791us; 663us; 791us; 677us; 791us; 688us; 791us; 697us; 791us; 703us; 791us; 749us; 791us; 752us; 791us; 756us; 791us; 766us; 791us; 772us; 791us; 817us; 791us; 842us; 791us; 843us; 791us; 847us; 791us; 848us; 791us; 849us; 791us; 850us; 791us; 857us; 791us; 860us; 791us; 862us; 791us; 864us; 791us; 866us; 791us; 869us; 791us; 873us; 791us; 875us; 791us; 877us; 791us; 885us; 791us; 888us; 791us; 899us; 791us; 907us; 791us; 929us; 791us; 932us; 791us; 934us; 791us; 935us; 791us; 937us; 791us; 938us; 791us; 939us; 791us; 940us; 791us; 946us; 791us; 948us; 791us; 950us; 791us; 955us; 791us; 962us; 791us; 969us; 791us; 971us; 791us; 974us; 791us; 977us; 791us; 993us; 791us; 994us; 791us; 998us; 791us; 999us; 791us; 1005us; 791us; 1008us; 791us; 1011us; 791us; 1017us; 791us; 1021us; 791us; 1025us; 791us; 1029us; 791us; 1031us; 791us; 1036us; 791us; 1038us; 791us; 1040us; 791us; 1042us; 791us; 1044us; 791us; 1046us; 791us; 1055us; 791us; 1057us; 791us; 1065us; 791us; 1072us; 791us; 1078us; 791us; 1080us; 791us; 1084us; 791us; 1085us; 791us; 1089us; 791us; 1091us; 791us; 1092us; 791us; 1096us; 791us; 1099us; 791us; 1102us; 791us; 1104us; 791us; 1109us; 791us; 1111us; 791us; 1149us; 791us; 1151us; 791us; 1153us; 791us; 1155us; 791us; 1157us; 791us; 1161us; 791us; 1162us; 791us; 1163us; 791us; 1164us; 791us; 1165us; 791us; 1166us; 791us; 1167us; 791us; 1168us; 791us; 1169us; 791us; 1170us; 791us; 1171us; 791us; 1173us; 791us; 1174us; 791us; 1175us; 791us; 1176us; 791us; 1177us; 791us; 1178us; 791us; 1179us; 791us; 1180us; 791us; 1181us; 791us; 1203us; 791us; 1206us; 791us; 1208us; 791us; 1213us; 791us; 1220us; 791us; 1225us; 791us; 1226us; 791us; 1230us; 791us; 1232us; 791us; 1236us; 791us; 1238us; 791us; 1242us; 791us; 1245us; 791us; 1247us; 791us; 1249us; 791us; 1250us; 791us; 1252us; 791us; 1253us; 791us; 1255us; 791us; 1256us; 791us; 1258us; 791us; 1259us; 791us; 1261us; 791us; 1262us; 791us; 1264us; 791us; 1265us; 791us; 1267us; 791us; 1268us; 791us; 1271us; 791us; 1272us; 791us; 1277us; 791us; 1279us; 791us; 1281us; 791us; 1282us; 791us; 1283us; 791us; 1286us; 791us; 1293us; 791us; 1294us; 791us; 1297us; 791us; 1298us; 791us; 1311us; 791us; 1318us; 791us; 1325us; 791us; 1332us; 791us; 1342us; 791us; 1345us; 791us; 1347us; 791us; 1350us; 791us; 1362us; 791us; 1369us; 791us; 1370us; 791us; 1376us; 791us; 1382us; 791us; 1383us; 791us; 1384us; 791us; 1400us; 791us; 1410us; 791us; 1423us; 791us; 1424us; 791us; 1426us; 791us; 1428us; 791us; 1432us; 791us; 1433us; 791us; 1437us; 1438us; 1440us; 791us; 1446us; 791us; 1449us; 791us; 1451us; 791us; 1453us; 791us; 1455us; 791us; 1460us; 791us; 1465us; 791us; 1490us; 791us; 1515us; 791us; 1523us; 791us; 1530us; 791us; 1532us; 791us; 1535us; 791us; 1537us; 791us; 1548us; 791us; 1550us; 791us; 1557us; 791us; 1560us; 791us; 1563us; 791us; 1566us; 791us; 1568us; 791us; 1570us; 791us; 1574us; 791us; 1577us; 791us; 1581us; 791us; 1584us; 791us; 1589us; 791us; 1591us; 791us; 1593us; 791us; 1596us; 791us; 1598us; 791us; 1612us; 791us; 1617us; 791us; 1620us; 791us; 1631us; 791us; 1635us; 791us; 1641us; 791us; 1648us; 791us; 1652us; 791us; 1658us; 791us; 1659us; 791us; 1668us; 791us; 1682us; 791us; 1684us; 791us; 1695us; 791us; 1827us; 791us; 1831us; 791us; 265us; 65535us; 6us; 792us; 8us; 792us; 31us; 792us; 102us; 792us; 105us; 792us; 107us; 792us; 142us; 792us; 171us; 792us; 177us; 792us; 181us; 792us; 183us; 792us; 193us; 792us; 226us; 792us; 240us; 792us; 262us; 792us; 276us; 792us; 316us; 792us; 320us; 792us; 325us; 792us; 370us; 792us; 404us; 792us; 407us; 792us; 409us; 792us; 412us; 792us; 420us; 792us; 426us; 792us; 433us; 792us; 444us; 792us; 447us; 792us; 456us; 792us; 463us; 792us; 466us; 792us; 491us; 792us; 494us; 792us; 527us; 792us; 535us; 792us; 536us; 792us; 598us; 792us; 601us; 792us; 611us; 792us; 621us; 792us; 637us; 792us; 640us; 792us; 642us; 792us; 653us; 792us; 657us; 792us; 660us; 792us; 663us; 792us; 677us; 792us; 688us; 792us; 697us; 792us; 703us; 792us; 749us; 792us; 752us; 792us; 756us; 792us; 766us; 792us; 772us; 792us; 817us; 792us; 842us; 792us; 843us; 792us; 847us; 792us; 848us; 792us; 849us; 792us; 850us; 792us; 857us; 792us; 860us; 792us; 862us; 792us; 864us; 792us; 866us; 792us; 869us; 792us; 873us; 792us; 875us; 792us; 877us; 792us; 885us; 792us; 888us; 792us; 899us; 792us; 907us; 792us; 929us; 792us; 932us; 792us; 934us; 792us; 935us; 792us; 937us; 792us; 938us; 792us; 939us; 792us; 940us; 792us; 946us; 792us; 948us; 792us; 950us; 792us; 955us; 792us; 962us; 792us; 969us; 792us; 971us; 792us; 974us; 792us; 977us; 792us; 993us; 792us; 994us; 792us; 998us; 792us; 999us; 792us; 1005us; 792us; 1008us; 792us; 1011us; 792us; 1017us; 792us; 1021us; 792us; 1025us; 792us; 1029us; 792us; 1031us; 792us; 1036us; 792us; 1038us; 792us; 1040us; 792us; 1042us; 792us; 1044us; 792us; 1046us; 792us; 1055us; 792us; 1057us; 792us; 1065us; 792us; 1072us; 792us; 1078us; 792us; 1080us; 792us; 1084us; 792us; 1085us; 792us; 1089us; 792us; 1091us; 792us; 1092us; 792us; 1096us; 792us; 1099us; 792us; 1102us; 792us; 1104us; 792us; 1109us; 792us; 1111us; 792us; 1149us; 792us; 1151us; 792us; 1153us; 792us; 1155us; 792us; 1157us; 792us; 1161us; 792us; 1162us; 792us; 1163us; 792us; 1164us; 792us; 1165us; 792us; 1166us; 792us; 1167us; 792us; 1168us; 792us; 1169us; 792us; 1170us; 792us; 1171us; 792us; 1173us; 792us; 1174us; 792us; 1175us; 792us; 1176us; 792us; 1177us; 792us; 1178us; 792us; 1179us; 792us; 1180us; 792us; 1181us; 792us; 1203us; 792us; 1206us; 792us; 1208us; 792us; 1213us; 792us; 1220us; 792us; 1225us; 792us; 1226us; 792us; 1230us; 792us; 1232us; 792us; 1236us; 792us; 1238us; 792us; 1242us; 792us; 1245us; 792us; 1247us; 792us; 1249us; 792us; 1250us; 792us; 1252us; 792us; 1253us; 792us; 1255us; 792us; 1256us; 792us; 1258us; 792us; 1259us; 792us; 1261us; 792us; 1262us; 792us; 1264us; 792us; 1265us; 792us; 1267us; 792us; 1268us; 792us; 1271us; 792us; 1272us; 792us; 1277us; 792us; 1279us; 792us; 1281us; 792us; 1282us; 792us; 1283us; 792us; 1286us; 792us; 1293us; 792us; 1294us; 792us; 1297us; 792us; 1298us; 792us; 1311us; 792us; 1318us; 792us; 1325us; 792us; 1332us; 792us; 1342us; 792us; 1345us; 792us; 1347us; 792us; 1350us; 792us; 1362us; 792us; 1369us; 792us; 1370us; 792us; 1376us; 792us; 1382us; 792us; 1383us; 792us; 1384us; 792us; 1400us; 792us; 1410us; 792us; 1423us; 792us; 1424us; 792us; 1426us; 792us; 1428us; 792us; 1432us; 792us; 1433us; 792us; 1440us; 792us; 1446us; 792us; 1449us; 792us; 1451us; 792us; 1453us; 792us; 1455us; 792us; 1460us; 792us; 1465us; 792us; 1490us; 792us; 1515us; 792us; 1523us; 792us; 1530us; 792us; 1532us; 792us; 1535us; 792us; 1537us; 792us; 1548us; 792us; 1550us; 792us; 1557us; 792us; 1560us; 792us; 1563us; 792us; 1566us; 792us; 1568us; 792us; 1570us; 792us; 1574us; 792us; 1577us; 792us; 1581us; 792us; 1584us; 792us; 1589us; 792us; 1591us; 792us; 1593us; 792us; 1596us; 792us; 1598us; 792us; 1612us; 792us; 1617us; 792us; 1620us; 792us; 1631us; 792us; 1635us; 792us; 1641us; 792us; 1648us; 792us; 1652us; 792us; 1658us; 792us; 1659us; 792us; 1668us; 792us; 1682us; 792us; 1684us; 792us; 1695us; 792us; 1827us; 792us; 1831us; 792us; 2us; 65535us; 1827us; 1828us; 1831us; 1832us; 4us; 65535us; 1827us; 1830us; 1828us; 1829us; 1831us; 1835us; 1832us; 1833us; 146us; 65535us; 6us; 1355us; 31us; 1355us; 105us; 1355us; 107us; 1355us; 226us; 1355us; 240us; 1355us; 262us; 1355us; 316us; 1355us; 320us; 1355us; 325us; 1355us; 407us; 1355us; 412us; 1355us; 447us; 1355us; 463us; 1355us; 494us; 1355us; 697us; 1355us; 703us; 1355us; 752us; 1355us; 756us; 1355us; 766us; 1355us; 950us; 1355us; 955us; 1355us; 969us; 1355us; 971us; 1355us; 974us; 1355us; 977us; 1355us; 994us; 1355us; 999us; 1355us; 1005us; 1355us; 1008us; 1355us; 1011us; 1355us; 1017us; 1355us; 1021us; 1355us; 1025us; 1355us; 1029us; 1355us; 1031us; 1355us; 1036us; 1355us; 1038us; 1355us; 1040us; 1355us; 1042us; 1355us; 1044us; 1355us; 1046us; 1355us; 1057us; 1355us; 1065us; 1355us; 1072us; 1355us; 1078us; 1355us; 1080us; 1355us; 1085us; 1355us; 1089us; 1355us; 1092us; 1355us; 1096us; 1355us; 1099us; 1355us; 1102us; 1355us; 1104us; 1355us; 1109us; 1355us; 1111us; 1355us; 1155us; 1355us; 1157us; 1355us; 1161us; 1355us; 1162us; 1355us; 1163us; 1355us; 1164us; 1355us; 1165us; 1355us; 1166us; 1355us; 1167us; 1355us; 1168us; 1355us; 1169us; 1355us; 1170us; 1355us; 1171us; 1355us; 1173us; 1355us; 1174us; 1355us; 1175us; 1355us; 1176us; 1355us; 1177us; 1355us; 1178us; 1355us; 1179us; 1355us; 1180us; 1355us; 1181us; 1355us; 1203us; 1355us; 1225us; 1355us; 1226us; 1355us; 1230us; 1355us; 1232us; 1355us; 1236us; 1355us; 1238us; 1355us; 1242us; 1355us; 1245us; 1355us; 1247us; 1355us; 1249us; 1355us; 1250us; 1355us; 1252us; 1355us; 1253us; 1355us; 1255us; 1355us; 1256us; 1355us; 1258us; 1355us; 1259us; 1355us; 1261us; 1355us; 1262us; 1355us; 1264us; 1355us; 1265us; 1355us; 1271us; 1355us; 1272us; 1355us; 1277us; 1355us; 1279us; 1355us; 1281us; 1355us; 1282us; 1355us; 1283us; 1355us; 1286us; 1355us; 1293us; 1355us; 1294us; 1355us; 1297us; 1355us; 1298us; 1355us; 1311us; 1355us; 1318us; 1355us; 1325us; 1355us; 1332us; 1355us; 1342us; 1355us; 1345us; 1355us; 1347us; 1355us; 1350us; 1355us; 1362us; 1355us; 1369us; 1355us; 1370us; 1355us; 1376us; 1355us; 1382us; 1355us; 1383us; 1355us; 1384us; 1355us; 1400us; 1355us; 1410us; 1355us; 1423us; 1355us; 1424us; 1355us; 1426us; 1355us; 1428us; 1355us; 1432us; 1355us; 1433us; 1355us; 1440us; 1355us; 1455us; 1355us; 1460us; 1355us; 1465us; 1355us; 1490us; 1355us; 1523us; 1355us; 1532us; 1355us; 1537us; 1355us; 1668us; 1355us; 1827us; 1355us; 1831us; 1355us; 11us; 65535us; 315us; 316us; 319us; 320us; 324us; 325us; 351us; 352us; 492us; 494us; 715us; 716us; 727us; 731us; 730us; 731us; 1269us; 1271us; 1270us; 1272us; 1454us; 1455us; 5us; 65535us; 100us; 582us; 175us; 582us; 431us; 582us; 561us; 577us; 859us; 582us; 14us; 65535us; 31us; 264us; 64us; 121us; 87us; 121us; 187us; 190us; 226us; 264us; 240us; 264us; 258us; 264us; 274us; 276us; 302us; 329us; 313us; 329us; 335us; 450us; 1438us; 1445us; 1839us; 1841us; 1840us; 1841us; 10us; 65535us; 31us; 49us; 64us; 49us; 87us; 49us; 226us; 49us; 240us; 49us; 258us; 49us; 302us; 327us; 313us; 327us; 1844us; 1846us; 1845us; 1846us; 7us; 65535us; 541us; 542us; 544us; 545us; 883us; 884us; 990us; 1414us; 1410us; 1416us; 1411us; 1412us; 1849us; 1850us; 5us; 65535us; 550us; 551us; 553us; 554us; 991us; 1527us; 1523us; 1529us; 1524us; 1525us; 43us; 65535us; 538us; 539us; 567us; 568us; 609us; 610us; 612us; 613us; 616us; 617us; 646us; 647us; 649us; 650us; 718us; 719us; 803us; 804us; 822us; 825us; 823us; 824us; 827us; 828us; 870us; 871us; 900us; 901us; 903us; 904us; 908us; 909us; 911us; 912us; 988us; 1389us; 989us; 1390us; 1160us; 1319us; 1204us; 1205us; 1326us; 1327us; 1330us; 1331us; 1382us; 1385us; 1383us; 1385us; 1384us; 1385us; 1386us; 1387us; 1399us; 1400us; 1406us; 1407us; 1447us; 1448us; 1451us; 1452us; 1613us; 1614us; 1642us; 1643us; 1653us; 1655us; 1654us; 1655us; 1660us; 1661us; 1671us; 1672us; 1707us; 1708us; 1735us; 1736us; 1737us; 1738us; 1741us; 1742us; 1744us; 1745us; 1854us; 1855us; 26us; 65535us; 70us; 71us; 74us; 75us; 108us; 109us; 112us; 113us; 116us; 117us; 134us; 135us; 152us; 153us; 160us; 161us; 231us; 232us; 235us; 236us; 251us; 288us; 278us; 279us; 282us; 283us; 285us; 286us; 323us; 324us; 361us; 362us; 380us; 382us; 384us; 386us; 506us; 507us; 757us; 758us; 951us; 952us; 956us; 957us; 975us; 976us; 1233us; 1234us; 1239us; 1240us; 1858us; 1859us; 1us; 65535us; 1386us; 1388us; 17us; 65535us; 302us; 311us; 304us; 310us; 491us; 497us; 925us; 1431us; 1055us; 1075us; 1056us; 1063us; 1057us; 1062us; 1058us; 1060us; 1245us; 1246us; 1247us; 1248us; 1428us; 1430us; 1489us; 1493us; 1490us; 1492us; 1677us; 1678us; 1684us; 1688us; 1689us; 1691us; 1731us; 1733us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 2us; 3us; 4us; 5us; 7us; 15us; 20us; 26us; 31us; 36us; 41us; 46us; 70us; 72us; 74us; 76us; 83us; 88us; 90us; 93us; 96us; 99us; 103us; 110us; 120us; 130us; 140us; 143us; 145us; 148us; 151us; 155us; 157us; 160us; 163us; 166us; 170us; 179us; 188us; 200us; 204us; 207us; 210us; 213us; 219us; 221us; 223us; 226us; 229us; 232us; 236us; 242us; 252us; 263us; 274us; 290us; 315us; 317us; 319us; 322us; 324us; 406us; 525us; 644us; 646us; 649us; 652us; 657us; 664us; 667us; 671us; 674us; 678us; 682us; 686us; 690us; 701us; 712us; 714us; 717us; 721us; 725us; 728us; 739us; 743us; 746us; 748us; 793us; 804us; 871us; 884us; 886us; 891us; 894us; 897us; 900us; 903us; 907us; 910us; 915us; 920us; 923us; 929us; 936us; 1004us; 1073us; 1079us; 1089us; 1091us; 1093us; 1097us; 1103us; 1105us; 1107us; 1112us; 1116us; 1118us; 1122us; 1126us; 1131us; 1133us; 1137us; 1143us; 1147us; 1151us; 1153us; 1157us; 1161us; 1166us; 1171us; 1175us; 1179us; 1183us; 1187us; 1192us; 1199us; 1206us; 1208us; 1210us; 1329us; 1337us; 1456us; 1574us; 1578us; 1584us; 1703us; 1705us; 1707us; 1711us; 1714us; 1716us; 1721us; 1724us; 1730us; 1733us; 1735us; 1738us; 1740us; 1742us; 1744us; 1747us; 2013us; 2015us; 2020us; 2024us; 2217us; 2221us; 2225us; 2228us; 2230us; 2244us; 2258us; 2272us; 2275us; 2278us; 2314us; 2318us; 2327us; 2372us; 2375us; 2398us; 2421us; 2444us; 2447us; 2450us; 2454us; 2480us; 2487us; 2493us; 2546us; 2548us; 2606us; 2710us; 2715us; 2830us; 2832us; 2836us; 2841us; 2848us; 2855us; 2857us; 2859us; 2862us; 2865us; 2867us; 2982us; 3111us; 3241us; 3246us; 3386us; 3389us; 3392us; 3395us; 3400us; 3547us; 3694us; 3885us; 4032us; 4179us; 4183us; 4187us; 4189us; 4336us; 4338us; 4341us; 4345us; 4351us; 4353us; 4355us; 4357us; 4359us; 4363us; 4365us; 4370us; 4372us; 4374us; 4376us; 4379us; 4386us; 4393us; 4397us; 4403us; 4407us; 4409us; 4411us; 4413us; 4416us; 4418us; 4423us; 4429us; 4576us; 4725us; 4840us; 4955us; 4959us; 4965us; 4969us; 4979us; 4989us; 4992us; 5004us; 5036us; 5038us; 5070us; 5077us; 5171us; 5265us; 5332us; 5352us; 5357us; 5360us; 5427us; 5432us; 5500us; 5574us; 5579us; 5586us; 5595us; 5598us; 5602us; 5604us; 5611us; 5618us; 5625us; 5631us; 5740us; 5853us; 6197us; 6318us; 6518us; 6526us; 6529us; 6537us; 6549us; 6599us; 6609us; 6749us; 6764us; 6777us; 6780us; 6792us; 6797us; 6800us; 6811us; 6814us; 6816us; 6834us; 6843us; 6848us; 6849us; 6861us; 6869us; 6874us; 6884us; 6887us; 6890us; 6893us; 7161us; 7427us; 7430us; 7435us; 7582us; 7594us; 7600us; 7615us; 7626us; 7634us; 7640us; 7684us; 7711us; 7713us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 7us; 1us; 8us; 1us; 9us; 1us; 10us; 2us; 11us; 14us; 1us; 11us; 2us; 12us; 15us; 1us; 12us; 2us; 13us; 16us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 16us; 1us; 16us; 2us; 17us; 18us; 1us; 18us; 7us; 19us; 136us; 137us; 138us; 139us; 140us; 141us; 7us; 19us; 136us; 137us; 138us; 139us; 140us; 141us; 48us; 19us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 1us; 20us; 2us; 21us; 22us; 1us; 22us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 25us; 2us; 25us; 27us; 1us; 27us; 1us; 28us; 2us; 29us; 30us; 1us; 29us; 1us; 30us; 1us; 30us; 3us; 31us; 46us; 49us; 1us; 31us; 1us; 32us; 1us; 32us; 1us; 32us; 3us; 32us; 957us; 958us; 1us; 33us; 1us; 33us; 3us; 33us; 957us; 958us; 2us; 34us; 35us; 1us; 35us; 2us; 36us; 37us; 1us; 36us; 1us; 38us; 1us; 38us; 1us; 38us; 6us; 39us; 53us; 54us; 55us; 56us; 58us; 6us; 39us; 53us; 54us; 55us; 56us; 58us; 3us; 39us; 53us; 54us; 1us; 39us; 1us; 40us; 1us; 41us; 3us; 42us; 43us; 44us; 2us; 42us; 43us; 1us; 42us; 1us; 42us; 1us; 43us; 3us; 44us; 46us; 49us; 1us; 44us; 1us; 45us; 2us; 46us; 49us; 2us; 48us; 50us; 2us; 48us; 50us; 1us; 48us; 1us; 49us; 1us; 49us; 1us; 49us; 1us; 51us; 1us; 52us; 5us; 53us; 54us; 55us; 56us; 58us; 5us; 53us; 54us; 55us; 56us; 58us; 2us; 53us; 54us; 2us; 53us; 54us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 2us; 60us; 61us; 48us; 60us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 1us; 61us; 48us; 61us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 1us; 61us; 1us; 61us; 3us; 62us; 63us; 146us; 1us; 62us; 1us; 62us; 1us; 63us; 1us; 63us; 1us; 63us; 1us; 63us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 65us; 1us; 65us; 2us; 66us; 67us; 1us; 66us; 1us; 66us; 2us; 68us; 69us; 1us; 68us; 1us; 68us; 1us; 69us; 3us; 70us; 79us; 80us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 71us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 74us; 1us; 74us; 1us; 74us; 1us; 75us; 3us; 76us; 77us; 78us; 2us; 76us; 77us; 1us; 76us; 1us; 77us; 1us; 78us; 1us; 78us; 2us; 79us; 80us; 2us; 79us; 80us; 1us; 79us; 1us; 80us; 2us; 81us; 82us; 2us; 81us; 82us; 1us; 81us; 1us; 82us; 2us; 83us; 84us; 2us; 83us; 84us; 1us; 83us; 1us; 84us; 1us; 85us; 1us; 86us; 1us; 88us; 1us; 88us; 1us; 88us; 7us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 12us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 269us; 270us; 271us; 272us; 273us; 7us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 12us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 269us; 270us; 271us; 272us; 273us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 90us; 4us; 90us; 881us; 882us; 883us; 1us; 91us; 4us; 91us; 881us; 882us; 883us; 1us; 92us; 1us; 92us; 3us; 93us; 94us; 176us; 1us; 93us; 1us; 93us; 1us; 94us; 1us; 94us; 1us; 95us; 1us; 95us; 1us; 95us; 1us; 97us; 1us; 97us; 2us; 98us; 99us; 2us; 98us; 99us; 1us; 98us; 1us; 99us; 2us; 100us; 101us; 1us; 101us; 1us; 101us; 1us; 102us; 2us; 103us; 104us; 1us; 104us; 1us; 105us; 1us; 105us; 1us; 106us; 1us; 106us; 1us; 106us; 2us; 108us; 109us; 1us; 108us; 1us; 109us; 1us; 109us; 2us; 110us; 133us; 1us; 110us; 2us; 111us; 112us; 1us; 112us; 2us; 113us; 114us; 1us; 113us; 1us; 115us; 1us; 115us; 1us; 115us; 11us; 116us; 124us; 125us; 126us; 128us; 136us; 137us; 138us; 139us; 140us; 141us; 10us; 116us; 124us; 125us; 126us; 136us; 137us; 138us; 139us; 140us; 141us; 2us; 116us; 141us; 1us; 116us; 1us; 117us; 3us; 118us; 119us; 120us; 2us; 118us; 119us; 1us; 118us; 1us; 118us; 1us; 119us; 2us; 120us; 133us; 1us; 120us; 1us; 121us; 1us; 122us; 10us; 124us; 125us; 126us; 128us; 136us; 137us; 138us; 139us; 140us; 141us; 9us; 124us; 125us; 126us; 136us; 137us; 138us; 139us; 140us; 141us; 50us; 124us; 125us; 126us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 2us; 124us; 125us; 1us; 124us; 1us; 127us; 1us; 128us; 4us; 129us; 130us; 131us; 132us; 1us; 129us; 2us; 130us; 132us; 1us; 130us; 1us; 133us; 2us; 133us; 152us; 2us; 133us; 157us; 1us; 133us; 1us; 133us; 1us; 134us; 1us; 135us; 6us; 136us; 137us; 138us; 139us; 140us; 141us; 6us; 136us; 137us; 138us; 139us; 140us; 141us; 1us; 136us; 3us; 136us; 528us; 529us; 1us; 137us; 5us; 137us; 530us; 531us; 532us; 533us; 1us; 138us; 1us; 139us; 1us; 139us; 1us; 139us; 1us; 140us; 1us; 141us; 1us; 141us; 1us; 141us; 2us; 142us; 159us; 1us; 142us; 1us; 143us; 2us; 144us; 145us; 3us; 144us; 957us; 958us; 1us; 145us; 4us; 145us; 881us; 882us; 883us; 3us; 146us; 957us; 958us; 1us; 146us; 3us; 147us; 957us; 958us; 5us; 148us; 149us; 150us; 151us; 152us; 2us; 148us; 149us; 1us; 148us; 1us; 149us; 2us; 150us; 151us; 1us; 150us; 1us; 151us; 1us; 152us; 1us; 153us; 3us; 154us; 957us; 958us; 3us; 155us; 156us; 157us; 2us; 155us; 156us; 1us; 155us; 1us; 156us; 1us; 157us; 1us; 158us; 1us; 158us; 1us; 158us; 1us; 159us; 2us; 161us; 162us; 1us; 162us; 4us; 163us; 164us; 165us; 166us; 3us; 163us; 165us; 168us; 2us; 163us; 165us; 1us; 163us; 1us; 163us; 2us; 164us; 523us; 1us; 164us; 1us; 164us; 1us; 165us; 1us; 166us; 1us; 167us; 2us; 168us; 1028us; 1us; 168us; 3us; 169us; 957us; 958us; 1us; 169us; 1us; 169us; 2us; 170us; 171us; 3us; 170us; 957us; 958us; 1us; 170us; 1us; 170us; 1us; 171us; 3us; 171us; 957us; 958us; 1us; 171us; 1us; 171us; 1us; 171us; 1us; 172us; 1us; 172us; 1us; 173us; 1us; 173us; 2us; 174us; 956us; 1us; 174us; 1us; 175us; 1us; 175us; 4us; 176us; 217us; 223us; 226us; 1us; 176us; 1us; 177us; 1us; 178us; 1us; 179us; 1us; 180us; 1us; 180us; 1us; 180us; 1us; 181us; 1us; 181us; 1us; 181us; 4us; 183us; 184us; 185us; 186us; 1us; 184us; 1us; 184us; 1us; 185us; 1us; 186us; 1us; 186us; 1us; 186us; 1us; 186us; 1us; 186us; 1us; 186us; 1us; 186us; 4us; 187us; 188us; 197us; 198us; 2us; 187us; 188us; 2us; 187us; 188us; 2us; 187us; 188us; 2us; 187us; 188us; 1us; 187us; 1us; 187us; 1us; 188us; 1us; 189us; 1us; 189us; 1us; 190us; 1us; 191us; 1us; 192us; 1us; 192us; 1us; 192us; 1us; 193us; 3us; 194us; 195us; 196us; 2us; 194us; 195us; 1us; 194us; 1us; 195us; 2us; 196us; 203us; 1us; 196us; 2us; 197us; 198us; 2us; 197us; 198us; 1us; 197us; 1us; 198us; 2us; 199us; 200us; 2us; 199us; 200us; 1us; 199us; 1us; 200us; 1us; 201us; 1us; 202us; 1us; 203us; 1us; 203us; 1us; 205us; 1us; 205us; 1us; 205us; 1us; 206us; 1us; 206us; 2us; 207us; 208us; 2us; 207us; 208us; 1us; 207us; 1us; 208us; 2us; 209us; 210us; 1us; 210us; 1us; 210us; 1us; 211us; 1us; 211us; 1us; 211us; 1us; 211us; 1us; 211us; 1us; 211us; 2us; 212us; 213us; 2us; 212us; 213us; 2us; 212us; 213us; 1us; 212us; 1us; 212us; 1us; 213us; 2us; 214us; 215us; 1us; 215us; 11us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 223us; 224us; 225us; 226us; 16us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 223us; 224us; 225us; 226us; 269us; 270us; 271us; 272us; 273us; 11us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 223us; 224us; 225us; 226us; 16us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 223us; 224us; 225us; 226us; 269us; 270us; 271us; 272us; 273us; 1us; 216us; 1us; 217us; 2us; 218us; 224us; 1us; 218us; 1us; 218us; 1us; 219us; 4us; 219us; 881us; 882us; 883us; 1us; 219us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 221us; 1us; 222us; 1us; 222us; 1us; 223us; 1us; 223us; 1us; 224us; 1us; 224us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 226us; 1us; 226us; 1us; 227us; 1us; 227us; 1us; 227us; 1us; 227us; 1us; 227us; 1us; 227us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 230us; 1us; 230us; 2us; 231us; 472us; 1us; 231us; 1us; 231us; 1us; 232us; 1us; 232us; 1us; 232us; 1us; 233us; 2us; 234us; 235us; 1us; 234us; 1us; 234us; 1us; 234us; 1us; 235us; 1us; 237us; 1us; 238us; 1us; 239us; 1us; 240us; 1us; 241us; 2us; 243us; 244us; 1us; 243us; 1us; 243us; 1us; 246us; 1us; 246us; 1us; 246us; 3us; 248us; 249us; 250us; 2us; 248us; 249us; 1us; 248us; 1us; 249us; 1us; 249us; 1us; 249us; 1us; 250us; 1us; 251us; 1us; 253us; 1us; 253us; 1us; 254us; 2us; 256us; 257us; 1us; 256us; 1us; 257us; 2us; 258us; 259us; 2us; 258us; 259us; 1us; 258us; 1us; 259us; 1us; 260us; 2us; 261us; 262us; 2us; 261us; 262us; 1us; 261us; 4us; 263us; 264us; 265us; 266us; 5us; 263us; 264us; 265us; 266us; 386us; 3us; 263us; 264us; 265us; 1us; 263us; 1us; 263us; 1us; 264us; 1us; 264us; 1us; 265us; 1us; 266us; 1us; 266us; 1us; 266us; 1us; 267us; 1us; 268us; 5us; 269us; 270us; 271us; 272us; 273us; 5us; 269us; 270us; 271us; 272us; 273us; 4us; 269us; 877us; 957us; 958us; 1us; 269us; 1us; 269us; 1us; 269us; 1us; 270us; 1us; 271us; 1us; 272us; 5us; 273us; 884us; 905us; 906us; 917us; 2us; 273us; 902us; 2us; 273us; 417us; 1us; 273us; 1us; 273us; 3us; 274us; 275us; 276us; 2us; 274us; 275us; 1us; 274us; 1us; 275us; 1us; 276us; 1us; 276us; 6us; 277us; 907us; 908us; 909us; 910us; 911us; 1us; 277us; 1us; 278us; 3us; 279us; 280us; 281us; 2us; 279us; 280us; 1us; 279us; 1us; 280us; 1us; 281us; 1us; 281us; 1us; 282us; 1us; 283us; 1us; 284us; 1us; 285us; 1us; 286us; 3us; 287us; 288us; 289us; 4us; 287us; 289us; 957us; 958us; 1us; 288us; 3us; 288us; 957us; 958us; 1us; 289us; 1us; 290us; 1us; 291us; 2us; 291us; 292us; 1us; 291us; 2us; 292us; 295us; 3us; 292us; 296us; 297us; 1us; 292us; 2us; 292us; 296us; 1us; 292us; 1us; 293us; 1us; 294us; 1us; 294us; 1us; 295us; 1us; 295us; 1us; 295us; 1us; 295us; 1us; 296us; 1us; 299us; 1us; 299us; 1us; 299us; 1us; 299us; 1us; 299us; 1us; 300us; 2us; 302us; 455us; 1us; 305us; 2us; 305us; 306us; 2us; 306us; 850us; 2us; 306us; 852us; 1us; 306us; 1us; 306us; 1us; 307us; 1us; 308us; 1us; 308us; 1us; 308us; 1us; 308us; 8us; 309us; 310us; 311us; 312us; 313us; 315us; 316us; 317us; 1us; 309us; 1us; 309us; 7us; 310us; 311us; 312us; 313us; 315us; 316us; 317us; 1us; 310us; 3us; 311us; 316us; 317us; 1us; 311us; 1us; 312us; 1us; 313us; 1us; 313us; 1us; 313us; 1us; 314us; 2us; 314us; 318us; 1us; 314us; 1us; 314us; 1us; 314us; 1us; 314us; 1us; 314us; 1us; 315us; 1us; 315us; 1us; 316us; 1us; 318us; 4us; 318us; 881us; 882us; 883us; 4us; 319us; 881us; 882us; 883us; 1us; 320us; 1us; 320us; 1us; 321us; 1us; 321us; 1us; 321us; 2us; 322us; 336us; 1us; 323us; 2us; 324us; 325us; 1us; 324us; 1us; 324us; 5us; 326us; 327us; 328us; 329us; 330us; 5us; 326us; 327us; 328us; 329us; 330us; 5us; 326us; 327us; 328us; 329us; 330us; 2us; 327us; 328us; 1us; 327us; 1us; 328us; 1us; 329us; 1us; 329us; 1us; 330us; 1us; 330us; 1us; 331us; 6us; 332us; 333us; 959us; 960us; 962us; 963us; 1us; 332us; 1us; 332us; 1us; 333us; 1us; 333us; 1us; 333us; 5us; 334us; 335us; 337us; 338us; 956us; 1us; 334us; 2us; 335us; 338us; 2us; 335us; 338us; 2us; 335us; 338us; 1us; 336us; 1us; 337us; 1us; 337us; 2us; 339us; 340us; 1us; 339us; 1us; 339us; 2us; 341us; 956us; 1us; 341us; 4us; 341us; 881us; 882us; 883us; 4us; 342us; 881us; 882us; 883us; 1us; 343us; 1us; 344us; 2us; 345us; 346us; 2us; 345us; 1028us; 1us; 345us; 1us; 346us; 1us; 347us; 1us; 347us; 1us; 348us; 1us; 348us; 1us; 348us; 1us; 348us; 1us; 348us; 1us; 349us; 1us; 349us; 1us; 350us; 1us; 351us; 1us; 351us; 1us; 351us; 1us; 351us; 1us; 351us; 3us; 352us; 353us; 354us; 2us; 353us; 354us; 1us; 353us; 1us; 354us; 1us; 356us; 3us; 356us; 957us; 958us; 1us; 357us; 1us; 357us; 1us; 357us; 1us; 358us; 1us; 359us; 1us; 359us; 1us; 360us; 1us; 360us; 1us; 360us; 1us; 360us; 1us; 361us; 1us; 361us; 1us; 361us; 1us; 362us; 1us; 363us; 1us; 364us; 1us; 365us; 1us; 366us; 1us; 367us; 1us; 368us; 1us; 368us; 1us; 368us; 1us; 368us; 1us; 368us; 1us; 368us; 1us; 368us; 1us; 368us; 2us; 369us; 372us; 2us; 370us; 373us; 1us; 372us; 1us; 372us; 1us; 373us; 1us; 373us; 2us; 374us; 375us; 5us; 374us; 375us; 377us; 378us; 379us; 1us; 375us; 3us; 376us; 957us; 958us; 4us; 377us; 378us; 379us; 381us; 1us; 377us; 1us; 377us; 1us; 377us; 1us; 378us; 1us; 379us; 1us; 380us; 2us; 380us; 382us; 1us; 380us; 2us; 381us; 382us; 1us; 383us; 1us; 383us; 1us; 384us; 1us; 384us; 1us; 384us; 1us; 386us; 1us; 386us; 1us; 387us; 3us; 388us; 389us; 390us; 3us; 388us; 389us; 390us; 3us; 388us; 389us; 390us; 3us; 388us; 389us; 390us; 2us; 388us; 389us; 1us; 388us; 1us; 389us; 1us; 390us; 2us; 391us; 392us; 2us; 391us; 392us; 1us; 391us; 1us; 392us; 1us; 393us; 1us; 394us; 2us; 394us; 395us; 1us; 395us; 1us; 397us; 2us; 397us; 398us; 1us; 397us; 1us; 397us; 1us; 398us; 1us; 398us; 1us; 399us; 2us; 400us; 401us; 1us; 400us; 1us; 400us; 1us; 401us; 1us; 402us; 1us; 403us; 1us; 404us; 1us; 405us; 1us; 406us; 1us; 407us; 1us; 408us; 1us; 409us; 1us; 410us; 1us; 411us; 1us; 412us; 1us; 413us; 1us; 414us; 2us; 414us; 468us; 1us; 415us; 1us; 416us; 1us; 417us; 1us; 418us; 1us; 419us; 2us; 420us; 422us; 1us; 420us; 1us; 420us; 2us; 421us; 423us; 2us; 421us; 423us; 1us; 421us; 1us; 421us; 1us; 424us; 1us; 425us; 1us; 425us; 1us; 425us; 1us; 426us; 1us; 427us; 1us; 427us; 2us; 428us; 429us; 1us; 429us; 1us; 429us; 6us; 430us; 442us; 443us; 444us; 449us; 451us; 1us; 431us; 1us; 432us; 1us; 432us; 2us; 433us; 434us; 3us; 433us; 435us; 436us; 1us; 433us; 1us; 433us; 1us; 434us; 1us; 436us; 1us; 436us; 5us; 437us; 438us; 439us; 440us; 441us; 2us; 437us; 439us; 1us; 437us; 1us; 438us; 1us; 439us; 2us; 440us; 523us; 1us; 440us; 1us; 441us; 6us; 442us; 443us; 443us; 444us; 449us; 451us; 6us; 442us; 443us; 444us; 444us; 449us; 451us; 6us; 442us; 443us; 444us; 448us; 449us; 451us; 6us; 442us; 443us; 444us; 449us; 449us; 451us; 6us; 442us; 443us; 444us; 449us; 450us; 451us; 6us; 442us; 443us; 444us; 449us; 451us; 451us; 6us; 442us; 443us; 444us; 449us; 451us; 525us; 6us; 442us; 443us; 444us; 449us; 451us; 526us; 6us; 442us; 443us; 444us; 449us; 451us; 577us; 7us; 442us; 443us; 444us; 449us; 451us; 578us; 579us; 1us; 442us; 1us; 442us; 1us; 443us; 1us; 444us; 2us; 445us; 448us; 2us; 446us; 450us; 1us; 447us; 1us; 448us; 1us; 449us; 1us; 450us; 1us; 451us; 2us; 452us; 453us; 1us; 452us; 2us; 453us; 1028us; 1us; 453us; 1us; 454us; 4us; 454us; 995us; 997us; 998us; 1us; 454us; 7us; 454us; 489us; 490us; 493us; 495us; 498us; 500us; 5us; 455us; 456us; 457us; 458us; 474us; 3us; 456us; 457us; 458us; 1us; 456us; 1us; 457us; 1us; 457us; 1us; 458us; 1us; 458us; 1us; 459us; 1us; 459us; 1us; 460us; 9us; 461us; 479us; 480us; 481us; 482us; 959us; 960us; 962us; 963us; 1us; 461us; 1us; 461us; 1us; 462us; 4us; 463us; 464us; 465us; 466us; 1us; 463us; 1us; 464us; 1us; 464us; 1us; 465us; 1us; 465us; 1us; 467us; 1us; 468us; 1us; 468us; 1us; 469us; 1us; 469us; 1us; 469us; 1us; 470us; 1us; 470us; 1us; 470us; 1us; 471us; 1us; 471us; 1us; 471us; 1us; 473us; 2us; 473us; 980us; 1us; 473us; 1us; 474us; 1us; 475us; 1us; 476us; 1us; 477us; 1us; 478us; 8us; 479us; 480us; 481us; 482us; 959us; 960us; 962us; 963us; 2us; 479us; 480us; 1us; 479us; 1us; 480us; 3us; 481us; 523us; 960us; 2us; 481us; 960us; 1us; 482us; 4us; 483us; 484us; 485us; 486us; 4us; 483us; 484us; 485us; 486us; 4us; 483us; 484us; 491us; 497us; 1us; 483us; 1us; 484us; 2us; 485us; 523us; 1us; 485us; 1us; 486us; 7us; 487us; 489us; 490us; 493us; 495us; 498us; 500us; 7us; 489us; 490us; 490us; 493us; 495us; 498us; 500us; 7us; 489us; 490us; 493us; 494us; 495us; 498us; 500us; 7us; 489us; 490us; 493us; 495us; 495us; 498us; 500us; 7us; 489us; 490us; 493us; 495us; 497us; 498us; 500us; 7us; 489us; 490us; 493us; 495us; 498us; 498us; 500us; 7us; 489us; 490us; 493us; 495us; 498us; 499us; 500us; 6us; 489us; 490us; 493us; 495us; 498us; 500us; 7us; 489us; 490us; 493us; 495us; 498us; 500us; 500us; 7us; 489us; 490us; 493us; 495us; 498us; 500us; 503us; 8us; 489us; 490us; 493us; 495us; 498us; 500us; 505us; 506us; 14us; 489us; 490us; 493us; 495us; 498us; 500us; 571us; 572us; 774us; 775us; 776us; 777us; 778us; 779us; 7us; 489us; 490us; 493us; 495us; 498us; 500us; 642us; 1us; 489us; 1us; 489us; 1us; 490us; 2us; 491us; 497us; 2us; 492us; 499us; 1us; 493us; 1us; 493us; 1us; 494us; 1us; 495us; 1us; 496us; 1us; 497us; 1us; 498us; 1us; 499us; 1us; 500us; 2us; 501us; 502us; 1us; 501us; 2us; 502us; 1028us; 1us; 502us; 3us; 503us; 957us; 958us; 1us; 503us; 1us; 505us; 2us; 506us; 1028us; 1us; 506us; 2us; 507us; 508us; 2us; 507us; 508us; 1us; 507us; 1us; 508us; 1us; 509us; 1us; 510us; 1us; 510us; 1us; 510us; 48us; 511us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 2us; 512us; 513us; 1us; 512us; 2us; 514us; 515us; 1us; 514us; 1us; 514us; 1us; 516us; 1us; 516us; 52us; 517us; 518us; 519us; 520us; 521us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 53us; 517us; 518us; 519us; 520us; 521us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 717us; 55us; 517us; 518us; 519us; 520us; 521us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 770us; 771us; 772us; 2us; 517us; 518us; 1us; 517us; 1us; 520us; 1us; 520us; 1us; 521us; 1us; 521us; 1us; 521us; 1us; 521us; 5us; 522us; 530us; 531us; 532us; 533us; 1us; 523us; 2us; 523us; 558us; 2us; 523us; 561us; 2us; 523us; 566us; 2us; 523us; 569us; 2us; 523us; 571us; 2us; 523us; 693us; 2us; 523us; 708us; 2us; 523us; 736us; 2us; 523us; 740us; 2us; 523us; 745us; 3us; 523us; 745us; 960us; 2us; 523us; 760us; 2us; 523us; 836us; 1us; 524us; 1us; 525us; 1us; 525us; 1us; 525us; 1us; 525us; 1us; 525us; 1us; 526us; 1us; 526us; 1us; 526us; 1us; 526us; 1us; 526us; 1us; 526us; 2us; 528us; 529us; 2us; 528us; 529us; 1us; 528us; 1us; 529us; 4us; 530us; 531us; 532us; 533us; 1us; 530us; 1us; 531us; 2us; 532us; 533us; 1us; 532us; 1us; 533us; 1us; 534us; 1us; 535us; 1us; 536us; 2us; 537us; 538us; 2us; 537us; 538us; 1us; 537us; 1us; 538us; 2us; 539us; 540us; 2us; 539us; 540us; 1us; 539us; 1us; 540us; 3us; 541us; 542us; 543us; 3us; 541us; 542us; 543us; 1us; 541us; 1us; 542us; 1us; 543us; 1us; 543us; 3us; 544us; 545us; 546us; 49us; 544us; 545us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 1us; 544us; 1us; 545us; 1us; 546us; 1us; 547us; 48us; 547us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 2us; 548us; 549us; 48us; 548us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 1us; 550us; 1us; 550us; 2us; 551us; 552us; 1us; 551us; 6us; 553us; 554us; 555us; 556us; 557us; 558us; 51us; 553us; 554us; 555us; 556us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 3us; 553us; 554us; 555us; 2us; 553us; 554us; 1us; 553us; 1us; 554us; 1us; 555us; 1us; 555us; 1us; 556us; 1us; 557us; 1us; 558us; 15us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 582us; 6us; 559us; 560us; 561us; 562us; 563us; 582us; 4us; 559us; 560us; 561us; 562us; 2us; 559us; 560us; 1us; 559us; 1us; 560us; 1us; 561us; 1us; 562us; 1us; 563us; 5us; 564us; 565us; 566us; 567us; 568us; 4us; 564us; 565us; 566us; 567us; 2us; 564us; 565us; 1us; 564us; 1us; 565us; 1us; 566us; 1us; 567us; 1us; 568us; 1us; 569us; 1us; 569us; 1us; 569us; 1us; 570us; 1us; 571us; 2us; 572us; 1089us; 2us; 573us; 575us; 48us; 573us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 2us; 574us; 576us; 48us; 574us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 1us; 575us; 1us; 576us; 1us; 577us; 1us; 577us; 1us; 577us; 1us; 577us; 1us; 577us; 1us; 577us; 1us; 577us; 2us; 578us; 579us; 2us; 578us; 579us; 2us; 578us; 579us; 2us; 578us; 579us; 2us; 578us; 579us; 1us; 578us; 1us; 578us; 1us; 579us; 1us; 580us; 1us; 580us; 1us; 580us; 1us; 580us; 1us; 580us; 1us; 581us; 1us; 581us; 1us; 581us; 1us; 582us; 1us; 582us; 1us; 583us; 48us; 583us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 1us; 584us; 1us; 584us; 48us; 585us; 586us; 587us; 588us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 648us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 652us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 656us; 663us; 664us; 49us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 659us; 660us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 661us; 663us; 664us; 47us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 664us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 717us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 718us; 51us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 770us; 771us; 772us; 774us; 51us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 770us; 771us; 772us; 778us; 49us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 770us; 771us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 771us; 48us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 778us; 49us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 663us; 664us; 1050us; 1051us; 1us; 585us; 1us; 585us; 1us; 586us; 1us; 586us; 1us; 587us; 1us; 587us; 1us; 588us; 2us; 589us; 632us; 1us; 589us; 1us; 589us; 3us; 590us; 661us; 662us; 5us; 590us; 661us; 662us; 695us; 696us; 2us; 591us; 612us; 2us; 592us; 613us; 2us; 593us; 614us; 2us; 594us; 615us; 2us; 595us; 616us; 2us; 596us; 617us; 2us; 597us; 618us; 2us; 598us; 619us; 2us; 599us; 620us; 2us; 600us; 621us; 3us; 601us; 602us; 622us; 1us; 602us; 2us; 603us; 623us; 2us; 604us; 624us; 2us; 605us; 625us; 2us; 606us; 626us; 2us; 607us; 627us; 2us; 608us; 628us; 2us; 609us; 629us; 2us; 610us; 630us; 2us; 611us; 631us; 1us; 612us; 1us; 613us; 1us; 614us; 1us; 615us; 1us; 616us; 1us; 617us; 1us; 618us; 1us; 619us; 1us; 620us; 1us; 621us; 1us; 622us; 1us; 623us; 1us; 624us; 1us; 625us; 1us; 626us; 1us; 627us; 1us; 628us; 1us; 629us; 1us; 630us; 1us; 631us; 1us; 633us; 1us; 634us; 1us; 634us; 1us; 634us; 1us; 635us; 1us; 635us; 2us; 636us; 637us; 2us; 636us; 637us; 1us; 636us; 1us; 637us; 1us; 638us; 2us; 639us; 640us; 1us; 639us; 1us; 640us; 1us; 641us; 1us; 642us; 5us; 643us; 644us; 645us; 646us; 647us; 4us; 643us; 644us; 645us; 646us; 2us; 644us; 645us; 1us; 644us; 1us; 645us; 1us; 646us; 1us; 647us; 1us; 648us; 1us; 650us; 1us; 650us; 1us; 651us; 1us; 651us; 1us; 652us; 2us; 653us; 654us; 2us; 653us; 654us; 2us; 653us; 654us; 1us; 653us; 1us; 654us; 1us; 656us; 2us; 657us; 658us; 2us; 657us; 658us; 2us; 657us; 658us; 1us; 657us; 1us; 658us; 2us; 659us; 660us; 1us; 659us; 1us; 660us; 2us; 661us; 662us; 1us; 662us; 2us; 663us; 664us; 1us; 663us; 1us; 665us; 2us; 665us; 974us; 1us; 665us; 1us; 666us; 2us; 666us; 970us; 1us; 666us; 1us; 667us; 2us; 667us; 973us; 1us; 667us; 1us; 668us; 2us; 668us; 986us; 1us; 668us; 1us; 669us; 2us; 669us; 981us; 1us; 669us; 1us; 670us; 2us; 670us; 982us; 1us; 670us; 3us; 671us; 672us; 673us; 7us; 671us; 672us; 673us; 818us; 819us; 820us; 821us; 2us; 671us; 672us; 6us; 671us; 672us; 818us; 819us; 820us; 821us; 2us; 671us; 672us; 4us; 671us; 672us; 819us; 820us; 1us; 671us; 3us; 671us; 819us; 820us; 1us; 672us; 1us; 673us; 1us; 674us; 1us; 674us; 1us; 675us; 1us; 675us; 2us; 676us; 677us; 6us; 676us; 677us; 794us; 798us; 799us; 800us; 5us; 677us; 794us; 798us; 799us; 800us; 1us; 677us; 6us; 678us; 681us; 682us; 683us; 685us; 688us; 1us; 679us; 6us; 679us; 681us; 682us; 683us; 685us; 688us; 6us; 680us; 681us; 682us; 683us; 685us; 688us; 6us; 681us; 681us; 682us; 683us; 685us; 688us; 6us; 681us; 682us; 682us; 683us; 685us; 688us; 6us; 681us; 682us; 683us; 684us; 685us; 688us; 6us; 681us; 682us; 683us; 685us; 688us; 914us; 1us; 681us; 1us; 682us; 1us; 683us; 1us; 683us; 1us; 684us; 2us; 684us; 964us; 1us; 685us; 1us; 685us; 1us; 686us; 1us; 686us; 1us; 686us; 1us; 687us; 2us; 687us; 980us; 1us; 687us; 1us; 688us; 1us; 688us; 1us; 689us; 1us; 690us; 4us; 691us; 692us; 693us; 694us; 2us; 691us; 692us; 1us; 691us; 1us; 692us; 1us; 693us; 1us; 694us; 3us; 695us; 696us; 832us; 2us; 695us; 696us; 1us; 695us; 1us; 696us; 1us; 697us; 1us; 698us; 1us; 699us; 1us; 701us; 6us; 702us; 703us; 959us; 960us; 962us; 963us; 1us; 702us; 1us; 702us; 1us; 702us; 1us; 702us; 1us; 703us; 1us; 703us; 6us; 704us; 705us; 706us; 707us; 708us; 709us; 2us; 704us; 705us; 1us; 704us; 1us; 705us; 2us; 706us; 707us; 1us; 706us; 1us; 707us; 1us; 708us; 1us; 709us; 2us; 710us; 711us; 1us; 710us; 1us; 710us; 3us; 712us; 713us; 716us; 2us; 712us; 713us; 1us; 712us; 1us; 714us; 1us; 714us; 1us; 715us; 1us; 718us; 1us; 719us; 1us; 720us; 1us; 721us; 1us; 722us; 1us; 723us; 1us; 724us; 1us; 725us; 1us; 726us; 1us; 727us; 1us; 728us; 1us; 729us; 4us; 730us; 731us; 732us; 733us; 2us; 730us; 731us; 1us; 730us; 1us; 731us; 1us; 732us; 1us; 732us; 1us; 733us; 4us; 734us; 735us; 736us; 737us; 5us; 734us; 735us; 736us; 737us; 989us; 2us; 734us; 735us; 1us; 734us; 1us; 735us; 1us; 736us; 1us; 737us; 4us; 738us; 739us; 740us; 741us; 2us; 738us; 739us; 1us; 738us; 1us; 739us; 1us; 740us; 1us; 741us; 9us; 742us; 743us; 744us; 745us; 746us; 747us; 748us; 749us; 750us; 14us; 742us; 743us; 744us; 745us; 746us; 747us; 748us; 749us; 750us; 755us; 959us; 960us; 962us; 963us; 13us; 742us; 743us; 744us; 745us; 746us; 747us; 748us; 749us; 750us; 959us; 960us; 962us; 963us; 1us; 742us; 2us; 743us; 744us; 1us; 743us; 1us; 744us; 1us; 745us; 2us; 745us; 960us; 1us; 746us; 1us; 747us; 1us; 748us; 1us; 749us; 1us; 750us; 1us; 751us; 1us; 751us; 1us; 751us; 1us; 751us; 1us; 751us; 1us; 751us; 1us; 752us; 1us; 753us; 1us; 754us; 2us; 754us; 757us; 2us; 755us; 756us; 1us; 755us; 1us; 756us; 1us; 756us; 5us; 758us; 759us; 760us; 761us; 762us; 2us; 758us; 759us; 1us; 758us; 1us; 759us; 1us; 760us; 1us; 761us; 1us; 762us; 1us; 763us; 1us; 764us; 1us; 765us; 1us; 766us; 1us; 768us; 1us; 769us; 3us; 770us; 771us; 772us; 1us; 771us; 1us; 772us; 1us; 773us; 1us; 773us; 3us; 774us; 775us; 776us; 1us; 775us; 1us; 776us; 1us; 777us; 2us; 778us; 779us; 1us; 778us; 1us; 779us; 1us; 780us; 1us; 781us; 1us; 782us; 1us; 782us; 1us; 782us; 2us; 782us; 783us; 1us; 782us; 1us; 782us; 1us; 783us; 1us; 786us; 1us; 788us; 1us; 788us; 1us; 788us; 1us; 788us; 2us; 790us; 791us; 1us; 790us; 5us; 791us; 884us; 905us; 906us; 917us; 1us; 791us; 1us; 792us; 1us; 792us; 1us; 792us; 1us; 792us; 2us; 792us; 809us; 1us; 792us; 1us; 793us; 1us; 794us; 1us; 794us; 2us; 794us; 809us; 1us; 794us; 3us; 795us; 796us; 797us; 2us; 796us; 797us; 1us; 797us; 2us; 797us; 809us; 1us; 797us; 1us; 798us; 1us; 798us; 2us; 798us; 809us; 1us; 798us; 2us; 799us; 800us; 1us; 799us; 1us; 799us; 1us; 800us; 2us; 800us; 809us; 1us; 800us; 1us; 800us; 1us; 801us; 2us; 801us; 809us; 2us; 803us; 806us; 2us; 804us; 805us; 1us; 805us; 1us; 806us; 3us; 807us; 957us; 958us; 1us; 808us; 1us; 809us; 5us; 811us; 812us; 813us; 814us; 815us; 3us; 811us; 812us; 813us; 1us; 811us; 1us; 813us; 1us; 815us; 2us; 816us; 817us; 1us; 816us; 1us; 816us; 1us; 816us; 1us; 817us; 1us; 817us; 1us; 819us; 1us; 822us; 2us; 824us; 826us; 1us; 824us; 1us; 825us; 1us; 825us; 1us; 825us; 1us; 826us; 1us; 826us; 1us; 827us; 1us; 827us; 1us; 829us; 1us; 829us; 1us; 830us; 1us; 830us; 1us; 831us; 4us; 831us; 881us; 882us; 883us; 1us; 831us; 1us; 831us; 1us; 831us; 1us; 832us; 1us; 832us; 1us; 833us; 5us; 834us; 835us; 836us; 837us; 838us; 2us; 834us; 835us; 1us; 834us; 1us; 835us; 1us; 836us; 1us; 837us; 1us; 838us; 2us; 839us; 840us; 2us; 839us; 840us; 2us; 839us; 840us; 1us; 839us; 1us; 840us; 6us; 841us; 842us; 843us; 844us; 845us; 846us; 5us; 841us; 842us; 843us; 844us; 845us; 4us; 841us; 842us; 843us; 844us; 2us; 841us; 842us; 1us; 841us; 1us; 842us; 1us; 843us; 1us; 843us; 1us; 844us; 1us; 845us; 1us; 845us; 1us; 846us; 1us; 846us; 1us; 847us; 1us; 847us; 1us; 848us; 1us; 848us; 1us; 848us; 2us; 849us; 850us; 1us; 850us; 2us; 851us; 852us; 1us; 852us; 1us; 854us; 1us; 854us; 2us; 855us; 856us; 1us; 855us; 1us; 855us; 2us; 857us; 858us; 1us; 857us; 1us; 857us; 2us; 859us; 860us; 1us; 859us; 1us; 859us; 3us; 861us; 862us; 863us; 5us; 861us; 863us; 881us; 882us; 883us; 1us; 861us; 4us; 861us; 881us; 882us; 883us; 1us; 862us; 1us; 862us; 1us; 862us; 4us; 862us; 881us; 882us; 883us; 5us; 864us; 866us; 881us; 882us; 883us; 1us; 864us; 4us; 864us; 881us; 882us; 883us; 1us; 865us; 1us; 865us; 1us; 865us; 4us; 865us; 881us; 882us; 883us; 2us; 867us; 868us; 1us; 867us; 1us; 867us; 1us; 869us; 1us; 869us; 6us; 870us; 872us; 873us; 881us; 882us; 883us; 1us; 870us; 1us; 870us; 1us; 871us; 1us; 871us; 1us; 872us; 1us; 872us; 6us; 874us; 875us; 876us; 881us; 882us; 883us; 1us; 874us; 1us; 874us; 1us; 875us; 1us; 875us; 3us; 877us; 957us; 958us; 1us; 878us; 2us; 878us; 886us; 2us; 879us; 880us; 4us; 879us; 880us; 918us; 921us; 1us; 879us; 1us; 879us; 7us; 881us; 882us; 883us; 907us; 908us; 909us; 910us; 1us; 881us; 1us; 882us; 1us; 882us; 1us; 883us; 4us; 884us; 905us; 906us; 917us; 1us; 884us; 1us; 884us; 1us; 884us; 1us; 885us; 1us; 886us; 1us; 886us; 2us; 887us; 904us; 1us; 887us; 1us; 887us; 4us; 888us; 889us; 890us; 891us; 1us; 888us; 3us; 889us; 890us; 891us; 1us; 889us; 2us; 890us; 891us; 1us; 890us; 1us; 891us; 1us; 891us; 1us; 892us; 1us; 892us; 1us; 892us; 3us; 892us; 893us; 894us; 4us; 893us; 894us; 924us; 925us; 2us; 893us; 894us; 1us; 893us; 1us; 894us; 2us; 896us; 897us; 1us; 897us; 1us; 897us; 4us; 898us; 905us; 906us; 917us; 1us; 898us; 1us; 898us; 1us; 898us; 3us; 899us; 919us; 920us; 3us; 900us; 919us; 920us; 1us; 901us; 1us; 902us; 3us; 902us; 919us; 920us; 1us; 903us; 1us; 904us; 3us; 905us; 906us; 917us; 2us; 905us; 906us; 5us; 905us; 906us; 931us; 932us; 933us; 1us; 905us; 1us; 906us; 5us; 907us; 908us; 909us; 910us; 911us; 5us; 907us; 908us; 909us; 910us; 911us; 3us; 907us; 908us; 909us; 2us; 907us; 908us; 1us; 907us; 1us; 908us; 1us; 909us; 1us; 910us; 1us; 911us; 1us; 912us; 1us; 913us; 1us; 914us; 1us; 915us; 1us; 916us; 1us; 917us; 1us; 917us; 1us; 918us; 2us; 919us; 920us; 4us; 919us; 920us; 957us; 958us; 1us; 920us; 1us; 921us; 1us; 921us; 1us; 922us; 1us; 923us; 1us; 923us; 7us; 924us; 925us; 926us; 927us; 928us; 929us; 930us; 3us; 924us; 925us; 926us; 3us; 924us; 925us; 926us; 2us; 924us; 925us; 1us; 924us; 1us; 925us; 1us; 926us; 3us; 927us; 928us; 934us; 1us; 927us; 1us; 928us; 1us; 929us; 1us; 930us; 3us; 931us; 932us; 933us; 2us; 932us; 933us; 1us; 932us; 1us; 934us; 1us; 935us; 2us; 937us; 938us; 3us; 937us; 948us; 949us; 1us; 937us; 1us; 938us; 1us; 938us; 3us; 939us; 957us; 958us; 1us; 940us; 1us; 941us; 3us; 941us; 948us; 949us; 1us; 941us; 2us; 942us; 943us; 1us; 943us; 1us; 943us; 1us; 944us; 2us; 945us; 946us; 1us; 946us; 1us; 947us; 3us; 948us; 948us; 949us; 3us; 948us; 949us; 949us; 3us; 948us; 949us; 950us; 1us; 948us; 1us; 949us; 1us; 950us; 1us; 951us; 1us; 951us; 1us; 952us; 1us; 953us; 2us; 953us; 967us; 1us; 953us; 1us; 954us; 1us; 955us; 1us; 956us; 2us; 957us; 958us; 1us; 957us; 1us; 958us; 4us; 959us; 960us; 962us; 963us; 1us; 959us; 1us; 959us; 1us; 960us; 1us; 960us; 1us; 961us; 3us; 962us; 963us; 992us; 3us; 962us; 963us; 992us; 1us; 962us; 1us; 963us; 1us; 963us; 1us; 963us; 1us; 964us; 1us; 965us; 1us; 966us; 1us; 967us; 1us; 968us; 1us; 969us; 1us; 970us; 1us; 971us; 1us; 972us; 1us; 973us; 1us; 974us; 1us; 975us; 1us; 976us; 1us; 977us; 1us; 978us; 1us; 979us; 1us; 980us; 1us; 981us; 1us; 982us; 1us; 983us; 1us; 984us; 1us; 985us; 1us; 986us; 2us; 987us; 988us; 1us; 988us; 1us; 989us; 1us; 989us; 1us; 990us; 1us; 991us; 1us; 991us; 1us; 992us; 1us; 993us; 1us; 994us; 3us; 995us; 997us; 998us; 1us; 996us; 2us; 997us; 998us; 1us; 997us; 1us; 998us; 1us; 999us; 1us; 1000us; 1us; 1001us; 1us; 1002us; 1us; 1003us; 1us; 1004us; 2us; 1005us; 1006us; 1us; 1006us; 1us; 1007us; 1us; 1007us; 2us; 1009us; 1011us; 2us; 1010us; 1012us; 1us; 1011us; 1us; 1012us; 1us; 1013us; 1us; 1014us; 1us; 1015us; 1us; 1016us; 1us; 1017us; 1us; 1018us; 1us; 1020us; 1us; 1022us; 1us; 1024us; 1us; 1026us; 1us; 1028us; 1us; 1030us; 1us; 1034us; 1us; 1036us; 1us; 1038us; 1us; 1039us; 1us; 1040us; 1us; 1041us; 1us; 1042us; 1us; 1043us; 1us; 1044us; 1us; 1045us; 1us; 1046us; 1us; 1047us; 1us; 1048us; 1us; 1049us; 1us; 1051us; 1us; 1051us; 1us; 1052us; 2us; 1053us; 1054us; 1us; 1053us; 1us; 1053us; 1us; 1054us; 2us; 1055us; 1057us; 1us; 1055us; 1us; 1055us; 1us; 1056us; 1us; 1057us; 1us; 1058us; 1us; 1059us; 1us; 1061us; 1us; 1063us; 2us; 1063us; 1084us; 1us; 1063us; 1us; 1064us; 1us; 1065us; 1us; 1066us; 2us; 1066us; 1085us; 1us; 1066us; 1us; 1067us; 1us; 1068us; 1us; 1069us; 1us; 1069us; 1us; 1070us; 1us; 1071us; 1us; 1072us; 1us; 1073us; 1us; 1073us; 1us; 1074us; 1us; 1075us; 1us; 1076us; 1us; 1076us; 1us; 1077us; 1us; 1078us; 1us; 1079us; 1us; 1080us; 1us; 1081us; 1us; 1082us; 1us; 1083us; 1us; 1084us; 1us; 1085us; 1us; 1086us; 1us; 1087us; 1us; 1088us; 1us; 1089us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 26us; 28us; 30us; 32us; 35us; 37us; 40us; 42us; 45us; 47us; 49us; 51us; 53us; 55us; 57us; 59us; 62us; 64us; 72us; 80us; 129us; 131us; 134us; 136us; 138us; 140us; 142us; 144us; 147us; 149us; 151us; 154us; 156us; 158us; 160us; 164us; 166us; 168us; 170us; 172us; 176us; 178us; 180us; 184us; 187us; 189us; 192us; 194us; 196us; 198us; 200us; 207us; 214us; 218us; 220us; 222us; 224us; 228us; 231us; 233us; 235us; 237us; 241us; 243us; 245us; 248us; 251us; 254us; 256us; 258us; 260us; 262us; 264us; 266us; 272us; 278us; 281us; 284us; 286us; 288us; 290us; 292us; 294us; 296us; 298us; 300us; 302us; 304us; 306us; 308us; 310us; 312us; 314us; 317us; 366us; 368us; 417us; 419us; 421us; 425us; 427us; 429us; 431us; 433us; 435us; 437us; 439us; 441us; 443us; 445us; 447us; 450us; 452us; 454us; 457us; 459us; 461us; 463us; 467us; 469us; 471us; 473us; 475us; 477us; 479us; 481us; 483us; 485us; 487us; 489us; 491us; 493us; 495us; 499us; 502us; 504us; 506us; 508us; 510us; 513us; 516us; 518us; 520us; 523us; 526us; 528us; 530us; 533us; 536us; 538us; 540us; 542us; 544us; 546us; 548us; 550us; 558us; 571us; 579us; 592us; 594us; 596us; 598us; 600us; 602us; 604us; 606us; 608us; 610us; 612us; 617us; 619us; 624us; 626us; 628us; 632us; 634us; 636us; 638us; 640us; 642us; 644us; 646us; 648us; 650us; 653us; 656us; 658us; 660us; 663us; 665us; 667us; 669us; 672us; 674us; 676us; 678us; 680us; 682us; 684us; 687us; 689us; 691us; 693us; 696us; 698us; 701us; 703us; 706us; 708us; 710us; 712us; 714us; 726us; 737us; 740us; 742us; 744us; 748us; 751us; 753us; 755us; 757us; 760us; 762us; 764us; 766us; 777us; 787us; 838us; 841us; 843us; 845us; 847us; 852us; 854us; 857us; 859us; 861us; 864us; 867us; 869us; 871us; 873us; 875us; 882us; 889us; 891us; 895us; 897us; 903us; 905us; 907us; 909us; 911us; 913us; 915us; 917us; 919us; 922us; 924us; 926us; 929us; 933us; 935us; 940us; 944us; 946us; 950us; 956us; 959us; 961us; 963us; 966us; 968us; 970us; 972us; 974us; 978us; 982us; 985us; 987us; 989us; 991us; 993us; 995us; 997us; 999us; 1002us; 1004us; 1009us; 1013us; 1016us; 1018us; 1020us; 1023us; 1025us; 1027us; 1029us; 1031us; 1033us; 1036us; 1038us; 1042us; 1044us; 1046us; 1049us; 1053us; 1055us; 1057us; 1059us; 1063us; 1065us; 1067us; 1069us; 1071us; 1073us; 1075us; 1077us; 1080us; 1082us; 1084us; 1086us; 1091us; 1093us; 1095us; 1097us; 1099us; 1101us; 1103us; 1105us; 1107us; 1109us; 1111us; 1116us; 1118us; 1120us; 1122us; 1124us; 1126us; 1128us; 1130us; 1132us; 1134us; 1136us; 1141us; 1144us; 1147us; 1150us; 1153us; 1155us; 1157us; 1159us; 1161us; 1163us; 1165us; 1167us; 1169us; 1171us; 1173us; 1175us; 1179us; 1182us; 1184us; 1186us; 1189us; 1191us; 1194us; 1197us; 1199us; 1201us; 1204us; 1207us; 1209us; 1211us; 1213us; 1215us; 1217us; 1219us; 1221us; 1223us; 1225us; 1227us; 1229us; 1232us; 1235us; 1237us; 1239us; 1242us; 1244us; 1246us; 1248us; 1250us; 1252us; 1254us; 1256us; 1258us; 1261us; 1264us; 1267us; 1269us; 1271us; 1273us; 1276us; 1278us; 1290us; 1307us; 1319us; 1336us; 1338us; 1340us; 1343us; 1345us; 1347us; 1349us; 1354us; 1356us; 1358us; 1360us; 1362us; 1364us; 1366us; 1368us; 1370us; 1372us; 1374us; 1376us; 1378us; 1380us; 1382us; 1384us; 1386us; 1388us; 1390us; 1392us; 1394us; 1396us; 1398us; 1400us; 1402us; 1404us; 1406us; 1408us; 1410us; 1412us; 1414us; 1416us; 1418us; 1420us; 1422us; 1424us; 1426us; 1428us; 1430us; 1432us; 1434us; 1437us; 1439us; 1441us; 1443us; 1445us; 1447us; 1449us; 1452us; 1454us; 1456us; 1458us; 1460us; 1462us; 1464us; 1466us; 1468us; 1470us; 1473us; 1475us; 1477us; 1479us; 1481us; 1483us; 1487us; 1490us; 1492us; 1494us; 1496us; 1498us; 1500us; 1502us; 1504us; 1506us; 1508us; 1511us; 1513us; 1515us; 1518us; 1521us; 1523us; 1525us; 1527us; 1530us; 1533us; 1535us; 1540us; 1546us; 1550us; 1552us; 1554us; 1556us; 1558us; 1560us; 1562us; 1564us; 1566us; 1568us; 1570us; 1576us; 1582us; 1587us; 1589us; 1591us; 1593us; 1595us; 1597us; 1599us; 1605us; 1608us; 1611us; 1613us; 1615us; 1619us; 1622us; 1624us; 1626us; 1628us; 1630us; 1637us; 1639us; 1641us; 1645us; 1648us; 1650us; 1652us; 1654us; 1656us; 1658us; 1660us; 1662us; 1664us; 1666us; 1670us; 1675us; 1677us; 1681us; 1683us; 1685us; 1687us; 1690us; 1692us; 1695us; 1699us; 1701us; 1704us; 1706us; 1708us; 1710us; 1712us; 1714us; 1716us; 1718us; 1720us; 1722us; 1724us; 1726us; 1728us; 1730us; 1732us; 1734us; 1737us; 1739us; 1742us; 1745us; 1748us; 1750us; 1752us; 1754us; 1756us; 1758us; 1760us; 1762us; 1771us; 1773us; 1775us; 1783us; 1785us; 1789us; 1791us; 1793us; 1795us; 1797us; 1799us; 1801us; 1804us; 1806us; 1808us; 1810us; 1812us; 1814us; 1816us; 1818us; 1820us; 1822us; 1827us; 1832us; 1834us; 1836us; 1838us; 1840us; 1842us; 1845us; 1847us; 1850us; 1852us; 1854us; 1860us; 1866us; 1872us; 1875us; 1877us; 1879us; 1881us; 1883us; 1885us; 1887us; 1889us; 1896us; 1898us; 1900us; 1902us; 1904us; 1906us; 1912us; 1914us; 1917us; 1920us; 1923us; 1925us; 1927us; 1929us; 1932us; 1934us; 1936us; 1939us; 1941us; 1946us; 1951us; 1953us; 1955us; 1958us; 1961us; 1963us; 1965us; 1967us; 1969us; 1971us; 1973us; 1975us; 1977us; 1979us; 1981us; 1983us; 1985us; 1987us; 1989us; 1991us; 1993us; 1995us; 1999us; 2002us; 2004us; 2006us; 2008us; 2012us; 2014us; 2016us; 2018us; 2020us; 2022us; 2024us; 2026us; 2028us; 2030us; 2032us; 2034us; 2036us; 2038us; 2040us; 2042us; 2044us; 2046us; 2048us; 2050us; 2052us; 2054us; 2056us; 2058us; 2060us; 2062us; 2064us; 2066us; 2069us; 2072us; 2074us; 2076us; 2078us; 2080us; 2083us; 2089us; 2091us; 2095us; 2100us; 2102us; 2104us; 2106us; 2108us; 2110us; 2112us; 2115us; 2117us; 2120us; 2122us; 2124us; 2126us; 2128us; 2130us; 2132us; 2134us; 2136us; 2140us; 2144us; 2148us; 2152us; 2155us; 2157us; 2159us; 2161us; 2164us; 2167us; 2169us; 2171us; 2173us; 2175us; 2178us; 2180us; 2182us; 2185us; 2187us; 2189us; 2191us; 2193us; 2195us; 2198us; 2200us; 2202us; 2204us; 2206us; 2208us; 2210us; 2212us; 2214us; 2216us; 2218us; 2220us; 2222us; 2224us; 2226us; 2228us; 2230us; 2233us; 2235us; 2237us; 2239us; 2241us; 2243us; 2246us; 2248us; 2250us; 2253us; 2256us; 2258us; 2260us; 2262us; 2264us; 2266us; 2268us; 2270us; 2272us; 2274us; 2277us; 2279us; 2281us; 2288us; 2290us; 2292us; 2294us; 2297us; 2301us; 2303us; 2305us; 2307us; 2309us; 2311us; 2317us; 2320us; 2322us; 2324us; 2326us; 2329us; 2331us; 2333us; 2340us; 2347us; 2354us; 2361us; 2368us; 2375us; 2382us; 2389us; 2396us; 2404us; 2406us; 2408us; 2410us; 2412us; 2415us; 2418us; 2420us; 2422us; 2424us; 2426us; 2428us; 2431us; 2433us; 2436us; 2438us; 2440us; 2445us; 2447us; 2455us; 2461us; 2465us; 2467us; 2469us; 2471us; 2473us; 2475us; 2477us; 2479us; 2481us; 2491us; 2493us; 2495us; 2497us; 2502us; 2504us; 2506us; 2508us; 2510us; 2512us; 2514us; 2516us; 2518us; 2520us; 2522us; 2524us; 2526us; 2528us; 2530us; 2532us; 2534us; 2536us; 2538us; 2541us; 2543us; 2545us; 2547us; 2549us; 2551us; 2553us; 2562us; 2565us; 2567us; 2569us; 2573us; 2576us; 2578us; 2583us; 2588us; 2593us; 2595us; 2597us; 2600us; 2602us; 2604us; 2612us; 2620us; 2628us; 2636us; 2644us; 2652us; 2660us; 2667us; 2675us; 2683us; 2692us; 2707us; 2715us; 2717us; 2719us; 2721us; 2724us; 2727us; 2729us; 2731us; 2733us; 2735us; 2737us; 2739us; 2741us; 2743us; 2745us; 2748us; 2750us; 2753us; 2755us; 2759us; 2761us; 2763us; 2766us; 2768us; 2771us; 2774us; 2776us; 2778us; 2780us; 2782us; 2784us; 2786us; 2835us; 2838us; 2840us; 2843us; 2845us; 2847us; 2849us; 2851us; 2904us; 2958us; 3014us; 3017us; 3019us; 3021us; 3023us; 3025us; 3027us; 3029us; 3031us; 3037us; 3039us; 3042us; 3045us; 3048us; 3051us; 3054us; 3057us; 3060us; 3063us; 3066us; 3069us; 3073us; 3076us; 3079us; 3081us; 3083us; 3085us; 3087us; 3089us; 3091us; 3093us; 3095us; 3097us; 3099us; 3101us; 3103us; 3106us; 3109us; 3111us; 3113us; 3118us; 3120us; 3122us; 3125us; 3127us; 3129us; 3131us; 3133us; 3135us; 3138us; 3141us; 3143us; 3145us; 3148us; 3151us; 3153us; 3155us; 3159us; 3163us; 3165us; 3167us; 3169us; 3171us; 3175us; 3225us; 3227us; 3229us; 3231us; 3233us; 3282us; 3285us; 3334us; 3336us; 3338us; 3341us; 3343us; 3350us; 3402us; 3406us; 3409us; 3411us; 3413us; 3415us; 3417us; 3419us; 3421us; 3423us; 3439us; 3446us; 3451us; 3454us; 3456us; 3458us; 3460us; 3462us; 3464us; 3470us; 3475us; 3478us; 3480us; 3482us; 3484us; 3486us; 3488us; 3490us; 3492us; 3494us; 3496us; 3498us; 3501us; 3504us; 3553us; 3556us; 3605us; 3607us; 3609us; 3611us; 3613us; 3615us; 3617us; 3619us; 3621us; 3623us; 3626us; 3629us; 3632us; 3635us; 3638us; 3640us; 3642us; 3644us; 3646us; 3648us; 3650us; 3652us; 3654us; 3656us; 3658us; 3660us; 3662us; 3664us; 3666us; 3715us; 3717us; 3719us; 3768us; 3817us; 3866us; 3915us; 3964us; 4013us; 4062us; 4111us; 4160us; 4209us; 4258us; 4307us; 4356us; 4405us; 4454us; 4503us; 4552us; 4601us; 4650us; 4699us; 4748us; 4797us; 4846us; 4895us; 4945us; 4994us; 5042us; 5091us; 5140us; 5189us; 5241us; 5293us; 5343us; 5392us; 5441us; 5491us; 5493us; 5495us; 5497us; 5499us; 5501us; 5503us; 5505us; 5508us; 5510us; 5512us; 5516us; 5522us; 5525us; 5528us; 5531us; 5534us; 5537us; 5540us; 5543us; 5546us; 5549us; 5552us; 5556us; 5558us; 5561us; 5564us; 5567us; 5570us; 5573us; 5576us; 5579us; 5582us; 5585us; 5587us; 5589us; 5591us; 5593us; 5595us; 5597us; 5599us; 5601us; 5603us; 5605us; 5607us; 5609us; 5611us; 5613us; 5615us; 5617us; 5619us; 5621us; 5623us; 5625us; 5627us; 5629us; 5631us; 5633us; 5635us; 5637us; 5640us; 5643us; 5645us; 5647us; 5649us; 5652us; 5654us; 5656us; 5658us; 5660us; 5666us; 5671us; 5674us; 5676us; 5678us; 5680us; 5682us; 5684us; 5686us; 5688us; 5690us; 5692us; 5694us; 5697us; 5700us; 5703us; 5705us; 5707us; 5709us; 5712us; 5715us; 5718us; 5720us; 5722us; 5725us; 5727us; 5729us; 5732us; 5734us; 5737us; 5739us; 5741us; 5744us; 5746us; 5748us; 5751us; 5753us; 5755us; 5758us; 5760us; 5762us; 5765us; 5767us; 5769us; 5772us; 5774us; 5776us; 5779us; 5781us; 5785us; 5793us; 5796us; 5803us; 5806us; 5811us; 5813us; 5817us; 5819us; 5821us; 5823us; 5825us; 5827us; 5829us; 5832us; 5839us; 5845us; 5847us; 5854us; 5856us; 5863us; 5870us; 5877us; 5884us; 5891us; 5898us; 5900us; 5902us; 5904us; 5906us; 5908us; 5911us; 5913us; 5915us; 5917us; 5919us; 5921us; 5923us; 5926us; 5928us; 5930us; 5932us; 5934us; 5936us; 5941us; 5944us; 5946us; 5948us; 5950us; 5952us; 5956us; 5959us; 5961us; 5963us; 5965us; 5967us; 5969us; 5971us; 5978us; 5980us; 5982us; 5984us; 5986us; 5988us; 5990us; 5997us; 6000us; 6002us; 6004us; 6007us; 6009us; 6011us; 6013us; 6015us; 6018us; 6020us; 6022us; 6026us; 6029us; 6031us; 6033us; 6035us; 6037us; 6039us; 6041us; 6043us; 6045us; 6047us; 6049us; 6051us; 6053us; 6055us; 6057us; 6059us; 6061us; 6066us; 6069us; 6071us; 6073us; 6075us; 6077us; 6079us; 6084us; 6090us; 6093us; 6095us; 6097us; 6099us; 6101us; 6106us; 6109us; 6111us; 6113us; 6115us; 6117us; 6127us; 6142us; 6156us; 6158us; 6161us; 6163us; 6165us; 6167us; 6170us; 6172us; 6174us; 6176us; 6178us; 6180us; 6182us; 6184us; 6186us; 6188us; 6190us; 6192us; 6194us; 6196us; 6198us; 6201us; 6204us; 6206us; 6208us; 6210us; 6216us; 6219us; 6221us; 6223us; 6225us; 6227us; 6229us; 6231us; 6233us; 6235us; 6237us; 6239us; 6241us; 6245us; 6247us; 6249us; 6251us; 6253us; 6257us; 6259us; 6261us; 6263us; 6266us; 6268us; 6270us; 6272us; 6274us; 6276us; 6278us; 6280us; 6283us; 6285us; 6287us; 6289us; 6291us; 6293us; 6295us; 6297us; 6299us; 6302us; 6304us; 6310us; 6312us; 6314us; 6316us; 6318us; 6320us; 6323us; 6325us; 6327us; 6329us; 6331us; 6334us; 6336us; 6340us; 6343us; 6345us; 6348us; 6350us; 6352us; 6354us; 6357us; 6359us; 6362us; 6364us; 6366us; 6368us; 6371us; 6373us; 6375us; 6377us; 6380us; 6383us; 6386us; 6388us; 6390us; 6394us; 6396us; 6398us; 6404us; 6408us; 6410us; 6412us; 6414us; 6417us; 6419us; 6421us; 6423us; 6425us; 6427us; 6429us; 6431us; 6434us; 6436us; 6438us; 6440us; 6442us; 6444us; 6446us; 6448us; 6450us; 6452us; 6454us; 6456us; 6458us; 6460us; 6465us; 6467us; 6469us; 6471us; 6473us; 6475us; 6477us; 6483us; 6486us; 6488us; 6490us; 6492us; 6494us; 6496us; 6499us; 6502us; 6505us; 6507us; 6509us; 6516us; 6522us; 6527us; 6530us; 6532us; 6534us; 6536us; 6538us; 6540us; 6542us; 6544us; 6546us; 6548us; 6550us; 6552us; 6554us; 6556us; 6558us; 6561us; 6563us; 6566us; 6568us; 6570us; 6572us; 6575us; 6577us; 6579us; 6582us; 6584us; 6586us; 6589us; 6591us; 6593us; 6597us; 6603us; 6605us; 6610us; 6612us; 6614us; 6616us; 6621us; 6627us; 6629us; 6634us; 6636us; 6638us; 6640us; 6645us; 6648us; 6650us; 6652us; 6654us; 6656us; 6663us; 6665us; 6667us; 6669us; 6671us; 6673us; 6675us; 6682us; 6684us; 6686us; 6688us; 6690us; 6694us; 6696us; 6699us; 6702us; 6707us; 6709us; 6711us; 6719us; 6721us; 6723us; 6725us; 6727us; 6732us; 6734us; 6736us; 6738us; 6740us; 6742us; 6744us; 6747us; 6749us; 6751us; 6756us; 6758us; 6762us; 6764us; 6767us; 6769us; 6771us; 6773us; 6775us; 6777us; 6779us; 6783us; 6788us; 6791us; 6793us; 6795us; 6798us; 6800us; 6802us; 6807us; 6809us; 6811us; 6813us; 6817us; 6821us; 6823us; 6825us; 6829us; 6831us; 6833us; 6837us; 6840us; 6846us; 6848us; 6850us; 6856us; 6862us; 6866us; 6869us; 6871us; 6873us; 6875us; 6877us; 6879us; 6881us; 6883us; 6885us; 6887us; 6889us; 6891us; 6893us; 6895us; 6898us; 6903us; 6905us; 6907us; 6909us; 6911us; 6913us; 6915us; 6923us; 6927us; 6931us; 6934us; 6936us; 6938us; 6940us; 6944us; 6946us; 6948us; 6950us; 6952us; 6956us; 6959us; 6961us; 6963us; 6965us; 6968us; 6972us; 6974us; 6976us; 6978us; 6982us; 6984us; 6986us; 6990us; 6992us; 6995us; 6997us; 6999us; 7001us; 7004us; 7006us; 7008us; 7012us; 7016us; 7020us; 7022us; 7024us; 7026us; 7028us; 7030us; 7032us; 7034us; 7037us; 7039us; 7041us; 7043us; 7045us; 7048us; 7050us; 7052us; 7057us; 7059us; 7061us; 7063us; 7065us; 7067us; 7071us; 7075us; 7077us; 7079us; 7081us; 7083us; 7085us; 7087us; 7089us; 7091us; 7093us; 7095us; 7097us; 7099us; 7101us; 7103us; 7105us; 7107us; 7109us; 7111us; 7113us; 7115us; 7117us; 7119us; 7121us; 7123us; 7125us; 7127us; 7129us; 7132us; 7134us; 7136us; 7138us; 7140us; 7142us; 7144us; 7146us; 7148us; 7150us; 7154us; 7156us; 7159us; 7161us; 7163us; 7165us; 7167us; 7169us; 7171us; 7173us; 7175us; 7178us; 7180us; 7182us; 7184us; 7187us; 7190us; 7192us; 7194us; 7196us; 7198us; 7200us; 7202us; 7204us; 7206us; 7208us; 7210us; 7212us; 7214us; 7216us; 7218us; 7220us; 7222us; 7224us; 7226us; 7228us; 7230us; 7232us; 7234us; 7236us; 7238us; 7240us; 7242us; 7244us; 7246us; 7248us; 7250us; 7252us; 7255us; 7257us; 7259us; 7261us; 7264us; 7266us; 7268us; 7270us; 7272us; 7274us; 7276us; 7278us; 7280us; 7283us; 7285us; 7287us; 7289us; 7291us; 7294us; 7296us; 7298us; 7300us; 7302us; 7304us; 7306us; 7308us; 7310us; 7312us; 7314us; 7316us; 7318us; 7320us; 7322us; 7324us; 7326us; 7328us; 7330us; 7332us; 7334us; 7336us; 7338us; 7340us; 7342us; 7344us; 7346us; |]
let _fsyacc_action_rows = 1873
let _fsyacc_actionTableElements = [|16us; 16431us; 22us; 69us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 73us; 302us; 87us; 38us; 100us; 274us; 107us; 16544us; 108us; 16544us; 120us; 16544us; 149us; 16544us; 202us; 47us; 0us; 49152us; 88us; 16507us; 13us; 16544us; 22us; 230us; 24us; 16544us; 25us; 16544us; 29us; 16544us; 30us; 16544us; 32us; 16544us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 46us; 16544us; 56us; 16544us; 62us; 16544us; 70us; 16544us; 71us; 16544us; 72us; 16544us; 73us; 302us; 74us; 16544us; 85us; 16544us; 87us; 38us; 88us; 16544us; 89us; 16544us; 91us; 16544us; 97us; 16544us; 99us; 16544us; 100us; 274us; 105us; 16544us; 106us; 16544us; 107us; 16544us; 113us; 16544us; 114us; 16544us; 115us; 16544us; 116us; 16544us; 118us; 16544us; 120us; 16544us; 121us; 16544us; 122us; 16544us; 123us; 16544us; 124us; 16544us; 125us; 16544us; 129us; 16544us; 132us; 16544us; 133us; 16544us; 135us; 16544us; 136us; 16544us; 145us; 16544us; 146us; 16544us; 147us; 16544us; 149us; 16544us; 153us; 16544us; 154us; 16544us; 157us; 16544us; 158us; 16544us; 161us; 16544us; 162us; 16544us; 163us; 16544us; 165us; 16544us; 166us; 16544us; 167us; 16544us; 168us; 16544us; 169us; 16544us; 170us; 16544us; 171us; 16544us; 172us; 16544us; 173us; 16544us; 174us; 16544us; 175us; 16544us; 176us; 16544us; 177us; 16544us; 179us; 16544us; 180us; 16544us; 182us; 16544us; 183us; 16544us; 186us; 16544us; 192us; 16544us; 193us; 16544us; 194us; 16544us; 198us; 16544us; 199us; 16544us; 200us; 16544us; 201us; 16544us; 202us; 216us; 0us; 49152us; 7us; 16544us; 10us; 14us; 21us; 12us; 67us; 13us; 73us; 302us; 83us; 11us; 87us; 38us; 100us; 274us; 0us; 49152us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 49152us; 32us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 49152us; 0us; 16389us; 0us; 16390us; 0us; 16391us; 0us; 16392us; 0us; 16393us; 0us; 16394us; 4us; 32768us; 10us; 14us; 21us; 37us; 67us; 13us; 83us; 36us; 0us; 16395us; 4us; 32768us; 10us; 14us; 21us; 37us; 67us; 13us; 83us; 36us; 0us; 16396us; 4us; 32768us; 10us; 14us; 21us; 37us; 67us; 13us; 83us; 36us; 0us; 16397us; 5us; 16544us; 10us; 14us; 67us; 13us; 73us; 302us; 87us; 38us; 100us; 274us; 0us; 16398us; 5us; 16544us; 10us; 14us; 67us; 13us; 73us; 302us; 87us; 38us; 100us; 274us; 0us; 16399us; 5us; 16544us; 10us; 14us; 67us; 13us; 73us; 302us; 87us; 38us; 100us; 274us; 0us; 16400us; 16us; 16401us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 73us; 302us; 100us; 274us; 107us; 16544us; 120us; 16544us; 136us; 16544us; 149us; 16544us; 161us; 16544us; 0us; 16402us; 3us; 16626us; 43us; 482us; 44us; 481us; 45us; 483us; 80us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 37us; 1839us; 38us; 1842us; 39us; 1844us; 40us; 1847us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 107us; 1843us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 120us; 681us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 136us; 697us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 149us; 1848us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 25us; 16403us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 1247us; 101us; 1164us; 127us; 1161us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 0us; 16404us; 2us; 16405us; 21us; 37us; 83us; 36us; 0us; 16406us; 0us; 16407us; 0us; 16408us; 1us; 32768us; 192us; 39us; 0us; 16410us; 1us; 16409us; 200us; 1822us; 0us; 16411us; 0us; 16412us; 2us; 32768us; 10us; 44us; 202us; 45us; 0us; 16413us; 1us; 32768us; 10us; 46us; 0us; 16414us; 4us; 16430us; 10us; 48us; 21us; 1789us; 67us; 1788us; 83us; 1787us; 0us; 16415us; 3us; 16620us; 43us; 482us; 44us; 481us; 45us; 483us; 1us; 17415us; 102us; 1809us; 2us; 32768us; 46us; 1729us; 192us; 1728us; 1us; 16416us; 76us; 1731us; 1us; 17415us; 102us; 1809us; 2us; 32768us; 46us; 1729us; 192us; 1728us; 1us; 16417us; 76us; 1731us; 1us; 16418us; 150us; 53us; 0us; 16419us; 1us; 16421us; 150us; 53us; 0us; 16420us; 1us; 17407us; 69us; 1805us; 16us; 16431us; 22us; 69us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 73us; 302us; 87us; 38us; 100us; 274us; 107us; 16544us; 108us; 16544us; 120us; 16544us; 149us; 16544us; 202us; 77us; 0us; 16422us; 3us; 16626us; 43us; 482us; 44us; 481us; 45us; 483us; 8us; 32768us; 37us; 1839us; 38us; 1842us; 39us; 1844us; 40us; 1847us; 107us; 1843us; 108us; 95us; 120us; 681us; 149us; 1848us; 18us; 16431us; 22us; 69us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 69us; 1821us; 73us; 302us; 77us; 1820us; 87us; 38us; 100us; 274us; 107us; 16544us; 108us; 16544us; 120us; 16544us; 149us; 16544us; 202us; 77us; 0us; 16423us; 0us; 16424us; 0us; 16425us; 15us; 16431us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 73us; 302us; 87us; 38us; 100us; 274us; 107us; 16544us; 108us; 16544us; 120us; 16544us; 149us; 16544us; 202us; 74us; 5us; 32768us; 10us; 992us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 202us; 978us; 1us; 17411us; 21us; 1807us; 0us; 16426us; 0us; 16427us; 6us; 16430us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 21us; 1789us; 67us; 1788us; 83us; 1787us; 0us; 16428us; 0us; 16429us; 3us; 16430us; 21us; 1789us; 67us; 1788us; 83us; 1787us; 3us; 17392us; 21us; 1789us; 67us; 1788us; 83us; 1787us; 15us; 16434us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 73us; 302us; 87us; 38us; 100us; 274us; 107us; 16544us; 108us; 16544us; 120us; 16544us; 149us; 16544us; 202us; 81us; 0us; 16432us; 3us; 32768us; 21us; 1789us; 67us; 1788us; 83us; 1787us; 4us; 16544us; 73us; 302us; 87us; 38us; 100us; 274us; 202us; 81us; 0us; 16433us; 0us; 16435us; 0us; 16436us; 3us; 16626us; 43us; 482us; 44us; 481us; 45us; 483us; 8us; 32768us; 37us; 1839us; 38us; 1842us; 39us; 1844us; 40us; 1847us; 107us; 1843us; 108us; 95us; 120us; 681us; 149us; 1848us; 2us; 32768us; 69us; 1821us; 77us; 1820us; 5us; 32768us; 22us; 111us; 46us; 1729us; 57us; 1818us; 135us; 1819us; 192us; 1728us; 0us; 16437us; 0us; 16438us; 0us; 16439us; 0us; 16440us; 0us; 16441us; 1us; 16544us; 73us; 302us; 1us; 17419us; 109us; 1810us; 1us; 17421us; 117us; 1811us; 3us; 16620us; 43us; 482us; 44us; 481us; 45us; 483us; 3us; 32768us; 91us; 1734us; 99us; 1739us; 192us; 1728us; 2us; 16685us; 34us; 1838us; 159us; 17446us; 1us; 32768us; 77us; 102us; 33us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 73us; 302us; 74us; 1579us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 1us; 16443us; 69us; 105us; 0us; 16442us; 73us; 32768us; 13us; 1109us; 22us; 107us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 25us; 16444us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 1247us; 101us; 1164us; 127us; 1161us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 28us; 32768us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 1247us; 101us; 1164us; 127us; 1161us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 1us; 17405us; 19us; 1804us; 0us; 16445us; 8us; 16544us; 46us; 1729us; 57us; 1818us; 73us; 302us; 87us; 38us; 100us; 274us; 135us; 1819us; 192us; 1728us; 202us; 81us; 3us; 32768us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 0us; 16446us; 15us; 16431us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 73us; 302us; 87us; 38us; 100us; 274us; 107us; 16544us; 108us; 16544us; 120us; 16544us; 149us; 16544us; 202us; 77us; 1us; 32768us; 141us; 116us; 3us; 32768us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 0us; 16447us; 15us; 16431us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 73us; 302us; 87us; 38us; 100us; 274us; 107us; 16544us; 108us; 16544us; 120us; 16544us; 149us; 16544us; 202us; 77us; 1us; 32768us; 141us; 120us; 0us; 16448us; 1us; 16544us; 73us; 302us; 0us; 16449us; 1us; 16451us; 130us; 124us; 1us; 16544us; 73us; 302us; 0us; 16450us; 2us; 16491us; 69us; 127us; 86us; 209us; 7us; 16544us; 22us; 130us; 49us; 555us; 56us; 557us; 73us; 302us; 110us; 556us; 135us; 155us; 151us; 141us; 0us; 16452us; 0us; 16453us; 52us; 16471us; 14us; 16544us; 22us; 151us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 46us; 16544us; 47us; 16544us; 48us; 16544us; 49us; 555us; 50us; 16544us; 51us; 16544us; 52us; 16544us; 54us; 16544us; 56us; 557us; 58us; 16544us; 66us; 16544us; 72us; 16544us; 73us; 302us; 87us; 16544us; 90us; 16544us; 91us; 16544us; 105us; 16544us; 108us; 16544us; 110us; 556us; 112us; 16544us; 118us; 16544us; 121us; 16544us; 135us; 155us; 147us; 16544us; 151us; 141us; 165us; 16544us; 166us; 16544us; 167us; 16544us; 168us; 16544us; 169us; 16544us; 170us; 16544us; 171us; 16544us; 172us; 16544us; 173us; 16544us; 174us; 16544us; 175us; 16544us; 176us; 16544us; 177us; 16544us; 179us; 16544us; 180us; 16544us; 185us; 16544us; 188us; 16544us; 192us; 16544us; 193us; 16544us; 194us; 16544us; 200us; 16544us; 201us; 16544us; 1us; 17411us; 21us; 1807us; 14us; 16471us; 14us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 47us; 16544us; 48us; 16544us; 50us; 16544us; 51us; 16544us; 52us; 16544us; 54us; 16544us; 73us; 302us; 108us; 16544us; 110us; 16544us; 118us; 16544us; 1us; 16491us; 86us; 209us; 3us; 32768us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 1us; 16491us; 86us; 209us; 0us; 16454us; 1us; 16491us; 86us; 209us; 0us; 16455us; 0us; 16456us; 0us; 16457us; 1us; 32768us; 119us; 142us; 33us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 73us; 302us; 74us; 1579us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 16458us; 0us; 16459us; 16us; 16471us; 14us; 16544us; 22us; 159us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 47us; 16544us; 48us; 16544us; 50us; 16544us; 51us; 16544us; 52us; 16544us; 54us; 16544us; 73us; 302us; 108us; 16544us; 110us; 16544us; 118us; 16544us; 202us; 149us; 3us; 32768us; 10us; 992us; 141us; 147us; 202us; 978us; 0us; 16460us; 0us; 16461us; 1us; 32768us; 141us; 150us; 0us; 16462us; 14us; 16471us; 14us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 47us; 16544us; 48us; 16544us; 50us; 16544us; 51us; 16544us; 52us; 16544us; 54us; 16544us; 73us; 302us; 108us; 16544us; 110us; 16544us; 118us; 16544us; 5us; 32768us; 10us; 992us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 202us; 978us; 0us; 16463us; 0us; 16464us; 15us; 16471us; 14us; 16544us; 22us; 159us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 47us; 16544us; 48us; 16544us; 50us; 16544us; 51us; 16544us; 52us; 16544us; 54us; 16544us; 73us; 302us; 108us; 16544us; 110us; 16544us; 118us; 16544us; 3us; 32768us; 10us; 992us; 141us; 157us; 202us; 978us; 0us; 16465us; 0us; 16466us; 14us; 16471us; 14us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 47us; 16544us; 48us; 16544us; 50us; 16544us; 51us; 16544us; 52us; 16544us; 54us; 16544us; 73us; 302us; 108us; 16544us; 110us; 16544us; 118us; 16544us; 5us; 32768us; 10us; 992us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 202us; 978us; 0us; 16467us; 0us; 16468us; 0us; 16469us; 0us; 16470us; 2us; 17413us; 21us; 1794us; 83us; 1795us; 14us; 16471us; 14us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 47us; 16544us; 48us; 16544us; 50us; 16544us; 51us; 16544us; 52us; 16544us; 54us; 16544us; 73us; 302us; 108us; 16544us; 110us; 16544us; 118us; 16544us; 0us; 16472us; 3us; 16626us; 43us; 482us; 44us; 481us; 45us; 483us; 3us; 16626us; 43us; 482us; 44us; 481us; 45us; 483us; 10us; 32768us; 14us; 559us; 47us; 187us; 48us; 337us; 50us; 205us; 51us; 338us; 52us; 339us; 54us; 183us; 108us; 185us; 110us; 558us; 118us; 192us; 44us; 32768us; 14us; 559us; 46us; 1729us; 47us; 187us; 48us; 337us; 50us; 205us; 51us; 338us; 52us; 339us; 54us; 183us; 56us; 546us; 58us; 630us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 535us; 105us; 1670us; 108us; 185us; 110us; 558us; 112us; 1668us; 118us; 192us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 194us; 540us; 200us; 1822us; 201us; 793us; 1us; 17419us; 109us; 1810us; 3us; 16620us; 43us; 482us; 44us; 481us; 45us; 483us; 3us; 32768us; 91us; 1734us; 99us; 1739us; 192us; 1728us; 2us; 16685us; 34us; 1838us; 159us; 17446us; 1us; 32768us; 77us; 177us; 33us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 73us; 302us; 74us; 1579us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 2us; 16480us; 26us; 197us; 86us; 195us; 1us; 16443us; 69us; 105us; 0us; 16473us; 31us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 6us; 16474us; 36us; 1609us; 46us; 1729us; 70us; 1622us; 90us; 1722us; 188us; 1725us; 192us; 1728us; 31us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 6us; 16475us; 36us; 1609us; 46us; 1729us; 70us; 1622us; 90us; 1722us; 188us; 1725us; 192us; 1728us; 1us; 17421us; 117us; 1811us; 0us; 16476us; 5us; 32768us; 37us; 1839us; 38us; 1842us; 48us; 336us; 107us; 1843us; 108us; 188us; 1us; 17421us; 117us; 1811us; 0us; 16477us; 1us; 16544us; 73us; 302us; 0us; 16478us; 1us; 32768us; 77us; 193us; 33us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 73us; 302us; 74us; 1579us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 16479us; 3us; 32768us; 91us; 1734us; 99us; 1739us; 192us; 1728us; 0us; 16481us; 3us; 32768us; 91us; 1734us; 99us; 1739us; 192us; 1728us; 2us; 32768us; 20us; 199us; 202us; 200us; 0us; 16482us; 0us; 16483us; 1us; 16484us; 96us; 202us; 3us; 32768us; 91us; 1734us; 99us; 1739us; 192us; 1728us; 0us; 16485us; 0us; 16486us; 1us; 16487us; 48us; 206us; 0us; 16488us; 1us; 16491us; 86us; 209us; 0us; 16489us; 15us; 16471us; 14us; 16544us; 22us; 159us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 47us; 16544us; 48us; 16544us; 50us; 16544us; 51us; 16544us; 52us; 16544us; 54us; 16544us; 73us; 302us; 108us; 16544us; 110us; 16544us; 118us; 16544us; 3us; 32768us; 19us; 1798us; 20us; 1799us; 141us; 1800us; 0us; 16490us; 2us; 32768us; 10us; 213us; 202us; 214us; 0us; 16492us; 1us; 32768us; 10us; 215us; 0us; 16493us; 4us; 32768us; 10us; 217us; 21us; 1789us; 67us; 1788us; 83us; 1787us; 0us; 16494us; 1us; 16495us; 150us; 53us; 0us; 16496us; 1us; 16498us; 150us; 53us; 0us; 16497us; 1us; 17407us; 69us; 1805us; 88us; 16507us; 13us; 16544us; 22us; 230us; 24us; 16544us; 25us; 16544us; 29us; 16544us; 30us; 16544us; 32us; 16544us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 46us; 16544us; 56us; 16544us; 62us; 16544us; 70us; 16544us; 71us; 16544us; 72us; 16544us; 73us; 302us; 74us; 16544us; 85us; 16544us; 87us; 38us; 88us; 16544us; 89us; 16544us; 91us; 16544us; 97us; 16544us; 99us; 16544us; 100us; 274us; 105us; 16544us; 106us; 16544us; 107us; 16544us; 113us; 16544us; 114us; 16544us; 115us; 16544us; 116us; 16544us; 118us; 16544us; 120us; 16544us; 121us; 16544us; 122us; 16544us; 123us; 16544us; 124us; 16544us; 125us; 16544us; 129us; 16544us; 132us; 16544us; 133us; 16544us; 135us; 16544us; 136us; 16544us; 145us; 16544us; 146us; 16544us; 147us; 16544us; 149us; 16544us; 153us; 16544us; 154us; 16544us; 157us; 16544us; 158us; 16544us; 161us; 16544us; 162us; 16544us; 163us; 16544us; 165us; 16544us; 166us; 16544us; 167us; 16544us; 168us; 16544us; 169us; 16544us; 170us; 16544us; 171us; 16544us; 172us; 16544us; 173us; 16544us; 174us; 16544us; 175us; 16544us; 176us; 16544us; 177us; 16544us; 179us; 16544us; 180us; 16544us; 182us; 16544us; 183us; 16544us; 186us; 16544us; 192us; 16544us; 193us; 16544us; 194us; 16544us; 198us; 16544us; 199us; 16544us; 200us; 16544us; 201us; 16544us; 202us; 250us; 0us; 16499us; 4us; 16626us; 43us; 482us; 44us; 481us; 45us; 483us; 202us; 245us; 80us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 37us; 1839us; 38us; 1842us; 39us; 1844us; 40us; 1847us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 107us; 1843us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 120us; 681us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 136us; 697us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 149us; 1848us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 89us; 16507us; 13us; 16544us; 22us; 230us; 24us; 16544us; 25us; 16544us; 29us; 16544us; 30us; 16544us; 32us; 16544us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 46us; 16544us; 56us; 16544us; 62us; 16544us; 69us; 269us; 70us; 16544us; 71us; 16544us; 72us; 16544us; 73us; 302us; 74us; 16544us; 85us; 16544us; 87us; 38us; 88us; 16544us; 89us; 16544us; 91us; 16544us; 97us; 16544us; 99us; 16544us; 100us; 274us; 105us; 16544us; 106us; 16544us; 107us; 16544us; 113us; 16544us; 114us; 16544us; 115us; 16544us; 116us; 16544us; 118us; 16544us; 120us; 16544us; 121us; 16544us; 122us; 16544us; 123us; 16544us; 124us; 16544us; 125us; 16544us; 129us; 16544us; 132us; 16544us; 133us; 16544us; 135us; 16544us; 136us; 16544us; 145us; 16544us; 146us; 16544us; 147us; 16544us; 149us; 16544us; 153us; 16544us; 154us; 16544us; 157us; 16544us; 158us; 16544us; 161us; 16544us; 162us; 16544us; 163us; 16544us; 165us; 16544us; 166us; 16544us; 167us; 16544us; 168us; 16544us; 169us; 16544us; 170us; 16544us; 171us; 16544us; 172us; 16544us; 173us; 16544us; 174us; 16544us; 175us; 16544us; 176us; 16544us; 177us; 16544us; 179us; 16544us; 180us; 16544us; 182us; 16544us; 183us; 16544us; 186us; 16544us; 192us; 16544us; 193us; 16544us; 194us; 16544us; 198us; 16544us; 199us; 16544us; 200us; 16544us; 201us; 16544us; 202us; 250us; 0us; 16500us; 0us; 16501us; 87us; 16507us; 13us; 16544us; 24us; 16544us; 25us; 16544us; 29us; 16544us; 30us; 16544us; 32us; 16544us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 46us; 16544us; 56us; 16544us; 62us; 16544us; 70us; 16544us; 71us; 16544us; 72us; 16544us; 73us; 302us; 74us; 16544us; 85us; 16544us; 87us; 38us; 88us; 16544us; 89us; 16544us; 91us; 16544us; 97us; 16544us; 99us; 16544us; 100us; 274us; 105us; 16544us; 106us; 16544us; 107us; 16544us; 113us; 16544us; 114us; 16544us; 115us; 16544us; 116us; 16544us; 118us; 16544us; 120us; 16544us; 121us; 16544us; 122us; 16544us; 123us; 16544us; 124us; 16544us; 125us; 16544us; 129us; 16544us; 132us; 16544us; 133us; 16544us; 135us; 16544us; 136us; 16544us; 145us; 16544us; 146us; 16544us; 147us; 16544us; 149us; 16544us; 153us; 16544us; 154us; 16544us; 157us; 16544us; 158us; 16544us; 161us; 16544us; 162us; 16544us; 163us; 16544us; 165us; 16544us; 166us; 16544us; 167us; 16544us; 168us; 16544us; 169us; 16544us; 170us; 16544us; 171us; 16544us; 172us; 16544us; 173us; 16544us; 174us; 16544us; 175us; 16544us; 176us; 16544us; 177us; 16544us; 179us; 16544us; 180us; 16544us; 182us; 16544us; 183us; 16544us; 186us; 16544us; 192us; 16544us; 193us; 16544us; 194us; 16544us; 198us; 16544us; 199us; 16544us; 200us; 16544us; 201us; 16544us; 202us; 235us; 5us; 32768us; 10us; 992us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 202us; 978us; 1us; 17411us; 21us; 1807us; 0us; 16502us; 0us; 16503us; 6us; 32768us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 21us; 1789us; 67us; 1788us; 83us; 1787us; 0us; 16504us; 0us; 16505us; 0us; 16506us; 4us; 16626us; 43us; 482us; 44us; 481us; 45us; 483us; 202us; 245us; 80us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 37us; 1839us; 38us; 1842us; 39us; 1844us; 40us; 1847us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 107us; 1843us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 120us; 681us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 136us; 697us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 149us; 1848us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 28us; 16510us; 21us; 1789us; 62us; 1178us; 63us; 1170us; 67us; 1788us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 83us; 1787us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 1247us; 101us; 1164us; 127us; 1161us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 87us; 16509us; 13us; 16544us; 24us; 16544us; 25us; 16544us; 29us; 16544us; 30us; 16544us; 32us; 16544us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 46us; 16544us; 56us; 16544us; 62us; 16544us; 70us; 16544us; 71us; 16544us; 72us; 16544us; 73us; 302us; 74us; 16544us; 85us; 16544us; 87us; 38us; 88us; 16544us; 89us; 16544us; 91us; 16544us; 97us; 16544us; 99us; 16544us; 100us; 274us; 105us; 16544us; 106us; 16544us; 107us; 16544us; 113us; 16544us; 114us; 16544us; 115us; 16544us; 116us; 16544us; 118us; 16544us; 120us; 16544us; 121us; 16544us; 122us; 16544us; 123us; 16544us; 124us; 16544us; 125us; 16544us; 129us; 16544us; 132us; 16544us; 133us; 16544us; 135us; 16544us; 136us; 16544us; 145us; 16544us; 146us; 16544us; 147us; 16544us; 149us; 16544us; 153us; 16544us; 154us; 16544us; 157us; 16544us; 158us; 16544us; 161us; 16544us; 162us; 16544us; 163us; 16544us; 165us; 16544us; 166us; 16544us; 167us; 16544us; 168us; 16544us; 169us; 16544us; 170us; 16544us; 171us; 16544us; 172us; 16544us; 173us; 16544us; 174us; 16544us; 175us; 16544us; 176us; 16544us; 177us; 16544us; 179us; 16544us; 180us; 16544us; 182us; 16544us; 183us; 16544us; 186us; 16544us; 192us; 16544us; 193us; 16544us; 194us; 16544us; 198us; 16544us; 199us; 16544us; 200us; 16544us; 201us; 16544us; 202us; 250us; 0us; 16508us; 0us; 16511us; 0us; 16512us; 21us; 16515us; 21us; 1789us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 67us; 1788us; 73us; 302us; 83us; 1787us; 87us; 38us; 100us; 274us; 107us; 16544us; 120us; 16544us; 136us; 16544us; 149us; 16544us; 161us; 16544us; 202us; 250us; 0us; 16513us; 87us; 16516us; 13us; 16544us; 24us; 16544us; 25us; 16544us; 29us; 16544us; 30us; 16544us; 32us; 16544us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 46us; 16544us; 56us; 16544us; 62us; 16544us; 70us; 16544us; 71us; 16544us; 72us; 16544us; 73us; 302us; 74us; 16544us; 85us; 16544us; 87us; 38us; 88us; 16544us; 89us; 16544us; 91us; 16544us; 97us; 16544us; 99us; 16544us; 100us; 274us; 105us; 16544us; 106us; 16544us; 107us; 16544us; 113us; 16544us; 114us; 16544us; 115us; 16544us; 116us; 16544us; 118us; 16544us; 120us; 16544us; 121us; 16544us; 122us; 16544us; 123us; 16544us; 124us; 16544us; 125us; 16544us; 129us; 16544us; 132us; 16544us; 133us; 16544us; 135us; 16544us; 136us; 16544us; 145us; 16544us; 146us; 16544us; 147us; 16544us; 149us; 16544us; 153us; 16544us; 154us; 16544us; 157us; 16544us; 158us; 16544us; 161us; 16544us; 162us; 16544us; 163us; 16544us; 165us; 16544us; 166us; 16544us; 167us; 16544us; 168us; 16544us; 169us; 16544us; 170us; 16544us; 171us; 16544us; 172us; 16544us; 173us; 16544us; 174us; 16544us; 175us; 16544us; 176us; 16544us; 177us; 16544us; 179us; 16544us; 180us; 16544us; 182us; 16544us; 183us; 16544us; 186us; 16544us; 192us; 16544us; 193us; 16544us; 194us; 16544us; 198us; 16544us; 199us; 16544us; 200us; 16544us; 201us; 16544us; 202us; 250us; 0us; 16514us; 3us; 32768us; 21us; 1789us; 67us; 1788us; 83us; 1787us; 6us; 32768us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 21us; 1789us; 67us; 1788us; 83us; 1787us; 4us; 32768us; 21us; 1789us; 67us; 1788us; 83us; 1787us; 141us; 295us; 4us; 16544us; 73us; 302us; 87us; 38us; 100us; 274us; 202us; 250us; 0us; 16517us; 0us; 16518us; 0us; 16519us; 3us; 16626us; 43us; 482us; 44us; 481us; 45us; 483us; 11us; 32768us; 33us; 699us; 37us; 1839us; 38us; 1842us; 39us; 1844us; 40us; 1847us; 41us; 712us; 107us; 1843us; 120us; 681us; 136us; 697us; 149us; 1848us; 161us; 693us; 0us; 16520us; 1us; 16520us; 126us; 1005us; 0us; 16521us; 73us; 16521us; 13us; 1109us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 1010us; 0us; 16522us; 1us; 16544us; 73us; 302us; 1us; 16566us; 130us; 343us; 0us; 16523us; 0us; 16524us; 1us; 32768us; 69us; 269us; 5us; 32768us; 22us; 281us; 46us; 1729us; 56us; 1816us; 135us; 1817us; 192us; 1728us; 0us; 16525us; 2us; 16543us; 10us; 992us; 202us; 978us; 0us; 16526us; 0us; 16527us; 5us; 32768us; 37us; 1839us; 38us; 1842us; 46us; 1729us; 107us; 1843us; 192us; 1728us; 1us; 16528us; 76us; 1731us; 31us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 6us; 16529us; 36us; 1609us; 46us; 1729us; 70us; 1622us; 90us; 1722us; 188us; 1725us; 192us; 1728us; 4us; 32768us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 76us; 1731us; 0us; 16530us; 1us; 16531us; 76us; 1731us; 6us; 16544us; 56us; 1816us; 73us; 302us; 87us; 38us; 100us; 274us; 135us; 1817us; 202us; 251us; 5us; 32768us; 10us; 992us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 202us; 978us; 0us; 16532us; 0us; 16533us; 5us; 32768us; 10us; 992us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 202us; 978us; 0us; 16534us; 0us; 16535us; 0us; 16536us; 0us; 16537us; 1us; 16538us; 76us; 1731us; 87us; 16507us; 13us; 16544us; 24us; 16544us; 25us; 16544us; 29us; 16544us; 30us; 16544us; 32us; 16544us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 46us; 16544us; 56us; 16544us; 62us; 16544us; 70us; 16544us; 71us; 16544us; 72us; 16544us; 73us; 302us; 74us; 16544us; 85us; 16544us; 87us; 38us; 88us; 16544us; 89us; 16544us; 91us; 16544us; 97us; 16544us; 99us; 16544us; 100us; 274us; 105us; 16544us; 106us; 16544us; 107us; 16544us; 113us; 16544us; 114us; 16544us; 115us; 16544us; 116us; 16544us; 118us; 16544us; 120us; 16544us; 121us; 16544us; 122us; 16544us; 123us; 16544us; 124us; 16544us; 125us; 16544us; 129us; 16544us; 132us; 16544us; 133us; 16544us; 135us; 16544us; 136us; 16544us; 145us; 16544us; 146us; 16544us; 147us; 16544us; 149us; 16544us; 153us; 16544us; 154us; 16544us; 157us; 16544us; 158us; 16544us; 161us; 16544us; 162us; 16544us; 163us; 16544us; 165us; 16544us; 166us; 16544us; 167us; 16544us; 168us; 16544us; 169us; 16544us; 170us; 16544us; 171us; 16544us; 172us; 16544us; 173us; 16544us; 174us; 16544us; 175us; 16544us; 176us; 16544us; 177us; 16544us; 179us; 16544us; 180us; 16544us; 182us; 16544us; 183us; 16544us; 186us; 16544us; 192us; 16544us; 193us; 16544us; 194us; 16544us; 198us; 16544us; 199us; 16544us; 200us; 16544us; 201us; 16544us; 202us; 252us; 3us; 32768us; 10us; 992us; 141us; 293us; 202us; 978us; 0us; 16539us; 0us; 16540us; 0us; 16541us; 6us; 16544us; 19us; 16588us; 20us; 16588us; 22us; 383us; 73us; 302us; 141us; 16588us; 202us; 389us; 3us; 32768us; 19us; 1798us; 20us; 1799us; 141us; 1800us; 0us; 16542us; 0us; 16543us; 1us; 16545us; 73us; 302us; 0us; 16546us; 14us; 32768us; 10us; 992us; 16us; 1871us; 37us; 1840us; 38us; 1842us; 39us; 1845us; 40us; 1847us; 46us; 1729us; 60us; 1869us; 93us; 1870us; 107us; 1843us; 149us; 1848us; 162us; 333us; 192us; 1728us; 202us; 307us; 2us; 17413us; 21us; 1794us; 83us; 1795us; 8us; 32768us; 10us; 992us; 16us; 1871us; 37us; 1867us; 39us; 1868us; 55us; 305us; 60us; 1869us; 93us; 1870us; 202us; 978us; 1us; 17411us; 21us; 1807us; 0us; 16547us; 1us; 16907us; 55us; 308us; 1us; 17411us; 21us; 1807us; 0us; 16548us; 0us; 16549us; 0us; 16550us; 0us; 16551us; 9us; 17412us; 37us; 1839us; 38us; 1842us; 39us; 1844us; 40us; 1847us; 46us; 1729us; 107us; 1843us; 149us; 1848us; 162us; 333us; 192us; 1728us; 0us; 16552us; 3us; 17444us; 35us; 1837us; 36us; 1836us; 76us; 1731us; 30us; 17169us; 56us; 1520us; 71us; 1376us; 72us; 1523us; 91us; 1382us; 105us; 1358us; 121us; 1357us; 135us; 1362us; 147us; 1356us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 16553us; 3us; 32768us; 22us; 322us; 46us; 1729us; 192us; 1728us; 3us; 17444us; 35us; 1837us; 36us; 1836us; 76us; 1731us; 30us; 17169us; 56us; 1520us; 71us; 1376us; 72us; 1523us; 91us; 1382us; 105us; 1358us; 121us; 1357us; 135us; 1362us; 147us; 1356us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 16554us; 2us; 32768us; 46us; 1729us; 192us; 1728us; 4us; 32768us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 76us; 1731us; 2us; 17444us; 35us; 1837us; 36us; 1836us; 30us; 17169us; 56us; 1520us; 71us; 1376us; 72us; 1523us; 91us; 1382us; 105us; 1358us; 121us; 1357us; 135us; 1362us; 147us; 1356us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 16555us; 1us; 32768us; 77us; 328us; 0us; 16556us; 1us; 32768us; 77us; 330us; 0us; 16557us; 1us; 17340us; 77us; 332us; 0us; 16558us; 1us; 32768us; 77us; 334us; 0us; 16559us; 10us; 32768us; 30us; 703us; 33us; 699us; 37us; 1839us; 38us; 1842us; 41us; 712us; 48us; 336us; 107us; 1843us; 108us; 452us; 136us; 697us; 161us; 693us; 0us; 16560us; 0us; 16561us; 0us; 16562us; 0us; 16563us; 3us; 16620us; 43us; 482us; 44us; 481us; 45us; 483us; 1us; 16688us; 84us; 589us; 0us; 16564us; 1us; 16544us; 73us; 302us; 1us; 16566us; 130us; 343us; 0us; 16565us; 75us; 16544us; 10us; 16567us; 14us; 16567us; 15us; 16567us; 16us; 16567us; 17us; 16567us; 19us; 16567us; 20us; 16567us; 21us; 16567us; 22us; 17409us; 30us; 16567us; 33us; 16567us; 37us; 16567us; 38us; 16567us; 39us; 16567us; 40us; 16567us; 41us; 16567us; 46us; 17409us; 47us; 16567us; 48us; 16567us; 49us; 17409us; 50us; 16567us; 51us; 16567us; 52us; 16567us; 54us; 16567us; 56us; 17409us; 58us; 17409us; 66us; 17409us; 67us; 16567us; 69us; 1806us; 72us; 17409us; 73us; 302us; 83us; 16567us; 86us; 296us; 87us; 16567us; 90us; 17409us; 100us; 16567us; 105us; 17409us; 107us; 16567us; 108us; 16567us; 110us; 16567us; 112us; 17409us; 118us; 16567us; 120us; 16567us; 121us; 17409us; 130us; 16567us; 136us; 16567us; 141us; 16567us; 147us; 17409us; 149us; 16567us; 150us; 16567us; 151us; 17409us; 161us; 16567us; 165us; 17409us; 166us; 17409us; 167us; 17409us; 168us; 17409us; 169us; 17409us; 170us; 17409us; 171us; 17409us; 172us; 17409us; 173us; 17409us; 174us; 17409us; 175us; 17409us; 176us; 17409us; 177us; 17409us; 179us; 17409us; 180us; 17409us; 185us; 17409us; 188us; 17409us; 192us; 17409us; 193us; 17409us; 194us; 17409us; 200us; 17409us; 201us; 17409us; 202us; 16567us; 6us; 16544us; 22us; 357us; 49us; 555us; 56us; 557us; 73us; 302us; 110us; 556us; 151us; 369us; 0us; 16568us; 0us; 16569us; 3us; 16626us; 43us; 482us; 44us; 481us; 45us; 483us; 2us; 17444us; 35us; 1837us; 36us; 1836us; 1us; 32768us; 91us; 822us; 1us; 16636us; 131us; 499us; 1us; 32768us; 69us; 355us; 6us; 16544us; 22us; 357us; 49us; 555us; 56us; 557us; 73us; 302us; 110us; 556us; 151us; 369us; 0us; 16570us; 11us; 16544us; 10us; 16588us; 15us; 16588us; 16us; 16588us; 17us; 16588us; 22us; 379us; 49us; 555us; 56us; 557us; 73us; 302us; 110us; 556us; 151us; 369us; 202us; 389us; 1us; 17411us; 21us; 1807us; 7us; 16544us; 10us; 16588us; 15us; 16588us; 16us; 16588us; 17us; 16588us; 73us; 302us; 86us; 16588us; 202us; 389us; 1us; 16631us; 86us; 488us; 5us; 32768us; 10us; 992us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 202us; 978us; 1us; 16631us; 86us; 488us; 0us; 16571us; 0us; 16572us; 1us; 16631us; 86us; 488us; 0us; 16573us; 0us; 16574us; 0us; 16575us; 1us; 32768us; 119us; 370us; 33us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 73us; 302us; 74us; 1579us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 16576us; 0us; 16577us; 5us; 16544us; 10us; 16588us; 22us; 383us; 73us; 302us; 141us; 16588us; 202us; 377us; 3us; 32768us; 10us; 992us; 141us; 375us; 202us; 978us; 0us; 16578us; 0us; 16579us; 4us; 16544us; 10us; 16588us; 73us; 302us; 141us; 378us; 202us; 389us; 0us; 16580us; 6us; 16544us; 10us; 16588us; 15us; 16588us; 16us; 16588us; 17us; 16588us; 73us; 302us; 202us; 389us; 5us; 32768us; 10us; 992us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 202us; 978us; 0us; 16581us; 0us; 16582us; 6us; 16544us; 10us; 16588us; 15us; 16588us; 16us; 16588us; 17us; 16588us; 73us; 302us; 202us; 389us; 5us; 32768us; 10us; 992us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 202us; 978us; 0us; 16583us; 0us; 16584us; 0us; 16585us; 0us; 16586us; 10us; 16544us; 10us; 16588us; 15us; 16588us; 16us; 16588us; 17us; 16588us; 19us; 16588us; 20us; 16588us; 73us; 302us; 86us; 16588us; 141us; 16588us; 202us; 389us; 0us; 16587us; 2us; 17413us; 21us; 1794us; 83us; 1795us; 10us; 16544us; 10us; 16588us; 15us; 16588us; 16us; 16588us; 17us; 16588us; 19us; 16588us; 20us; 16588us; 73us; 302us; 86us; 16588us; 141us; 16588us; 202us; 389us; 0us; 16589us; 1us; 17419us; 109us; 1810us; 0us; 16590us; 1us; 17419us; 109us; 1810us; 2us; 32768us; 20us; 398us; 202us; 399us; 0us; 16591us; 0us; 16592us; 1us; 16593us; 130us; 401us; 1us; 17419us; 109us; 1810us; 0us; 16594us; 1us; 16544us; 73us; 302us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 1us; 17237us; 77us; 1557us; 1us; 32768us; 69us; 407us; 73us; 32768us; 13us; 1109us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 16595us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 1us; 17237us; 77us; 1557us; 3us; 32768us; 26us; 396us; 69us; 412us; 86us; 394us; 73us; 32768us; 13us; 1109us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 16596us; 0us; 16597us; 1us; 16598us; 48us; 416us; 0us; 16599us; 3us; 16626us; 43us; 482us; 44us; 481us; 45us; 483us; 3us; 16626us; 43us; 482us; 44us; 481us; 45us; 483us; 15us; 32768us; 14us; 559us; 30us; 703us; 33us; 699us; 41us; 712us; 47us; 335us; 48us; 337us; 50us; 415us; 51us; 338us; 52us; 339us; 54us; 491us; 108us; 452us; 110us; 558us; 118us; 444us; 136us; 697us; 161us; 693us; 49us; 32768us; 14us; 559us; 30us; 703us; 33us; 699us; 41us; 712us; 46us; 1729us; 47us; 335us; 48us; 337us; 50us; 415us; 51us; 338us; 52us; 339us; 54us; 491us; 56us; 546us; 58us; 630us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 535us; 105us; 1670us; 108us; 452us; 110us; 558us; 112us; 1668us; 118us; 444us; 121us; 1669us; 136us; 697us; 147us; 1667us; 161us; 693us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 194us; 540us; 200us; 1822us; 201us; 793us; 0us; 16600us; 0us; 16601us; 2us; 17419us; 108us; 458us; 109us; 1810us; 1us; 17405us; 19us; 1804us; 0us; 16602us; 31us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 7us; 16629us; 36us; 1609us; 46us; 1729us; 70us; 1622us; 86us; 485us; 90us; 1722us; 188us; 1725us; 192us; 1728us; 0us; 16603us; 1us; 17419us; 109us; 1810us; 3us; 32768us; 91us; 1734us; 99us; 1739us; 192us; 1728us; 2us; 16685us; 34us; 1838us; 159us; 17446us; 1us; 32768us; 77us; 433us; 33us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 73us; 302us; 74us; 1579us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 2us; 16480us; 26us; 197us; 86us; 195us; 1us; 17405us; 19us; 1804us; 0us; 16604us; 0us; 16605us; 1us; 17405us; 19us; 1804us; 0us; 16606us; 1us; 17405us; 19us; 1804us; 0us; 16607us; 1us; 17405us; 19us; 1804us; 0us; 16608us; 35us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 74us; 891us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 1us; 16636us; 131us; 499us; 1us; 32768us; 69us; 447us; 73us; 32768us; 13us; 1109us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 1us; 17405us; 19us; 1804us; 0us; 16609us; 1us; 16544us; 73us; 302us; 0us; 16610us; 1us; 17421us; 117us; 1811us; 3us; 16620us; 43us; 482us; 44us; 481us; 45us; 483us; 1us; 32768us; 192us; 1728us; 1us; 32768us; 77us; 456us; 32us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 16611us; 1us; 17421us; 117us; 1811us; 3us; 16620us; 43us; 482us; 44us; 481us; 45us; 483us; 1us; 32768us; 192us; 1728us; 1us; 16613us; 77us; 466us; 1us; 32768us; 69us; 463us; 73us; 32768us; 13us; 1109us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 2us; 16480us; 26us; 197us; 86us; 195us; 0us; 16612us; 32us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 16614us; 1us; 16856us; 76us; 469us; 3us; 32768us; 91us; 1734us; 99us; 1739us; 192us; 1728us; 0us; 16615us; 1us; 32768us; 76us; 472us; 3us; 32768us; 91us; 1734us; 99us; 1739us; 192us; 1728us; 0us; 16616us; 0us; 16617us; 4us; 32768us; 66us; 476us; 91us; 1734us; 99us; 1739us; 192us; 1728us; 1us; 32768us; 76us; 477us; 3us; 32768us; 91us; 1734us; 99us; 1739us; 192us; 1728us; 0us; 16618us; 0us; 16619us; 0us; 16621us; 0us; 16622us; 0us; 16623us; 0us; 16624us; 0us; 16625us; 28us; 16544us; 10us; 16628us; 14us; 16628us; 15us; 16628us; 16us; 16628us; 17us; 16628us; 19us; 16628us; 20us; 16628us; 21us; 16628us; 22us; 505us; 30us; 16628us; 33us; 16628us; 41us; 16628us; 43us; 16628us; 44us; 16628us; 45us; 16628us; 47us; 16628us; 50us; 16628us; 52us; 16628us; 54us; 16628us; 73us; 302us; 83us; 16628us; 86us; 16628us; 108us; 16628us; 110us; 16628us; 118us; 16628us; 136us; 16628us; 141us; 16628us; 161us; 16628us; 3us; 32768us; 19us; 1798us; 20us; 1799us; 141us; 1800us; 0us; 16627us; 6us; 16544us; 19us; 16588us; 20us; 16588us; 22us; 383us; 73us; 302us; 141us; 16588us; 202us; 389us; 3us; 32768us; 19us; 1798us; 20us; 1799us; 141us; 1800us; 0us; 16630us; 37us; 32768us; 10us; 992us; 16us; 1871us; 37us; 1867us; 39us; 1868us; 46us; 1729us; 56us; 1657us; 60us; 1869us; 66us; 1651us; 87us; 1648us; 90us; 1722us; 91us; 1641us; 93us; 1870us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 202us; 978us; 33us; 16639us; 35us; 1837us; 36us; 1836us; 56us; 17444us; 71us; 17444us; 72us; 17444us; 91us; 17444us; 105us; 17444us; 121us; 17444us; 131us; 502us; 135us; 17444us; 147us; 17444us; 154us; 17444us; 165us; 17444us; 166us; 17444us; 167us; 17444us; 168us; 17444us; 169us; 17444us; 170us; 17444us; 171us; 17444us; 172us; 17444us; 173us; 17444us; 174us; 17444us; 175us; 17444us; 176us; 17444us; 177us; 17444us; 179us; 17444us; 180us; 17444us; 193us; 17444us; 194us; 17444us; 198us; 17444us; 199us; 17444us; 200us; 17444us; 201us; 17444us; 0us; 16632us; 30us; 32768us; 56us; 1520us; 71us; 1376us; 72us; 1523us; 91us; 1382us; 105us; 1358us; 121us; 1357us; 135us; 1362us; 147us; 1356us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 1us; 16639us; 131us; 502us; 0us; 16633us; 0us; 16634us; 0us; 16635us; 1us; 32768us; 192us; 1728us; 0us; 16637us; 0us; 16638us; 2us; 32768us; 153us; 504us; 192us; 1728us; 0us; 16640us; 0us; 16641us; 1us; 16544us; 73us; 302us; 5us; 32768us; 10us; 992us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 202us; 978us; 0us; 16642us; 0us; 16643us; 0us; 16644us; 2us; 17413us; 21us; 1794us; 83us; 1795us; 14us; 16544us; 10us; 16646us; 14us; 16646us; 15us; 16646us; 16us; 16646us; 17us; 16646us; 19us; 16646us; 20us; 16646us; 21us; 16646us; 60us; 16646us; 61us; 16646us; 73us; 302us; 110us; 16646us; 141us; 16646us; 195us; 16646us; 0us; 16645us; 3us; 32768us; 48us; 524us; 51us; 525us; 202us; 521us; 4us; 17419us; 48us; 524us; 51us; 525us; 109us; 1810us; 202us; 521us; 3us; 17419us; 108us; 458us; 109us; 1810us; 202us; 520us; 1us; 17405us; 19us; 1804us; 0us; 16647us; 1us; 17405us; 19us; 1804us; 0us; 16648us; 0us; 16649us; 1us; 17419us; 109us; 1810us; 1us; 17405us; 19us; 1804us; 0us; 16650us; 0us; 16651us; 0us; 16652us; 3us; 16626us; 43us; 482us; 44us; 481us; 45us; 483us; 34us; 32768us; 46us; 1729us; 56us; 546us; 58us; 630us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 535us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 194us; 540us; 200us; 1822us; 201us; 793us; 2us; 17261us; 76us; 1731us; 154us; 529us; 1us; 32768us; 200us; 530us; 2us; 32768us; 10us; 992us; 202us; 978us; 0us; 16653us; 0us; 16654us; 0us; 16655us; 0us; 16656us; 33us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 536us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 202us; 1671us; 30us; 32768us; 46us; 1729us; 56us; 1657us; 66us; 1651us; 87us; 1648us; 90us; 1722us; 91us; 1652us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 1us; 16801us; 87us; 538us; 3us; 32768us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 0us; 16657us; 2us; 16544us; 73us; 302us; 202us; 544us; 5us; 32768us; 10us; 992us; 60us; 1849us; 61us; 1851us; 195us; 1852us; 202us; 978us; 0us; 16658us; 0us; 16659us; 3us; 32768us; 60us; 1849us; 61us; 1851us; 195us; 1852us; 0us; 16660us; 2us; 32768us; 72us; 549us; 91us; 1658us; 0us; 16661us; 0us; 16662us; 2us; 16544us; 73us; 302us; 202us; 553us; 3us; 32768us; 10us; 992us; 65us; 1853us; 202us; 978us; 0us; 16663us; 0us; 16664us; 1us; 32768us; 65us; 1853us; 0us; 16665us; 0us; 16666us; 0us; 16667us; 0us; 16668us; 0us; 16669us; 0us; 16670us; 5us; 32768us; 46us; 1729us; 90us; 1722us; 91us; 566us; 188us; 1725us; 192us; 1728us; 3us; 16671us; 34us; 1838us; 76us; 1731us; 159us; 17446us; 2us; 32768us; 46us; 1729us; 192us; 1728us; 1us; 16672us; 76us; 1731us; 0us; 16673us; 0us; 16674us; 1us; 16544us; 73us; 302us; 4us; 32768us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 96us; 571us; 0us; 16675us; 2us; 16688us; 84us; 589us; 96us; 571us; 1us; 16681us; 96us; 572us; 1us; 16544us; 73us; 302us; 2us; 16544us; 73us; 302us; 142us; 581us; 0us; 16676us; 0us; 16677us; 2us; 32768us; 90us; 1722us; 188us; 1725us; 0us; 16678us; 1us; 32768us; 159us; 578us; 1us; 16544us; 73us; 302us; 1us; 32768us; 160us; 580us; 0us; 16679us; 0us; 16680us; 1us; 32768us; 159us; 583us; 3us; 16544us; 73us; 302us; 84us; 16682us; 160us; 16682us; 1us; 16688us; 84us; 589us; 1us; 32768us; 160us; 586us; 0us; 16683us; 0us; 16684us; 27us; 16686us; 10us; 16839us; 16us; 16839us; 21us; 16839us; 26us; 16839us; 37us; 16839us; 39us; 16839us; 58us; 16839us; 59us; 16839us; 60us; 16839us; 61us; 16839us; 64us; 16839us; 69us; 16839us; 77us; 16839us; 78us; 16839us; 83us; 16839us; 84us; 16839us; 86us; 16839us; 88us; 16839us; 92us; 16839us; 93us; 16839us; 94us; 16839us; 96us; 16839us; 97us; 16839us; 126us; 16839us; 131us; 16839us; 195us; 16839us; 202us; 16839us; 4us; 32768us; 52us; 596us; 90us; 1722us; 91us; 611us; 188us; 1725us; 1us; 16689us; 130us; 593us; 1us; 17234us; 130us; 593us; 1us; 17236us; 130us; 593us; 4us; 32768us; 52us; 596us; 90us; 1722us; 91us; 611us; 188us; 1725us; 0us; 16690us; 0us; 16691us; 2us; 32768us; 90us; 1722us; 188us; 1725us; 1us; 32768us; 77us; 598us; 32us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 16692us; 2us; 32768us; 77us; 603us; 79us; 601us; 32us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 16693us; 5us; 32768us; 56us; 604us; 91us; 608us; 147us; 607us; 151us; 618us; 192us; 605us; 0us; 16694us; 3us; 16701us; 34us; 1680us; 56us; 606us; 159us; 1682us; 0us; 16695us; 0us; 16696us; 1us; 16544us; 73us; 302us; 3us; 32768us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 0us; 16697us; 31us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 4us; 32768us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 101us; 621us; 1us; 32768us; 77us; 614us; 1us; 32768us; 91us; 615us; 1us; 16544us; 73us; 302us; 3us; 32768us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 0us; 16698us; 2us; 32768us; 34us; 1680us; 159us; 1682us; 0us; 16699us; 0us; 16700us; 31us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 6us; 16702us; 36us; 1609us; 46us; 1729us; 70us; 1622us; 90us; 1722us; 188us; 1725us; 192us; 1728us; 6us; 16703us; 36us; 1609us; 46us; 1729us; 70us; 1622us; 90us; 1722us; 188us; 1725us; 192us; 1728us; 1us; 16544us; 73us; 302us; 0us; 16704us; 1us; 32768us; 58us; 630us; 1us; 16544us; 73us; 302us; 0us; 16705us; 2us; 16706us; 21us; 1807us; 58us; 17411us; 0us; 16707us; 1us; 16709us; 58us; 630us; 1us; 16544us; 73us; 302us; 0us; 16708us; 3us; 16620us; 43us; 482us; 44us; 481us; 45us; 483us; 3us; 32768us; 91us; 645us; 99us; 1739us; 192us; 1728us; 3us; 16710us; 69us; 642us; 77us; 640us; 119us; 637us; 34us; 32768us; 10us; 992us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 194us; 540us; 200us; 1822us; 201us; 793us; 202us; 978us; 0us; 16711us; 0us; 16712us; 33us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 73us; 302us; 74us; 1579us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 16713us; 18us; 32768us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 16714us; 0us; 16715us; 29us; 32768us; 58us; 1774us; 62us; 1756us; 63us; 1754us; 69us; 1758us; 70us; 648us; 74us; 1762us; 78us; 646us; 82us; 1766us; 88us; 1763us; 89us; 1764us; 95us; 1757us; 101us; 1759us; 142us; 1769us; 144us; 1765us; 154us; 1771us; 157us; 1768us; 159us; 1760us; 160us; 1761us; 181us; 1767us; 182us; 1755us; 183us; 1752us; 184us; 1751us; 185us; 1753us; 186us; 1746us; 187us; 1750us; 188us; 1749us; 189us; 1748us; 190us; 1747us; 202us; 1737us; 3us; 32768us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 0us; 16716us; 1us; 32768us; 59us; 649us; 3us; 32768us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 0us; 16717us; 4us; 17340us; 21us; 1807us; 58us; 17411us; 69us; 653us; 119us; 657us; 0us; 16718us; 18us; 32768us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 193us; 1823us; 200us; 1822us; 201us; 793us; 1us; 17411us; 21us; 1807us; 45us; 16719us; 10us; 16722us; 14us; 16722us; 15us; 16722us; 16us; 16722us; 17us; 16722us; 19us; 16722us; 20us; 16722us; 21us; 16722us; 30us; 16722us; 33us; 16722us; 37us; 16722us; 38us; 16722us; 39us; 16722us; 40us; 16722us; 41us; 16722us; 43us; 16722us; 44us; 16722us; 45us; 16722us; 47us; 16722us; 48us; 16722us; 50us; 16722us; 51us; 16722us; 52us; 16722us; 54us; 16722us; 67us; 16722us; 73us; 16722us; 83us; 16722us; 86us; 16722us; 87us; 16722us; 92us; 16722us; 93us; 16722us; 94us; 16722us; 100us; 16722us; 107us; 16722us; 108us; 16722us; 110us; 16722us; 118us; 16722us; 120us; 16722us; 130us; 16722us; 136us; 16722us; 141us; 16722us; 149us; 16722us; 150us; 16722us; 161us; 16722us; 202us; 16722us; 0us; 16720us; 32us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 194us; 540us; 200us; 1822us; 201us; 793us; 0us; 16721us; 1us; 16724us; 95us; 660us; 31us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 16723us; 1us; 17340us; 77us; 663us; 31us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 6us; 16725us; 36us; 1609us; 46us; 1729us; 70us; 1622us; 90us; 1722us; 188us; 1725us; 192us; 1728us; 6us; 16726us; 36us; 1609us; 46us; 1729us; 70us; 1622us; 90us; 1722us; 188us; 1725us; 192us; 1728us; 0us; 16727us; 0us; 16728us; 2us; 17413us; 21us; 1794us; 83us; 1795us; 7us; 16544us; 10us; 17412us; 60us; 17412us; 61us; 17412us; 65us; 17412us; 73us; 302us; 195us; 17412us; 202us; 17412us; 0us; 16729us; 0us; 16730us; 1us; 17421us; 117us; 1811us; 0us; 16731us; 3us; 16620us; 43us; 482us; 44us; 481us; 45us; 483us; 1us; 32768us; 192us; 1728us; 1us; 32768us; 77us; 677us; 32us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 16732us; 1us; 16631us; 86us; 488us; 0us; 16733us; 0us; 16734us; 1us; 16544us; 73us; 302us; 3us; 16620us; 43us; 482us; 44us; 481us; 45us; 483us; 1us; 32768us; 192us; 1728us; 1us; 16739us; 69us; 691us; 0us; 16735us; 1us; 16736us; 119us; 688us; 34us; 32768us; 10us; 992us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 194us; 540us; 200us; 1822us; 201us; 793us; 202us; 978us; 0us; 16737us; 0us; 16738us; 2us; 32768us; 46us; 1729us; 192us; 1728us; 1us; 16740us; 76us; 1731us; 1us; 17415us; 102us; 1809us; 2us; 16544us; 73us; 302us; 202us; 747us; 0us; 16741us; 0us; 16742us; 73us; 32768us; 13us; 1109us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 16743us; 1us; 17415us; 102us; 1809us; 2us; 16544us; 73us; 302us; 202us; 747us; 3us; 32768us; 10us; 992us; 19us; 710us; 202us; 978us; 0us; 16744us; 73us; 32768us; 13us; 1109us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 3us; 32768us; 10us; 992us; 19us; 710us; 202us; 978us; 0us; 16745us; 0us; 16746us; 0us; 16747us; 0us; 16748us; 0us; 16749us; 0us; 16750us; 0us; 16751us; 1us; 16544us; 73us; 302us; 3us; 16620us; 43us; 482us; 44us; 481us; 45us; 483us; 1us; 32768us; 192us; 1728us; 2us; 17444us; 35us; 1837us; 36us; 1836us; 1us; 32768us; 91us; 717us; 4us; 16544us; 73us; 302us; 92us; 16755us; 93us; 16755us; 94us; 16755us; 3us; 32768us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 0us; 16752us; 1us; 16753us; 96us; 722us; 1us; 16754us; 96us; 724us; 1us; 16544us; 73us; 302us; 0us; 16756us; 1us; 16544us; 73us; 302us; 0us; 16757us; 3us; 32768us; 42us; 736us; 46us; 1729us; 192us; 1728us; 6us; 16758us; 35us; 1837us; 36us; 1836us; 70us; 17444us; 88us; 735us; 95us; 734us; 192us; 1728us; 0us; 16759us; 1us; 16760us; 76us; 1731us; 5us; 16765us; 35us; 1837us; 36us; 1836us; 70us; 17444us; 88us; 735us; 95us; 734us; 1us; 32768us; 70us; 732us; 1us; 32768us; 59us; 733us; 0us; 16761us; 0us; 16762us; 0us; 16763us; 1us; 32768us; 95us; 738us; 1us; 16766us; 95us; 738us; 0us; 16764us; 3us; 32768us; 42us; 737us; 46us; 1729us; 192us; 1728us; 1us; 16769us; 130us; 742us; 0us; 16767us; 2us; 16544us; 73us; 302us; 202us; 747us; 1us; 16769us; 130us; 742us; 0us; 16768us; 1us; 17419us; 109us; 1810us; 0us; 16770us; 0us; 16771us; 1us; 17421us; 117us; 1811us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 1us; 17237us; 77us; 1557us; 3us; 32768us; 10us; 992us; 69us; 752us; 202us; 978us; 74us; 32768us; 13us; 1109us; 22us; 756us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 754us; 0us; 16772us; 0us; 16773us; 0us; 16774us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 5us; 32768us; 10us; 992us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 202us; 978us; 0us; 16775us; 0us; 16776us; 0us; 16777us; 0us; 16780us; 1us; 16778us; 84us; 764us; 0us; 16779us; 2us; 32768us; 90us; 1722us; 188us; 1725us; 2us; 32768us; 69us; 766us; 130us; 768us; 73us; 32768us; 13us; 1109us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 16781us; 2us; 32768us; 90us; 1722us; 188us; 1725us; 0us; 16782us; 0us; 16783us; 2us; 32768us; 56us; 774us; 77us; 772us; 32us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 16784us; 0us; 16785us; 0us; 16786us; 0us; 16787us; 0us; 16788us; 0us; 16789us; 0us; 16790us; 0us; 16791us; 0us; 16792us; 0us; 16793us; 0us; 16794us; 0us; 16795us; 0us; 16796us; 0us; 16797us; 0us; 16798us; 1us; 16798us; 142us; 880us; 0us; 16799us; 0us; 16800us; 0us; 16801us; 0us; 16802us; 0us; 16803us; 1us; 16806us; 185us; 795us; 1us; 32768us; 177us; 796us; 0us; 16804us; 1us; 32768us; 177us; 798us; 1us; 16807us; 185us; 799us; 1us; 32768us; 177us; 800us; 0us; 16805us; 0us; 16808us; 2us; 32768us; 62us; 797us; 177us; 794us; 3us; 32768us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 0us; 16809us; 0us; 16810us; 2us; 32768us; 91us; 802us; 177us; 801us; 0us; 16811us; 1us; 16812us; 34us; 809us; 1us; 32768us; 159us; 1699us; 0us; 16813us; 5us; 16814us; 58us; 842us; 78us; 843us; 88us; 850us; 96us; 848us; 131us; 840us; 0us; 16815us; 1us; 32768us; 192us; 1728us; 0us; 16816us; 1us; 16818us; 77us; 817us; 2us; 16819us; 77us; 817us; 96us; 820us; 32us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 16817us; 3us; 32768us; 73us; 302us; 74us; 813us; 192us; 1728us; 3us; 32768us; 73us; 302us; 74us; 813us; 192us; 1728us; 0us; 16820us; 8us; 32768us; 10us; 992us; 73us; 302us; 74us; 813us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 192us; 1728us; 202us; 827us; 5us; 32768us; 10us; 992us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 202us; 978us; 0us; 16821us; 0us; 16822us; 0us; 16823us; 3us; 16907us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 0us; 16824us; 0us; 16825us; 3us; 16827us; 78us; 843us; 88us; 850us; 96us; 848us; 1us; 16828us; 78us; 843us; 2us; 16832us; 78us; 843us; 88us; 850us; 2us; 16833us; 78us; 843us; 88us; 850us; 1us; 16834us; 78us; 843us; 1us; 16835us; 78us; 843us; 6us; 32768us; 58us; 842us; 69us; 994us; 78us; 843us; 88us; 850us; 96us; 848us; 131us; 840us; 6us; 32768us; 58us; 842us; 69us; 999us; 78us; 843us; 88us; 850us; 96us; 848us; 131us; 840us; 6us; 32768us; 58us; 842us; 69us; 1085us; 78us; 843us; 88us; 850us; 96us; 848us; 131us; 840us; 6us; 32768us; 58us; 842us; 69us; 1092us; 78us; 843us; 88us; 850us; 96us; 848us; 131us; 840us; 1us; 32768us; 192us; 1728us; 0us; 16826us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 1us; 16829us; 96us; 847us; 0us; 16830us; 0us; 16831us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 2us; 17413us; 21us; 1794us; 83us; 1795us; 0us; 16836us; 1us; 17412us; 192us; 1728us; 0us; 16837us; 1us; 32768us; 69us; 857us; 2us; 17379us; 69us; 857us; 76us; 1781us; 37us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 73us; 302us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 6us; 16838us; 58us; 929us; 77us; 932us; 78us; 935us; 88us; 940us; 96us; 938us; 131us; 927us; 29us; 16687us; 10us; 16858us; 16us; 16858us; 21us; 16858us; 26us; 16858us; 34us; 1838us; 37us; 16858us; 39us; 16858us; 58us; 16858us; 59us; 16858us; 60us; 16858us; 61us; 16858us; 64us; 16858us; 69us; 16858us; 77us; 16858us; 78us; 16858us; 83us; 16858us; 84us; 16858us; 86us; 16858us; 88us; 16858us; 92us; 16858us; 93us; 16858us; 94us; 16858us; 96us; 16858us; 97us; 16858us; 126us; 16858us; 131us; 16858us; 159us; 17446us; 195us; 16858us; 202us; 16858us; 37us; 32768us; 35us; 862us; 36us; 864us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 74us; 891us; 91us; 869us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 0us; 16840us; 35us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 74us; 891us; 91us; 869us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 0us; 16841us; 35us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 74us; 891us; 91us; 869us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 0us; 16842us; 31us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1651us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1652us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 16843us; 0us; 16844us; 63us; 16872us; 10us; 992us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 58us; 1774us; 62us; 1756us; 63us; 1754us; 66us; 468us; 69us; 1758us; 70us; 885us; 71us; 888us; 73us; 302us; 74us; 892us; 81us; 866us; 82us; 1766us; 88us; 1763us; 89us; 1764us; 91us; 899us; 95us; 1757us; 99us; 1739us; 101us; 1759us; 105us; 897us; 121us; 896us; 142us; 1769us; 144us; 1765us; 147us; 898us; 154us; 1370us; 157us; 1768us; 159us; 1760us; 160us; 1761us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 181us; 1767us; 182us; 1755us; 183us; 1752us; 184us; 1751us; 185us; 1753us; 186us; 1746us; 187us; 1750us; 188us; 1749us; 189us; 1748us; 190us; 1747us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 202us; 903us; 3us; 32768us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 0us; 16845us; 0us; 16846us; 37us; 16850us; 35us; 877us; 36us; 875us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 74us; 891us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 0us; 16847us; 35us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 74us; 891us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 0us; 16848us; 35us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 74us; 891us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 0us; 16849us; 0us; 16851us; 1us; 32768us; 167us; 881us; 0us; 16852us; 2us; 32768us; 46us; 1729us; 192us; 1728us; 3us; 32768us; 60us; 1849us; 61us; 1851us; 195us; 1852us; 0us; 16853us; 37us; 16888us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 73us; 302us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 1us; 32768us; 59us; 887us; 0us; 16854us; 37us; 16888us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 73us; 302us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 1us; 32768us; 64us; 890us; 0us; 16855us; 1us; 32768us; 192us; 1728us; 1us; 17364us; 192us; 1728us; 0us; 16857us; 0us; 16858us; 0us; 16859us; 0us; 16860us; 0us; 16861us; 0us; 16862us; 63us; 16872us; 10us; 992us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 58us; 1774us; 62us; 1756us; 63us; 1754us; 66us; 468us; 69us; 1758us; 70us; 885us; 71us; 888us; 73us; 302us; 74us; 892us; 81us; 866us; 82us; 1766us; 88us; 1763us; 89us; 1764us; 91us; 899us; 95us; 1757us; 99us; 1739us; 101us; 1759us; 105us; 897us; 121us; 896us; 142us; 1769us; 144us; 1765us; 147us; 898us; 154us; 1370us; 157us; 1768us; 159us; 1760us; 160us; 1761us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 181us; 1767us; 182us; 1755us; 183us; 1752us; 184us; 1751us; 185us; 1753us; 186us; 1746us; 187us; 1750us; 188us; 1749us; 189us; 1748us; 190us; 1747us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 202us; 903us; 5us; 32768us; 10us; 992us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 202us; 978us; 0us; 16863us; 0us; 16864us; 3us; 16907us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 2us; 16865us; 34us; 17344us; 159us; 17344us; 0us; 16866us; 1us; 32768us; 91us; 907us; 39us; 32768us; 10us; 992us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 73us; 302us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 202us; 911us; 6us; 16875us; 10us; 992us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 96us; 937us; 202us; 978us; 0us; 16867us; 0us; 16868us; 3us; 16907us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 0us; 16869us; 0us; 16870us; 6us; 16871us; 58us; 929us; 77us; 932us; 78us; 935us; 88us; 940us; 96us; 938us; 131us; 927us; 4us; 16874us; 77us; 932us; 78us; 935us; 88us; 940us; 96us; 938us; 3us; 16878us; 77us; 932us; 78us; 935us; 88us; 940us; 2us; 16879us; 77us; 932us; 78us; 935us; 3us; 16881us; 77us; 932us; 78us; 935us; 88us; 940us; 3us; 16882us; 77us; 932us; 78us; 935us; 88us; 940us; 2us; 16883us; 77us; 932us; 78us; 935us; 6us; 32768us; 58us; 929us; 77us; 932us; 78us; 935us; 88us; 940us; 96us; 938us; 131us; 927us; 2us; 16884us; 77us; 932us; 78us; 935us; 6us; 16887us; 58us; 929us; 77us; 932us; 78us; 935us; 88us; 940us; 96us; 938us; 131us; 927us; 8us; 17413us; 21us; 1794us; 58us; 929us; 77us; 932us; 78us; 935us; 83us; 1795us; 88us; 940us; 96us; 938us; 131us; 927us; 15us; 32768us; 10us; 992us; 16us; 1871us; 37us; 1867us; 39us; 1868us; 58us; 929us; 60us; 1869us; 69us; 1432us; 77us; 932us; 78us; 935us; 88us; 940us; 93us; 1870us; 96us; 938us; 126us; 1428us; 131us; 927us; 202us; 983us; 7us; 17033us; 58us; 929us; 77us; 932us; 78us; 935us; 84us; 1225us; 88us; 940us; 96us; 938us; 131us; 927us; 1us; 32768us; 192us; 1728us; 0us; 16873us; 37us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 73us; 302us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 1us; 16875us; 96us; 937us; 1us; 16876us; 88us; 939us; 32us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 16877us; 37us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 73us; 302us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 37us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 73us; 302us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 0us; 16880us; 37us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 73us; 302us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 37us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 73us; 302us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 37us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 73us; 302us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 37us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 73us; 302us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 2us; 17413us; 21us; 1794us; 83us; 1795us; 0us; 16885us; 2us; 17412us; 46us; 1729us; 192us; 1728us; 0us; 16886us; 2us; 32768us; 69us; 946us; 76us; 1731us; 37us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 73us; 302us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 0us; 16889us; 37us; 16888us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 73us; 302us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 0us; 16890us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 5us; 32768us; 10us; 992us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 202us; 978us; 0us; 16891us; 0us; 16892us; 0us; 16893us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 3us; 32768us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 0us; 16894us; 25us; 16895us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 1247us; 101us; 1164us; 127us; 1161us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 1us; 16897us; 18us; 960us; 0us; 16896us; 1us; 16899us; 77us; 962us; 32us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 16898us; 1us; 32768us; 10us; 965us; 0us; 16900us; 29us; 16903us; 21us; 1794us; 28us; 973us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 83us; 1795us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 1247us; 101us; 1164us; 103us; 971us; 127us; 1161us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 30us; 16903us; 21us; 1794us; 28us; 973us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 83us; 1795us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 17101us; 101us; 1164us; 103us; 971us; 127us; 1161us; 142us; 17101us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 30us; 16903us; 21us; 1794us; 28us; 973us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 83us; 1795us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 1247us; 101us; 1164us; 103us; 971us; 127us; 1161us; 142us; 1423us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 72us; 16902us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 16901us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 16904us; 1us; 32768us; 22us; 974us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 3us; 32768us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 0us; 16905us; 75us; 16906us; 13us; 1109us; 21us; 1011us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 1010us; 0us; 16907us; 2us; 16907us; 19us; 1815us; 137us; 1814us; 2us; 16907us; 19us; 1815us; 137us; 1814us; 2us; 16907us; 19us; 1815us; 137us; 1814us; 2us; 16907us; 30us; 1813us; 136us; 1812us; 2us; 16907us; 19us; 1815us; 137us; 1814us; 1us; 16907us; 59us; 1315us; 1us; 16907us; 59us; 1339us; 1us; 16907us; 155us; 1374us; 1us; 16907us; 64us; 1380us; 3us; 16907us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 3us; 16907us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 3us; 16907us; 60us; 1849us; 61us; 1851us; 195us; 1852us; 1us; 16907us; 65us; 1853us; 0us; 16908us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 73us; 32768us; 13us; 1109us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 1us; 32768us; 126us; 996us; 2us; 16911us; 31us; 998us; 164us; 993us; 0us; 16909us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 73us; 32768us; 13us; 1109us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 3us; 32768us; 10us; 992us; 19us; 710us; 202us; 978us; 1us; 17411us; 21us; 1807us; 2us; 16911us; 31us; 998us; 164us; 993us; 0us; 16910us; 1us; 32768us; 126us; 1005us; 73us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 1007us; 0us; 16912us; 0us; 16913us; 75us; 32768us; 13us; 1109us; 21us; 1011us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 1010us; 0us; 16914us; 0us; 16915us; 74us; 32768us; 13us; 1109us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 1013us; 0us; 16916us; 0us; 16917us; 0us; 16918us; 0us; 16919us; 0us; 16920us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 4us; 32768us; 10us; 992us; 26us; 1208us; 86us; 1206us; 202us; 978us; 0us; 16921us; 0us; 16922us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 4us; 32768us; 10us; 992us; 26us; 1208us; 86us; 1206us; 202us; 978us; 0us; 16923us; 0us; 16924us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 5us; 32768us; 10us; 992us; 26us; 1208us; 86us; 1206us; 128us; 1029us; 202us; 978us; 0us; 16925us; 0us; 16926us; 73us; 32768us; 13us; 1109us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 16927us; 74us; 32768us; 10us; 992us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 978us; 29us; 32768us; 10us; 992us; 28us; 1231us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 1247us; 101us; 1164us; 103us; 1230us; 127us; 1161us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 202us; 978us; 0us; 16928us; 0us; 16929us; 0us; 16930us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 16931us; 64us; 16933us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 158us; 1084us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 16932us; 73us; 32768us; 13us; 1109us; 22us; 955us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 16934us; 65us; 16936us; 13us; 1109us; 22us; 955us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 158us; 1084us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 16935us; 74us; 32768us; 10us; 992us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 979us; 29us; 32768us; 10us; 992us; 30us; 1813us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 1247us; 101us; 1164us; 127us; 1161us; 136us; 1812us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 202us; 978us; 74us; 32768us; 13us; 1109us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 1050us; 4us; 32768us; 10us; 992us; 19us; 1815us; 137us; 1814us; 202us; 978us; 0us; 16937us; 0us; 16938us; 2us; 32768us; 19us; 1815us; 137us; 1814us; 0us; 16939us; 0us; 16940us; 0us; 16941us; 0us; 16942us; 44us; 32768us; 10us; 992us; 16us; 1871us; 37us; 1867us; 39us; 1868us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 60us; 1869us; 66us; 468us; 70us; 885us; 71us; 888us; 73us; 302us; 74us; 891us; 81us; 866us; 91us; 899us; 93us; 1870us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 202us; 982us; 10us; 17411us; 10us; 992us; 16us; 1871us; 21us; 1807us; 30us; 1813us; 37us; 1867us; 39us; 1868us; 60us; 1869us; 93us; 1870us; 136us; 1812us; 202us; 978us; 80us; 32768us; 10us; 992us; 13us; 1109us; 16us; 1871us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 37us; 1867us; 39us; 1868us; 41us; 712us; 46us; 1309us; 56us; 1317us; 60us; 1869us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 93us; 1870us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 980us; 9us; 32768us; 10us; 992us; 16us; 1871us; 19us; 1815us; 37us; 1867us; 39us; 1868us; 60us; 1869us; 93us; 1870us; 137us; 1814us; 202us; 978us; 0us; 16943us; 0us; 16944us; 0us; 16945us; 0us; 16946us; 0us; 16947us; 4us; 32768us; 10us; 992us; 30us; 1813us; 136us; 1812us; 202us; 978us; 75us; 32768us; 10us; 992us; 13us; 1109us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 981us; 4us; 32768us; 10us; 992us; 19us; 1815us; 137us; 1814us; 202us; 978us; 0us; 16948us; 0us; 16949us; 0us; 16950us; 0us; 16951us; 0us; 16952us; 73us; 32768us; 13us; 1109us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 2us; 32768us; 19us; 1815us; 137us; 1814us; 0us; 16953us; 0us; 16954us; 0us; 16955us; 0us; 16956us; 74us; 32768us; 10us; 992us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 978us; 25us; 16957us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 1247us; 101us; 1164us; 127us; 1161us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 74us; 32768us; 10us; 992us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 978us; 25us; 16958us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 1247us; 101us; 1164us; 127us; 1161us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 0us; 16959us; 0us; 16960us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 73us; 32768us; 13us; 1109us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 1us; 32768us; 126us; 1087us; 1us; 17411us; 21us; 1807us; 2us; 16911us; 31us; 998us; 164us; 993us; 73us; 32768us; 13us; 1109us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 16961us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 73us; 32768us; 13us; 1109us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 3us; 32768us; 10us; 992us; 19us; 710us; 202us; 978us; 1us; 17411us; 21us; 1807us; 3us; 16911us; 31us; 998us; 164us; 993us; 202us; 1098us; 73us; 32768us; 13us; 1109us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 16962us; 0us; 16963us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 1us; 32768us; 126us; 1101us; 1us; 17411us; 21us; 1807us; 73us; 32768us; 13us; 1109us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 16964us; 73us; 32768us; 13us; 1109us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 3us; 32768us; 10us; 992us; 19us; 710us; 202us; 978us; 0us; 16965us; 1us; 32768us; 97us; 1426us; 0us; 16966us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 25us; 16967us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 1247us; 101us; 1164us; 127us; 1161us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 16968us; 25us; 16972us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 1247us; 101us; 1164us; 127us; 1161us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 20us; 16975us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 20us; 16976us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 9us; 16977us; 62us; 1178us; 78us; 1176us; 81us; 1149us; 95us; 1179us; 157us; 1175us; 183us; 1177us; 185us; 1180us; 188us; 1174us; 190us; 1181us; 20us; 16978us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 18us; 16979us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 95us; 1179us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 18us; 16980us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 95us; 1179us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 9us; 16981us; 62us; 1178us; 78us; 1176us; 81us; 1149us; 95us; 1179us; 157us; 1175us; 183us; 1177us; 185us; 1180us; 188us; 1174us; 190us; 1181us; 9us; 16982us; 62us; 1178us; 78us; 1176us; 81us; 1149us; 95us; 1179us; 157us; 1175us; 183us; 1177us; 185us; 1180us; 188us; 1174us; 190us; 1181us; 9us; 16983us; 62us; 1178us; 78us; 1176us; 81us; 1149us; 95us; 1179us; 157us; 1175us; 183us; 1177us; 185us; 1180us; 188us; 1174us; 190us; 1181us; 9us; 16984us; 62us; 1178us; 78us; 1176us; 81us; 1149us; 95us; 1179us; 157us; 1175us; 183us; 1177us; 185us; 1180us; 188us; 1174us; 190us; 1181us; 9us; 16985us; 62us; 1178us; 78us; 1176us; 81us; 1149us; 95us; 1179us; 157us; 1175us; 183us; 1177us; 185us; 1180us; 188us; 1174us; 190us; 1181us; 9us; 16987us; 62us; 1178us; 78us; 1176us; 81us; 1149us; 95us; 1179us; 157us; 1175us; 183us; 1177us; 185us; 1180us; 188us; 1174us; 190us; 1181us; 9us; 16988us; 62us; 1178us; 78us; 1176us; 81us; 1149us; 95us; 1179us; 157us; 1175us; 183us; 1177us; 185us; 1180us; 188us; 1174us; 190us; 1181us; 1us; 16989us; 190us; 1181us; 8us; 16990us; 62us; 1178us; 78us; 1176us; 81us; 1149us; 95us; 1179us; 157us; 1175us; 183us; 1177us; 185us; 1180us; 190us; 1181us; 4us; 16991us; 95us; 1179us; 157us; 1175us; 185us; 1180us; 190us; 1181us; 4us; 16992us; 95us; 1179us; 157us; 1175us; 185us; 1180us; 190us; 1181us; 1us; 16993us; 190us; 1181us; 1us; 16994us; 190us; 1181us; 1us; 16995us; 190us; 1181us; 25us; 17032us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 1247us; 101us; 1164us; 127us; 1161us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 25us; 17036us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 1247us; 101us; 1164us; 127us; 1161us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 25us; 17040us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 1247us; 101us; 1164us; 127us; 1161us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 29us; 32768us; 10us; 992us; 28us; 1231us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 1247us; 101us; 1164us; 103us; 1230us; 127us; 1161us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 202us; 978us; 23us; 17045us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 101us; 1164us; 127us; 1161us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 25us; 32768us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 1247us; 101us; 1164us; 127us; 1161us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 23us; 17048us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 101us; 1164us; 127us; 1161us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 24us; 17101us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 101us; 1164us; 127us; 1161us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 24us; 17102us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 101us; 1164us; 127us; 1161us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 26us; 17158us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 1247us; 101us; 1164us; 127us; 1161us; 142us; 1423us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 28us; 32768us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 1247us; 101us; 1164us; 104us; 1435us; 127us; 1161us; 138us; 1436us; 142us; 1423us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 26us; 17154us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 1247us; 101us; 1164us; 127us; 1161us; 142us; 1424us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 25us; 17155us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 1247us; 101us; 1164us; 127us; 1161us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 25us; 17162us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 1247us; 101us; 1164us; 127us; 1161us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 26us; 17434us; 62us; 1178us; 63us; 1170us; 69us; 1168us; 77us; 1824us; 78us; 1176us; 79us; 1151us; 80us; 1153us; 81us; 1149us; 82us; 1155us; 88us; 1165us; 89us; 1166us; 95us; 1179us; 96us; 1247us; 101us; 1164us; 127us; 1161us; 144us; 1162us; 157us; 1175us; 159us; 1171us; 160us; 1173us; 183us; 1177us; 184us; 1167us; 185us; 1180us; 187us; 1163us; 188us; 1174us; 189us; 1169us; 190us; 1181us; 32us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 16969us; 32us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 16970us; 32us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 16971us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 1us; 17016us; 68us; 1157us; 73us; 32768us; 13us; 1109us; 22us; 955us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 16973us; 1us; 16974us; 96us; 1245us; 6us; 16974us; 10us; 992us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 96us; 1245us; 202us; 978us; 73us; 32768us; 13us; 1109us; 16us; 1182us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 73us; 32768us; 13us; 1109us; 16us; 1183us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 73us; 32768us; 13us; 1109us; 16us; 1184us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 73us; 32768us; 13us; 1109us; 16us; 1185us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 73us; 32768us; 13us; 1109us; 16us; 1186us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 73us; 32768us; 13us; 1109us; 16us; 1187us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 73us; 32768us; 13us; 1109us; 16us; 1188us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 73us; 32768us; 13us; 1109us; 16us; 1189us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 73us; 32768us; 13us; 1109us; 16us; 1190us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 73us; 32768us; 13us; 1109us; 16us; 1191us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 75us; 32768us; 10us; 992us; 13us; 1109us; 16us; 1192us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 978us; 0us; 16986us; 73us; 32768us; 13us; 1109us; 16us; 1193us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 73us; 32768us; 13us; 1109us; 16us; 1194us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 73us; 32768us; 13us; 1109us; 16us; 1195us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 73us; 32768us; 13us; 1109us; 16us; 1196us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 73us; 32768us; 13us; 1109us; 16us; 1197us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 73us; 32768us; 13us; 1109us; 16us; 1198us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 73us; 32768us; 13us; 1109us; 16us; 1199us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 73us; 32768us; 13us; 1109us; 16us; 1200us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 73us; 32768us; 13us; 1109us; 16us; 1201us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 16996us; 0us; 16997us; 0us; 16998us; 0us; 16999us; 0us; 17000us; 0us; 17001us; 0us; 17002us; 0us; 17003us; 0us; 17004us; 0us; 17005us; 0us; 17006us; 0us; 17007us; 0us; 17008us; 0us; 17009us; 0us; 17010us; 0us; 17011us; 0us; 17012us; 0us; 17013us; 0us; 17014us; 0us; 17015us; 0us; 17017us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 3us; 32768us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 0us; 17018us; 39us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 58us; 1213us; 66us; 468us; 70us; 885us; 71us; 888us; 73us; 302us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 202us; 1216us; 0us; 17019us; 39us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 58us; 1213us; 66us; 468us; 70us; 885us; 71us; 888us; 73us; 302us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 202us; 1216us; 3us; 32768us; 10us; 992us; 20us; 1210us; 202us; 978us; 0us; 17020us; 0us; 17021us; 0us; 17022us; 38us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 73us; 302us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 202us; 1215us; 0us; 17023us; 0us; 17024us; 0us; 17025us; 0us; 17026us; 2us; 32768us; 97us; 1226us; 202us; 1224us; 2us; 17027us; 58us; 1220us; 202us; 1223us; 38us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 73us; 302us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 202us; 1222us; 0us; 17028us; 0us; 17029us; 0us; 17030us; 0us; 17031us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 17034us; 3us; 17039us; 27us; 1237us; 139us; 1236us; 140us; 1242us; 0us; 17035us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 1us; 32768us; 22us; 1232us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 5us; 32768us; 10us; 992us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 202us; 978us; 0us; 17037us; 0us; 17038us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 1us; 32768us; 22us; 1238us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 5us; 32768us; 10us; 992us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 202us; 978us; 0us; 17041us; 0us; 17042us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 17043us; 0us; 17044us; 79us; 32768us; 10us; 992us; 13us; 1109us; 16us; 1871us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 37us; 1867us; 39us; 1868us; 41us; 712us; 46us; 1309us; 56us; 1317us; 60us; 1869us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 93us; 1870us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 978us; 0us; 17046us; 79us; 32768us; 10us; 992us; 13us; 1109us; 16us; 1871us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 37us; 1867us; 39us; 1868us; 41us; 712us; 46us; 1309us; 56us; 1317us; 60us; 1869us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 93us; 1870us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 978us; 0us; 17047us; 46us; 32768us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 118us; 1267us; 121us; 1357us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 46us; 17358us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 118us; 1267us; 121us; 1357us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 17049us; 46us; 32768us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 118us; 1267us; 121us; 1357us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 46us; 17354us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 118us; 1267us; 121us; 1357us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 17050us; 46us; 32768us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 118us; 1267us; 121us; 1357us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 46us; 17357us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 118us; 1267us; 121us; 1357us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 17051us; 46us; 32768us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 118us; 1267us; 121us; 1357us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 46us; 17370us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 118us; 1267us; 121us; 1357us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 17052us; 46us; 32768us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 118us; 1267us; 121us; 1357us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 46us; 17365us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 118us; 1267us; 121us; 1357us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 17053us; 46us; 32768us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 118us; 1267us; 121us; 1357us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 46us; 17366us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 118us; 1267us; 121us; 1357us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 17054us; 31us; 32768us; 46us; 1729us; 56us; 1657us; 66us; 1651us; 87us; 1648us; 90us; 1722us; 91us; 1641us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 202us; 1276us; 31us; 32768us; 46us; 1729us; 56us; 1657us; 66us; 1651us; 87us; 1648us; 90us; 1722us; 91us; 1641us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 202us; 1276us; 2us; 17444us; 35us; 1837us; 36us; 1836us; 37us; 17202us; 14us; 17205us; 21us; 17205us; 26us; 17205us; 35us; 1837us; 36us; 1836us; 56us; 17444us; 71us; 17444us; 72us; 17444us; 86us; 17205us; 91us; 17444us; 105us; 17444us; 110us; 17205us; 121us; 17444us; 135us; 17444us; 147us; 17444us; 154us; 17444us; 165us; 17444us; 166us; 17444us; 167us; 17444us; 168us; 17444us; 169us; 17444us; 170us; 17444us; 171us; 17444us; 172us; 17444us; 173us; 17444us; 174us; 17444us; 175us; 17444us; 176us; 17444us; 177us; 17444us; 179us; 17444us; 180us; 17444us; 193us; 17444us; 194us; 17444us; 198us; 17444us; 199us; 17444us; 200us; 17444us; 201us; 17444us; 31us; 32768us; 56us; 1520us; 71us; 1376us; 72us; 1523us; 91us; 1382us; 105us; 1358us; 121us; 1357us; 135us; 1362us; 147us; 1356us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 1275us; 31us; 32768us; 56us; 1520us; 71us; 1376us; 72us; 1523us; 91us; 1382us; 105us; 1358us; 121us; 1357us; 135us; 1362us; 147us; 1356us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 1275us; 0us; 17055us; 5us; 17055us; 14us; 17204us; 26us; 17204us; 86us; 17204us; 110us; 17204us; 131us; 502us; 0us; 17056us; 0us; 17057us; 46us; 32768us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 118us; 1267us; 121us; 1357us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 17058us; 46us; 32768us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 118us; 1267us; 121us; 1357us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 17059us; 38us; 17060us; 46us; 1309us; 56us; 1317us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 121us; 1357us; 135us; 1362us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1286us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 41us; 17060us; 26us; 1473us; 46us; 1309us; 56us; 1317us; 69us; 1460us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 86us; 1469us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 121us; 1357us; 135us; 1362us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1286us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 41us; 32768us; 26us; 1473us; 46us; 1309us; 56us; 1317us; 69us; 1460us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 86us; 1469us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 121us; 1357us; 135us; 1362us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1286us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 17061us; 5us; 17062us; 34us; 1295us; 35us; 1294us; 36us; 1293us; 74us; 1307us; 76us; 1299us; 37us; 32768us; 46us; 1309us; 56us; 1317us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 121us; 1357us; 135us; 1362us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 5us; 17063us; 34us; 1295us; 35us; 1294us; 36us; 1293us; 74us; 1307us; 76us; 1299us; 5us; 17064us; 34us; 1295us; 35us; 1294us; 36us; 1293us; 74us; 1307us; 76us; 1299us; 2us; 17065us; 34us; 1295us; 35us; 1294us; 1us; 17066us; 34us; 1295us; 5us; 17068us; 34us; 1295us; 35us; 1294us; 36us; 1293us; 74us; 1307us; 76us; 1299us; 5us; 17298us; 34us; 1295us; 35us; 1294us; 36us; 1293us; 74us; 1307us; 76us; 1299us; 37us; 32768us; 46us; 1309us; 56us; 1317us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 121us; 1357us; 135us; 1362us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 37us; 32768us; 46us; 1309us; 56us; 1317us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 121us; 1357us; 135us; 1362us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 1us; 32768us; 159us; 1682us; 0us; 17067us; 37us; 32768us; 46us; 1309us; 56us; 1317us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 121us; 1357us; 135us; 1362us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 37us; 17348us; 46us; 1309us; 56us; 1317us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 121us; 1357us; 135us; 1362us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 7us; 17084us; 10us; 992us; 46us; 1323us; 70us; 1332us; 91us; 1325us; 99us; 1739us; 192us; 1728us; 202us; 978us; 0us; 17069us; 1us; 32768us; 76us; 1302us; 7us; 17084us; 10us; 992us; 46us; 1323us; 70us; 1332us; 91us; 1325us; 99us; 1739us; 192us; 1728us; 202us; 978us; 0us; 17070us; 3us; 32768us; 91us; 1734us; 99us; 1739us; 192us; 1728us; 3us; 17364us; 91us; 1734us; 99us; 1739us; 192us; 1728us; 0us; 17071us; 2us; 32768us; 91us; 1203us; 192us; 1202us; 0us; 17072us; 0us; 17073us; 0us; 17074us; 74us; 17151us; 10us; 992us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 984us; 3us; 32768us; 10us; 992us; 59us; 1313us; 202us; 978us; 0us; 17075us; 0us; 17076us; 0us; 17077us; 0us; 17078us; 2us; 32768us; 72us; 1523us; 91us; 1318us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 17079us; 0us; 17080us; 0us; 17081us; 0us; 17082us; 0us; 17083us; 0us; 17085us; 91us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 58us; 1774us; 62us; 1250us; 63us; 1754us; 69us; 1758us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1305us; 78us; 1326us; 82us; 1766us; 85us; 1044us; 88us; 1262us; 89us; 1265us; 91us; 1384us; 95us; 1757us; 97us; 1111us; 99us; 1739us; 101us; 1759us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 142us; 1769us; 144us; 1765us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1370us; 157us; 1259us; 158us; 1084us; 159us; 1760us; 160us; 1761us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 181us; 1767us; 182us; 1256us; 183us; 1253us; 184us; 1751us; 185us; 1753us; 186us; 1298us; 187us; 1750us; 188us; 1749us; 189us; 1748us; 190us; 1747us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 1737us; 3us; 32768us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 1us; 32768us; 76us; 1328us; 1us; 32768us; 177us; 1329us; 0us; 17086us; 3us; 32768us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 0us; 17087us; 77us; 32768us; 10us; 992us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 95us; 1349us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 142us; 1347us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 188us; 1350us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 985us; 3us; 32768us; 10us; 992us; 59us; 1334us; 202us; 978us; 0us; 17088us; 0us; 17089us; 3us; 32768us; 10us; 992us; 59us; 1337us; 202us; 978us; 0us; 17090us; 0us; 17091us; 0us; 17092us; 0us; 17093us; 1us; 17095us; 96us; 1342us; 75us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 95us; 1349us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 142us; 1347us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 188us; 1350us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 17094us; 1us; 17100us; 142us; 1345us; 73us; 17097us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 188us; 1350us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 17096us; 73us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 188us; 1350us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 17098us; 0us; 17099us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 17103us; 0us; 17104us; 0us; 17105us; 0us; 17106us; 0us; 17107us; 0us; 17108us; 0us; 17109us; 0us; 17110us; 0us; 17111us; 0us; 17112us; 0us; 17113us; 74us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 141us; 1368us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 1366us; 3us; 32768us; 10us; 992us; 141us; 1364us; 202us; 978us; 0us; 17114us; 0us; 17115us; 1us; 32768us; 141us; 1367us; 0us; 17116us; 0us; 17117us; 74us; 32768us; 10us; 992us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 986us; 75us; 32768us; 10us; 992us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 155us; 1772us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 986us; 3us; 32768us; 10us; 992us; 155us; 1372us; 202us; 978us; 0us; 17118us; 0us; 17119us; 0us; 17120us; 0us; 17121us; 74us; 17151us; 10us; 992us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 987us; 3us; 32768us; 10us; 992us; 64us; 1378us; 202us; 978us; 0us; 17122us; 0us; 17123us; 0us; 17124us; 0us; 17125us; 83us; 32768us; 10us; 992us; 13us; 1109us; 16us; 1394us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 37us; 1391us; 39us; 1392us; 41us; 712us; 46us; 1309us; 56us; 1317us; 60us; 1393us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 87us; 1437us; 88us; 1261us; 89us; 1264us; 91us; 1383us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 988us; 99us; 32768us; 10us; 992us; 13us; 1109us; 16us; 1394us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 37us; 1391us; 39us; 1392us; 41us; 712us; 46us; 1309us; 56us; 1317us; 58us; 1774us; 60us; 1393us; 62us; 1250us; 63us; 1754us; 69us; 1758us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1305us; 82us; 1766us; 85us; 1044us; 87us; 1437us; 88us; 1262us; 89us; 1265us; 91us; 1383us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 95us; 1757us; 97us; 1111us; 99us; 1739us; 101us; 1759us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 142us; 1769us; 144us; 1765us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1370us; 157us; 1259us; 158us; 1084us; 159us; 1760us; 160us; 1761us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 181us; 1767us; 182us; 1256us; 183us; 1253us; 184us; 1751us; 185us; 1753us; 186us; 1298us; 187us; 1750us; 188us; 1726us; 189us; 1748us; 190us; 1747us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 989us; 99us; 32768us; 10us; 992us; 13us; 1109us; 16us; 1394us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 37us; 1391us; 39us; 1392us; 41us; 712us; 46us; 1309us; 56us; 1317us; 58us; 1774us; 60us; 1393us; 62us; 1250us; 63us; 1754us; 69us; 1758us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1305us; 82us; 1766us; 85us; 1044us; 87us; 1437us; 88us; 1262us; 89us; 1265us; 91us; 1383us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 95us; 1757us; 97us; 1111us; 99us; 1739us; 101us; 1759us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 142us; 1769us; 144us; 1765us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1370us; 157us; 1259us; 158us; 1084us; 159us; 1760us; 160us; 1761us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 181us; 1767us; 182us; 1256us; 183us; 1253us; 184us; 1751us; 185us; 1753us; 186us; 1298us; 187us; 1750us; 188us; 1726us; 189us; 1748us; 190us; 1747us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 989us; 0us; 17126us; 9us; 32768us; 10us; 992us; 16us; 1865us; 37us; 1862us; 39us; 1863us; 60us; 1864us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 202us; 978us; 0us; 17127us; 0us; 17128us; 0us; 17129us; 0us; 17129us; 0us; 17130us; 0us; 17131us; 0us; 17132us; 0us; 17133us; 0us; 17134us; 1us; 32768us; 77us; 1397us; 1us; 32768us; 91us; 1398us; 1us; 16544us; 73us; 302us; 3us; 32768us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 17135us; 0us; 17136us; 0us; 17137us; 0us; 17138us; 4us; 17138us; 92us; 17141us; 93us; 17141us; 94us; 17141us; 101us; 17141us; 4us; 32768us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 101us; 1408us; 0us; 17139us; 1us; 32768us; 188us; 1725us; 0us; 17140us; 79us; 32768us; 10us; 992us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 54us; 1453us; 56us; 1317us; 60us; 1849us; 61us; 1851us; 62us; 1249us; 66us; 1464us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1268us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 195us; 1852us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 990us; 5us; 32768us; 10us; 992us; 60us; 1849us; 61us; 1851us; 195us; 1852us; 202us; 978us; 0us; 17142us; 0us; 17143us; 0us; 17144us; 0us; 17145us; 0us; 17146us; 0us; 17147us; 0us; 17148us; 0us; 17149us; 0us; 17150us; 0us; 17152us; 0us; 17153us; 74us; 32768us; 10us; 992us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 978us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 17156us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 17157us; 79us; 32768us; 10us; 992us; 13us; 1109us; 16us; 1871us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 37us; 1867us; 39us; 1868us; 41us; 712us; 46us; 1309us; 56us; 1317us; 60us; 1869us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 93us; 1870us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 978us; 0us; 17159us; 0us; 17160us; 0us; 17161us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 72us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 17163us; 0us; 17164us; 0us; 17165us; 1us; 32768us; 200us; 1822us; 3us; 17171us; 37us; 1839us; 38us; 1842us; 107us; 1843us; 0us; 17168us; 39us; 17173us; 46us; 1309us; 56us; 1317us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 77us; 1449us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 121us; 1357us; 135us; 1362us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1286us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 1us; 32768us; 87us; 1442us; 0us; 17166us; 0us; 17167us; 0us; 17170us; 1us; 32768us; 91us; 1446us; 32us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 3us; 32768us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 0us; 17172us; 32us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1451us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 17174us; 36us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 202us; 1671us; 0us; 17175us; 30us; 32768us; 46us; 1729us; 56us; 1657us; 66us; 1651us; 87us; 1648us; 90us; 1722us; 91us; 1641us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 2us; 17444us; 35us; 1837us; 36us; 1836us; 30us; 17169us; 56us; 1520us; 71us; 1376us; 72us; 1523us; 91us; 1382us; 105us; 1358us; 121us; 1357us; 135us; 1362us; 147us; 1356us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 17194us; 2us; 17186us; 21us; 1482us; 83us; 1483us; 0us; 17176us; 0us; 17177us; 73us; 32768us; 13us; 1109us; 22us; 955us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 17194us; 2us; 17186us; 21us; 1482us; 83us; 1483us; 0us; 17178us; 1us; 17179us; 69us; 1465us; 73us; 17180us; 13us; 1109us; 22us; 955us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 17194us; 2us; 17186us; 21us; 1482us; 83us; 1483us; 0us; 17181us; 3us; 32768us; 46us; 1729us; 66us; 1487us; 192us; 1728us; 0us; 17194us; 2us; 17186us; 21us; 1482us; 83us; 1483us; 0us; 17182us; 5us; 17186us; 21us; 1482us; 46us; 1729us; 66us; 1487us; 83us; 1483us; 192us; 1728us; 1us; 32768us; 20us; 1475us; 0us; 17183us; 0us; 17194us; 2us; 17186us; 21us; 1482us; 83us; 1483us; 1us; 32768us; 20us; 1479us; 0us; 17184us; 0us; 17185us; 3us; 17185us; 46us; 1729us; 66us; 1487us; 192us; 1728us; 1us; 17187us; 83us; 1485us; 1us; 17188us; 21us; 1484us; 0us; 17189us; 0us; 17190us; 1us; 17191us; 76us; 1731us; 0us; 17192us; 0us; 17193us; 8us; 17198us; 10us; 992us; 16us; 1871us; 37us; 1867us; 39us; 1868us; 60us; 1869us; 69us; 1490us; 93us; 1870us; 202us; 978us; 80us; 17196us; 10us; 992us; 13us; 1109us; 16us; 1871us; 22us; 955us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 37us; 1867us; 39us; 1868us; 41us; 712us; 46us; 1309us; 56us; 1317us; 60us; 1869us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 93us; 1870us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 978us; 0us; 17195us; 0us; 17197us; 0us; 17199us; 3us; 17411us; 21us; 1807us; 26us; 1504us; 86us; 1502us; 1us; 17411us; 21us; 1807us; 3us; 17212us; 14us; 559us; 110us; 558us; 202us; 1513us; 0us; 17200us; 2us; 32768us; 14us; 559us; 110us; 558us; 0us; 17201us; 0us; 17203us; 0us; 17206us; 3us; 16544us; 22us; 505us; 73us; 302us; 202us; 747us; 0us; 17208us; 2us; 16544us; 73us; 302us; 202us; 747us; 1us; 32768us; 20us; 1506us; 0us; 17209us; 3us; 17403us; 19us; 1801us; 20us; 1802us; 141us; 1803us; 0us; 17210us; 3us; 17212us; 14us; 559us; 110us; 558us; 202us; 1513us; 0us; 17211us; 3us; 17212us; 14us; 559us; 110us; 558us; 202us; 1513us; 0us; 17213us; 3us; 17212us; 14us; 559us; 110us; 558us; 202us; 1513us; 0us; 17214us; 31us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 8us; 17207us; 26us; 1504us; 36us; 1609us; 46us; 1729us; 70us; 1622us; 86us; 1502us; 90us; 1722us; 188us; 1725us; 192us; 1728us; 3us; 17403us; 19us; 1801us; 20us; 1802us; 141us; 1803us; 1us; 17411us; 21us; 1807us; 0us; 17215us; 1us; 32768us; 72us; 1523us; 0us; 17216us; 0us; 17217us; 41us; 32768us; 10us; 992us; 46us; 1309us; 56us; 1317us; 65us; 1853us; 66us; 1464us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 121us; 1357us; 135us; 1362us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 991us; 3us; 32768us; 10us; 992us; 65us; 1853us; 202us; 978us; 0us; 17218us; 0us; 17219us; 0us; 17220us; 0us; 17221us; 0us; 17222us; 35us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 74us; 891us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 1us; 32768us; 97us; 1532us; 74us; 32768us; 13us; 1109us; 22us; 950us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 1534us; 0us; 17223us; 0us; 17224us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 66us; 468us; 70us; 885us; 71us; 888us; 74us; 891us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 202us; 1546us; 2us; 32768us; 97us; 1537us; 202us; 1544us; 75us; 32768us; 10us; 992us; 13us; 1109us; 18us; 1541us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 202us; 978us; 3us; 32768us; 10us; 992us; 20us; 1539us; 202us; 978us; 0us; 17225us; 0us; 17226us; 1us; 32768us; 20us; 1542us; 0us; 17227us; 0us; 17228us; 1us; 32768us; 20us; 1545us; 0us; 17229us; 1us; 32768us; 20us; 1547us; 0us; 17230us; 39us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 58us; 1213us; 66us; 468us; 70us; 885us; 71us; 888us; 73us; 302us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 202us; 1216us; 0us; 17231us; 39us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 906us; 58us; 1213us; 66us; 468us; 70us; 885us; 71us; 888us; 73us; 302us; 74us; 891us; 81us; 866us; 91us; 899us; 99us; 1739us; 105us; 897us; 121us; 896us; 147us; 898us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1728us; 193us; 1823us; 194us; 882us; 200us; 1822us; 201us; 793us; 202us; 1216us; 1us; 32768us; 20us; 1552us; 0us; 17232us; 1us; 17233us; 84us; 1554us; 4us; 32768us; 52us; 596us; 90us; 1722us; 91us; 611us; 188us; 1725us; 1us; 17235us; 84us; 1556us; 4us; 32768us; 52us; 596us; 90us; 1722us; 91us; 611us; 188us; 1725us; 33us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 73us; 302us; 74us; 1579us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 17238us; 1us; 17240us; 97us; 1560us; 33us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 73us; 302us; 74us; 1579us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 17239us; 1us; 17242us; 95us; 1563us; 33us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 73us; 302us; 74us; 1579us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 17241us; 1us; 17244us; 95us; 1566us; 33us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 73us; 302us; 74us; 1579us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 17243us; 32us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 74us; 1572us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 7us; 17247us; 36us; 1609us; 46us; 1729us; 70us; 1622us; 77us; 1570us; 90us; 1722us; 188us; 1725us; 192us; 1728us; 31us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 6us; 17245us; 36us; 1609us; 46us; 1729us; 70us; 1622us; 90us; 1722us; 188us; 1725us; 192us; 1728us; 1us; 32768us; 192us; 1728us; 1us; 32768us; 77us; 1574us; 31us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 6us; 17246us; 36us; 1609us; 46us; 1729us; 70us; 1622us; 90us; 1722us; 188us; 1725us; 192us; 1728us; 7us; 17250us; 36us; 1609us; 46us; 1729us; 70us; 1622us; 77us; 1577us; 90us; 1722us; 188us; 1725us; 192us; 1728us; 31us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 6us; 17248us; 36us; 1609us; 46us; 1729us; 70us; 1622us; 90us; 1722us; 188us; 1725us; 192us; 1728us; 1us; 32768us; 192us; 1728us; 1us; 32768us; 77us; 1581us; 31us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 6us; 17249us; 36us; 1609us; 46us; 1729us; 70us; 1622us; 90us; 1722us; 188us; 1725us; 192us; 1728us; 1us; 17252us; 97us; 1584us; 32us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 17251us; 1us; 32768us; 10us; 1587us; 0us; 17253us; 8us; 17257us; 36us; 1609us; 46us; 1729us; 70us; 1622us; 90us; 1722us; 95us; 1589us; 185us; 1593us; 188us; 1725us; 192us; 1728us; 31us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 17254us; 31us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 17255us; 31us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 17256us; 8us; 17260us; 36us; 1609us; 46us; 1729us; 70us; 1622us; 90us; 1722us; 95us; 1596us; 185us; 1598us; 188us; 1725us; 192us; 1728us; 31us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 17258us; 31us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 17259us; 1us; 17261us; 76us; 1731us; 0us; 17262us; 1us; 17262us; 79us; 1617us; 1us; 17264us; 188us; 1605us; 4us; 17264us; 34us; 1680us; 76us; 1677us; 159us; 1682us; 188us; 1605us; 3us; 32768us; 62us; 806us; 91us; 802us; 177us; 801us; 0us; 17263us; 9us; 32768us; 10us; 992us; 36us; 1609us; 46us; 1729us; 70us; 1622us; 90us; 1722us; 95us; 1659us; 188us; 1725us; 192us; 1728us; 202us; 978us; 0us; 17265us; 1us; 32768us; 70us; 1622us; 0us; 17266us; 0us; 17267us; 33us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 202us; 1671us; 3us; 32768us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 4us; 32768us; 46us; 1729us; 90us; 1722us; 188us; 1725us; 192us; 1728us; 0us; 17268us; 0us; 17269us; 32us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 17270us; 1us; 17288us; 79us; 1620us; 32us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 17271us; 2us; 32768us; 59us; 1623us; 96us; 1624us; 0us; 17272us; 2us; 32768us; 59us; 1625us; 96us; 1626us; 0us; 17273us; 2us; 32768us; 59us; 1627us; 96us; 1628us; 0us; 17274us; 1us; 32768us; 59us; 1629us; 0us; 17275us; 1us; 32768us; 96us; 1631us; 32us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 17279us; 1us; 17276us; 96us; 1635us; 4us; 32768us; 10us; 992us; 96us; 1635us; 160us; 1686us; 202us; 978us; 32us; 17320us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 17277us; 0us; 17278us; 1us; 17280us; 188us; 1639us; 3us; 32768us; 62us; 806us; 91us; 802us; 177us; 801us; 0us; 17281us; 33us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 202us; 1671us; 3us; 32768us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 4us; 32768us; 46us; 1729us; 90us; 1722us; 188us; 1725us; 192us; 1728us; 0us; 17282us; 1us; 17283us; 76us; 1674us; 1us; 17284us; 76us; 1674us; 0us; 17285us; 30us; 32768us; 46us; 1729us; 56us; 1657us; 66us; 1651us; 87us; 1648us; 90us; 1722us; 91us; 1652us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 1us; 17286us; 76us; 1674us; 0us; 17287us; 0us; 17288us; 33us; 32768us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 202us; 1671us; 5us; 32768us; 10us; 992us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 202us; 978us; 6us; 17315us; 10us; 992us; 69us; 1695us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 202us; 978us; 0us; 17289us; 0us; 17290us; 1us; 32768us; 91us; 1658us; 33us; 32768us; 10us; 992us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 202us; 978us; 33us; 32768us; 10us; 992us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 202us; 978us; 5us; 32768us; 10us; 992us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 202us; 978us; 0us; 17291us; 0us; 17292us; 0us; 17293us; 0us; 17294us; 0us; 17295us; 0us; 17296us; 0us; 17297us; 37us; 32768us; 46us; 1309us; 56us; 1317us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 91us; 1384us; 99us; 1739us; 105us; 1358us; 121us; 1357us; 135us; 1362us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 0us; 17299us; 0us; 17300us; 3us; 32768us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 0us; 17301us; 0us; 17302us; 2us; 32768us; 46us; 1729us; 192us; 1728us; 3us; 17303us; 34us; 1680us; 76us; 1731us; 159us; 1682us; 0us; 17304us; 7us; 32768us; 10us; 992us; 16us; 1871us; 37us; 1867us; 39us; 1868us; 60us; 1869us; 93us; 1870us; 202us; 978us; 0us; 17305us; 0us; 17306us; 1us; 32768us; 159us; 1682us; 0us; 17307us; 35us; 17320us; 10us; 992us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 160us; 1692us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 202us; 978us; 1us; 32768us; 96us; 1684us; 39us; 17320us; 10us; 992us; 16us; 1871us; 37us; 1867us; 39us; 1868us; 46us; 1729us; 56us; 546us; 60us; 1869us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 93us; 1870us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 202us; 978us; 0us; 17279us; 0us; 17308us; 0us; 17309us; 0us; 17310us; 8us; 17318us; 10us; 992us; 16us; 1871us; 37us; 1867us; 39us; 1868us; 60us; 1869us; 93us; 1870us; 160us; 1690us; 202us; 978us; 0us; 17311us; 0us; 17312us; 0us; 17313us; 0us; 17314us; 1us; 17315us; 69us; 1695us; 32us; 17317us; 46us; 1729us; 56us; 546us; 66us; 1619us; 72us; 549us; 87us; 1648us; 90us; 1722us; 91us; 1612us; 105us; 1670us; 112us; 1668us; 121us; 1669us; 147us; 1667us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1591us; 188us; 1725us; 192us; 1728us; 193us; 1823us; 200us; 1822us; 201us; 793us; 0us; 17316us; 0us; 17318us; 0us; 17319us; 8us; 32768us; 46us; 1729us; 66us; 1702us; 90us; 1722us; 91us; 1706us; 177us; 1712us; 185us; 1721us; 188us; 1725us; 192us; 1728us; 3us; 32768us; 95us; 1719us; 160us; 1701us; 185us; 1720us; 0us; 17321us; 1us; 32768us; 160us; 1703us; 0us; 17322us; 1us; 17323us; 76us; 1731us; 0us; 17324us; 7us; 32768us; 46us; 1729us; 90us; 1722us; 91us; 1706us; 177us; 1712us; 185us; 1721us; 188us; 1725us; 192us; 1728us; 5us; 32768us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 95us; 1719us; 185us; 1720us; 0us; 17325us; 1us; 17326us; 188us; 1710us; 3us; 32768us; 62us; 806us; 91us; 802us; 177us; 801us; 0us; 17327us; 0us; 17328us; 6us; 17329us; 46us; 1729us; 90us; 1722us; 91us; 1706us; 177us; 1712us; 188us; 1725us; 192us; 1728us; 0us; 17330us; 0us; 17331us; 0us; 17332us; 0us; 17333us; 0us; 17334us; 7us; 32768us; 46us; 1729us; 90us; 1722us; 91us; 1706us; 177us; 1712us; 185us; 1721us; 188us; 1725us; 192us; 1728us; 7us; 32768us; 46us; 1729us; 90us; 1722us; 91us; 1706us; 177us; 1712us; 185us; 1721us; 188us; 1725us; 192us; 1728us; 7us; 32768us; 46us; 1729us; 90us; 1722us; 91us; 1706us; 177us; 1712us; 185us; 1721us; 188us; 1725us; 192us; 1728us; 1us; 32768us; 192us; 1728us; 0us; 17335us; 0us; 17336us; 1us; 32768us; 192us; 1728us; 1us; 17351us; 192us; 1728us; 0us; 17337us; 0us; 17338us; 0us; 17339us; 0us; 17340us; 8us; 32768us; 10us; 992us; 16us; 1871us; 37us; 1867us; 39us; 1868us; 60us; 1869us; 93us; 1870us; 192us; 1728us; 202us; 978us; 0us; 17341us; 0us; 17342us; 27us; 32768us; 58us; 1774us; 62us; 1756us; 63us; 1754us; 69us; 1758us; 74us; 1762us; 82us; 1766us; 88us; 1763us; 89us; 1764us; 95us; 1757us; 101us; 1759us; 142us; 1769us; 144us; 1765us; 154us; 1771us; 157us; 1768us; 159us; 1760us; 160us; 1761us; 181us; 1767us; 182us; 1755us; 183us; 1752us; 184us; 1751us; 185us; 1753us; 186us; 1746us; 187us; 1750us; 188us; 1749us; 189us; 1748us; 190us; 1747us; 202us; 1737us; 3us; 32768us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 0us; 17343us; 3us; 32768us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 0us; 17344us; 0us; 17345us; 1us; 32768us; 58us; 1741us; 5us; 32768us; 66us; 1743us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 192us; 1773us; 0us; 17346us; 1us; 32768us; 58us; 1744us; 3us; 32768us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 0us; 17347us; 0us; 17348us; 0us; 17349us; 0us; 17350us; 0us; 17351us; 0us; 17352us; 0us; 17353us; 0us; 17354us; 0us; 17355us; 0us; 17356us; 0us; 17357us; 0us; 17358us; 0us; 17359us; 0us; 17360us; 0us; 17361us; 0us; 17362us; 0us; 17363us; 0us; 17364us; 0us; 17365us; 0us; 17366us; 0us; 17367us; 0us; 17368us; 0us; 17369us; 0us; 17370us; 1us; 17371us; 142us; 1770us; 0us; 17372us; 1us; 32768us; 155us; 1772us; 0us; 17373us; 0us; 17374us; 1us; 32768us; 192us; 1773us; 0us; 17375us; 0us; 17376us; 0us; 17377us; 0us; 17378us; 1us; 17379us; 76us; 1781us; 0us; 17380us; 4us; 32768us; 91us; 1734us; 99us; 1739us; 192us; 1728us; 202us; 1783us; 0us; 17381us; 0us; 17382us; 0us; 17383us; 0us; 17384us; 0us; 17385us; 0us; 17386us; 0us; 17387us; 0us; 17388us; 3us; 17389us; 21us; 1789us; 67us; 1788us; 83us; 1787us; 0us; 17390us; 3us; 17392us; 21us; 1789us; 67us; 1788us; 83us; 1787us; 0us; 17391us; 1us; 17393us; 83us; 1796us; 1us; 17394us; 21us; 1797us; 0us; 17395us; 0us; 17396us; 0us; 17397us; 0us; 17398us; 0us; 17399us; 0us; 17400us; 0us; 17401us; 0us; 17402us; 0us; 17404us; 0us; 17406us; 0us; 17408us; 0us; 17410us; 0us; 17412us; 0us; 17414us; 0us; 17418us; 0us; 17420us; 0us; 17422us; 0us; 17423us; 0us; 17424us; 0us; 17425us; 0us; 17426us; 0us; 17427us; 0us; 17428us; 0us; 17429us; 0us; 17430us; 0us; 17431us; 0us; 17432us; 0us; 17433us; 1us; 32768us; 192us; 1728us; 0us; 17435us; 0us; 17436us; 74us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 196us; 1826us; 197us; 1827us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 2us; 32768us; 196us; 1826us; 197us; 1827us; 0us; 17437us; 0us; 17438us; 74us; 32768us; 13us; 1109us; 24us; 1535us; 25us; 1550us; 29us; 1104us; 30us; 703us; 32us; 1091us; 33us; 699us; 41us; 712us; 46us; 1309us; 56us; 1317us; 62us; 1249us; 70us; 1311us; 71us; 1376us; 72us; 1523us; 74us; 1304us; 85us; 1044us; 88us; 1261us; 89us; 1264us; 91us; 1384us; 97us; 1111us; 99us; 1739us; 105us; 1358us; 106us; 1025us; 113us; 1036us; 114us; 1040us; 115us; 1017us; 116us; 1021us; 118us; 1267us; 121us; 1357us; 122us; 1055us; 123us; 1530us; 124us; 1548us; 125us; 1031us; 129us; 1099us; 132us; 1038us; 133us; 1042us; 135us; 1362us; 145us; 1277us; 146us; 1279us; 147us; 1356us; 153us; 1301us; 154us; 1369us; 157us; 1258us; 158us; 1084us; 161us; 693us; 162us; 1078us; 163us; 1080us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1255us; 183us; 1252us; 186us; 1297us; 192us; 1728us; 193us; 1823us; 194us; 1410us; 196us; 1826us; 197us; 1827us; 198us; 1831us; 199us; 1834us; 200us; 1822us; 201us; 793us; 2us; 32768us; 196us; 1826us; 197us; 1827us; 0us; 17439us; 0us; 17440us; 0us; 17441us; 0us; 17442us; 0us; 17443us; 0us; 17445us; 3us; 32768us; 37us; 1839us; 38us; 1842us; 107us; 1843us; 3us; 17468us; 37us; 1839us; 38us; 1842us; 107us; 1843us; 0us; 17447us; 0us; 17448us; 0us; 17449us; 3us; 32768us; 39us; 1844us; 40us; 1847us; 149us; 1848us; 3us; 17469us; 39us; 1844us; 40us; 1847us; 149us; 1848us; 0us; 17450us; 0us; 17451us; 0us; 17452us; 3us; 32768us; 60us; 1849us; 61us; 1851us; 195us; 1852us; 0us; 17453us; 0us; 17454us; 0us; 17455us; 0us; 17456us; 3us; 32768us; 92us; 1857us; 93us; 1854us; 94us; 1856us; 0us; 17457us; 0us; 17458us; 0us; 17459us; 3us; 32768us; 15us; 1861us; 16us; 1858us; 17us; 1860us; 0us; 17460us; 0us; 17461us; 0us; 17462us; 0us; 17463us; 0us; 17464us; 0us; 17465us; 0us; 17466us; 0us; 17467us; 0us; 17468us; 0us; 17469us; 0us; 17470us; 0us; 17471us; 0us; 17472us; 0us; 17473us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 17us; 18us; 107us; 108us; 116us; 117us; 190us; 191us; 224us; 225us; 226us; 227us; 228us; 229us; 230us; 231us; 236us; 237us; 242us; 243us; 248us; 249us; 255us; 256us; 262us; 263us; 269us; 270us; 287us; 288us; 292us; 373us; 399us; 400us; 403us; 404us; 405us; 406us; 408us; 409us; 411us; 412us; 413us; 416us; 417us; 419us; 420us; 425us; 426us; 430us; 432us; 435us; 437us; 439us; 442us; 444us; 446us; 447us; 449us; 450us; 452us; 469us; 470us; 474us; 483us; 502us; 503us; 504us; 505us; 521us; 527us; 529us; 530us; 531us; 538us; 539us; 540us; 544us; 548us; 564us; 565us; 569us; 574us; 575us; 576us; 577us; 581us; 590us; 593us; 599us; 600us; 601us; 602us; 603us; 604us; 606us; 608us; 610us; 614us; 618us; 621us; 623us; 657us; 659us; 660us; 734us; 760us; 833us; 862us; 864us; 865us; 874us; 878us; 879us; 895us; 897us; 901us; 902us; 918us; 920us; 921us; 923us; 924us; 926us; 928us; 929us; 932us; 940us; 941us; 942us; 995us; 997us; 1012us; 1014us; 1018us; 1020us; 1021us; 1023us; 1024us; 1025us; 1026us; 1028us; 1062us; 1063us; 1064us; 1081us; 1085us; 1086us; 1087us; 1089us; 1090us; 1105us; 1111us; 1112us; 1113us; 1129us; 1133us; 1134us; 1135us; 1150us; 1156us; 1157us; 1158us; 1159us; 1160us; 1163us; 1178us; 1179us; 1183us; 1187us; 1198us; 1243us; 1245us; 1249us; 1253us; 1256us; 1258us; 1292us; 1295us; 1297us; 1298us; 1330us; 1337us; 1369us; 1376us; 1378us; 1379us; 1385us; 1387us; 1388us; 1390us; 1391us; 1393us; 1427us; 1428us; 1432us; 1433us; 1437us; 1440us; 1441us; 1442us; 1444us; 1448us; 1449us; 1450us; 1452us; 1453us; 1455us; 1456us; 1472us; 1476us; 1477us; 1480us; 1481us; 1483us; 1484us; 1489us; 1490us; 1492us; 1493us; 1495us; 1496us; 1498us; 1587us; 1588us; 1593us; 1674us; 1764us; 1765us; 1766us; 1854us; 1860us; 1862us; 1863us; 1864us; 1871us; 1872us; 1873us; 1874us; 1879us; 1960us; 1989us; 2077us; 2078us; 2079us; 2080us; 2102us; 2103us; 2191us; 2192us; 2196us; 2203us; 2208us; 2213us; 2214us; 2215us; 2216us; 2220us; 2232us; 2233us; 2235us; 2236us; 2310us; 2311us; 2313us; 2315us; 2316us; 2317us; 2319us; 2325us; 2326us; 2329us; 2330us; 2331us; 2337us; 2339us; 2371us; 2378us; 2383us; 2384us; 2386us; 2393us; 2399us; 2400us; 2401us; 2407us; 2408us; 2409us; 2410us; 2411us; 2413us; 2501us; 2505us; 2506us; 2507us; 2508us; 2515us; 2519us; 2520us; 2521us; 2523us; 2524us; 2539us; 2542us; 2551us; 2553us; 2554us; 2556us; 2558us; 2559us; 2560us; 2561us; 2562us; 2572us; 2573us; 2577us; 2608us; 2609us; 2613us; 2617us; 2648us; 2649us; 2652us; 2657us; 2660us; 2691us; 2692us; 2694us; 2695us; 2697us; 2698us; 2700us; 2701us; 2703us; 2704us; 2715us; 2716us; 2717us; 2718us; 2719us; 2723us; 2725us; 2726us; 2728us; 2730us; 2731us; 2807us; 2814us; 2815us; 2816us; 2820us; 2823us; 2825us; 2827us; 2829us; 2836us; 2837us; 2849us; 2851us; 2859us; 2861us; 2867us; 2869us; 2870us; 2871us; 2873us; 2874us; 2875us; 2876us; 2878us; 2912us; 2913us; 2914us; 2920us; 2924us; 2925us; 2926us; 2931us; 2932us; 2939us; 2945us; 2946us; 2947us; 2954us; 2960us; 2961us; 2962us; 2963us; 2964us; 2975us; 2976us; 2979us; 2990us; 2991us; 2993us; 2994us; 2996us; 2999us; 3000us; 3001us; 3003us; 3005us; 3006us; 3008us; 3045us; 3047us; 3049us; 3123us; 3124us; 3161us; 3163us; 3167us; 3241us; 3242us; 3243us; 3245us; 3246us; 3250us; 3254us; 3270us; 3320us; 3321us; 3322us; 3325us; 3327us; 3328us; 3360us; 3368us; 3369us; 3371us; 3375us; 3378us; 3380us; 3414us; 3417us; 3419us; 3420us; 3421us; 3423us; 3424us; 3426us; 3427us; 3429us; 3430us; 3466us; 3468us; 3470us; 3544us; 3546us; 3547us; 3549us; 3550us; 3552us; 3556us; 3558us; 3560us; 3593us; 3594us; 3596us; 3600us; 3602us; 3604us; 3606us; 3680us; 3683us; 3684us; 3717us; 3718us; 3720us; 3724us; 3725us; 3727us; 3731us; 3732us; 3733us; 3738us; 3740us; 3744us; 3745us; 3746us; 3747us; 3748us; 3749us; 3750us; 3751us; 3780us; 3784us; 3785us; 3792us; 3796us; 3797us; 3835us; 3869us; 3870us; 3901us; 3903us; 3904us; 3905us; 3906us; 3908us; 3909us; 3910us; 3913us; 3914us; 3915us; 3917us; 3923us; 3924us; 3925us; 3926us; 3929us; 3944us; 3945us; 3949us; 3954us; 3958us; 3960us; 3961us; 3963us; 3964us; 3965us; 3967us; 3969us; 3970us; 3971us; 3972us; 3976us; 4011us; 4014us; 4016us; 4019us; 4020us; 4021us; 4022us; 4023us; 4057us; 4088us; 4090us; 4094us; 4095us; 4098us; 4104us; 4105us; 4106us; 4110us; 4111us; 4114us; 4115us; 4116us; 4119us; 4123us; 4124us; 4125us; 4127us; 4128us; 4129us; 4130us; 4131us; 4132us; 4133us; 4139us; 4143us; 4146us; 4148us; 4149us; 4150us; 4152us; 4157us; 4158us; 4161us; 4163us; 4165us; 4168us; 4169us; 4170us; 4173us; 4174us; 4176us; 4178us; 4180us; 4181us; 4182us; 4184us; 4188us; 4190us; 4192us; 4193us; 4194us; 4222us; 4227us; 4229us; 4231us; 4233us; 4238us; 4239us; 4240us; 4243us; 4245us; 4278us; 4279us; 4282us; 4315us; 4316us; 4322us; 4323us; 4327us; 4328us; 4329us; 4331us; 4335us; 4336us; 4368us; 4373us; 4375us; 4377us; 4379us; 4383us; 4384us; 4387us; 4388us; 4389us; 4421us; 4428us; 4435us; 4437us; 4438us; 4440us; 4442us; 4443us; 4446us; 4447us; 4449us; 4451us; 4452us; 4456us; 4460us; 4464us; 4499us; 4500us; 4501us; 4535us; 4536us; 4555us; 4556us; 4557us; 4587us; 4591us; 4592us; 4594us; 4598us; 4599us; 4604us; 4605us; 4624us; 4626us; 4672us; 4673us; 4706us; 4707us; 4709us; 4741us; 4742us; 4744us; 4776us; 4783us; 4790us; 4791us; 4792us; 4795us; 4803us; 4804us; 4805us; 4807us; 4808us; 4812us; 4814us; 4816us; 4849us; 4850us; 4852us; 4853us; 4854us; 4856us; 4860us; 4862us; 4864us; 4865us; 4867us; 4902us; 4903us; 4904us; 4907us; 4909us; 4911us; 4914us; 4915us; 4916us; 4990us; 4991us; 4993us; 4996us; 5000us; 5001us; 5075us; 5079us; 5080us; 5081us; 5082us; 5083us; 5084us; 5085us; 5086us; 5088us; 5092us; 5094us; 5097us; 5099us; 5104us; 5108us; 5109us; 5111us; 5113us; 5115us; 5116us; 5118us; 5119us; 5123us; 5130us; 5131us; 5133us; 5139us; 5141us; 5143us; 5144us; 5145us; 5146us; 5148us; 5150us; 5151us; 5155us; 5157us; 5158us; 5161us; 5163us; 5164us; 5166us; 5167us; 5168us; 5170us; 5207us; 5209us; 5213us; 5288us; 5289us; 5290us; 5291us; 5364us; 5370us; 5371us; 5372us; 5373us; 5374us; 5376us; 5377us; 5380us; 5383us; 5457us; 5458us; 5461us; 5462us; 5463us; 5466us; 5499us; 5500us; 5501us; 5502us; 5503us; 5504us; 5505us; 5506us; 5507us; 5508us; 5509us; 5510us; 5511us; 5512us; 5513us; 5514us; 5516us; 5517us; 5518us; 5519us; 5520us; 5521us; 5523us; 5525us; 5526us; 5528us; 5530us; 5532us; 5533us; 5534us; 5537us; 5541us; 5542us; 5543us; 5546us; 5547us; 5549us; 5551us; 5552us; 5558us; 5559us; 5561us; 5562us; 5564us; 5567us; 5600us; 5601us; 5605us; 5609us; 5610us; 5619us; 5625us; 5626us; 5627us; 5628us; 5632us; 5633us; 5634us; 5638us; 5640us; 5643us; 5646us; 5648us; 5650us; 5657us; 5664us; 5671us; 5678us; 5680us; 5681us; 5718us; 5755us; 5757us; 5758us; 5759us; 5796us; 5833us; 5870us; 5907us; 5910us; 5911us; 5913us; 5914us; 5916us; 5919us; 5957us; 5964us; 5994us; 6032us; 6033us; 6069us; 6070us; 6106us; 6107us; 6139us; 6140us; 6141us; 6205us; 6209us; 6210us; 6211us; 6249us; 6250us; 6286us; 6287us; 6323us; 6324us; 6325us; 6327us; 6328us; 6331us; 6335us; 6336us; 6374us; 6376us; 6377us; 6415us; 6417us; 6418us; 6420us; 6422us; 6423us; 6424us; 6425us; 6426us; 6427us; 6428us; 6492us; 6498us; 6499us; 6500us; 6504us; 6507us; 6508us; 6510us; 6550us; 6557us; 6558us; 6559us; 6563us; 6564us; 6565us; 6572us; 6577us; 6581us; 6584us; 6588us; 6592us; 6595us; 6602us; 6605us; 6612us; 6621us; 6637us; 6645us; 6647us; 6648us; 6686us; 6688us; 6690us; 6723us; 6724us; 6762us; 6800us; 6801us; 6839us; 6877us; 6915us; 6953us; 6956us; 6957us; 6960us; 6961us; 6964us; 7002us; 7003us; 7041us; 7042us; 7115us; 7121us; 7122us; 7123us; 7124us; 7197us; 7201us; 7202us; 7228us; 7230us; 7231us; 7233us; 7266us; 7267us; 7269us; 7270us; 7300us; 7331us; 7362us; 7435us; 7436us; 7509us; 7510us; 7512us; 7585us; 7589us; 7590us; 7666us; 7667us; 7670us; 7673us; 7676us; 7679us; 7682us; 7684us; 7686us; 7688us; 7690us; 7694us; 7698us; 7702us; 7704us; 7705us; 7742us; 7816us; 7818us; 7821us; 7822us; 7859us; 7933us; 7937us; 7939us; 7942us; 7943us; 7945us; 8019us; 8020us; 8021us; 8097us; 8098us; 8099us; 8174us; 8175us; 8176us; 8177us; 8178us; 8179us; 8252us; 8257us; 8258us; 8259us; 8332us; 8337us; 8338us; 8339us; 8412us; 8418us; 8419us; 8420us; 8494us; 8495us; 8570us; 8600us; 8601us; 8602us; 8603us; 8676us; 8677us; 8742us; 8743us; 8817us; 8818us; 8884us; 8885us; 8960us; 8990us; 9065us; 9070us; 9071us; 9072us; 9075us; 9076us; 9077us; 9078us; 9079us; 9124us; 9135us; 9216us; 9226us; 9227us; 9228us; 9229us; 9230us; 9231us; 9236us; 9312us; 9317us; 9318us; 9319us; 9320us; 9321us; 9322us; 9396us; 9399us; 9400us; 9401us; 9402us; 9403us; 9478us; 9504us; 9579us; 9605us; 9606us; 9607us; 9644us; 9718us; 9720us; 9722us; 9725us; 9799us; 9800us; 9837us; 9911us; 9915us; 9917us; 9921us; 9995us; 9996us; 9997us; 10070us; 10072us; 10074us; 10148us; 10149us; 10223us; 10227us; 10228us; 10230us; 10231us; 10304us; 10330us; 10403us; 10404us; 10430us; 10451us; 10472us; 10482us; 10503us; 10522us; 10541us; 10551us; 10561us; 10571us; 10581us; 10591us; 10601us; 10611us; 10613us; 10622us; 10627us; 10632us; 10634us; 10636us; 10638us; 10664us; 10690us; 10716us; 10746us; 10770us; 10796us; 10820us; 10845us; 10870us; 10897us; 10926us; 10953us; 10979us; 11005us; 11032us; 11065us; 11066us; 11099us; 11100us; 11133us; 11134us; 11207us; 11209us; 11283us; 11284us; 11286us; 11293us; 11367us; 11441us; 11515us; 11589us; 11663us; 11737us; 11811us; 11885us; 11959us; 12033us; 12109us; 12110us; 12184us; 12258us; 12332us; 12406us; 12480us; 12554us; 12628us; 12702us; 12776us; 12777us; 12778us; 12779us; 12780us; 12781us; 12782us; 12783us; 12784us; 12785us; 12786us; 12787us; 12788us; 12789us; 12790us; 12791us; 12792us; 12793us; 12794us; 12795us; 12796us; 12797us; 12870us; 12874us; 12875us; 12915us; 12916us; 12956us; 12960us; 12961us; 12962us; 12963us; 13002us; 13003us; 13004us; 13005us; 13006us; 13009us; 13012us; 13051us; 13052us; 13053us; 13054us; 13055us; 13128us; 13201us; 13202us; 13206us; 13207us; 13280us; 13282us; 13355us; 13361us; 13362us; 13363us; 13436us; 13438us; 13511us; 13517us; 13518us; 13519us; 13592us; 13593us; 13594us; 13674us; 13675us; 13755us; 13756us; 13803us; 13850us; 13851us; 13898us; 13945us; 13946us; 13993us; 14040us; 14041us; 14088us; 14135us; 14136us; 14183us; 14230us; 14231us; 14278us; 14325us; 14326us; 14358us; 14390us; 14393us; 14431us; 14463us; 14495us; 14496us; 14502us; 14503us; 14504us; 14551us; 14552us; 14599us; 14600us; 14639us; 14681us; 14723us; 14724us; 14730us; 14768us; 14774us; 14780us; 14783us; 14785us; 14791us; 14797us; 14835us; 14873us; 14875us; 14876us; 14914us; 14952us; 14960us; 14961us; 14963us; 14971us; 14972us; 14976us; 14980us; 14981us; 14984us; 14985us; 14986us; 14987us; 15062us; 15066us; 15067us; 15068us; 15069us; 15070us; 15073us; 15146us; 15147us; 15148us; 15149us; 15150us; 15151us; 15152us; 15244us; 15248us; 15250us; 15252us; 15253us; 15257us; 15258us; 15336us; 15340us; 15341us; 15342us; 15346us; 15347us; 15348us; 15349us; 15350us; 15352us; 15428us; 15429us; 15431us; 15505us; 15506us; 15580us; 15581us; 15582us; 15655us; 15656us; 15657us; 15658us; 15659us; 15660us; 15661us; 15662us; 15663us; 15664us; 15665us; 15666us; 15741us; 15745us; 15746us; 15747us; 15749us; 15750us; 15751us; 15826us; 15902us; 15906us; 15907us; 15908us; 15909us; 15910us; 15985us; 15989us; 15990us; 15991us; 15992us; 15993us; 16077us; 16177us; 16277us; 16278us; 16288us; 16289us; 16290us; 16291us; 16292us; 16293us; 16294us; 16295us; 16296us; 16297us; 16299us; 16301us; 16303us; 16307us; 16380us; 16381us; 16382us; 16383us; 16384us; 16389us; 16394us; 16395us; 16397us; 16398us; 16478us; 16484us; 16485us; 16486us; 16487us; 16488us; 16489us; 16490us; 16491us; 16492us; 16493us; 16494us; 16495us; 16570us; 16643us; 16644us; 16717us; 16718us; 16798us; 16799us; 16800us; 16801us; 16874us; 16947us; 16948us; 16949us; 16950us; 16952us; 16956us; 16957us; 16997us; 16999us; 17000us; 17001us; 17002us; 17004us; 17037us; 17041us; 17042us; 17075us; 17076us; 17113us; 17114us; 17145us; 17148us; 17179us; 17180us; 17183us; 17184us; 17185us; 17259us; 17260us; 17263us; 17264us; 17266us; 17340us; 17341us; 17344us; 17345us; 17349us; 17350us; 17353us; 17354us; 17360us; 17362us; 17363us; 17364us; 17367us; 17369us; 17370us; 17371us; 17375us; 17377us; 17379us; 17380us; 17381us; 17383us; 17384us; 17385us; 17394us; 17475us; 17476us; 17477us; 17478us; 17482us; 17484us; 17488us; 17489us; 17492us; 17493us; 17494us; 17495us; 17499us; 17500us; 17503us; 17505us; 17506us; 17510us; 17511us; 17515us; 17516us; 17520us; 17521us; 17525us; 17526us; 17558us; 17567us; 17571us; 17573us; 17574us; 17576us; 17577us; 17578us; 17620us; 17624us; 17625us; 17626us; 17627us; 17628us; 17629us; 17665us; 17667us; 17742us; 17743us; 17744us; 17781us; 17784us; 17860us; 17864us; 17865us; 17866us; 17868us; 17869us; 17870us; 17872us; 17873us; 17875us; 17876us; 17916us; 17917us; 17957us; 17959us; 17960us; 17962us; 17967us; 17969us; 17974us; 18008us; 18009us; 18011us; 18045us; 18046us; 18048us; 18082us; 18083us; 18085us; 18119us; 18120us; 18153us; 18161us; 18193us; 18200us; 18202us; 18204us; 18236us; 18243us; 18251us; 18283us; 18290us; 18292us; 18294us; 18326us; 18333us; 18335us; 18368us; 18369us; 18371us; 18372us; 18381us; 18413us; 18414us; 18446us; 18447us; 18479us; 18480us; 18489us; 18521us; 18522us; 18554us; 18555us; 18557us; 18558us; 18560us; 18562us; 18567us; 18571us; 18572us; 18582us; 18583us; 18585us; 18586us; 18587us; 18621us; 18625us; 18630us; 18631us; 18632us; 18665us; 18666us; 18668us; 18701us; 18702us; 18705us; 18706us; 18709us; 18710us; 18713us; 18714us; 18716us; 18717us; 18719us; 18752us; 18753us; 18755us; 18760us; 18793us; 18794us; 18795us; 18797us; 18801us; 18802us; 18836us; 18840us; 18845us; 18846us; 18848us; 18850us; 18851us; 18882us; 18884us; 18885us; 18886us; 18920us; 18926us; 18933us; 18934us; 18935us; 18937us; 18971us; 19005us; 19011us; 19012us; 19013us; 19014us; 19015us; 19016us; 19017us; 19018us; 19056us; 19057us; 19058us; 19062us; 19063us; 19064us; 19067us; 19071us; 19072us; 19080us; 19081us; 19082us; 19084us; 19085us; 19121us; 19123us; 19163us; 19164us; 19165us; 19166us; 19167us; 19176us; 19177us; 19178us; 19179us; 19180us; 19182us; 19215us; 19216us; 19217us; 19218us; 19227us; 19231us; 19232us; 19234us; 19235us; 19237us; 19238us; 19246us; 19252us; 19253us; 19255us; 19259us; 19260us; 19261us; 19268us; 19269us; 19270us; 19271us; 19272us; 19273us; 19281us; 19289us; 19297us; 19299us; 19300us; 19301us; 19303us; 19305us; 19306us; 19307us; 19308us; 19309us; 19318us; 19319us; 19320us; 19348us; 19352us; 19353us; 19357us; 19358us; 19359us; 19361us; 19367us; 19368us; 19370us; 19374us; 19375us; 19376us; 19377us; 19378us; 19379us; 19380us; 19381us; 19382us; 19383us; 19384us; 19385us; 19386us; 19387us; 19388us; 19389us; 19390us; 19391us; 19392us; 19393us; 19394us; 19395us; 19396us; 19397us; 19398us; 19400us; 19401us; 19403us; 19404us; 19405us; 19407us; 19408us; 19409us; 19410us; 19411us; 19413us; 19414us; 19419us; 19420us; 19421us; 19422us; 19423us; 19424us; 19425us; 19426us; 19427us; 19431us; 19432us; 19436us; 19437us; 19439us; 19441us; 19442us; 19443us; 19444us; 19445us; 19446us; 19447us; 19448us; 19449us; 19450us; 19451us; 19452us; 19453us; 19454us; 19455us; 19456us; 19457us; 19458us; 19459us; 19460us; 19461us; 19462us; 19463us; 19464us; 19465us; 19466us; 19467us; 19468us; 19469us; 19471us; 19472us; 19473us; 19548us; 19551us; 19552us; 19553us; 19628us; 19631us; 19632us; 19633us; 19634us; 19635us; 19636us; 19637us; 19641us; 19645us; 19646us; 19647us; 19648us; 19652us; 19656us; 19657us; 19658us; 19659us; 19663us; 19664us; 19665us; 19666us; 19667us; 19671us; 19672us; 19673us; 19674us; 19678us; 19679us; 19680us; 19681us; 19682us; 19683us; 19684us; 19685us; 19686us; 19687us; 19688us; 19689us; 19690us; 19691us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 3us; 3us; 3us; 1us; 2us; 3us; 1us; 1us; 2us; 1us; 1us; 3us; 0us; 2us; 1us; 2us; 3us; 2us; 4us; 3us; 1us; 2us; 2us; 1us; 3us; 4us; 1us; 1us; 4us; 3us; 3us; 1us; 1us; 0us; 3us; 3us; 2us; 1us; 1us; 5us; 5us; 3us; 3us; 1us; 12us; 0us; 2us; 5us; 3us; 5us; 3us; 2us; 3us; 1us; 3us; 2us; 7us; 2us; 1us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 0us; 3us; 11us; 4us; 4us; 4us; 5us; 5us; 5us; 0us; 2us; 3us; 3us; 1us; 3us; 1us; 1us; 2us; 2us; 3us; 0us; 2us; 3us; 2us; 1us; 2us; 2us; 1us; 3us; 4us; 1us; 4us; 3us; 3us; 1us; 1us; 0us; 5us; 4us; 3us; 1us; 2us; 2us; 3us; 1us; 2us; 3us; 1us; 1us; 3us; 3us; 3us; 5us; 3us; 5us; 2us; 1us; 2us; 3us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 0us; 1us; 2us; 5us; 4us; 4us; 2us; 1us; 3us; 3us; 4us; 6us; 2us; 2us; 2us; 2us; 2us; 1us; 1us; 1us; 3us; 3us; 0us; 1us; 3us; 2us; 8us; 7us; 6us; 2us; 1us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 2us; 0us; 3us; 2us; 3us; 3us; 1us; 3us; 6us; 5us; 4us; 1us; 2us; 3us; 4us; 5us; 5us; 10us; 3us; 4us; 5us; 5us; 8us; 5us; 6us; 8us; 0us; 2us; 3us; 3us; 1us; 4us; 2us; 0us; 1us; 1us; 1us; 1us; 1us; 0us; 3us; 1us; 0us; 3us; 0us; 3us; 5us; 2us; 1us; 0us; 2us; 1us; 0us; 2us; 2us; 3us; 3us; 1us; 3us; 2us; 4us; 4us; 3us; 4us; 1us; 1us; 6us; 3us; 3us; 3us; 7us; 3us; 3us; 3us; 2us; 1us; 3us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 2us; 3us; 3us; 1us; 3us; 3us; 1us; 2us; 5us; 3us; 1us; 0us; 5us; 1us; 0us; 1us; 0us; 0us; 2us; 3us; 1us; 4us; 3us; 3us; 4us; 3us; 5us; 7us; 4us; 4us; 3us; 3us; 1us; 2us; 3us; 1us; 1us; 3us; 1us; 3us; 5us; 5us; 5us; 5us; 1us; 3us; 4us; 2us; 4us; 2us; 3us; 4us; 3us; 1us; 3us; 1us; 1us; 1us; 3us; 2us; 2us; 5us; 2us; 1us; 5us; 1us; 3us; 3us; 0us; 2us; 3us; 1us; 2us; 4us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 8us; 1us; 1us; 0us; 3us; 3us; 2us; 3us; 1us; 4us; 2us; 2us; 2us; 2us; 2us; 2us; 3us; 0us; 2us; 1us; 6us; 6us; 5us; 3us; 3us; 1us; 2us; 2us; 0us; 4us; 3us; 1us; 3us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 4us; 1us; 2us; 1us; 3us; 1us; 2us; 1us; 3us; 1us; 1us; 2us; 3us; 2us; 1us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 3us; 3us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 4us; 4us; 2us; 1us; 3us; 1us; 2us; 3us; 3us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 4us; 4us; 4us; 3us; 1us; 0us; 3us; 3us; 1us; 1us; 3us; 2us; 3us; 1us; 3us; 3us; 3us; 3us; 2us; 3us; 3us; 0us; 2us; 3us; 3us; 3us; 1us; 3us; 1us; 2us; 1us; 3us; 1us; 2us; 3us; 2us; 1us; 3us; 5us; 1us; 1us; 1us; 6us; 7us; 0us; 3us; 3us; 2us; 2us; 3us; 3us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 4us; 3us; 3us; 2us; 2us; 2us; 1us; 2us; 2us; 1us; 5us; 5us; 5us; 3us; 2us; 3us; 5us; 5us; 5us; 4us; 3us; 5us; 5us; 5us; 4us; 3us; 5us; 2us; 4us; 3us; 2us; 2us; 2us; 2us; 8us; 8us; 7us; 5us; 3us; 4us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 2us; 3us; 3us; 1us; 2us; 2us; 1us; 2us; 2us; 4us; 4us; 3us; 2us; 2us; 0us; 2us; 2us; 2us; 4us; 4us; 0us; 2us; 4us; 4us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 2us; 2us; 4us; 4us; 2us; 2us; 2us; 1us; 2us; 1us; 2us; 1us; 3us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 1us; 1us; 3us; 3us; 3us; 2us; 4us; 4us; 1us; 1us; 1us; 0us; 1us; 5us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 3us; 1us; 3us; 2us; 2us; 1us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 2us; 2us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 2us; 6us; 1us; 1us; 1us; 3us; 3us; 1us; 3us; 3us; 3us; 2us; 2us; 1us; 1us; 1us; 1us; 0us; 1us; 1us; 3us; 5us; 3us; 2us; 3us; 3us; 3us; 2us; 5us; 3us; 1us; 1us; 6us; 2us; 0us; 0us; 1us; 0us; 4us; 0us; 2us; 3us; 6us; 1us; 5us; 1us; 2us; 5us; 5us; 4us; 6us; 1us; 0us; 1us; 1us; 2us; 2us; 1us; 1us; 3us; 0us; 3us; 2us; 3us; 1us; 2us; 4us; 3us; 2us; 5us; 4us; 2us; 1us; 0us; 2us; 3us; 3us; 2us; 0us; 2us; 2us; 5us; 2us; 1us; 3us; 3us; 3us; 2us; 2us; 4us; 4us; 5us; 5us; 5us; 4us; 4us; 3us; 2us; 3us; 1us; 3us; 1us; 3us; 0us; 2us; 3us; 1us; 3us; 1us; 3us; 1us; 4us; 5us; 2us; 3us; 4us; 1us; 3us; 1us; 2us; 3us; 2us; 3us; 1us; 3us; 3us; 1us; 1us; 1us; 3us; 1us; 2us; 3us; 2us; 4us; 1us; 3us; 3us; 2us; 3us; 4us; 5us; 4us; 3us; 3us; 0us; 1us; 3us; 4us; 1us; 1us; 1us; 2us; 1us; 1us; 3us; 3us; 6us; 6us; 5us; 4us; 3us; 1us; 1us; 2us; 1us; 1us; 3us; 2us; 3us; 4us; 3us; 1us; 2us; 6us; 6us; 4us; 3us; 3us; 2us; 2us; 1us; 3us; 2us; 1us; 1us; 0us; 3us; 3us; 1us; 1us; 3us; 1us; 3us; 1us; 1us; 2us; 1us; 3us; 3us; 2us; 2us; 1us; 2us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 4us; 6us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 1us; 2us; 3us; 1us; 1us; 1us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 0us; 1us; 1us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 2us; 3us; 1us; 2us; 1us; 1us; 0us; 1us; 0us; 2us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 3us; 4us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 7us; 7us; 7us; 7us; 7us; 8us; 8us; 9us; 10us; 11us; 11us; 12us; 12us; 13us; 14us; 14us; 15us; 16us; 16us; 16us; 17us; 18us; 19us; 19us; 20us; 20us; 21us; 22us; 22us; 23us; 23us; 23us; 23us; 24us; 24us; 24us; 25us; 25us; 25us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 27us; 28us; 28us; 28us; 29us; 29us; 29us; 30us; 31us; 31us; 32us; 32us; 33us; 33us; 34us; 34us; 34us; 35us; 35us; 35us; 35us; 36us; 36us; 36us; 36us; 37us; 37us; 37us; 38us; 38us; 39us; 40us; 40us; 40us; 40us; 40us; 40us; 40us; 41us; 41us; 41us; 41us; 42us; 42us; 43us; 43us; 43us; 44us; 45us; 45us; 46us; 46us; 46us; 47us; 47us; 48us; 48us; 49us; 50us; 50us; 51us; 51us; 51us; 51us; 52us; 52us; 53us; 53us; 53us; 53us; 53us; 54us; 54us; 54us; 54us; 54us; 55us; 55us; 56us; 56us; 56us; 56us; 56us; 56us; 56us; 56us; 57us; 57us; 58us; 58us; 59us; 59us; 59us; 59us; 59us; 59us; 59us; 60us; 60us; 60us; 61us; 62us; 62us; 63us; 63us; 64us; 64us; 64us; 64us; 65us; 65us; 66us; 66us; 66us; 67us; 67us; 67us; 67us; 68us; 68us; 68us; 68us; 69us; 70us; 70us; 71us; 71us; 71us; 71us; 72us; 72us; 72us; 73us; 73us; 73us; 74us; 74us; 74us; 74us; 75us; 75us; 76us; 76us; 76us; 77us; 77us; 77us; 78us; 79us; 79us; 79us; 80us; 80us; 81us; 82us; 82us; 83us; 83us; 84us; 84us; 84us; 84us; 84us; 84us; 84us; 84us; 84us; 84us; 84us; 85us; 86us; 87us; 87us; 88us; 88us; 88us; 88us; 88us; 89us; 89us; 90us; 90us; 90us; 91us; 91us; 92us; 92us; 92us; 93us; 93us; 94us; 94us; 94us; 95us; 95us; 96us; 97us; 97us; 98us; 98us; 99us; 99us; 99us; 100us; 100us; 101us; 101us; 101us; 101us; 102us; 102us; 103us; 103us; 103us; 103us; 103us; 104us; 104us; 104us; 105us; 105us; 106us; 106us; 106us; 107us; 107us; 107us; 108us; 108us; 109us; 109us; 109us; 110us; 110us; 111us; 111us; 112us; 113us; 114us; 114us; 114us; 115us; 116us; 116us; 117us; 117us; 118us; 118us; 119us; 119us; 120us; 120us; 120us; 120us; 120us; 120us; 120us; 120us; 120us; 120us; 121us; 121us; 122us; 122us; 122us; 123us; 124us; 124us; 125us; 125us; 125us; 125us; 125us; 126us; 126us; 126us; 127us; 127us; 127us; 128us; 128us; 129us; 129us; 130us; 130us; 131us; 131us; 132us; 132us; 133us; 134us; 135us; 136us; 137us; 138us; 138us; 138us; 139us; 139us; 140us; 140us; 141us; 142us; 143us; 144us; 144us; 144us; 144us; 145us; 145us; 146us; 147us; 147us; 147us; 148us; 148us; 149us; 149us; 150us; 150us; 150us; 150us; 150us; 151us; 151us; 152us; 153us; 153us; 154us; 154us; 155us; 155us; 155us; 156us; 156us; 156us; 157us; 158us; 158us; 159us; 160us; 160us; 161us; 161us; 162us; 162us; 162us; 162us; 162us; 162us; 162us; 162us; 162us; 162us; 162us; 162us; 162us; 162us; 162us; 162us; 162us; 162us; 163us; 163us; 163us; 163us; 164us; 164us; 165us; 165us; 166us; 166us; 167us; 168us; 168us; 168us; 168us; 169us; 169us; 170us; 170us; 170us; 170us; 170us; 171us; 171us; 171us; 171us; 171us; 171us; 172us; 172us; 173us; 173us; 174us; 174us; 175us; 176us; 176us; 176us; 176us; 176us; 176us; 177us; 177us; 178us; 178us; 178us; 178us; 179us; 179us; 179us; 179us; 179us; 179us; 179us; 179us; 179us; 179us; 179us; 179us; 179us; 179us; 179us; 179us; 179us; 179us; 179us; 179us; 180us; 180us; 181us; 181us; 181us; 181us; 181us; 181us; 181us; 181us; 182us; 182us; 183us; 183us; 184us; 184us; 185us; 186us; 186us; 186us; 187us; 187us; 187us; 188us; 188us; 189us; 189us; 190us; 190us; 191us; 192us; 192us; 192us; 192us; 192us; 192us; 193us; 193us; 194us; 194us; 194us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 195us; 196us; 196us; 197us; 197us; 197us; 198us; 198us; 198us; 198us; 199us; 200us; 200us; 200us; 200us; 200us; 201us; 201us; 202us; 203us; 204us; 204us; 204us; 205us; 205us; 205us; 205us; 205us; 205us; 206us; 206us; 206us; 206us; 207us; 207us; 207us; 207us; 207us; 207us; 207us; 207us; 207us; 207us; 207us; 207us; 208us; 208us; 209us; 209us; 210us; 210us; 210us; 210us; 210us; 210us; 210us; 210us; 210us; 210us; 210us; 210us; 210us; 210us; 210us; 210us; 210us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 212us; 212us; 213us; 213us; 213us; 213us; 213us; 214us; 214us; 215us; 215us; 215us; 215us; 215us; 215us; 215us; 215us; 215us; 215us; 215us; 216us; 216us; 216us; 216us; 217us; 217us; 217us; 217us; 218us; 218us; 218us; 218us; 219us; 219us; 219us; 219us; 219us; 219us; 219us; 219us; 219us; 220us; 220us; 220us; 221us; 221us; 222us; 222us; 223us; 223us; 223us; 223us; 223us; 224us; 224us; 224us; 225us; 225us; 226us; 226us; 227us; 227us; 227us; 228us; 229us; 229us; 229us; 229us; 230us; 230us; 231us; 231us; 232us; 233us; 233us; 234us; 234us; 235us; 235us; 236us; 236us; 236us; 237us; 237us; 238us; 238us; 238us; 238us; 238us; 238us; 238us; 239us; 239us; 240us; 240us; 240us; 240us; 241us; 241us; 242us; 242us; 243us; 243us; 243us; 243us; 243us; 244us; 244us; 244us; 245us; 245us; 245us; 246us; 246us; 247us; 247us; 247us; 248us; 249us; 249us; 249us; 250us; 251us; 251us; 252us; 252us; 252us; 252us; 252us; 253us; 253us; 253us; 253us; 253us; 253us; 253us; 253us; 254us; 254us; 255us; 255us; 256us; 256us; 257us; 257us; 258us; 258us; 259us; 259us; 260us; 260us; 261us; 261us; 261us; 261us; 261us; 261us; 262us; 262us; 263us; 264us; 264us; 264us; 264us; 265us; 265us; 265us; 266us; 266us; 267us; 267us; 268us; 268us; 268us; 268us; 268us; 268us; 268us; 269us; 269us; 269us; 269us; 270us; 271us; 271us; 271us; 272us; 272us; 273us; 273us; 274us; 274us; 275us; 275us; 275us; 275us; 275us; 275us; 275us; 275us; 275us; 275us; 275us; 275us; 275us; 275us; 275us; 275us; 275us; 275us; 275us; 275us; 276us; 276us; 277us; 277us; 277us; 277us; 277us; 277us; 277us; 278us; 278us; 278us; 279us; 279us; 280us; 281us; 281us; 282us; 282us; 282us; 283us; 283us; 283us; 284us; 284us; 285us; 285us; 285us; 285us; 286us; 286us; 287us; 288us; 289us; 289us; 289us; 289us; 290us; 290us; 290us; 290us; 290us; 291us; 291us; 291us; 291us; 291us; 291us; 291us; 291us; 291us; 291us; 291us; 291us; 291us; 291us; 291us; 291us; 291us; 291us; 291us; 291us; 291us; 291us; 291us; 291us; 291us; 291us; 292us; 293us; 293us; 294us; 294us; 295us; 295us; 295us; 295us; 296us; 297us; 297us; 298us; 298us; 298us; 299us; 299us; 300us; 300us; 301us; 301us; 301us; 301us; 302us; 302us; 302us; 303us; 303us; 303us; 303us; 304us; 304us; 305us; 305us; 306us; 306us; 307us; 307us; 308us; 308us; 309us; 309us; 310us; 310us; 311us; 311us; 312us; 312us; 313us; 313us; 314us; 314us; 315us; 315us; 316us; 316us; 317us; 317us; 318us; 319us; 320us; 320us; 321us; 321us; 321us; 322us; 322us; 322us; 323us; 323us; 323us; 324us; 324us; 325us; 325us; 325us; 326us; 326us; 326us; 327us; 327us; 327us; 328us; 329us; 329us; 329us; 330us; 330us; 330us; 331us; 331us; 331us; 331us; 331us; 332us; 332us; 332us; 332us; 332us; 332us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 49152us; 65535us; 49152us; 65535us; 49152us; 65535us; 49152us; 16389us; 16390us; 16391us; 16392us; 16393us; 16394us; 65535us; 16395us; 65535us; 16396us; 65535us; 16397us; 65535us; 16398us; 65535us; 16399us; 65535us; 16400us; 65535us; 16402us; 65535us; 65535us; 65535us; 16404us; 65535us; 16406us; 16407us; 16408us; 65535us; 65535us; 65535us; 16411us; 16412us; 65535us; 16413us; 65535us; 16414us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16419us; 65535us; 16420us; 65535us; 65535us; 16422us; 65535us; 65535us; 65535us; 16423us; 16424us; 16425us; 65535us; 65535us; 65535us; 16426us; 16427us; 65535us; 16428us; 16429us; 65535us; 65535us; 65535us; 16432us; 65535us; 65535us; 16433us; 16435us; 16436us; 65535us; 65535us; 65535us; 65535us; 16437us; 16438us; 16439us; 16440us; 16441us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16442us; 65535us; 65535us; 65535us; 65535us; 65535us; 16445us; 65535us; 65535us; 16446us; 65535us; 65535us; 65535us; 16447us; 65535us; 65535us; 16448us; 65535us; 16449us; 65535us; 65535us; 16450us; 65535us; 65535us; 16452us; 16453us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16454us; 65535us; 16455us; 16456us; 16457us; 65535us; 65535us; 16458us; 16459us; 65535us; 65535us; 16460us; 16461us; 65535us; 16462us; 65535us; 65535us; 16463us; 16464us; 65535us; 65535us; 16465us; 16466us; 65535us; 65535us; 16467us; 16468us; 16469us; 16470us; 65535us; 65535us; 16472us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16473us; 65535us; 65535us; 65535us; 65535us; 65535us; 16476us; 65535us; 65535us; 16477us; 65535us; 16478us; 65535us; 65535us; 16479us; 65535us; 16481us; 65535us; 65535us; 16482us; 16483us; 65535us; 65535us; 16485us; 16486us; 65535us; 16488us; 65535us; 16489us; 65535us; 65535us; 16490us; 65535us; 16492us; 65535us; 16493us; 65535us; 16494us; 65535us; 16496us; 65535us; 16497us; 65535us; 65535us; 16499us; 65535us; 65535us; 65535us; 16500us; 16501us; 65535us; 65535us; 65535us; 16502us; 16503us; 65535us; 16504us; 16505us; 16506us; 65535us; 65535us; 65535us; 65535us; 16508us; 16511us; 16512us; 65535us; 16513us; 65535us; 16514us; 65535us; 65535us; 65535us; 65535us; 16517us; 16518us; 16519us; 65535us; 65535us; 16520us; 65535us; 16521us; 65535us; 16522us; 65535us; 65535us; 16523us; 16524us; 65535us; 65535us; 16525us; 65535us; 16526us; 16527us; 65535us; 65535us; 65535us; 65535us; 65535us; 16530us; 65535us; 65535us; 65535us; 16532us; 16533us; 65535us; 16534us; 16535us; 16536us; 16537us; 65535us; 65535us; 65535us; 16539us; 16540us; 16541us; 65535us; 65535us; 16542us; 16543us; 65535us; 16546us; 65535us; 65535us; 65535us; 65535us; 16547us; 65535us; 65535us; 16548us; 16549us; 16550us; 16551us; 65535us; 16552us; 65535us; 65535us; 16553us; 65535us; 65535us; 65535us; 16554us; 65535us; 65535us; 65535us; 65535us; 16555us; 65535us; 16556us; 65535us; 16557us; 65535us; 16558us; 65535us; 16559us; 65535us; 16560us; 16561us; 16562us; 16563us; 65535us; 65535us; 16564us; 65535us; 65535us; 16565us; 65535us; 65535us; 16568us; 16569us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16570us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16571us; 16572us; 65535us; 16573us; 16574us; 16575us; 65535us; 65535us; 16576us; 16577us; 65535us; 65535us; 16578us; 16579us; 65535us; 16580us; 65535us; 65535us; 16581us; 16582us; 65535us; 65535us; 16583us; 16584us; 16585us; 16586us; 65535us; 16587us; 65535us; 65535us; 16589us; 65535us; 16590us; 65535us; 65535us; 16591us; 16592us; 65535us; 65535us; 16594us; 65535us; 65535us; 65535us; 65535us; 65535us; 16595us; 65535us; 65535us; 65535us; 65535us; 16596us; 16597us; 65535us; 16599us; 65535us; 65535us; 65535us; 65535us; 16600us; 16601us; 65535us; 65535us; 16602us; 65535us; 65535us; 16603us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16604us; 16605us; 65535us; 16606us; 65535us; 16607us; 65535us; 16608us; 65535us; 65535us; 65535us; 65535us; 65535us; 16609us; 65535us; 16610us; 65535us; 65535us; 65535us; 65535us; 65535us; 16611us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16612us; 65535us; 16614us; 65535us; 65535us; 16615us; 65535us; 65535us; 16616us; 16617us; 65535us; 65535us; 65535us; 16618us; 16619us; 16621us; 16622us; 16623us; 16624us; 16625us; 65535us; 65535us; 16627us; 65535us; 65535us; 16630us; 65535us; 65535us; 16632us; 65535us; 65535us; 16633us; 16634us; 16635us; 65535us; 16637us; 16638us; 65535us; 16640us; 16641us; 65535us; 65535us; 16642us; 16643us; 16644us; 65535us; 65535us; 16645us; 65535us; 65535us; 65535us; 65535us; 16647us; 65535us; 16648us; 16649us; 65535us; 65535us; 16650us; 16651us; 16652us; 65535us; 65535us; 65535us; 65535us; 65535us; 16653us; 16654us; 16655us; 16656us; 65535us; 65535us; 65535us; 65535us; 16657us; 65535us; 65535us; 16658us; 16659us; 65535us; 16660us; 65535us; 16661us; 16662us; 65535us; 65535us; 16663us; 16664us; 65535us; 16665us; 16666us; 16667us; 16668us; 16669us; 16670us; 65535us; 65535us; 65535us; 65535us; 16673us; 16674us; 65535us; 65535us; 16675us; 65535us; 65535us; 65535us; 65535us; 16676us; 16677us; 65535us; 16678us; 65535us; 65535us; 65535us; 16679us; 16680us; 65535us; 65535us; 65535us; 65535us; 16683us; 16684us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16690us; 16691us; 65535us; 65535us; 65535us; 16692us; 65535us; 65535us; 16693us; 65535us; 16694us; 65535us; 16695us; 16696us; 65535us; 65535us; 16697us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16698us; 65535us; 16699us; 16700us; 65535us; 65535us; 65535us; 65535us; 16704us; 65535us; 65535us; 16705us; 65535us; 16707us; 65535us; 65535us; 16708us; 65535us; 65535us; 65535us; 65535us; 16711us; 16712us; 65535us; 16713us; 65535us; 16714us; 16715us; 65535us; 65535us; 16716us; 65535us; 65535us; 16717us; 65535us; 16718us; 65535us; 65535us; 65535us; 16720us; 65535us; 16721us; 65535us; 65535us; 16723us; 65535us; 65535us; 65535us; 65535us; 16727us; 16728us; 65535us; 65535us; 16729us; 16730us; 65535us; 16731us; 65535us; 65535us; 65535us; 65535us; 16732us; 65535us; 16733us; 16734us; 65535us; 65535us; 65535us; 65535us; 16735us; 65535us; 65535us; 16737us; 16738us; 65535us; 65535us; 65535us; 65535us; 16741us; 16742us; 65535us; 16743us; 65535us; 65535us; 65535us; 16744us; 65535us; 65535us; 16745us; 16746us; 16747us; 16748us; 16749us; 16750us; 16751us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16752us; 65535us; 65535us; 65535us; 16756us; 65535us; 16757us; 65535us; 65535us; 16759us; 65535us; 65535us; 65535us; 65535us; 16761us; 16762us; 16763us; 65535us; 65535us; 16764us; 65535us; 65535us; 16767us; 65535us; 65535us; 16768us; 65535us; 16770us; 16771us; 65535us; 65535us; 65535us; 65535us; 65535us; 16772us; 16773us; 16774us; 65535us; 65535us; 16775us; 16776us; 16777us; 65535us; 65535us; 16779us; 65535us; 65535us; 65535us; 16781us; 65535us; 16782us; 16783us; 65535us; 65535us; 16784us; 16785us; 16786us; 16787us; 16788us; 16789us; 16790us; 16791us; 16792us; 16793us; 16794us; 16795us; 16796us; 16797us; 16798us; 65535us; 16799us; 16800us; 16801us; 16802us; 16803us; 65535us; 65535us; 16804us; 65535us; 65535us; 65535us; 16805us; 16808us; 65535us; 65535us; 16809us; 16810us; 65535us; 16811us; 65535us; 65535us; 16813us; 65535us; 16815us; 65535us; 16816us; 65535us; 65535us; 65535us; 16817us; 65535us; 65535us; 16820us; 65535us; 65535us; 16821us; 16822us; 16823us; 65535us; 16824us; 16825us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16826us; 65535us; 65535us; 65535us; 65535us; 16831us; 65535us; 65535us; 65535us; 65535us; 65535us; 16836us; 65535us; 16837us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16840us; 65535us; 16841us; 65535us; 16842us; 65535us; 16843us; 16844us; 65535us; 65535us; 16845us; 16846us; 65535us; 16847us; 65535us; 16848us; 65535us; 16849us; 16851us; 65535us; 16852us; 65535us; 65535us; 16853us; 65535us; 65535us; 16854us; 65535us; 65535us; 16855us; 65535us; 65535us; 16857us; 16858us; 16859us; 16860us; 16861us; 16862us; 65535us; 65535us; 16863us; 16864us; 65535us; 65535us; 16866us; 65535us; 65535us; 65535us; 16867us; 16868us; 65535us; 16869us; 16870us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16873us; 65535us; 65535us; 65535us; 65535us; 16877us; 65535us; 65535us; 16880us; 65535us; 65535us; 65535us; 65535us; 65535us; 16885us; 65535us; 16886us; 65535us; 65535us; 16889us; 65535us; 16890us; 65535us; 65535us; 16891us; 16892us; 16893us; 65535us; 65535us; 16894us; 65535us; 65535us; 16896us; 65535us; 65535us; 16898us; 65535us; 16900us; 65535us; 65535us; 65535us; 65535us; 16901us; 65535us; 16904us; 65535us; 65535us; 65535us; 16905us; 65535us; 16907us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16908us; 65535us; 65535us; 65535us; 65535us; 16909us; 65535us; 65535us; 65535us; 65535us; 65535us; 16910us; 65535us; 65535us; 16912us; 16913us; 65535us; 16914us; 16915us; 65535us; 16916us; 16917us; 16918us; 16919us; 16920us; 65535us; 65535us; 16921us; 16922us; 65535us; 65535us; 16923us; 16924us; 65535us; 65535us; 16925us; 16926us; 65535us; 16927us; 65535us; 65535us; 16928us; 16929us; 16930us; 65535us; 65535us; 65535us; 65535us; 65535us; 16934us; 65535us; 16935us; 65535us; 65535us; 65535us; 65535us; 16937us; 16938us; 65535us; 16939us; 16940us; 16941us; 16942us; 65535us; 65535us; 65535us; 65535us; 16943us; 16944us; 16945us; 16946us; 16947us; 65535us; 65535us; 65535us; 16948us; 16949us; 16950us; 16951us; 16952us; 65535us; 65535us; 16953us; 16954us; 16955us; 65535us; 65535us; 65535us; 65535us; 65535us; 16959us; 16960us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16961us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16962us; 16963us; 65535us; 65535us; 65535us; 65535us; 16964us; 65535us; 65535us; 16965us; 65535us; 16966us; 65535us; 65535us; 65535us; 16968us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16969us; 65535us; 16970us; 65535us; 16971us; 65535us; 65535us; 65535us; 16973us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16986us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16996us; 16997us; 16998us; 16999us; 17000us; 17001us; 17002us; 17003us; 17004us; 17005us; 17006us; 17007us; 17008us; 17009us; 17010us; 17011us; 17012us; 17013us; 17014us; 17015us; 17017us; 65535us; 65535us; 17018us; 65535us; 17019us; 65535us; 65535us; 17020us; 17021us; 17022us; 65535us; 17023us; 17024us; 17025us; 17026us; 65535us; 65535us; 65535us; 17028us; 17029us; 17030us; 17031us; 65535us; 65535us; 17034us; 65535us; 17035us; 65535us; 65535us; 65535us; 65535us; 17037us; 17038us; 65535us; 65535us; 65535us; 65535us; 17041us; 17042us; 65535us; 17043us; 17044us; 65535us; 17046us; 65535us; 17047us; 65535us; 65535us; 17049us; 65535us; 65535us; 17050us; 65535us; 65535us; 17051us; 65535us; 65535us; 17052us; 65535us; 65535us; 17053us; 65535us; 65535us; 17054us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17055us; 65535us; 17056us; 17057us; 65535us; 17058us; 65535us; 17059us; 65535us; 65535us; 65535us; 17061us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17067us; 65535us; 65535us; 65535us; 17069us; 65535us; 65535us; 17070us; 65535us; 65535us; 17071us; 65535us; 17072us; 17073us; 17074us; 65535us; 65535us; 17075us; 17076us; 17077us; 17078us; 65535us; 65535us; 17079us; 17080us; 17081us; 17082us; 17083us; 17085us; 65535us; 65535us; 65535us; 65535us; 17086us; 65535us; 17087us; 65535us; 65535us; 17088us; 17089us; 65535us; 17090us; 17091us; 17092us; 17093us; 65535us; 65535us; 17094us; 65535us; 65535us; 17096us; 65535us; 17098us; 17099us; 65535us; 17103us; 17104us; 17105us; 17106us; 17107us; 17108us; 17109us; 17110us; 17111us; 17112us; 17113us; 65535us; 65535us; 17114us; 17115us; 65535us; 17116us; 17117us; 65535us; 65535us; 65535us; 17118us; 17119us; 17120us; 17121us; 65535us; 65535us; 17122us; 17123us; 17124us; 17125us; 65535us; 65535us; 65535us; 17126us; 65535us; 17127us; 17128us; 17129us; 65535us; 17130us; 17131us; 17132us; 17133us; 17134us; 65535us; 65535us; 65535us; 65535us; 65535us; 17135us; 17136us; 17137us; 17138us; 65535us; 65535us; 17139us; 65535us; 17140us; 65535us; 65535us; 17142us; 17143us; 17144us; 17145us; 17146us; 17147us; 17148us; 17149us; 17150us; 17152us; 17153us; 65535us; 65535us; 17156us; 65535us; 17157us; 65535us; 17159us; 17160us; 17161us; 65535us; 65535us; 17163us; 17164us; 17165us; 65535us; 65535us; 65535us; 65535us; 65535us; 17166us; 17167us; 17170us; 65535us; 65535us; 65535us; 17172us; 65535us; 17174us; 65535us; 17175us; 65535us; 65535us; 65535us; 65535us; 65535us; 17176us; 17177us; 65535us; 65535us; 65535us; 17178us; 65535us; 65535us; 65535us; 65535us; 17181us; 65535us; 65535us; 65535us; 17182us; 65535us; 65535us; 17183us; 65535us; 65535us; 65535us; 17184us; 17185us; 65535us; 65535us; 65535us; 17189us; 17190us; 65535us; 17192us; 17193us; 65535us; 65535us; 17195us; 17197us; 17199us; 65535us; 65535us; 65535us; 17200us; 65535us; 17201us; 17203us; 17206us; 65535us; 17208us; 65535us; 65535us; 17209us; 65535us; 17210us; 65535us; 17211us; 65535us; 17213us; 65535us; 17214us; 65535us; 65535us; 65535us; 65535us; 17215us; 65535us; 17216us; 17217us; 65535us; 65535us; 17218us; 17219us; 17220us; 17221us; 17222us; 65535us; 65535us; 65535us; 17223us; 17224us; 65535us; 65535us; 65535us; 65535us; 17225us; 17226us; 65535us; 17227us; 17228us; 65535us; 17229us; 65535us; 17230us; 65535us; 17231us; 65535us; 65535us; 17232us; 65535us; 65535us; 65535us; 65535us; 65535us; 17238us; 65535us; 65535us; 17239us; 65535us; 65535us; 17241us; 65535us; 65535us; 17243us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17251us; 65535us; 17253us; 65535us; 65535us; 17254us; 65535us; 17255us; 65535us; 17256us; 65535us; 65535us; 17258us; 65535us; 17259us; 65535us; 17262us; 65535us; 65535us; 65535us; 65535us; 17263us; 65535us; 17265us; 65535us; 17266us; 17267us; 65535us; 65535us; 65535us; 17268us; 17269us; 65535us; 17270us; 65535us; 65535us; 17271us; 65535us; 17272us; 65535us; 17273us; 65535us; 17274us; 65535us; 17275us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17277us; 17278us; 65535us; 65535us; 17281us; 65535us; 65535us; 65535us; 17282us; 65535us; 65535us; 17285us; 65535us; 65535us; 17287us; 17288us; 65535us; 65535us; 65535us; 17289us; 17290us; 65535us; 65535us; 65535us; 65535us; 17291us; 17292us; 17293us; 17294us; 17295us; 17296us; 17297us; 65535us; 17299us; 17300us; 65535us; 17301us; 17302us; 65535us; 65535us; 17304us; 65535us; 17305us; 17306us; 65535us; 17307us; 65535us; 65535us; 65535us; 65535us; 17308us; 17309us; 17310us; 65535us; 17311us; 17312us; 17313us; 17314us; 65535us; 65535us; 17316us; 17318us; 17319us; 65535us; 65535us; 17321us; 65535us; 17322us; 65535us; 17324us; 65535us; 65535us; 17325us; 65535us; 65535us; 17327us; 17328us; 65535us; 17330us; 17331us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17335us; 17336us; 65535us; 65535us; 17337us; 17338us; 17339us; 17340us; 65535us; 17341us; 17342us; 65535us; 65535us; 17343us; 65535us; 17344us; 17345us; 65535us; 65535us; 17346us; 65535us; 65535us; 17347us; 17348us; 17349us; 17350us; 17351us; 17352us; 17353us; 17354us; 17355us; 17356us; 17357us; 17358us; 17359us; 17360us; 17361us; 17362us; 17363us; 17364us; 17365us; 17366us; 17367us; 17368us; 17369us; 17370us; 65535us; 17372us; 65535us; 17373us; 17374us; 65535us; 17375us; 17376us; 17377us; 17378us; 65535us; 17380us; 65535us; 17381us; 17382us; 17383us; 17384us; 17385us; 17386us; 17387us; 17388us; 65535us; 17390us; 65535us; 17391us; 65535us; 65535us; 17395us; 17396us; 17397us; 17398us; 17399us; 17400us; 17401us; 17402us; 17404us; 17406us; 17408us; 17410us; 17412us; 17414us; 17418us; 17420us; 17422us; 17423us; 17424us; 17425us; 17426us; 17427us; 17428us; 17429us; 17430us; 17431us; 17432us; 17433us; 65535us; 17435us; 17436us; 65535us; 65535us; 17437us; 17438us; 65535us; 65535us; 17439us; 17440us; 17441us; 17442us; 17443us; 17445us; 65535us; 65535us; 17447us; 17448us; 17449us; 65535us; 65535us; 17450us; 17451us; 17452us; 65535us; 17453us; 17454us; 17455us; 17456us; 65535us; 17457us; 17458us; 17459us; 65535us; 17460us; 17461us; 17462us; 17463us; 17464us; 17465us; 17466us; 17467us; 17468us; 17469us; 17470us; 17471us; 17472us; 17473us; |]
let _fsyacc_reductions ()  =    [| 
//# 2886 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParsedSigFile)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startsignatureFile));
//# 2895 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParsedImplFile)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startimplementationFile));
//# 2904 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParsedScriptInteraction)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startinteraction));
//# 2913 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_starttypedSeqExprEOF));
//# 2922 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_starttypEOF));
//# 2931 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 548 "../../../src/fsharp/pars.fsy"
                            ParsedScriptInteraction.Definitions (_1, lhs parseState) 
                   )
//# 548 "../../../src/fsharp/pars.fsy"
                 : ParsedScriptInteraction));
//# 2942 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 551 "../../../src/fsharp/pars.fsy"
                            warning(Error(FSComp.SR.parsUnexpectedSemicolon(), rhs parseState 1))
                            ParsedScriptInteraction.Definitions ([], lhs parseState) 
                   )
//# 551 "../../../src/fsharp/pars.fsy"
                 : ParsedScriptInteraction));
//# 2953 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 555 "../../../src/fsharp/pars.fsy"
                            ParsedScriptInteraction.Definitions ([], lhs parseState) 
                   )
//# 555 "../../../src/fsharp/pars.fsy"
                 : ParsedScriptInteraction));
//# 2963 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 559 "../../../src/fsharp/pars.fsy"
                                              
                   )
//# 559 "../../../src/fsharp/pars.fsy"
                 : 'interactiveTerminator));
//# 2973 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 560 "../../../src/fsharp/pars.fsy"
                                   checkEndOfFileError _1 
                   )
//# 560 "../../../src/fsharp/pars.fsy"
                 : 'interactiveTerminator));
//# 2984 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 574 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 574 "../../../src/fsharp/pars.fsy"
                 : 'interactiveItemsTerminator));
//# 2995 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveDefns)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 577 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 577 "../../../src/fsharp/pars.fsy"
                 : 'interactiveItemsTerminator));
//# 3007 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 580 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 580 "../../../src/fsharp/pars.fsy"
                 : 'interactiveItemsTerminator));
//# 3019 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveHash)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 583 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 583 "../../../src/fsharp/pars.fsy"
                 : 'interactiveItemsTerminator));
//# 3031 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveDefns)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 586 "../../../src/fsharp/pars.fsy"
                            _1 @ _3 
                   )
//# 586 "../../../src/fsharp/pars.fsy"
                 : 'interactiveItemsTerminator));
//# 3044 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 589 "../../../src/fsharp/pars.fsy"
                            _1 @ _3 
                   )
//# 589 "../../../src/fsharp/pars.fsy"
                 : 'interactiveItemsTerminator));
//# 3057 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveHash)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 592 "../../../src/fsharp/pars.fsy"
                            _1 @ _3 
                   )
//# 592 "../../../src/fsharp/pars.fsy"
                 : 'interactiveItemsTerminator));
//# 3070 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 598 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 598 "../../../src/fsharp/pars.fsy"
                 : 'interactiveDefns));
//# 3081 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 601 "../../../src/fsharp/pars.fsy"
                             _1 @ _2 
                   )
//# 601 "../../../src/fsharp/pars.fsy"
                 : 'interactiveDefns));
//# 3093 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 607 "../../../src/fsharp/pars.fsy"
                             match _2 with
                             | Some vis -> errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(vis.ToString()), rhs parseState 3))
                             | _ -> ()
                             let attrDecls = if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] in 
                             attrDecls @ [ mkSynDoDecl(_3)] 
                   )
//# 607 "../../../src/fsharp/pars.fsy"
                 : 'interactiveExpr));
//# 3110 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 617 "../../../src/fsharp/pars.fsy"
                             [SynModuleDecl.HashDirective(_1, rhs parseState 1)] 
                   )
//# 617 "../../../src/fsharp/pars.fsy"
                 : 'interactiveHash));
//# 3121 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 622 "../../../src/fsharp/pars.fsy"
                                                
                   )
//# 622 "../../../src/fsharp/pars.fsy"
                 : 'interactiveSeparators));
//# 3132 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 624 "../../../src/fsharp/pars.fsy"
                                                                      
                   )
//# 624 "../../../src/fsharp/pars.fsy"
                 : 'interactiveSeparators));
//# 3144 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 628 "../../../src/fsharp/pars.fsy"
                                     
                   )
//# 628 "../../../src/fsharp/pars.fsy"
                 : 'interactiveSeparator));
//# 3154 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 629 "../../../src/fsharp/pars.fsy"
                                     
                   )
//# 629 "../../../src/fsharp/pars.fsy"
                 : 'interactiveSeparator));
//# 3164 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArgs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 638 "../../../src/fsharp/pars.fsy"
                            let m = match _3 with [] -> rhs2  parseState 1 2 | _ -> rhs2  parseState 1 3
                            ParsedHashDirective (_2, _3, m) 
                   )
//# 638 "../../../src/fsharp/pars.fsy"
                 : 'hashDirective));
//# 3177 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 645 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 645 "../../../src/fsharp/pars.fsy"
                 : 'hashDirectiveArgs));
//# 3187 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArgs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 648 "../../../src/fsharp/pars.fsy"
                            _1 @ [_2] 
                   )
//# 648 "../../../src/fsharp/pars.fsy"
                 : 'hashDirectiveArgs));
//# 3199 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 654 "../../../src/fsharp/pars.fsy"
                             let s, _ = _1
                             s 
                   )
//# 654 "../../../src/fsharp/pars.fsy"
                 : 'hashDirectiveArg));
//# 3211 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 664 "../../../src/fsharp/pars.fsy"
                            checkEndOfFileError _2; _1 
                   )
//# 664 "../../../src/fsharp/pars.fsy"
                 : ParsedSigFile));
//# 3223 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 667 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 667 "../../../src/fsharp/pars.fsy"
                 : ParsedSigFile));
//# 3235 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 673 "../../../src/fsharp/pars.fsy"
                            let emptySigFileFrag = ParsedSigFileFragment.AnonModule([], rhs parseState 1) in 
                            ParsedSigFile ([], [emptySigFileFrag]) 
                   )
//# 673 "../../../src/fsharp/pars.fsy"
                 : ParsedSigFile));
//# 3247 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleKeyword)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 681 "../../../src/fsharp/pars.fsy"
                             _3, _4.Lid, grabXmlDoc(parseState, 1), _2 
                   )
//# 681 "../../../src/fsharp/pars.fsy"
                 : 'moduleIntro));
//# 3261 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 687 "../../../src/fsharp/pars.fsy"
                             _2, _3.Lid, grabXmlDoc(parseState, 1)  
                   )
//# 687 "../../../src/fsharp/pars.fsy"
                 : 'namespaceIntro));
//# 3273 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 693 "../../../src/fsharp/pars.fsy"
                             ParsedSigFile ([], [ (_1 (false, [], PreXmlDoc.Empty)) ]) 
                   )
//# 693 "../../../src/fsharp/pars.fsy"
                 : 'fileNamespaceSpecs));
//# 3284 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 696 "../../../src/fsharp/pars.fsy"
                             // If there are namespaces, the first fileModuleImpl may only contain # directives 
                             let decls = 
                                 match (_1 (false, [], PreXmlDoc.Empty)) with 
                                 | ParsedSigFileFragment.AnonModule(decls, m) -> decls  
                                 | ParsedSigFileFragment.NamespaceFragment(_, _, _, decls, _, _, _) -> decls 
                                 | ParsedSigFileFragment.NamedModule(SynModuleOrNamespaceSig(_, _, _, _, _, _, _, m)) ->
                                     raiseParseErrorAt m (FSComp.SR.parsOnlyHashDirectivesAllowed())
                             let decls = 
                                 decls |> List.collect (function 
                                     | (SynModuleSigDecl.HashDirective (hd, _)) -> [hd]
                                     | d ->  
                                          reportParseErrorAt d.Range (FSComp.SR.parsOnlyHashDirectivesAllowed())
                                          [])
                             ParsedSigFile (decls, _2) 
                   )
//# 696 "../../../src/fsharp/pars.fsy"
                 : 'fileNamespaceSpecs));
//# 3309 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpec)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 714 "../../../src/fsharp/pars.fsy"
                            _1 :: _2 
                   )
//# 714 "../../../src/fsharp/pars.fsy"
                 : 'fileNamespaceSpecList));
//# 3321 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 717 "../../../src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 717 "../../../src/fsharp/pars.fsy"
                 : 'fileNamespaceSpecList));
//# 3332 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namespaceIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'deprecated_opt_equals)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 721 "../../../src/fsharp/pars.fsy"
                            let isRec, path, xml = _1 in (_3 (isRec, path, xml)) 
                   )
//# 721 "../../../src/fsharp/pars.fsy"
                 : 'fileNamespaceSpec));
//# 3345 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmptyBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 727 "../../../src/fsharp/pars.fsy"
                           if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                           let m2 = rhs parseState 3
                           let mDeclsAndAttrs = (List.map (fun (a: SynAttributeList) -> a.Range) _1) @ (List.map (fun (d: SynModuleSigDecl) -> d.Range) _4)
                           let m = (m2, mDeclsAndAttrs) ||> unionRangeWithListBy id
                           let isRec, path2, xml, vis = _3 
                           (fun (isRec2, path, _) -> 
                             if not (isNil path) then errorR(Error(FSComp.SR.parsNamespaceOrModuleNotBoth(), m2))
                             let lid = path@path2 
                             ParsedSigFileFragment.NamedModule(SynModuleOrNamespaceSig(lid, (isRec || isRec2), SynModuleOrNamespaceKind.NamedModule, _4, xml, _1, vis, m)))  
                   )
//# 727 "../../../src/fsharp/pars.fsy"
                 : 'fileModuleSpec));
//# 3367 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmptyBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 738 "../../../src/fsharp/pars.fsy"
                           let m = (rhs parseState 1) 
                           (fun (isRec, path, xml) -> 
                             match path with
                             | [] -> ParsedSigFileFragment.AnonModule(_1, m)  
                             | _ ->
                                 let lastDeclRange = List.tryLast _1 |> Option.map (fun decl -> decl.Range) |> Option.defaultValue (rhs parseState 1)
                                 let m = mkRange lastDeclRange.FileName (lhs parseState).Start lastDeclRange.End
                                 ParsedSigFileFragment.NamespaceFragment(path, isRec, SynModuleOrNamespaceKind.DeclaredNamespace, _1, xml, [], m))  
                   )
//# 738 "../../../src/fsharp/pars.fsy"
                 : 'fileModuleSpec));
//# 3385 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 750 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 750 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
//# 3396 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 753 "../../../src/fsharp/pars.fsy"
                             _2 
                   )
//# 753 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
//# 3409 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 756 "../../../src/fsharp/pars.fsy"
                              // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                              // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight())   
                              _2 
                            
                   )
//# 756 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
//# 3424 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 762 "../../../src/fsharp/pars.fsy"
                              [] 
                   )
//# 762 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
//# 3435 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 767 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 767 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
//# 3446 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 770 "../../../src/fsharp/pars.fsy"
                             [] 
                   )
//# 770 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
//# 3456 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 773 "../../../src/fsharp/pars.fsy"
                             [] 
                   )
//# 773 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
//# 3466 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 778 "../../../src/fsharp/pars.fsy"
                            _1 :: _3 
                   )
//# 778 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfns));
//# 3479 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 781 "../../../src/fsharp/pars.fsy"
                            (* silent recovery *) _3 
                   )
//# 781 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfns));
//# 3491 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 784 "../../../src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 784 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfns));
//# 3503 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 789 "../../../src/fsharp/pars.fsy"
                             SynModuleSigDecl.HashDirective (_1, rhs2 parseState 1 1)  
                   )
//# 789 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfn));
//# 3514 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'valSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 792 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 792 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfn));
//# 3525 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'colonOrEquals)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'namedModuleAbbrevBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 795 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let isRec, path, xml, vis = _3 
                             if isRec then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsInvalidUseOfRec())
                             if not (isSingleton path) then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName())
                             if not (isNil _1) then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviation())
                             match vis with
                             | Some vis -> raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreVisibilityOnModuleAbbreviationAlwaysPrivate(vis.ToString()))
                             | _ -> SynModuleSigDecl.ModuleAbbrev(List.head path, _5, rhs2 parseState 1 5) 
                   )
//# 795 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfn));
//# 3547 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'colonOrEquals)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpecBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 805 "../../../src/fsharp/pars.fsy"
                             let isRec, path, xml, vis = _3 
                             if not (isSingleton path) then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleDefnMustBeSimpleName())
                             if isRec then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsInvalidUseOfRec())
                             let info = SynComponentInfo(_1, [], [], path, xml, false, vis, rhs parseState 3)
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let m = (rhs2 parseState 1 4, _5) ||> unionRangeWithListBy (fun (d: SynModuleSigDecl) -> d.Range)
                             SynModuleSigDecl.NestedModule(info, isRec, _5, m) 
                   )
//# 805 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfn));
//# 3568 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypeDefnSig list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 814 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let (SynTypeDefnSig(SynComponentInfo(cas, a, cs, b, c, d, d2, d3), e, f, g)), rest = 
                                match _3 with
                                | [] -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEmptyModuleDefn()) 
                                | h :: t -> h, t 
                             let attrs = _1@cas
                             let mTc = (g, attrs)  ||> unionRangeWithListBy (fun (a: SynAttributeList) -> a.Range)
                             let tc = (SynTypeDefnSig(SynComponentInfo(attrs, a, cs, b, c, d, d2, d3), e, f, mTc))
                             let lastType = List.tryLast rest |> Option.defaultValue tc |> fun t -> t.Range
                             let m = mkRange lastType.FileName mTc.Start lastType.End
                             SynModuleSigDecl.Types (tc :: rest, m) 
                   )
//# 814 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfn));
//# 3591 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 827 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let (SynExceptionSig(SynExceptionDefnRepr(cas, a, b, c, d, d2), e, f)) = _3 
                             let ec = SynExceptionSig(SynExceptionDefnRepr(_1@cas, a, b, c, d, d2), e, f)
                             SynModuleSigDecl.Exception(ec, rhs parseState 3) 
                   )
//# 827 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfn));
//# 3607 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'openDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 833 "../../../src/fsharp/pars.fsy"
                             SynModuleSigDecl.Open(_1, (rhs parseState 1)) 
                   )
//# 833 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfn));
//# 3618 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _12 = (let data = parseState.GetInput(12) in (Microsoft.FSharp.Core.Operators.unbox data : 'optLiteralValueSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 837 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let attr1, attr2, isInline, isMutable, vis2, id, doc, explicitValTyparDecls, (ty, arity), konst = (_1), (_4), (_5), (_6), (_7), (_8), grabXmlDoc(parseState, 3), (_9), (_11), (_12) 
                             if not (isNil attr2) then errorR(Deprecated(FSComp.SR.parsAttributesMustComeBeforeVal(), rhs parseState 4))
                             let m = rhs2 parseState 1 11 
                             let valSpfn = SynValSig((attr1@attr2), id, explicitValTyparDecls, ty, arity, isInline, isMutable, doc, vis2, konst, m) 
                             SynModuleSigDecl.Val(valSpfn, m)
                           
                   )
//# 837 "../../../src/fsharp/pars.fsy"
                 : 'valSpfn));
//# 3644 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 848 "../../../src/fsharp/pars.fsy"
                             None 
                   )
//# 848 "../../../src/fsharp/pars.fsy"
                 : 'optLiteralValueSpfn));
//# 3654 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 851 "../../../src/fsharp/pars.fsy"
                             Some(_2) 
                   )
//# 851 "../../../src/fsharp/pars.fsy"
                 : 'optLiteralValueSpfn));
//# 3665 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 854 "../../../src/fsharp/pars.fsy"
                             Some(_3) 
                   )
//# 854 "../../../src/fsharp/pars.fsy"
                 : 'optLiteralValueSpfn));
//# 3678 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 862 "../../../src/fsharp/pars.fsy"
                             _2 
                   )
//# 862 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpecBlock));
//# 3690 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'sigOrBegin)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 866 "../../../src/fsharp/pars.fsy"
                             _3 
                   )
//# 866 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpecBlock));
//# 3703 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'sigOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 870 "../../../src/fsharp/pars.fsy"
                             _2 
                   )
//# 870 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpecBlock));
//# 3715 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 876 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 876 "../../../src/fsharp/pars.fsy"
                 : SynTypeDefnSig list));
//# 3727 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 881 "../../../src/fsharp/pars.fsy"
                            _1 :: _3 
                   )
//# 881 "../../../src/fsharp/pars.fsy"
                 : 'tyconSpfnList));
//# 3739 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 884 "../../../src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 884 "../../../src/fsharp/pars.fsy"
                 : 'tyconSpfnList));
//# 3750 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 890 "../../../src/fsharp/pars.fsy"
                             let lhsm = rhs parseState 1 
                             _3 lhsm _1 
                   )
//# 890 "../../../src/fsharp/pars.fsy"
                 : 'tyconSpfn));
//# 3763 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 893 "../../../src/fsharp/pars.fsy"
                             SynTypeDefnSig(_1, SynTypeDefnSigRepr.Simple (SynTypeDefnSimpleRepr.None (lhs parseState), lhs parseState), _2, lhs parseState) 
                   )
//# 893 "../../../src/fsharp/pars.fsy"
                 : 'tyconSpfn));
//# 3775 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 907 "../../../src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            (fun lhsm nameInfo -> 
                                _2 lhsm nameInfo (checkForMultipleAugmentations m (_4 @ _5) _7)) 
                   )
//# 907 "../../../src/fsharp/pars.fsy"
                 : 'tyconSpfnRhsBlock));
//# 3793 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 912 "../../../src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            (fun lhsm nameInfo -> 
                                _1 lhsm nameInfo _2) 
                   )
//# 912 "../../../src/fsharp/pars.fsy"
                 : 'tyconSpfnRhsBlock));
//# 3807 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypeDefnSimpleRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 920 "../../../src/fsharp/pars.fsy"
                            (fun lhsm nameInfo augmentation -> 
                                let declRange = unionRanges lhsm _1.Range
                                let mWhole = (declRange, augmentation) ||> unionRangeWithListBy (fun (mem: SynMemberSig) -> mem.Range)
                                SynTypeDefnSig(nameInfo, SynTypeDefnSigRepr.Simple (_1, _1.Range), augmentation, mWhole)) 
                   )
//# 920 "../../../src/fsharp/pars.fsy"
                 : 'tyconSpfnRhs));
//# 3821 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconClassSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 926 "../../../src/fsharp/pars.fsy"
                            let objectModelRange = lhs parseState 
                            let needsCheck, (kind, decls) = _1
                            (fun nameRange nameInfo augmentation -> 
                                if needsCheck && isNil decls then
                                   reportParseErrorAt nameRange (FSComp.SR.parsEmptyTypeDefinition())
                                
                                let declRange = unionRanges nameRange objectModelRange
                                let mWhole = (declRange, augmentation) ||> unionRangeWithListBy (fun (mem: SynMemberSig) -> mem.Range)
                                SynTypeDefnSig(nameInfo, SynTypeDefnSigRepr.ObjectModel (kind, decls, objectModelRange), augmentation, mWhole)) 
                   )
//# 926 "../../../src/fsharp/pars.fsy"
                 : 'tyconSpfnRhs));
//# 3840 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 937 "../../../src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            let ty, arity = _3
                            let invoke = SynMemberSig.Member(SynValSig([], mkSynId m "Invoke", inferredTyparDecls, ty, arity, false, false, PreXmlDoc.Empty, None, None, m), AbstractMemberFlags SynMemberKind.Member, m) 
                            (fun nameRange nameInfo augmentation -> 
                                if not (isNil augmentation) then raiseParseErrorAt m (FSComp.SR.parsAugmentationsIllegalOnDelegateType())
                                let mWhole = unionRanges nameRange m
                                SynTypeDefnSig(nameInfo, SynTypeDefnSigRepr.ObjectModel (SynTypeDefnKind.Delegate (ty, arity), [invoke], m), [], mWhole)) 
                   )
//# 937 "../../../src/fsharp/pars.fsy"
                 : 'tyconSpfnRhs));
//# 3857 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlockKindUnspecified)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 949 "../../../src/fsharp/pars.fsy"
                            let needsCheck, decls = _1 
                            needsCheck, (SynTypeDefnKind.Unspecified, decls) 
                   )
//# 949 "../../../src/fsharp/pars.fsy"
                 : 'tyconClassSpfn));
//# 3869 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 953 "../../../src/fsharp/pars.fsy"
                            false, (_1, _2) 
                   )
//# 953 "../../../src/fsharp/pars.fsy"
                 : 'tyconClassSpfn));
//# 3881 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 956 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedClassInterfaceOrStruct())
                            false, (_1, _2) 
                   )
//# 956 "../../../src/fsharp/pars.fsy"
                 : 'tyconClassSpfn));
//# 3895 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 960 "../../../src/fsharp/pars.fsy"
                            // silent recovery 
                            false, (_1, []) 
                   )
//# 960 "../../../src/fsharp/pars.fsy"
                 : 'tyconClassSpfn));
//# 3907 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 967 "../../../src/fsharp/pars.fsy"
                            true, _2 
                   )
//# 967 "../../../src/fsharp/pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
//# 3919 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 970 "../../../src/fsharp/pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeSignature())
                            false, _2 
                   )
//# 970 "../../../src/fsharp/pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
//# 3932 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 975 "../../../src/fsharp/pars.fsy"
                            false, _2 
                   )
//# 975 "../../../src/fsharp/pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
//# 3943 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 978 "../../../src/fsharp/pars.fsy"
                            false, _2 
                   )
//# 978 "../../../src/fsharp/pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
//# 3955 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 984 "../../../src/fsharp/pars.fsy"
                             _2 
                   )
//# 984 "../../../src/fsharp/pars.fsy"
                 : 'classSpfnBlock));
//# 3967 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 987 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeSignature())
                             _2 
                   )
//# 987 "../../../src/fsharp/pars.fsy"
                 : 'classSpfnBlock));
//# 3980 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 990 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 990 "../../../src/fsharp/pars.fsy"
                 : 'classSpfnBlock));
//# 3991 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembersAtLeastOne)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 995 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 995 "../../../src/fsharp/pars.fsy"
                 : 'classSpfnMembers));
//# 4002 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 998 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 998 "../../../src/fsharp/pars.fsy"
                 : 'classSpfnMembers));
//# 4012 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1004 "../../../src/fsharp/pars.fsy"
                            _1 :: _3 
                   )
//# 1004 "../../../src/fsharp/pars.fsy"
                 : 'classSpfnMembersAtLeastOne));
//# 4025 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberSpecFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : 'optLiteralValueSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1010 "../../../src/fsharp/pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            let isInline, doc, vis2, id, explicitValTyparDecls, (ty, arity), optLiteralValue = _4, grabXmlDoc(parseState, 3), _5, _6, _7, _9, _11
                            let getSetRangeOpt, getSet = _10 
                            let getSetAdjuster arity = match arity, getSet with SynValInfo([], _), SynMemberKind.Member -> SynMemberKind.PropertyGet | _ -> getSet
                            let wholeRange = 
                                let m = rhs parseState 3 
                                match getSetRangeOpt with 
                                | None -> unionRanges m ty.Range
                                | Some m2 -> unionRanges m m2
                                |> fun m -> (m, _1) ||> unionRangeWithListBy (fun (a: SynAttributeList) -> a.Range)
                            let valSpfn = SynValSig(_1, id, explicitValTyparDecls, ty, arity, isInline, false, doc, vis2, optLiteralValue, wholeRange)
                            let _, flags = _3 
                            SynMemberSig.Member(valSpfn, flags (getSetAdjuster arity), wholeRange) 
                   )
//# 1010 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfn));
//# 4057 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1025 "../../../src/fsharp/pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            SynMemberSig.Interface (_4, unionRanges (rhs parseState 3) (_4).Range) 
                   )
//# 1025 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfn));
//# 4072 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1029 "../../../src/fsharp/pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            SynMemberSig.Inherit (_4, unionRanges (rhs parseState 3) (_4).Range) 
                   )
//# 1029 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfn));
//# 4086 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1033 "../../../src/fsharp/pars.fsy"
                            let wholeRange = rhs2 parseState 1 4
                            if Option.isSome _2 then errorR (Error (FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier (), rhs parseState 2))
                            let fld = _4 _1 false wholeRange 
                            SynMemberSig.ValField (fld, wholeRange) 
                   )
//# 1033 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfn));
//# 4102 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1039 "../../../src/fsharp/pars.fsy"
                            let wholeRange = rhs2 parseState 1 5
                            if Option.isSome _2 then errorR (Error (FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier (), rhs parseState 2))
                            SynMemberSig.ValField(_5 _1 true wholeRange, wholeRange) 
                   )
//# 1039 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfn));
//# 4117 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1044 "../../../src/fsharp/pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            SynMemberSig.NestedType(_5, rhs2 parseState 1 5) 
                   )
//# 1044 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfn));
//# 4132 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1048 "../../../src/fsharp/pars.fsy"
                            let vis, doc, (ty, valSynInfo) = _2, grabXmlDoc(parseState, 3), _5 
                            let m = unionRanges (rhs parseState 1) ty.Range 
                            let isInline = false 
                            let valSpfn = SynValSig (_1, mkSynId (rhs parseState 3) "new", noInferredTypars, ty, valSynInfo, isInline, false, doc, vis, None, m)
                            SynMemberSig.Member(valSpfn, CtorMemberFlags, m) 
                   )
//# 1048 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfn));
//# 4149 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1058 "../../../src/fsharp/pars.fsy"
                           None, SynMemberKind.Member 
                   )
//# 1058 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfnGetSet));
//# 4159 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1061 "../../../src/fsharp/pars.fsy"
                           Some (rhs2 parseState 1 2), _2 
                   )
//# 1061 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfnGetSet));
//# 4170 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1064 "../../../src/fsharp/pars.fsy"
                           Some (rhs2 parseState 1 2), _2 
                   )
//# 1064 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfnGetSet));
//# 4181 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1067 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedWith())
                            Some (rhs2 parseState 1 2), _2 
                   )
//# 1067 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfnGetSet));
//# 4193 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1074 "../../../src/fsharp/pars.fsy"
                           (let (id:Ident) = _1 
                            if id.idText = "get" then SynMemberKind.PropertyGet 
                            else if id.idText = "set" then SynMemberKind.PropertySet 
                            else raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsGetOrSetRequired())) 
                   )
//# 1074 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfnGetSetElements));
//# 4207 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1080 "../../../src/fsharp/pars.fsy"
                           let (id:Ident) = _1 
                           if not ((id.idText = "get" && _3.idText = "set") ||
                                   (id.idText = "set" && _3.idText = "get")) then 
                              raiseParseErrorAt (rhs2 parseState 1 3) (FSComp.SR.parsGetOrSetRequired())
                           SynMemberKind.PropertyGetSet 
                   )
//# 1080 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfnGetSetElements));
//# 4223 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1087 "../../../src/fsharp/pars.fsy"
                                       _1 
                   )
//# 1087 "../../../src/fsharp/pars.fsy"
                 : 'memberSpecFlags));
//# 4234 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1088 "../../../src/fsharp/pars.fsy"
                                           (false, AbstractMemberFlags) 
                   )
//# 1088 "../../../src/fsharp/pars.fsy"
                 : 'memberSpecFlags));
//# 4244 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1089 "../../../src/fsharp/pars.fsy"
                                           (false, AbstractMemberFlags) 
                   )
//# 1089 "../../../src/fsharp/pars.fsy"
                 : 'memberSpecFlags));
//# 4254 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExceptionDefnRepr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1095 "../../../src/fsharp/pars.fsy"
                            SynExceptionSig(_1, _2, lhs parseState) 
                   )
//# 1095 "../../../src/fsharp/pars.fsy"
                 : 'exconSpfn));
//# 4266 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1101 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 1101 "../../../src/fsharp/pars.fsy"
                 : 'opt_classSpfn));
//# 4278 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1104 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 1104 "../../../src/fsharp/pars.fsy"
                 : 'opt_classSpfn));
//# 4288 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpls)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1113 "../../../src/fsharp/pars.fsy"
                            checkEndOfFileError _2; _1 
                   )
//# 1113 "../../../src/fsharp/pars.fsy"
                 : ParsedImplFile));
//# 4300 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1116 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 1116 "../../../src/fsharp/pars.fsy"
                 : ParsedImplFile));
//# 4312 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1122 "../../../src/fsharp/pars.fsy"
                            let emptyImplFileFrag = ParsedImplFileFragment.AnonModule([], rhs parseState 1) in 
                            ParsedImplFile ([], [emptyImplFileFrag]) 
                   )
//# 1122 "../../../src/fsharp/pars.fsy"
                 : ParsedImplFile));
//# 4324 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1129 "../../../src/fsharp/pars.fsy"
                             ParsedImplFile ([], [ (_1 (false, [], PreXmlDoc.Empty)) ]) 
                   )
//# 1129 "../../../src/fsharp/pars.fsy"
                 : 'fileNamespaceImpls));
//# 4335 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImplList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1132 "../../../src/fsharp/pars.fsy"
                             // If there are namespaces, the first fileModuleImpl may only contain # directives 
                             let decls = 
                                 match (_1 (false, [], PreXmlDoc.Empty)) with 
                                 | ParsedImplFileFragment.AnonModule(decls, m) -> decls  
                                 | ParsedImplFileFragment.NamespaceFragment(_, _, _, decls, _, _, _) -> decls 
                                 | ParsedImplFileFragment.NamedModule(SynModuleOrNamespace(_, _, _, _, _, _, _, m)) ->
                                     raiseParseErrorAt m (FSComp.SR.parsOnlyHashDirectivesAllowed())
                             let decls = 
                                 decls |> List.collect (function 
                                     | (SynModuleDecl.HashDirective (hd, _)) -> [hd]
                                     | d ->  
                                          reportParseErrorAt d.Range (FSComp.SR.parsOnlyHashDirectivesAllowed())
                                          [])
                             ParsedImplFile (decls, _2) 
                   )
//# 1132 "../../../src/fsharp/pars.fsy"
                 : 'fileNamespaceImpls));
//# 4360 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImplList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1151 "../../../src/fsharp/pars.fsy"
                            _1 :: _2 
                   )
//# 1151 "../../../src/fsharp/pars.fsy"
                 : 'fileNamespaceImplList));
//# 4372 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1154 "../../../src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 1154 "../../../src/fsharp/pars.fsy"
                 : 'fileNamespaceImplList));
//# 4383 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namespaceIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'deprecated_opt_equals)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1160 "../../../src/fsharp/pars.fsy"
                            let isRec, path, xml = _1 in (_3 (isRec, path, xml)) 
                   )
//# 1160 "../../../src/fsharp/pars.fsy"
                 : 'fileNamespaceImpl));
//# 4396 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynModuleDecl list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1166 "../../../src/fsharp/pars.fsy"
                           if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                           let m2 = rhs parseState 3
                           let mDeclsAndAttrs = (List.map (fun (a: SynAttributeList) -> a.Range) _1) @ (List.map (fun (d: SynModuleDecl) -> d.Range) _4)
                           let m = (m2, mDeclsAndAttrs) ||> unionRangeWithListBy id
                           let isRec2, path2, xml, vis = _3 
                           (fun (isRec, path, _) -> 
                             if not (isNil path) then errorR(Error(FSComp.SR.parsNamespaceOrModuleNotBoth(), m2))
                             let lid = path@path2 
                             ParsedImplFileFragment.NamedModule(SynModuleOrNamespace(lid, (isRec || isRec2), SynModuleOrNamespaceKind.NamedModule, _4, xml, _1, vis, m))) 
                   )
//# 1166 "../../../src/fsharp/pars.fsy"
                 : 'fileModuleImpl));
//# 4418 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynModuleDecl list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1177 "../../../src/fsharp/pars.fsy"
                           let m = (rhs parseState 1) 
                           (fun (isRec, path, xml) -> 
                             match path with 
                             | [] -> ParsedImplFileFragment.AnonModule(_1, m)  
                             | _ ->
                                 let lastDeclRange = List.tryLast _1 |> Option.map (fun decl -> decl.Range) |> Option.defaultValue (rhs parseState 1)
                                 let m = mkRange lastDeclRange.FileName (lhs parseState).Start lastDeclRange.End
                                 ParsedImplFileFragment.NamespaceFragment(path, isRec, SynModuleOrNamespaceKind.DeclaredNamespace, _1, xml, [], m)) 
                   )
//# 1177 "../../../src/fsharp/pars.fsy"
                 : 'fileModuleImpl));
//# 4436 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1190 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 1190 "../../../src/fsharp/pars.fsy"
                 : SynModuleDecl list));
//# 4449 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1193 "../../../src/fsharp/pars.fsy"
                            // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                            // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight())   
                            _2 
                   )
//# 1193 "../../../src/fsharp/pars.fsy"
                 : SynModuleDecl list));
//# 4463 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1198 "../../../src/fsharp/pars.fsy"
                            []  
                   )
//# 1198 "../../../src/fsharp/pars.fsy"
                 : SynModuleDecl list));
//# 4474 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1201 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 1201 "../../../src/fsharp/pars.fsy"
                 : SynModuleDecl list));
//# 4485 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1207 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 1207 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefnsOrExprPossiblyEmpty));
//# 4496 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1210 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 1210 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefnsOrExprPossiblyEmpty));
//# 4506 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1217 "../../../src/fsharp/pars.fsy"
                             match _2 with
                             | Some vis -> errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(vis.ToString()), rhs parseState 3))
                             | _ -> ()
                             let attrDecls = if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                             attrDecls @ mkSynDoDecl (_3) :: _5 
                   )
//# 1217 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefnsOrExpr));
//# 4525 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1224 "../../../src/fsharp/pars.fsy"
                             match _2 with
                             | Some vis -> errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(vis.ToString()), rhs parseState 3))
                             | _ -> ()
                             let attrDecls = if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                             attrDecls @ [ mkSynDoDecl(_3) ] 
                   )
//# 1224 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefnsOrExpr));
//# 4543 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1231 "../../../src/fsharp/pars.fsy"
                             match _2 with
                             | Some vis -> errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(vis.ToString()), rhs parseState 3))
                             | _ -> ()
                             let attrDecls = if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                             attrDecls @ [ mkSynDoDecl(_3) ] 
                   )
//# 1231 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefnsOrExpr));
//# 4560 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1238 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 1238 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefnsOrExpr));
//# 4571 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1241 "../../../src/fsharp/pars.fsy"
                            if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                   )
//# 1241 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefnsOrExpr));
//# 4582 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1247 "../../../src/fsharp/pars.fsy"
                             _1 @ _2 
                   )
//# 1247 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefns));
//# 4594 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1250 "../../../src/fsharp/pars.fsy"
                             _1 @ _3 
                   )
//# 1250 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefns));
//# 4607 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1253 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 1253 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefns));
//# 4618 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1256 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 1256 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefns));
//# 4630 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1259 "../../../src/fsharp/pars.fsy"
                             _3 
                   )
//# 1259 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefns));
//# 4642 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1265 "../../../src/fsharp/pars.fsy"
                             _1  
                   )
//# 1265 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefnOrDirective));
//# 4653 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1268 "../../../src/fsharp/pars.fsy"
                             [ SynModuleDecl.HashDirective (_1, rhs2 parseState 1 1) ] 
                   )
//# 1268 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefnOrDirective));
//# 4664 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1277 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             parseState.ResetSynArgNameGenerator()
                             let (BindingSetPreAttrs(_, _, _, _, mWhole)) = _3 
                             mkDefnBindings (mWhole, _3, _1, _2, mWhole)  
                   )
//# 1277 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefn));
//# 4680 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1284 "../../../src/fsharp/pars.fsy"
                             let hwlb, m = _3
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             parseState.ResetSynArgNameGenerator()
                             mkDefnBindings (m, hwlb, _1, _2, m)  
                   )
//# 1284 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefn));
//# 4696 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1291 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let mWhole = rhs parseState 3 
                             mkDefnBindings (mWhole, _3, _1, _2, mWhole) 
                   )
//# 1291 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefn));
//# 4711 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1297 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let (SynTypeDefn(SynComponentInfo(cas, a, cs, b, c, d, d2, d3), e, f, g, h)) = _4
                             let attrs = _1@cas
                             let mTc = (h, attrs)  ||> unionRangeWithListBy (fun (a: SynAttributeList) -> a.Range)
                             let tc = (SynTypeDefn(SynComponentInfo(attrs, a, cs, b, c, d, d2, d3), e, f, g, mTc))
                             let types = tc :: _5
                             [ SynModuleDecl.Types(types, (rhs parseState 3, types) ||> unionRangeWithListBy (fun t -> t.Range) ) ] 
                   )
//# 1297 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefn));
//# 4732 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExceptionDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1307 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let (SynExceptionDefn(SynExceptionDefnRepr(cas, a, b, c, d, d2), e, f)) = _3 
                             let f = (f, _1) ||> unionRangeWithListBy (fun a -> a.Range)
                             let ec = (SynExceptionDefn(SynExceptionDefnRepr(_1@cas, a, b, c, d, d2), e, f)) 
                             [ SynModuleDecl.Exception(ec, f) ] 
                   )
//# 1307 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefn));
//# 4749 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'namedModuleDefnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1315 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let attribs, (isRec, path, xml, vis) = _1, _3 
                             match _5 with 
                             | Choice1Of2 eqn -> 
                                 if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                                 if isRec then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsInvalidUseOfRec())
                                 if not (isSingleton path) then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName())
                                 if not (isNil _1) then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviation())
                                 match vis with
                                 | Some vis -> raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviationAlwaysPrivate(vis.ToString()))
                                 | _ -> ()
                                 [ SynModuleDecl.ModuleAbbrev(List.head path, eqn, (rhs parseState 3, eqn) ||> unionRangeWithListBy (fun id -> id.idRange) ) ]
                             | Choice2Of2 def -> 
                                 if not (isSingleton path) then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName())
                                 let info = SynComponentInfo(attribs, [], [], path, xml, false, vis, rhs parseState 3)
                                 [ SynModuleDecl.NestedModule(info, isRec, def, false, (rhs2 parseState 1 4, def) ||> unionRangeWithListBy (fun d -> d.Range) ) ] 
                   )
//# 1315 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefn));
//# 4778 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1334 "../../../src/fsharp/pars.fsy"
                             errorR(Error(FSComp.SR.parsAttributeOnIncompleteCode(), rhs parseState 1))
                             [] 
                   )
//# 1334 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefn));
//# 4791 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'openDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1339 "../../../src/fsharp/pars.fsy"
                             [ SynModuleDecl.Open(_1, (rhs parseState 1)) ] 
                   )
//# 1339 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefn));
//# 4802 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1344 "../../../src/fsharp/pars.fsy"
                             SynOpenDeclTarget.ModuleOrNamespace(_2.Lid, (rhs parseState 2)) 
                   )
//# 1344 "../../../src/fsharp/pars.fsy"
                 : 'openDecl));
//# 4813 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1347 "../../../src/fsharp/pars.fsy"
                             SynOpenDeclTarget.Type(_3, (rhs parseState 3)) 
                   )
//# 1347 "../../../src/fsharp/pars.fsy"
                 : 'openDecl));
//# 4825 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1354 "../../../src/fsharp/pars.fsy"
                            _2.Lid 
                   )
//# 1354 "../../../src/fsharp/pars.fsy"
                 : 'namedModuleAbbrevBlock));
//# 4837 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1357 "../../../src/fsharp/pars.fsy"
                            _1.Lid  
                   )
//# 1357 "../../../src/fsharp/pars.fsy"
                 : 'namedModuleAbbrevBlock));
//# 4848 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1363 "../../../src/fsharp/pars.fsy"
                            Choice2Of2 _2  
                   )
//# 1363 "../../../src/fsharp/pars.fsy"
                 : 'namedModuleDefnBlock));
//# 4860 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1366 "../../../src/fsharp/pars.fsy"
                            // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                            Choice2Of2 _2 
                   )
//# 1366 "../../../src/fsharp/pars.fsy"
                 : 'namedModuleDefnBlock));
//# 4873 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1370 "../../../src/fsharp/pars.fsy"
                              // There is an ambiguity here 
                              // In particular, consider the following two:
                              //
                              // module M2 = 
                              //    System.DateTime.Now
                              // module M2 = 
                              //    Microsoft.FSharp.Core.List
                              // The second is a module abbreviation, the first a module containing a single expression.
                              // The resolution is in favour of the module abbreviation, i.e. anything of the form 
                              //    module M2 = ID.ID.ID.ID
                              // will be taken as a module abbreviation, regardles of the identifiers themselves.
                              //
                              // This is similar to the ambiguitty between 
                              //    type X = int
                              // and 
                              //    type X = OneValue
                              // However in that case we do use type name lookup to make the resolution.
                              match _2 with 
                              | [ SynModuleDecl.DoExpr (_, LongOrSingleIdent(false, LongIdentWithDots(path, _), None, _), _) ] -> 
                                  Choice1Of2  path
                              | _ -> 
                                  Choice2Of2 _2 
                            
                   )
//# 1370 "../../../src/fsharp/pars.fsy"
                 : 'namedModuleDefnBlock));
//# 4907 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1396 "../../../src/fsharp/pars.fsy"
                            // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                            // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight())   
                            Choice2Of2 _2 
                   )
//# 1396 "../../../src/fsharp/pars.fsy"
                 : 'namedModuleDefnBlock));
//# 4921 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1401 "../../../src/fsharp/pars.fsy"
                            Choice2Of2 [] 
                   )
//# 1401 "../../../src/fsharp/pars.fsy"
                 : 'namedModuleDefnBlock));
//# 4932 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1404 "../../../src/fsharp/pars.fsy"
                            Choice2Of2 _1 
                   )
//# 1404 "../../../src/fsharp/pars.fsy"
                 : 'namedModuleDefnBlock));
//# 4943 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1407 "../../../src/fsharp/pars.fsy"
                            Choice1Of2 _1.Lid 
                   )
//# 1407 "../../../src/fsharp/pars.fsy"
                 : 'namedModuleDefnBlock));
//# 4954 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1413 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 1413 "../../../src/fsharp/pars.fsy"
                 : 'wrappedNamedModuleDefn));
//# 4966 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1416 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBeginOrStruct())  
                            _2 
                   )
//# 1416 "../../../src/fsharp/pars.fsy"
                 : 'wrappedNamedModuleDefn));
//# 4980 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1420 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 1420 "../../../src/fsharp/pars.fsy"
                 : 'wrappedNamedModuleDefn));
//# 4991 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1425 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 1425 "../../../src/fsharp/pars.fsy"
                 : SynMemberDefns));
//# 5003 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1431 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 1431 "../../../src/fsharp/pars.fsy"
                 : 'opt_attributes));
//# 5014 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1434 "../../../src/fsharp/pars.fsy"
                             [] 
                   )
//# 1434 "../../../src/fsharp/pars.fsy"
                 : 'opt_attributes));
//# 5024 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1439 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 1439 "../../../src/fsharp/pars.fsy"
                 : 'attributes));
//# 5035 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeList)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1442 "../../../src/fsharp/pars.fsy"
                            _1 @ _2 
                   )
//# 1442 "../../../src/fsharp/pars.fsy"
                 : 'attributes));
//# 5047 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1448 "../../../src/fsharp/pars.fsy"
                             mkAttributeList _2 (rhs2 parseState 1 4) 
                   )
//# 1448 "../../../src/fsharp/pars.fsy"
                 : 'attributeList));
//# 5060 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1451 "../../../src/fsharp/pars.fsy"
                             mkAttributeList [] (rhs2 parseState 1 3) 
                   )
//# 1451 "../../../src/fsharp/pars.fsy"
                 : 'attributeList));
//# 5071 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1454 "../../../src/fsharp/pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedLBrackLess())
                             mkAttributeList _2 (rhs2 parseState 1 2) 
                   )
//# 1454 "../../../src/fsharp/pars.fsy"
                 : 'attributeList));
//# 5085 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1458 "../../../src/fsharp/pars.fsy"
                             if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedLBrackLess())
                             mkAttributeList [] (rhs parseState 1) 
                   )
//# 1458 "../../../src/fsharp/pars.fsy"
                 : 'attributeList));
//# 5097 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attribute)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1465 "../../../src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 1465 "../../../src/fsharp/pars.fsy"
                 : 'attributeListElements));
//# 5108 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attribute)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1468 "../../../src/fsharp/pars.fsy"
                            _1 @ [_3] 
                   )
//# 1468 "../../../src/fsharp/pars.fsy"
                 : 'attributeListElements));
//# 5121 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1475 "../../../src/fsharp/pars.fsy"
                            let arg = match _3 with None -> mkSynUnit _1.Range | Some e -> e 
                            ({ TypeName=_1; ArgExpr=arg; Target=None; AppliesToGetterAndSetter=false; Range=_1.Range } : SynAttribute) 
                   )
//# 1475 "../../../src/fsharp/pars.fsy"
                 : 'attribute));
//# 5135 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeTarget)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1480 "../../../src/fsharp/pars.fsy"
                            let arg = match _4 with None -> mkSynUnit _2.Range | Some e -> e 
                            ({ TypeName=_2; ArgExpr=arg; Target=_1; AppliesToGetterAndSetter=false; Range=_2.Range } : SynAttribute) 
                   )
//# 1480 "../../../src/fsharp/pars.fsy"
                 : 'attribute));
//# 5150 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeTarget)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1485 "../../../src/fsharp/pars.fsy"
                            let arg = match _6 with None -> mkSynUnit _3.Range | Some e -> e 
                            ({ TypeName=_3; ArgExpr=arg; Target=_1; AppliesToGetterAndSetter=false; Range=_3.Range } : SynAttribute) 
                   )
//# 1485 "../../../src/fsharp/pars.fsy"
                 : 'attribute));
//# 5166 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1492 "../../../src/fsharp/pars.fsy"
                             Some(ident("module", (rhs parseState 1))) 
                   )
//# 1492 "../../../src/fsharp/pars.fsy"
                 : 'attributeTarget));
//# 5177 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1495 "../../../src/fsharp/pars.fsy"
                             Some(ident("type", (rhs parseState 1))) 
                   )
//# 1495 "../../../src/fsharp/pars.fsy"
                 : 'attributeTarget));
//# 5188 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1497 "../../../src/fsharp/pars.fsy"
                                       Some(_1) 
                   )
//# 1497 "../../../src/fsharp/pars.fsy"
                 : 'attributeTarget));
//# 5199 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1501 "../../../src/fsharp/pars.fsy"
                             if _1 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSyntaxError())
                             Some(ident("return", (rhs parseState 1))) 
                   )
//# 1501 "../../../src/fsharp/pars.fsy"
                 : 'attributeTarget));
//# 5211 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1506 "../../../src/fsharp/pars.fsy"
                                           (true, StaticMemberFlags) 
                   )
//# 1506 "../../../src/fsharp/pars.fsy"
                 : 'memberFlags));
//# 5221 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1507 "../../../src/fsharp/pars.fsy"
                                           (false, NonVirtualMemberFlags) 
                   )
//# 1507 "../../../src/fsharp/pars.fsy"
                 : 'memberFlags));
//# 5231 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1508 "../../../src/fsharp/pars.fsy"
                                           (false, OverrideMemberFlags) 
                   )
//# 1508 "../../../src/fsharp/pars.fsy"
                 : 'memberFlags));
//# 5241 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1509 "../../../src/fsharp/pars.fsy"
                                          (false, OverrideMemberFlags) 
                   )
//# 1509 "../../../src/fsharp/pars.fsy"
                 : 'memberFlags));
//# 5251 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconNameAndTyparDecls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1514 "../../../src/fsharp/pars.fsy"
                            let typars, lid, fixity, tpcs1, vis, xmlDoc = _2 
                            let tpcs2 = _3 
                            SynComponentInfo(_1, typars, (tpcs1 @ tpcs2), lid, xmlDoc, fixity, vis, rangeOfLid lid)  
                   )
//# 1514 "../../../src/fsharp/pars.fsy"
                 : 'typeNameInfo));
//# 5266 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1521 "../../../src/fsharp/pars.fsy"
                            _2 :: _3 
                   )
//# 1521 "../../../src/fsharp/pars.fsy"
                 : 'tyconDefnList));
//# 5278 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1523 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 1523 "../../../src/fsharp/pars.fsy"
                 : 'tyconDefnList));
//# 5288 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1528 "../../../src/fsharp/pars.fsy"
                            SynTypeDefn(_1, SynTypeDefnRepr.Simple(SynTypeDefnSimpleRepr.None(_1.Range), _1.Range), [], None, _1.Range) 
                   )
//# 1528 "../../../src/fsharp/pars.fsy"
                 : 'tyconDefn));
//# 5299 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_equals)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1531 "../../../src/fsharp/pars.fsy"
                            if not _2 then (
                                 let (SynComponentInfo(_, _, _, lid, _, _, _, _)) = _1 
                                 // While the spec doesn't allow long idents here, the parser doesn't enforce this, so take one ident
                                 let typeNameId = List.last lid
                                 raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsEqualsMissingInTypeDefinition(typeNameId.ToString()))
                            )
                            let nameRange = rhs parseState 1
                            let (tcDefRepr:SynTypeDefnRepr), members = _3 nameRange
                            let declRange = unionRanges (rhs parseState 1) tcDefRepr.Range
                            let mWhole = (declRange, members) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)    
                            SynTypeDefn(_1, tcDefRepr, members, None, mWhole) 
                   )
//# 1531 "../../../src/fsharp/pars.fsy"
                 : 'tyconDefn));
//# 5322 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynMemberDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1544 "../../../src/fsharp/pars.fsy"
                            let m = (rhs parseState 1, _2) ||> unionRangeWithListBy (fun mem -> mem.Range)
                            SynTypeDefn(_1, SynTypeDefnRepr.ObjectModel(SynTypeDefnKind.Augmentation, [], m), _2, None, m) 
                   )
//# 1544 "../../../src/fsharp/pars.fsy"
                 : 'tyconDefn));
//# 5335 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatterns)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'optAsSpec)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1548 "../../../src/fsharp/pars.fsy"
                            let vis, spats, az = _3, _5, _6
                            let nameRange = rhs parseState 1
                            let (tcDefRepr, members) = _8 nameRange
                            let (SynComponentInfo(_, _, _, lid, _, _, _, _)) = _1 
                            // Gets the XML doc comments prior to the implicit constructor
                            let xmlDoc = grabXmlDoc(parseState, 5)
                            let memberCtorPattern = SynMemberDefn.ImplicitCtor (vis, _2, spats, az, xmlDoc, rangeOfLid lid)
                            let tcDefRepr = 
                              match tcDefRepr with
                              | SynTypeDefnRepr.ObjectModel (k, cspec, m) -> SynTypeDefnRepr.ObjectModel (k, memberCtorPattern :: cspec, m)
                              | _ -> reportParseErrorAt (rhs2 parseState 1 5) (FSComp.SR.parsOnlyClassCanTakeValueArguments()); tcDefRepr
                            let declRange = unionRanges (rhs parseState 1) tcDefRepr.Range
                            let mWhole = (declRange, members) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)
                            
                            SynTypeDefn(_1, tcDefRepr, members, Some memberCtorPattern, mWhole) 
                   )
//# 1548 "../../../src/fsharp/pars.fsy"
                 : 'tyconDefn));
//# 5366 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1576 "../../../src/fsharp/pars.fsy"
                            let m = unionRanges (rhs parseState 1) (match _7 with [] -> (match _5 with [] -> (rhs parseState 4) | _ -> (rhs parseState 5)) | _ -> (rhs parseState 7))
                            (fun nameRange -> _2 nameRange (checkForMultipleAugmentations m (_4 @ _5) _7)) 
                   )
//# 1576 "../../../src/fsharp/pars.fsy"
                 : 'tyconDefnRhsBlock));
//# 5383 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1580 "../../../src/fsharp/pars.fsy"
                            if not _6 then reportParseErrorAt (rhs parseState 6) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition())
                            let m = unionRanges (rhs parseState 1) (match _5 with [] -> (rhs parseState 4) | _ -> (rhs parseState 5))
                            (fun nameRange -> _2 nameRange (checkForMultipleAugmentations m (_4 @ _5) [])) 
                   )
//# 1580 "../../../src/fsharp/pars.fsy"
                 : 'tyconDefnRhsBlock));
//# 5400 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1585 "../../../src/fsharp/pars.fsy"
                            let m = rhs parseState 1
                            (fun nameRange -> _1 nameRange _2) 
                   )
//# 1585 "../../../src/fsharp/pars.fsy"
                 : 'tyconDefnRhsBlock));
//# 5413 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypeDefnSimpleRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1594 "../../../src/fsharp/pars.fsy"
                            let m = _1.Range
                            (fun nameRange augmentation -> SynTypeDefnRepr.Simple (_1, m), augmentation) 
                   )
//# 1594 "../../../src/fsharp/pars.fsy"
                 : 'tyconDefnRhs));
//# 5425 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconClassDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1599 "../../../src/fsharp/pars.fsy"
                            let needsCheck, (kind, decls), mopt = _1 
                            let m = match mopt with 
                                    | None -> (lhs parseState).StartRange // create a zero-width range
                                    | Some m -> m
                            (fun nameRange augmentation -> 
                                if needsCheck && isNil decls then 
                                    reportParseErrorAt nameRange (FSComp.SR.parsEmptyTypeDefinition())
                                SynTypeDefnRepr.ObjectModel (kind, decls, m), augmentation) 
                   )
//# 1599 "../../../src/fsharp/pars.fsy"
                 : 'tyconDefnRhs));
//# 5443 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1610 "../../../src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            let ty, arity = _3
                            (fun nameRange augmentation -> 
                                let valSpfn = SynValSig([], mkSynId m "Invoke", inferredTyparDecls, ty, arity, false, false, PreXmlDoc.Empty, None, None, m) 
                                let invoke = SynMemberDefn.AbstractSlot(valSpfn, AbstractMemberFlags SynMemberKind.Member, m) 
                                if not (isNil augmentation) then raiseParseErrorAt m (FSComp.SR.parsAugmentationsIllegalOnDelegateType())
                                SynTypeDefnRepr.ObjectModel (SynTypeDefnKind.Delegate (ty, arity), [invoke], m), []) 
                   )
//# 1610 "../../../src/fsharp/pars.fsy"
                 : 'tyconDefnRhs));
//# 5460 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlockKindUnspecified)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1622 "../../../src/fsharp/pars.fsy"
                            let needsCheck, decls, mopt = _1 
                            needsCheck, (SynTypeDefnKind.Unspecified, decls), mopt 
                   )
//# 1622 "../../../src/fsharp/pars.fsy"
                 : 'tyconClassDefn));
//# 5472 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1626 "../../../src/fsharp/pars.fsy"
                            false, (_1, _2), Some (rhs2 parseState 1 3) 
                   )
//# 1626 "../../../src/fsharp/pars.fsy"
                 : 'tyconClassDefn));
//# 5484 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1629 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedClassInterfaceOrStruct())
                            let m = (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range)
                            false, (_1, _2), Some(m) 
                   )
//# 1629 "../../../src/fsharp/pars.fsy"
                 : 'tyconClassDefn));
//# 5499 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1634 "../../../src/fsharp/pars.fsy"
                            // silent recovery 
                            false, (_1, []), Some (rhs2 parseState 1 3) 
                   )
//# 1634 "../../../src/fsharp/pars.fsy"
                 : 'tyconClassDefn));
//# 5511 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1641 "../../../src/fsharp/pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition())
                            let mopt =
                                match _2 with
                                | _ :: _ -> Some( (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range) )
                                | _ -> None
                            false, _2, mopt 
                   )
//# 1641 "../../../src/fsharp/pars.fsy"
                 : 'classDefnBlockKindUnspecified));
//# 5528 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1649 "../../../src/fsharp/pars.fsy"
                            let mopt =
                                match _2 with
                                | _ :: _ -> Some( (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range) )
                                | _ -> None
                            true, _2, mopt 
                   )
//# 1649 "../../../src/fsharp/pars.fsy"
                 : 'classDefnBlockKindUnspecified));
//# 5544 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1659 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition())
                             _2 
                   )
//# 1659 "../../../src/fsharp/pars.fsy"
                 : 'classDefnBlock));
//# 5557 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1663 "../../../src/fsharp/pars.fsy"
                             _2 
                   )
//# 1663 "../../../src/fsharp/pars.fsy"
                 : 'classDefnBlock));
//# 5569 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1666 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 1666 "../../../src/fsharp/pars.fsy"
                 : 'classDefnBlock));
//# 5580 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembersAtLeastOne)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1672 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 1672 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMembers));
//# 5591 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1676 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 1676 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMembers));
//# 5602 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1679 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 1679 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMembers));
//# 5612 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1685 "../../../src/fsharp/pars.fsy"
                            match _1, _3 with
                            | [ SynMemberDefn.Interface (_, Some [], m) ], nextMember :: _ ->
                                warning(IndentationProblem(FSComp.SR.lexfltTokenIsOffsideOfContextStartedEarlier(warningStringOfPos m.Start), nextMember.Range))
                            | _ -> ()
                            _1 @ _3 
                   )
//# 1685 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMembersAtLeastOne));
//# 5629 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1695 "../../../src/fsharp/pars.fsy"
                            _2  
                   )
//# 1695 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMemberGetSet));
//# 5640 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1698 "../../../src/fsharp/pars.fsy"
                            _2  
                   )
//# 1698 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMemberGetSet));
//# 5651 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1701 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedWith())
                            _2  
                   )
//# 1701 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMemberGetSet));
//# 5663 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1707 "../../../src/fsharp/pars.fsy"
                            [_1]  
                   )
//# 1707 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMemberGetSetElements));
//# 5674 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1709 "../../../src/fsharp/pars.fsy"
                            [_1;_3] 
                   )
//# 1709 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMemberGetSetElements));
//# 5686 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1713 "../../../src/fsharp/pars.fsy"
                            let mRhs = (_6 : SynExpr).Range 
                            (_1, _2, _3, _4, _6, mRhs) 
                   )
//# 1713 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMemberGetSetElement));
//# 5702 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1721 "../../../src/fsharp/pars.fsy"
                            let mRhs = _5.Range 
                            let optReturnType = _3 
                            let bindingBuilder, mBindLhs = _2 
                            (fun vis memFlagsBuilder attrs rangeStart ->
                                 let memberFlags = Some (memFlagsBuilder SynMemberKind.Member)
                                 let mWholeBindLhs = (mBindLhs, attrs) ||> unionRangeWithListBy (fun (a: SynAttributeList) -> a.Range)
                                 let binding = bindingBuilder (vis, _1, false, mWholeBindLhs, DebugPointAtBinding.NoneAtInvisible, optReturnType, _5, mRhs, [], attrs, memberFlags)
                                 let memberRange = unionRanges rangeStart mRhs
                                 [ SynMemberDefn.Member (binding, memberRange) ]) 
                   )
//# 1721 "../../../src/fsharp/pars.fsy"
                 : 'memberCore));
//# 5724 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSet)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1733 "../../../src/fsharp/pars.fsy"
                            let mWhole = (rhs parseState 2, _4) ||> unionRangeWithListBy (fun (_, _, _, _, _, m2) -> m2) 
                            let propertyNameBindingBuilder, _ = _2 
                            let optPropertyType = _3 
                            let isMutable = false
                            (fun visNoLongerUsed memFlagsBuilder attrs rangeStart -> 
                                  let hasGet = ref false
                                  let hasSet = ref false
                                  // Iterate over 1 or 2 'get'/'set' entries
                                  _4 |> List.choose (fun (optInline, optAttrs, (bindingBuilder, mBindLhs), optReturnType, expr, exprm) ->
                                        let optInline = _1 || optInline 
                                        // optional attributes are only applied to getters and setters
                                        // the "top level" attrs will be applied to both
                                        let optAttrs =
                                            optAttrs |> List.map (fun attrList ->
                                                { attrList with Attributes = attrList.Attributes |> List.map (fun a -> { a with AppliesToGetterAndSetter = true } ) })
                                        let attrs = attrs @ optAttrs
                                        
                                        let binding = bindingBuilder (visNoLongerUsed, optInline, isMutable, mBindLhs, DebugPointAtBinding.NoneAtInvisible, optReturnType, expr, exprm, [], attrs, Some (memFlagsBuilder SynMemberKind.Member))
                                        let (SynBinding (vis, _, isInline, _, attrs, doc, valSynData, pv, _, _, mBindLhs, spBind)) = binding 
                                        let memberKind = 
                                              let getset = 
                                                    let rec go p = 
                                                        match p with 
                                                        | SynPat.LongIdent (LongIdentWithDots([id], _), _, _, _, _, _) ->  id.idText
                                                        | SynPat.Named (_, nm, _, _, _) ->  nm.idText
                                                        | SynPat.Typed (p, _, _) ->  go p
                                                        | SynPat.Attrib (p, _, _) ->  go p
                                                        | _ -> raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                                    go pv 
                                              if getset = "get" then
                                                  if !hasGet then 
                                                      reportParseErrorAt mBindLhs (FSComp.SR.parsGetAndOrSetRequired())
                                                      None
                                                  else
                                                      hasGet := true
                                                      Some SynMemberKind.PropertyGet
                                              else if getset = "set" then
                                                  if !hasSet then 
                                                      reportParseErrorAt mBindLhs (FSComp.SR.parsGetAndOrSetRequired())
                                                      None
                                                  else
                                                      hasSet := true
                                                      Some SynMemberKind.PropertySet
                                              else
                                                  raiseParseErrorAt mBindLhs (FSComp.SR.parsGetAndOrSetRequired())
                                        match memberKind with
                                        | None -> None
                                        | Some memberKind ->
                                        // REVIEW: It's hard not to ignore the optPropertyType type annotation for 'set' properties. To apply it,
                                        // we should apply it to the last argument, but at this point we've already pushed the patterns that 
                                        // make up the arguments onto the RHS. So we just always give a warning. 
                                        begin match optPropertyType with 
                                        | Some _ -> errorR(Error(FSComp.SR.parsTypeAnnotationsOnGetSet(), mBindLhs))
                                        | None -> ()
                                        end
                                        
                                        let optReturnType = 
                                            match (memberKind, optReturnType) with 
                                            | SynMemberKind.PropertySet, _ -> optReturnType
                                            | _, None -> optPropertyType
                                            | _ -> optReturnType 
                                        // REDO with the correct member kind 
                                        let binding = bindingBuilder(vis, isInline, isMutable, mBindLhs, DebugPointAtBinding.NoneAtInvisible, optReturnType, expr, exprm, [], attrs, Some(memFlagsBuilder memberKind)) 
                                        let (SynBinding (vis, _, isInline, _, attrs, doc, valSynData, pv, rhsRetInfo, rhsExpr, mBindLhs, spBind)) = binding
                                        let mWholeBindLhs = (mBindLhs, attrs) ||> unionRangeWithListBy (fun (a: SynAttributeList) -> a.Range)
                                     
                                        let (SynValData(_, valSynInfo, _)) = valSynData 
                                        // Setters have all arguments tupled in their internal TAST form, though they don't appear to be 
                                        // tupled from the syntax
                                        let memFlags : SynMemberFlags = memFlagsBuilder memberKind
                                        let valSynInfo = 
                                            let adjustValueArg valueArg = 
                                                match valueArg with
                                                | [_] -> valueArg
                                                | _ -> SynInfo.unnamedTopArg
                                            match memberKind, valSynInfo, memFlags.IsInstance with 
                                            | SynMemberKind.PropertyGet, SynValInfo ([], _ret), false
                                            | SynMemberKind.PropertyGet, SynValInfo ([_], _ret), true  -> 
                                                raiseParseErrorAt mWholeBindLhs (FSComp.SR.parsGetterMustHaveAtLeastOneArgument()) 
                                            | SynMemberKind.PropertyGet, SynValInfo (thisArg :: indexOrUnitArgs :: rest, ret), true  -> 
                                                if not rest.IsEmpty then
                                                    reportParseErrorAt mWholeBindLhs (FSComp.SR.parsGetterAtMostOneArgument ())
                                                SynValInfo ([thisArg; indexOrUnitArgs], ret)
                                            | SynMemberKind.PropertyGet, SynValInfo (indexOrUnitArgs :: rest, ret), false ->
                                                if not rest.IsEmpty then
                                                    reportParseErrorAt mWholeBindLhs (FSComp.SR.parsGetterAtMostOneArgument ())
                                                SynValInfo ([indexOrUnitArgs], ret)
                                            | SynMemberKind.PropertySet, SynValInfo ([thisArg;valueArg], ret), true  -> 
                                                SynValInfo ([thisArg; adjustValueArg valueArg], ret)
                                            | SynMemberKind.PropertySet, SynValInfo (thisArg :: indexArgs :: valueArg :: rest, ret), true  -> 
                                                if not rest.IsEmpty then
                                                    reportParseErrorAt mWholeBindLhs (FSComp.SR.parsSetterAtMostTwoArguments ())
                                                SynValInfo ([thisArg; indexArgs @ adjustValueArg valueArg], ret)
                                            | SynMemberKind.PropertySet, SynValInfo ([valueArg], ret), false -> 
                                                SynValInfo ([adjustValueArg valueArg], ret)
                                            | SynMemberKind.PropertySet, SynValInfo (indexArgs :: valueArg :: rest, ret), _ -> 
                                                if not rest.IsEmpty then
                                                    reportParseErrorAt mWholeBindLhs (FSComp.SR.parsSetterAtMostTwoArguments ())
                                                SynValInfo ([indexArgs @ adjustValueArg valueArg], ret)
                                            | _ -> 
                                                // should be unreachable, cover just in case
                                                raiseParseErrorAt mWholeBindLhs (FSComp.SR.parsInvalidProperty ())
                                        let valSynData = SynValData(Some(memFlags), valSynInfo, None) 
                                        // Fold together the information from the first lambda pattern and the get/set binding
                                        // This uses the 'this' variable from the first and the patterns for the get/set binding,
                                        // replacing the get/set identifier. A little gross. 
                                        let bindingPatAdjusted, xmlDocAdjusted = 
                                            let bindingOuter = propertyNameBindingBuilder(vis, optInline, isMutable, mWholeBindLhs, spBind, optReturnType, expr, exprm, [], attrs, Some(memFlagsBuilder SynMemberKind.Member))
                                            let (SynBinding (_, _, _, _, _, doc2, _, bindingPatOuter, _, _, _, _)) = bindingOuter 
                                        
                                            let lidOuter, lidVisOuter = 
                                                match bindingPatOuter with 
                                                | SynPat.LongIdent (lid, None, None, SynArgPats.Pats [], lidVisOuter, m) ->  lid, lidVisOuter
                                                | SynPat.Named (_, id, _, visOuter, m) -> LongIdentWithDots([id], []), visOuter
                                                | p -> raiseParseErrorAt mWholeBindLhs (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                            // Merge the visibility from the outer point with the inner point, e.g.
                                            //    member <VIS1>  this.Size with <VIS2> get ()      = m_size
                                            
                                            let mergeLidVisOuter lidVisInner =
                                                match lidVisInner, lidVisOuter with 
                                                | None, None -> None
                                                | Some lidVisInner, None | None, Some lidVisInner -> Some lidVisInner
                                                | Some _, Some _ ->  
                                                    errorR(Error(FSComp.SR.parsMultipleAccessibilitiesForGetSet(), mWholeBindLhs))
                                                    lidVisInner
                                        
                                            // Replace the "get" or the "set" with the right name
                                            let rec go p = 
                                                match p with 
                                                | SynPat.LongIdent (LongIdentWithDots([id], _), _, tyargs, SynArgPats.Pats args, lidVisInner, m) ->  
                                                    // Setters have all arguments tupled in their internal form, though they don't 
                                                    // appear to be tupled from the syntax. Somewhat unfortunate
                                                    let args = 
                                                        if id.idText = "set" then 
                                                            match args with 
                                                            | [SynPat.Paren(SynPat.Tuple (false, indexPats, _), indexPatRange);valuePat] when id.idText = "set" -> 
                                                                [SynPat.Tuple(false, indexPats@[valuePat], unionRanges indexPatRange valuePat.Range)] 
                                                            | [indexPat;valuePat] -> 
                                                                [SynPat.Tuple(false, args, unionRanges indexPat.Range valuePat.Range)] 
                                                            | [valuePat] -> 
                                                                [valuePat] 
                                                            | _ -> 
                                                                raiseParseErrorAt m (FSComp.SR.parsSetSyntax())
                                                        else 
                                                            args
                     //                               let idTool : Ident list = lidOuter |> List.map (fun (li:Ident) -> ident(li.idText, id.idRange)) |> List.rev |> List.take 1
                                                    SynPat.LongIdent (lidOuter, Some(id), tyargs, SynArgPats.Pats args, mergeLidVisOuter lidVisInner, m)
                                                | SynPat.Named (_, nm, _, lidVisInner, m) ->  SynPat.LongIdent (lidOuter, None, None, SynArgPats.Pats [], mergeLidVisOuter lidVisInner, m)
                                                | SynPat.Typed (p, ty, m) ->  SynPat.Typed(go p, ty, m)
                                                | SynPat.Attrib (p, attribs, m) ->  SynPat.Attrib(go p, attribs, m)
                                                | SynPat.Wild(m) ->  SynPat.Wild(m)
                                                | _ -> raiseParseErrorAt mWholeBindLhs (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                            go pv, PreXmlDoc.Merge doc2 doc
                                        let binding = SynBinding (vis, SynBindingKind.Normal, isInline, isMutable, attrs, xmlDocAdjusted, valSynData, bindingPatAdjusted, rhsRetInfo, rhsExpr, mWholeBindLhs, spBind)
                                        let memberRange = unionRanges rangeStart mWhole
                                        Some (SynMemberDefn.Member (binding, memberRange))))
                            
                   )
//# 1733 "../../../src/fsharp/pars.fsy"
                 : 'memberCore));
//# 5894 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1919 "../../../src/fsharp/pars.fsy"
                                   
                   )
//# 1919 "../../../src/fsharp/pars.fsy"
                 : 'abstractMemberFlags));
//# 5904 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1920 "../../../src/fsharp/pars.fsy"
                                          
                   )
//# 1920 "../../../src/fsharp/pars.fsy"
                 : 'abstractMemberFlags));
//# 5914 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1926 "../../../src/fsharp/pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            [mkClassMemberLocalBindings(false, None, _1, _2, _3)] 
                   )
//# 1926 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 5928 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1930 "../../../src/fsharp/pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            [mkClassMemberLocalBindings(true, Some (rhs parseState 3), _1, _2, _4)] 
                   )
//# 1930 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 5942 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1934 "../../../src/fsharp/pars.fsy"
                            let rangeStart = rhs parseState 1
                            if Option.isSome _2 then
                                errorR (Error (FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier (), rhs parseState 2))
                            let _, flags = _3
                            _4 _2 flags _1 rangeStart 
                   )
//# 1934 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 5961 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_interfaceImplDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1941 "../../../src/fsharp/pars.fsy"
                             if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesAreNotPermittedOnInterfaceImplementations(), rhs parseState 1))
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsInterfacesHaveSameVisibilityAsEnclosingType(), rhs parseState 3))
                             let members = Option.map fst _5
                             let mWhole =
                                 match _5 with
                                 | None -> rhs2 parseState 1 4
                                 | Some (_, m) -> unionRanges (rhs2 parseState 1 4) m
                             [ SynMemberDefn.Interface (_4, members, mWhole) ] 
                   )
//# 1941 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 5983 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'abstractMemberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1951 "../../../src/fsharp/pars.fsy"
                            let ty, arity = _8
                            let isInline, doc, id, explicitValTyparDecls = _4, grabXmlDoc(parseState, 3), _5, _6
                            let getSetRangeOpt, getSet = _9
                            let getSetAdjuster arity = match arity, getSet with SynValInfo([], _), SynMemberKind.Member -> SynMemberKind.PropertyGet | _ -> getSet
                            let wholeRange = 
                                let m = rhs parseState 1
                                match getSetRangeOpt with 
                                | None -> unionRanges m ty.Range
                                | Some m2 -> unionRanges m m2
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsAccessibilityModsIllegalForAbstract(), wholeRange))
                            let valSpfn = SynValSig(_1, id, explicitValTyparDecls, ty, arity, isInline, false, doc, None, None, wholeRange)
                            [ SynMemberDefn.AbstractSlot(valSpfn, AbstractMemberFlags (getSetAdjuster arity), wholeRange) ] 
                   )
//# 1951 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 6013 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'inheritsDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1965 "../../../src/fsharp/pars.fsy"
                             if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalOnInherit(), rhs parseState 1))
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityIllegalOnInherit(), rhs parseState 1))
                             [ _3 ] 
                   )
//# 1965 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 6028 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'valDefnDecl)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1970 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let rangeStart = rhs parseState 1
                             _3 rangeStart _1 false 
                   )
//# 1970 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 6044 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'valDefnDecl)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1975 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let rangeStart = rhs parseState 1
                             _4 rangeStart _1 true  
                   )
//# 1975 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 6060 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'autoPropsDefnDecl)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1980 "../../../src/fsharp/pars.fsy"
                            let rangeStart = rhs parseState 1 
                            if Option.isSome _2 then
                                errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            let isStatic, flags = _3
                            _4 _1 isStatic flags rangeStart 
                   )
//# 1980 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 6079 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optAsSpec)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1987 "../../../src/fsharp/pars.fsy"
                             let mWholeBindLhs = rhs2 parseState 1 (if Option.isSome _5 then 5 else 4)
                             let m = unionRanges mWholeBindLhs _7.Range 
                             let expr = _7
                             let valSynData = SynValData (Some CtorMemberFlags, SynValInfo([SynInfo.InferSynArgInfoFromPat _4], SynInfo.unnamedRetVal), _5) 
                             let vis = _2 
                             let declPat = SynPat.LongIdent (LongIdentWithDots([mkSynId (rhs parseState 3) "new"], []), None, Some noInferredTypars, SynArgPats.Pats [_4], vis, rhs parseState 3)
                             // Check that 'SynPatForConstructorDecl' matches this correctly
                             assert (match declPat with SynPatForConstructorDecl _ -> true | _ -> false)
                             [ SynMemberDefn.Member(SynBinding (None, SynBindingKind.Normal, false, false, _1, grabXmlDoc(parseState, 3), valSynData, declPat, None, expr, mWholeBindLhs, DebugPointAtBinding.NoneAtInvisible), m) ] 
                   )
//# 1987 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 6103 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1998 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             [ SynMemberDefn.NestedType(_5, None, rhs2 parseState 1 5) ] 
                   )
//# 1998 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 6118 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2005 "../../../src/fsharp/pars.fsy"
                             let mRhs = rhs2 parseState 4 6
                             let doc = grabXmlDoc(parseState, 4)
                             let mValDecl = rhs2 parseState 1 6
                             (fun rangeStart attribs isStatic -> 
                                 let mValDecl = unionRanges rangeStart mValDecl
                                 let fld = SynField(attribs, isStatic, Some _4, _6, _2, doc, _3, mRhs)
                                 [ SynMemberDefn.ValField(fld, mValDecl) ]) 
                   )
//# 2005 "../../../src/fsharp/pars.fsy"
                 : 'valDefnDecl));
//# 6138 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typ)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2017 "../../../src/fsharp/pars.fsy"
                            let doc = grabXmlDoc(parseState, 5)
                            let mGetSetOpt, getSet = _8
                            if _2 then
                                errorR (Error (FSComp.SR.parsMutableOnAutoPropertyShouldBeGetSet (), rhs parseState 3))
                            (fun attribs isStatic flags rangeStart ->
                                let memberRange = unionRanges rangeStart _7.Range
                                [ SynMemberDefn.AutoProperty(attribs, isStatic, _4, _5, getSet, flags, doc, _3, _7, mGetSetOpt, memberRange) ]) 
                   )
//# 2017 "../../../src/fsharp/pars.fsy"
                 : 'autoPropsDefnDecl));
//# 6160 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2028 "../../../src/fsharp/pars.fsy"
                                        None 
                   )
//# 2028 "../../../src/fsharp/pars.fsy"
                 : 'opt_typ));
//# 6170 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2029 "../../../src/fsharp/pars.fsy"
                                      Some _2 
                   )
//# 2029 "../../../src/fsharp/pars.fsy"
                 : 'opt_typ));
//# 6181 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2034 "../../../src/fsharp/pars.fsy"
                            if not (parseState.LexBuffer.SupportsFeature LanguageFeature.SingleUnderscorePattern) then
                               raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedSymbolDot())
                            let (LongIdentWithDots(lid, dotms)) = _3
                            (None, LongIdentWithDots(ident("_", rhs parseState 1)::lid, rhs parseState 2::dotms)) 
                   )
//# 2034 "../../../src/fsharp/pars.fsy"
                 : 'atomicPatternLongIdent));
//# 6195 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2040 "../../../src/fsharp/pars.fsy"
                            let (LongIdentWithDots(lid, dotms)) = _3
                            (None, LongIdentWithDots(ident(MangledGlobalName, rhs parseState 1) :: lid, rhs parseState 2 :: dotms)) 
                   )
//# 2040 "../../../src/fsharp/pars.fsy"
                 : 'atomicPatternLongIdent));
//# 6207 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2044 "../../../src/fsharp/pars.fsy"
                            (None, _1) 
                   )
//# 2044 "../../../src/fsharp/pars.fsy"
                 : 'atomicPatternLongIdent));
//# 6218 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2047 "../../../src/fsharp/pars.fsy"
                            if not (parseState.LexBuffer.SupportsFeature LanguageFeature.SingleUnderscorePattern) then
                               raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedSymbolDot())
                            let (LongIdentWithDots(lid, dotms)) = _4
                            (Some(_1), LongIdentWithDots(ident("_", rhs parseState 2)::lid, rhs parseState 3::dotms)) 
                   )
//# 2047 "../../../src/fsharp/pars.fsy"
                 : 'atomicPatternLongIdent));
//# 6233 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2053 "../../../src/fsharp/pars.fsy"
                            (Some(_1), _2) 
                   )
//# 2053 "../../../src/fsharp/pars.fsy"
                 : 'atomicPatternLongIdent));
//# 6245 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2058 "../../../src/fsharp/pars.fsy"
                            None 
                   )
//# 2058 "../../../src/fsharp/pars.fsy"
                 : 'opt_access));
//# 6255 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2061 "../../../src/fsharp/pars.fsy"
                            Some(_1) 
                   )
//# 2061 "../../../src/fsharp/pars.fsy"
                 : 'opt_access));
//# 6266 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2066 "../../../src/fsharp/pars.fsy"
                            SynAccess.Private 
                   )
//# 2066 "../../../src/fsharp/pars.fsy"
                 : 'access));
//# 6276 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2069 "../../../src/fsharp/pars.fsy"
                            SynAccess.Public 
                   )
//# 2069 "../../../src/fsharp/pars.fsy"
                 : 'access));
//# 6286 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2072 "../../../src/fsharp/pars.fsy"
                            SynAccess.Internal 
                   )
//# 2072 "../../../src/fsharp/pars.fsy"
                 : 'access));
//# 6296 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2077 "../../../src/fsharp/pars.fsy"
                            Some(_1) 
                   )
//# 2077 "../../../src/fsharp/pars.fsy"
                 : 'opt_declVisibility));
//# 6307 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2080 "../../../src/fsharp/pars.fsy"
                            None 
                   )
//# 2080 "../../../src/fsharp/pars.fsy"
                 : 'opt_declVisibility));
//# 6317 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2085 "../../../src/fsharp/pars.fsy"
                            let members = _2
                            let m = (rhs parseState 1, members) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)
                            Some (members, m) 
                   )
//# 2085 "../../../src/fsharp/pars.fsy"
                 : 'opt_interfaceImplDefn));
//# 6331 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2090 "../../../src/fsharp/pars.fsy"
                            Some ([], rhs parseState 1) 
                   )
//# 2090 "../../../src/fsharp/pars.fsy"
                 : 'opt_interfaceImplDefn));
//# 6341 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2093 "../../../src/fsharp/pars.fsy"
                            None 
                   )
//# 2093 "../../../src/fsharp/pars.fsy"
                 : 'opt_interfaceImplDefn));
//# 6351 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2098 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 2098 "../../../src/fsharp/pars.fsy"
                 : 'opt_classDefn));
//# 6363 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2101 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 2101 "../../../src/fsharp/pars.fsy"
                 : 'opt_classDefn));
//# 6373 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optBaseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2107 "../../../src/fsharp/pars.fsy"
                            let mDecl = unionRanges (rhs parseState 1) ((_2): SynType).Range 
                            SynMemberDefn.Inherit(_2, _3, mDecl) 
                   )
//# 2107 "../../../src/fsharp/pars.fsy"
                 : 'inheritsDefn));
//# 6386 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optBaseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2111 "../../../src/fsharp/pars.fsy"
                            let mDecl = unionRanges (rhs parseState 1) _4.Range 
                            SynMemberDefn.ImplicitInherit(_2, _4, _5, mDecl) 
                   )
//# 2111 "../../../src/fsharp/pars.fsy"
                 : 'inheritsDefn));
//# 6401 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2115 "../../../src/fsharp/pars.fsy"
                            let mDecl = (rhs parseState 1)
                            if not _2 then errorR(Error(FSComp.SR.parsTypeNameCannotBeEmpty(), mDecl))
                            SynMemberDefn.Inherit(SynType.LongIdent(LongIdentWithDots([], [])), None, mDecl) 
                   )
//# 2115 "../../../src/fsharp/pars.fsy"
                 : 'inheritsDefn));
//# 6414 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'asSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2121 "../../../src/fsharp/pars.fsy"
                             Some(_1) 
                   )
//# 2121 "../../../src/fsharp/pars.fsy"
                 : 'optAsSpec));
//# 6425 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2124 "../../../src/fsharp/pars.fsy"
                             None 
                   )
//# 2124 "../../../src/fsharp/pars.fsy"
                 : 'optAsSpec));
//# 6435 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2128 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 2128 "../../../src/fsharp/pars.fsy"
                 : 'asSpec));
//# 6446 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'baseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2132 "../../../src/fsharp/pars.fsy"
                            Some(_1) 
                   )
//# 2132 "../../../src/fsharp/pars.fsy"
                 : 'optBaseSpec));
//# 6457 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2135 "../../../src/fsharp/pars.fsy"
                            None 
                   )
//# 2135 "../../../src/fsharp/pars.fsy"
                 : 'optBaseSpec));
//# 6467 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2139 "../../../src/fsharp/pars.fsy"
                             if (_2).idText <> "base" then 
                                  errorR(Error(FSComp.SR.parsInheritDeclarationsCannotHaveAsBindings(), rhs2 parseState 1 2)) 
                             ident("base", rhs parseState 2) 
                   )
//# 2139 "../../../src/fsharp/pars.fsy"
                 : 'baseSpec));
//# 6480 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2144 "../../../src/fsharp/pars.fsy"
                             errorR(Error(FSComp.SR.parsInheritDeclarationsCannotHaveAsBindings(), rhs2 parseState 1 2)) 
                             ident("base", rhs parseState 2) 
                   )
//# 2144 "../../../src/fsharp/pars.fsy"
                 : 'baseSpec));
//# 6491 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2151 "../../../src/fsharp/pars.fsy"
                             _2 
                   )
//# 2151 "../../../src/fsharp/pars.fsy"
                 : 'objectImplementationBlock));
//# 6503 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2154 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileObjectMembers())
                             _2 
                   )
//# 2154 "../../../src/fsharp/pars.fsy"
                 : 'objectImplementationBlock));
//# 6516 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2158 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 2158 "../../../src/fsharp/pars.fsy"
                 : 'objectImplementationBlock));
//# 6527 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2164 "../../../src/fsharp/pars.fsy"
                             _1 @  _3 
                   )
//# 2164 "../../../src/fsharp/pars.fsy"
                 : 'objectImplementationMembers));
//# 6540 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2167 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 2167 "../../../src/fsharp/pars.fsy"
                 : 'objectImplementationMembers));
//# 6552 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2173 "../../../src/fsharp/pars.fsy"
                            let rangeStart = rhs parseState 1
                            _3 None OverrideMemberFlags _1 rangeStart 
                   )
//# 2173 "../../../src/fsharp/pars.fsy"
                 : 'objectImplementationMember));
//# 6567 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'autoPropsDefnDecl)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2177 "../../../src/fsharp/pars.fsy"
                            let rangeStart = rhs parseState 1
                            _3 _1 false OverrideMemberFlags rangeStart 
                   )
//# 2177 "../../../src/fsharp/pars.fsy"
                 : 'objectImplementationMember));
//# 6582 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2181 "../../../src/fsharp/pars.fsy"
                             [] 
                   )
//# 2181 "../../../src/fsharp/pars.fsy"
                 : 'objectImplementationMember));
//# 6594 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2184 "../../../src/fsharp/pars.fsy"
                             [] 
                   )
//# 2184 "../../../src/fsharp/pars.fsy"
                 : 'objectImplementationMember));
//# 6607 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2188 "../../../src/fsharp/pars.fsy"
                                    
                   )
//# 2188 "../../../src/fsharp/pars.fsy"
                 : 'memberOrOverride));
//# 6617 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2189 "../../../src/fsharp/pars.fsy"
                                      
                   )
//# 2189 "../../../src/fsharp/pars.fsy"
                 : 'memberOrOverride));
//# 6627 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : string * SynStringKind * ParseHelpers.LexerContinuation)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2197 "../../../src/fsharp/pars.fsy"
                            errorR(Error(FSComp.SR.parsUnexpectedQuotationOperatorInTypeAliasDidYouMeanVerbatimString(), rhs parseState 4)) 
                            SynTypeDefnSimpleRepr.TypeAbbrev (ParserDetail.ErrorRecovery, SynType.LongIdent(_3), unionRanges (rhs parseState 1) _3.Range)  
                   )
//# 2197 "../../../src/fsharp/pars.fsy"
                 : SynTypeDefnSimpleRepr));
//# 6644 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2202 "../../../src/fsharp/pars.fsy"
                            if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalHere(), rhs parseState 1))
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsTypeAbbreviationsCannotHaveVisibilityDeclarations(), rhs parseState 2))
                            SynTypeDefnSimpleRepr.TypeAbbrev (ParserDetail.Ok, _3, unionRanges (rhs parseState 1) _3.Range) 
                   )
//# 2202 "../../../src/fsharp/pars.fsy"
                 : SynTypeDefnSimpleRepr));
//# 6659 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Choice<SynEnumCase, SynUnionCase> list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2208 "../../../src/fsharp/pars.fsy"
                            if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalHere(), rhs parseState 1))
                            let rangesOf3 = _3 |> List.map (function |Choice1Of2(ec)->ec.Range | Choice2Of2(uc)->uc.Range)
                            let mWhole = (rhs2 parseState 1 2, rangesOf3) ||> List.fold unionRanges 
                            if _3 |> List.exists (function Choice1Of2 _ -> true | _ -> false) then (
                                if Option.isSome _2 then errorR(Error(FSComp.SR.parsEnumTypesCannotHaveVisibilityDeclarations(), rhs parseState 2));
                                SynTypeDefnSimpleRepr.Enum (_3 |> List.choose (function 
                                                                   | Choice1Of2 data ->  
                                                                     Some(data) 
                                                                   | Choice2Of2(SynUnionCase(_, _, _, _, _, m)) -> 
                                                                     errorR(Error(FSComp.SR.parsAllEnumFieldsRequireValues(), m)); None),
                                                mWhole)
                            ) else 
                                SynTypeDefnSimpleRepr.Union (_2,
                                                 _3 |> List.choose (function Choice2Of2 data -> Some(data) | Choice1Of2 _ -> failwith "huh?"),
                                                 mWhole) 
                   )
//# 2208 "../../../src/fsharp/pars.fsy"
                 : SynTypeDefnSimpleRepr));
//# 6686 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2226 "../../../src/fsharp/pars.fsy"
                            if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalHere(), rhs parseState 1))
                            SynTypeDefnSimpleRepr.Record (_2, _3, lhs parseState) 
                   )
//# 2226 "../../../src/fsharp/pars.fsy"
                 : SynTypeDefnSimpleRepr));
//# 6700 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'string)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2231 "../../../src/fsharp/pars.fsy"
                            if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalHere(), rhs parseState 1))
                            let lhsm = lhs parseState
                            libraryOnlyError lhsm
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsInlineAssemblyCannotHaveVisibilityDeclarations(), rhs parseState 2))
                            let s, _ = _5
                            let ilType = ParseAssemblyCodeType s parseState.LexBuffer.SupportsFeature (rhs parseState 5)
                            SynTypeDefnSimpleRepr.LibraryOnlyILAssembly (box ilType, lhsm)  
                   )
//# 2231 "../../../src/fsharp/pars.fsy"
                 : SynTypeDefnSimpleRepr));
//# 6720 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2243 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 2243 "../../../src/fsharp/pars.fsy"
                 : 'braceFieldDeclList));
//# 6733 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2246 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()) 
                            _2 
                   )
//# 2246 "../../../src/fsharp/pars.fsy"
                 : 'braceFieldDeclList));
//# 6747 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2250 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 2250 "../../../src/fsharp/pars.fsy"
                 : 'braceFieldDeclList));
//# 6759 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceBarFieldDeclListCore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2254 "../../../src/fsharp/pars.fsy"
                               _2, true 
                   )
//# 2254 "../../../src/fsharp/pars.fsy"
                 : 'anonRecdType));
//# 6770 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceBarFieldDeclListCore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2256 "../../../src/fsharp/pars.fsy"
                               _1, false 
                   )
//# 2256 "../../../src/fsharp/pars.fsy"
                 : 'anonRecdType));
//# 6781 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bar_rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2261 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 2261 "../../../src/fsharp/pars.fsy"
                 : 'braceBarFieldDeclListCore));
//# 6793 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2264 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBraceBar()) 
                            _2 
                   )
//# 2264 "../../../src/fsharp/pars.fsy"
                 : 'braceBarFieldDeclListCore));
//# 6806 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bar_rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2268 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 2268 "../../../src/fsharp/pars.fsy"
                 : 'braceBarFieldDeclListCore));
//# 6817 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2272 "../../../src/fsharp/pars.fsy"
                            SynTypeDefnKind.Class 
                   )
//# 2272 "../../../src/fsharp/pars.fsy"
                 : 'classOrInterfaceOrStruct));
//# 6827 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2275 "../../../src/fsharp/pars.fsy"
                            SynTypeDefnKind.Interface 
                   )
//# 2275 "../../../src/fsharp/pars.fsy"
                 : 'classOrInterfaceOrStruct));
//# 6837 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2278 "../../../src/fsharp/pars.fsy"
                            SynTypeDefnKind.Struct 
                   )
//# 2278 "../../../src/fsharp/pars.fsy"
                 : 'classOrInterfaceOrStruct));
//# 6847 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2281 "../../../src/fsharp/pars.fsy"
                                     
                   )
//# 2281 "../../../src/fsharp/pars.fsy"
                 : 'interfaceMember));
//# 6857 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2282 "../../../src/fsharp/pars.fsy"
                                                
                   )
//# 2282 "../../../src/fsharp/pars.fsy"
                 : 'interfaceMember));
//# 6867 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2286 "../../../src/fsharp/pars.fsy"
                             [], _2.Lid, false, [], _1, grabXmlDoc(parseState, 2) 
                   )
//# 2286 "../../../src/fsharp/pars.fsy"
                 : 'tyconNameAndTyparDecls));
//# 6879 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'prefixTyparDecls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2289 "../../../src/fsharp/pars.fsy"
                             _2, _3.Lid, false, [], _1, grabXmlDoc(parseState, 2) 
                   )
//# 2289 "../../../src/fsharp/pars.fsy"
                 : 'tyconNameAndTyparDecls));
//# 6892 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'postfixTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2292 "../../../src/fsharp/pars.fsy"
                             let tps, tpcs = _3 
                             tps, _2.Lid, true, tpcs, _1, grabXmlDoc(parseState, 2) 
                   )
//# 2292 "../../../src/fsharp/pars.fsy"
                 : 'tyconNameAndTyparDecls));
//# 6906 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2296 "../../../src/fsharp/pars.fsy"
                                 [ SynTyparDecl([], _1) ] 
                   )
//# 2296 "../../../src/fsharp/pars.fsy"
                 : 'prefixTyparDecls));
//# 6917 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2297 "../../../src/fsharp/pars.fsy"
                                                        List.rev _2 
                   )
//# 2297 "../../../src/fsharp/pars.fsy"
                 : 'prefixTyparDecls));
//# 6929 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2300 "../../../src/fsharp/pars.fsy"
                                                         _3 :: _1 
                   )
//# 2300 "../../../src/fsharp/pars.fsy"
                 : 'typarDeclList));
//# 6941 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2301 "../../../src/fsharp/pars.fsy"
                                     [_1] 
                   )
//# 2301 "../../../src/fsharp/pars.fsy"
                 : 'typarDeclList));
//# 6952 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2305 "../../../src/fsharp/pars.fsy"
                             SynTyparDecl(_1, _2) 
                   )
//# 2305 "../../../src/fsharp/pars.fsy"
                 : 'typarDecl));
//# 6964 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_TYAPP)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2311 "../../../src/fsharp/pars.fsy"
                             if not _2 then warning(Error(FSComp.SR.parsNonAdjacentTypars(), rhs2 parseState 2 5))
                             List.rev _3, _4 
                   )
//# 2311 "../../../src/fsharp/pars.fsy"
                 : 'postfixTyparDecls));
//# 6980 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2318 "../../../src/fsharp/pars.fsy"
                             (List.rev _1, true) 
                   )
//# 2318 "../../../src/fsharp/pars.fsy"
                 : 'explicitValTyparDeclsCore));
//# 6991 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2321 "../../../src/fsharp/pars.fsy"
                             (List.rev _1, false) 
                   )
//# 2321 "../../../src/fsharp/pars.fsy"
                 : 'explicitValTyparDeclsCore));
//# 7002 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2324 "../../../src/fsharp/pars.fsy"
                             ([], false) 
                   )
//# 2324 "../../../src/fsharp/pars.fsy"
                 : 'explicitValTyparDeclsCore));
//# 7012 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_TYAPP)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDeclsCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2328 "../../../src/fsharp/pars.fsy"
                             if not _2 then warning(Error(FSComp.SR.parsNonAdjacentTypars(), rhs2 parseState 2 5))
                             let tps, flex = _3 
                             SynValTyparDecls(tps, flex, _4) 
                   )
//# 2328 "../../../src/fsharp/pars.fsy"
                 : 'explicitValTyparDecls));
//# 7029 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2334 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 2334 "../../../src/fsharp/pars.fsy"
                 : 'opt_explicitValTyparDecls));
//# 7040 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2336 "../../../src/fsharp/pars.fsy"
                             SynValTyparDecls([], true, []) 
                   )
//# 2336 "../../../src/fsharp/pars.fsy"
                 : 'opt_explicitValTyparDecls));
//# 7050 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2340 "../../../src/fsharp/pars.fsy"
                             Some _1 
                   )
//# 2340 "../../../src/fsharp/pars.fsy"
                 : 'opt_explicitValTyparDecls2));
//# 7061 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2343 "../../../src/fsharp/pars.fsy"
                             None 
                   )
//# 2343 "../../../src/fsharp/pars.fsy"
                 : 'opt_explicitValTyparDecls2));
//# 7071 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2349 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 2349 "../../../src/fsharp/pars.fsy"
                 : 'opt_typeConstraints));
//# 7081 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2352 "../../../src/fsharp/pars.fsy"
                            List.rev _2 
                   )
//# 2352 "../../../src/fsharp/pars.fsy"
                 : 'opt_typeConstraints));
//# 7092 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraint)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2358 "../../../src/fsharp/pars.fsy"
                            _3 :: _1 
                   )
//# 2358 "../../../src/fsharp/pars.fsy"
                 : 'typeConstraints));
//# 7104 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraint)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2361 "../../../src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 2361 "../../../src/fsharp/pars.fsy"
                 : 'typeConstraints));
//# 7115 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2367 "../../../src/fsharp/pars.fsy"
                            libraryOnlyError (lhs parseState); SynTypeConstraint.WhereTyparDefaultsToType(_2, _4, lhs parseState) 
                   )
//# 2367 "../../../src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7127 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2370 "../../../src/fsharp/pars.fsy"
                            SynTypeConstraint.WhereTyparSubtypeOfType(_1, _3, lhs parseState) 
                   )
//# 2370 "../../../src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7139 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2373 "../../../src/fsharp/pars.fsy"
                            SynTypeConstraint.WhereTyparIsValueType(_1, lhs parseState) 
                   )
//# 2373 "../../../src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7150 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2376 "../../../src/fsharp/pars.fsy"
                            if _3 <> "not" then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(_3))  
                            SynTypeConstraint.WhereTyparIsReferenceType(_1, lhs parseState) 
                   )
//# 2376 "../../../src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7163 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2380 "../../../src/fsharp/pars.fsy"
                            SynTypeConstraint.WhereTyparSupportsNull(_1, lhs parseState) 
                   )
//# 2380 "../../../src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7174 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2383 "../../../src/fsharp/pars.fsy"
                            let tp = _1
                            SynTypeConstraint.WhereTyparSupportsMember([ SynType.Var(tp, tp.Range) ], _4, lhs parseState) 
                   )
//# 2383 "../../../src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7188 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2387 "../../../src/fsharp/pars.fsy"
                            SynTypeConstraint.WhereTyparSupportsMember(List.rev(_2), _6, lhs parseState) 
                   )
//# 2387 "../../../src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7202 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2390 "../../../src/fsharp/pars.fsy"
                            let _ltm, _gtm, args, _commas, mWhole = _4
                            SynTypeConstraint.WhereTyparIsDelegate(_1, args, unionRanges _1.Range mWhole) 
                   )
//# 2390 "../../../src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7215 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2394 "../../../src/fsharp/pars.fsy"
                            match _3 with 
                            | "enum" ->
                                let _ltm, _gtm, args, _commas, mWhole = _4
                                SynTypeConstraint.WhereTyparIsEnum(_1, args, unionRanges _1.Range mWhole)
                            | nm -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(nm)) 
                   )
//# 2394 "../../../src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7232 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2401 "../../../src/fsharp/pars.fsy"
                            match _3 with 
                            | "comparison" -> SynTypeConstraint.WhereTyparIsComparable(_1, lhs parseState)
                            | "equality" -> SynTypeConstraint.WhereTyparIsEquatable(_1, lhs parseState)
                            | "unmanaged" -> SynTypeConstraint.WhereTyparIsUnmanaged(_1, lhs parseState)
                            | nm -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(nm)) 
                   )
//# 2401 "../../../src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7248 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2409 "../../../src/fsharp/pars.fsy"
                            _3 :: _1 
                   )
//# 2409 "../../../src/fsharp/pars.fsy"
                 : 'typarAlts));
//# 7260 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2412 "../../../src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 2412 "../../../src/fsharp/pars.fsy"
                 : 'typarAlts));
//# 7271 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2419 "../../../src/fsharp/pars.fsy"
                            _2 _1 
                   )
//# 2419 "../../../src/fsharp/pars.fsy"
                 : Choice<SynEnumCase, SynUnionCase> list));
//# 7283 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDeclOfMany)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2422 "../../../src/fsharp/pars.fsy"
                            _1 :: _3 _2 
                   )
//# 2422 "../../../src/fsharp/pars.fsy"
                 : Choice<SynEnumCase, SynUnionCase> list));
//# 7296 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2425 "../../../src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 2425 "../../../src/fsharp/pars.fsy"
                 : Choice<SynEnumCase, SynUnionCase> list));
//# 7307 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2429 "../../../src/fsharp/pars.fsy"
                            grabXmlDoc(parseState, 1) 
                   )
//# 2429 "../../../src/fsharp/pars.fsy"
                 : 'barAndgrabXmlDoc));
//# 7317 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2433 "../../../src/fsharp/pars.fsy"
                            (fun xmlDoc -> _1 xmlDoc  :: _3 _2) 
                   )
//# 2433 "../../../src/fsharp/pars.fsy"
                 : 'attrUnionCaseDecls));
//# 7330 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2436 "../../../src/fsharp/pars.fsy"
                            (fun xmlDoc -> [ _1 xmlDoc ]) 
                   )
//# 2436 "../../../src/fsharp/pars.fsy"
                 : 'attrUnionCaseDecls));
//# 7341 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2441 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(), rhs parseState 2))
                             let mDecl = rhs parseState 3
                             (fun xmlDoc -> Choice2Of2 (SynUnionCase ( _1, _3, SynUnionCaseKind.Fields [], xmlDoc, None, mDecl))) 
                   )
//# 2441 "../../../src/fsharp/pars.fsy"
                 : 'attrUnionCaseDecl));
//# 7356 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2446 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(), rhs parseState 2))
                             let mDecl = rhs2 parseState 1 5
                             (fun xmlDoc -> Choice2Of2 (SynUnionCase ( _1, _3, SynUnionCaseKind.Fields _5, xmlDoc, None, mDecl))) 
                   )
//# 2446 "../../../src/fsharp/pars.fsy"
                 : 'attrUnionCaseDecl));
//# 7372 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2451 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(), rhs parseState 2))
                             let mDecl = rhs2 parseState 1 4
                             (fun xmlDoc -> Choice2Of2 (SynUnionCase ( _1, _3, SynUnionCaseKind.Fields [], xmlDoc, None, mDecl))) 
                   )
//# 2451 "../../../src/fsharp/pars.fsy"
                 : 'attrUnionCaseDecl));
//# 7388 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2456 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(), rhs parseState 2))
                             libraryOnlyWarning(lhs parseState)
                             let mDecl = rhs2 parseState 1 5
                             (fun xmlDoc -> Choice2Of2 (SynUnionCase ( _1, _3, SynUnionCaseKind.FullType _5, xmlDoc, None, mDecl))) 
                   )
//# 2456 "../../../src/fsharp/pars.fsy"
                 : 'attrUnionCaseDecl));
//# 7405 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2462 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsEnumFieldsCannotHaveVisibilityDeclarations(), rhs parseState 2))
                             let mDecl = rhs2 parseState 1 5
                             (fun xmlDoc -> Choice1Of2 (SynEnumCase ( _1, _3, fst _5, snd _5, xmlDoc, mDecl))) 
                   )
//# 2462 "../../../src/fsharp/pars.fsy"
                 : 'attrUnionCaseDecl));
//# 7421 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2469 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 2469 "../../../src/fsharp/pars.fsy"
                 : 'unionCaseName));
//# 7432 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2472 "../../../src/fsharp/pars.fsy"
                              ident(opNameCons, rhs parseState 2) 
                   )
//# 2472 "../../../src/fsharp/pars.fsy"
                 : 'unionCaseName));
//# 7443 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2475 "../../../src/fsharp/pars.fsy"
                              ident(opNameNil, rhs2 parseState 2 3) 
                   )
//# 2475 "../../../src/fsharp/pars.fsy"
                 : 'unionCaseName));
//# 7454 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2479 "../../../src/fsharp/pars.fsy"
                             Choice2Of2 (SynUnionCase ( [], _1, SynUnionCaseKind.Fields [], PreXmlDoc.Empty, None, rhs parseState 1)) 
                   )
//# 2479 "../../../src/fsharp/pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
//# 7466 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2482 "../../../src/fsharp/pars.fsy"
                             Choice1Of2 (SynEnumCase ([], _1, fst _3, snd _3, PreXmlDoc.Empty, rhs2 parseState 1 3)) 
                   )
//# 2482 "../../../src/fsharp/pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
//# 7479 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2485 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 2485 "../../../src/fsharp/pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
//# 7491 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2489 "../../../src/fsharp/pars.fsy"
                            Choice2Of2 (SynUnionCase ( [], _1, SynUnionCaseKind.Fields _3, PreXmlDoc.Empty, None, rhs2 parseState 1 3)) 
                   )
//# 2489 "../../../src/fsharp/pars.fsy"
                 : 'firstUnionCaseDecl));
//# 7503 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2492 "../../../src/fsharp/pars.fsy"
                             Choice1Of2 (SynEnumCase ([], _1, fst _3, snd _3, PreXmlDoc.Empty, rhs2 parseState 1 3))  
                   )
//# 2492 "../../../src/fsharp/pars.fsy"
                 : 'firstUnionCaseDecl));
//# 7516 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElement)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2496 "../../../src/fsharp/pars.fsy"
                            _1 :: _3 
                   )
//# 2496 "../../../src/fsharp/pars.fsy"
                 : 'unionCaseReprElements));
//# 7528 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2499 "../../../src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 2499 "../../../src/fsharp/pars.fsy"
                 : 'unionCaseReprElements));
//# 7539 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2503 "../../../src/fsharp/pars.fsy"
                            let wholeRange = rhs2 parseState 1 3
                            mkSynNamedField(_1, _3, wholeRange) 
                   )
//# 2503 "../../../src/fsharp/pars.fsy"
                 : 'unionCaseReprElement));
//# 7552 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2507 "../../../src/fsharp/pars.fsy"
                            mkSynAnonField _1 
                   )
//# 2507 "../../../src/fsharp/pars.fsy"
                 : 'unionCaseReprElement));
//# 7563 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2511 "../../../src/fsharp/pars.fsy"
                            errorR(Deprecated(FSComp.SR.parsConsiderUsingSeparateRecordType(), lhs parseState)) 
                            _1 
                   )
//# 2511 "../../../src/fsharp/pars.fsy"
                 : 'unionCaseRepr));
//# 7575 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2515 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 2515 "../../../src/fsharp/pars.fsy"
                 : 'unionCaseRepr));
//# 7586 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2520 "../../../src/fsharp/pars.fsy"
                            _1 :: _3 
                   )
//# 2520 "../../../src/fsharp/pars.fsy"
                 : 'recdFieldDeclList));
//# 7599 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2523 "../../../src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 2523 "../../../src/fsharp/pars.fsy"
                 : 'recdFieldDeclList));
//# 7611 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2528 "../../../src/fsharp/pars.fsy"
                            let wholeRange = rhs2 parseState 1 2
                            let fld = _2 _1 false wholeRange
                            let (SynField (a, b, c, d, e, f, vis, wholeRange)) = fld
                            if Option.isSome vis then errorR (Error (FSComp.SR.parsRecordFieldsCannotHaveVisibilityDeclarations (), rhs parseState 2))
                            SynField (a, b, c, d, e, f, None, wholeRange) 
                   )
//# 2528 "../../../src/fsharp/pars.fsy"
                 : 'recdFieldDecl));
//# 7627 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2537 "../../../src/fsharp/pars.fsy"
                            let xmlDoc = grabXmlDoc (parseState, 3)
                            fun attrs stat wholeRange -> SynField(attrs, stat, Some _3, _5, _1, xmlDoc, _2, wholeRange) 
                   )
//# 2537 "../../../src/fsharp/pars.fsy"
                 : 'fieldDecl));
//# 7642 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExceptionDefnRepr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2543 "../../../src/fsharp/pars.fsy"
                            SynExceptionDefn(_1, _2, (_1.Range, _2) ||> unionRangeWithListBy (fun cd -> cd.Range) ) 
                   )
//# 2543 "../../../src/fsharp/pars.fsy"
                 : SynExceptionDefn));
//# 7654 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2548 "../../../src/fsharp/pars.fsy"
                            grabXmlDoc(parseState, 1) 
                   )
//# 2548 "../../../src/fsharp/pars.fsy"
                 : 'exceptionAndGrabDoc));
//# 7664 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'exceptionAndGrabDoc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconIntro)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2553 "../../../src/fsharp/pars.fsy"
                            SynExceptionDefnRepr(_2, _4, _5, _1, _3, (match _5 with None -> rhs2 parseState 1 4 | Some p -> unionRanges (rangeOfLongIdent p) (rhs2 parseState 1 4))) 
                   )
//# 2553 "../../../src/fsharp/pars.fsy"
                 : SynExceptionDefnRepr));
//# 7679 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2558 "../../../src/fsharp/pars.fsy"
                             SynUnionCase([], _1, SynUnionCaseKind.Fields [], PreXmlDoc.Empty, None, lhs parseState) 
                   )
//# 2558 "../../../src/fsharp/pars.fsy"
                 : 'exconIntro));
//# 7690 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2561 "../../../src/fsharp/pars.fsy"
                             SynUnionCase([], _1, SynUnionCaseKind.Fields _3, PreXmlDoc.Empty, None, lhs parseState) 
                   )
//# 2561 "../../../src/fsharp/pars.fsy"
                 : 'exconIntro));
//# 7702 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2564 "../../../src/fsharp/pars.fsy"
                             SynUnionCase([], _1, SynUnionCaseKind.Fields [], PreXmlDoc.Empty, None, lhs parseState) 
                   )
//# 2564 "../../../src/fsharp/pars.fsy"
                 : 'exconIntro));
//# 7714 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2568 "../../../src/fsharp/pars.fsy"
                            None 
                   )
//# 2568 "../../../src/fsharp/pars.fsy"
                 : 'exconRepr));
//# 7724 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2571 "../../../src/fsharp/pars.fsy"
                            Some (_2.Lid) 
                   )
//# 2571 "../../../src/fsharp/pars.fsy"
                 : 'exconRepr));
//# 7735 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2579 "../../../src/fsharp/pars.fsy"
                             let mLetKwd = rhs parseState 1 
                             let isUse = _1
                             let isRec = _2 
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise range of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs2 parseState 1 2 (* there was some error - this will be an approximate range *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             // The first binding swallows any attributes prior to the 'let'
                             BindingSetPreAttrs(mLetKwd, isRec, isUse,
                                 (fun attrs vis -> 
                                     // apply the builder
                                     let binds = localBindingsBuilder attrs vis mLetKwd
                                     if not isRec && not (isNilOrSingleton binds) then 
                                           reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings())
                                     [], binds),
                                 bindingSetRange) 
                   )
//# 2579 "../../../src/fsharp/pars.fsy"
                 : 'defnBindings));
//# 7766 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cPrototype)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2601 "../../../src/fsharp/pars.fsy"
                             let bindRange = lhs parseState
                             BindingSetPreAttrs(bindRange, false, false, _1, bindRange)  
                   )
//# 2601 "../../../src/fsharp/pars.fsy"
                 : 'defnBindings));
//# 7778 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2608 "../../../src/fsharp/pars.fsy"
                             let mDoKwd = rhs parseState 1 
                             let mWhole = unionRanges mDoKwd _2.Range
                             // any attributes prior to the 'let' are left free, e.g. become top-level attributes 
                             // associated with the module, 'main' function or assembly depending on their target 
                             BindingSetPreAttrs(mDoKwd, false, false, (fun attrs vis -> attrs, [mkSynDoBinding (vis, true, _2, mWhole)]), mWhole) 
                   )
//# 2608 "../../../src/fsharp/pars.fsy"
                 : 'doBinding));
//# 7793 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2618 "../../../src/fsharp/pars.fsy"
                             let mLetKwd = rhs parseState 1 
                             let isUse = _1
                             let isRec = _2
                             _4 (if isUse then "use" else "let") mLetKwd  // report unterminated error 
                             
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise range of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs parseState 1 (* there was some error - this will be an approximate range *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             // the first binding swallow any attributes prior to the 'let' 
                             BindingSetPreAttrs(mLetKwd, isRec, isUse,
                               (fun attrs vis ->
                                 let binds = localBindingsBuilder attrs vis mLetKwd
                                 if not isRec && not (isNilOrSingleton binds) then
                                     reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings())
                                 [], binds),
                               bindingSetRange), (unionRanges mLetKwd bindingSetRange) 
                   )
//# 2618 "../../../src/fsharp/pars.fsy"
                 : 'hardwhiteLetBindings));
//# 7826 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2644 "../../../src/fsharp/pars.fsy"
                             let mLetKwd = rhs parseState 1 
                             let bindingSetRange = unionRanges mLetKwd _2.Range 
                             let seqPt = DebugPointAtBinding.NoneAtDo 
                             // any attributes prior to the 'let' are left free, e.g. become top-level attributes 
                             // associated with the module, 'main' function or assembly depending on their target 
                             BindingSetPreAttrs(mLetKwd, false, false, (fun attrs vis -> attrs, [mkSynDoBinding (vis, true, _2, bindingSetRange)]), bindingSetRange), _2 
                   )
//# 2644 "../../../src/fsharp/pars.fsy"
                 : 'hardwhiteDoBinding));
//# 7843 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2655 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 2655 "../../../src/fsharp/pars.fsy"
                 : 'classDefnBindings));
//# 7854 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'doBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2658 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 2658 "../../../src/fsharp/pars.fsy"
                 : 'classDefnBindings));
//# 7865 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2661 "../../../src/fsharp/pars.fsy"
                            let b, m = _1 in b 
                   )
//# 2661 "../../../src/fsharp/pars.fsy"
                 : 'classDefnBindings));
//# 7876 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDoBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2664 "../../../src/fsharp/pars.fsy"
                            fst _1 
                   )
//# 2664 "../../../src/fsharp/pars.fsy"
                 : 'classDefnBindings));
//# 7887 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2670 "../../../src/fsharp/pars.fsy"
                            (fun _ m -> ()) 
                   )
//# 2670 "../../../src/fsharp/pars.fsy"
                 : 'hardwhiteDefnBindingsTerminator));
//# 7897 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2673 "../../../src/fsharp/pars.fsy"
                            (fun kwd m ->
                              let msg = 
                                  match kwd with 
                                  | "let!" -> FSComp.SR.parsUnmatchedLetBang() 
                                  | "use!" -> FSComp.SR.parsUnmatchedUseBang() 
                                  | "use" -> FSComp.SR.parsUnmatchedUse() 
                                  | _ (*"let" *) -> FSComp.SR.parsUnmatchedLet()
                              reportParseErrorAt m msg) 
                   )
//# 2673 "../../../src/fsharp/pars.fsy"
                 : 'hardwhiteDefnBindingsTerminator));
//# 7915 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cRetType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArgs)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2685 "../../../src/fsharp/pars.fsy"
                             let rty, vis, nm, args  = _2, _3, _4, _7 
                             let xmlDoc = grabXmlDoc(parseState, 1) 
                             let nmm = rhs parseState 3 
                             let argsm = rhs parseState 6 
                             let mBindLhs = lhs parseState
                             let mWhole = lhs parseState
                             let mRhs = lhs parseState 
                             let rhsExpr = SynExpr.App (ExprAtomicFlag.NonAtomic,
                                                       false,
                                                       SynExpr.Ident (ident("failwith", rhs parseState 6)),
                                                       SynExpr.Const (SynConst.String("extern was not given a DllImport attribute", SynStringKind.Regular, rhs parseState 8), rhs parseState 8),
                                                       mRhs)
                             (fun attrs _ -> 
                                 let bindingId = SynPat.LongIdent (LongIdentWithDots([nm], []), None, Some noInferredTypars, SynArgPats.Pats [SynPat.Tuple(false, args, argsm)], vis, nmm)
                                 let binding = mkSynBinding 
                                                   (xmlDoc, bindingId) 
                                                   (vis, false, false, mBindLhs, DebugPointAtBinding.NoneAtInvisible, Some rty, rhsExpr, mRhs, [], attrs, None)
                                 [], [binding]) 
                   )
//# 2685 "../../../src/fsharp/pars.fsy"
                 : 'cPrototype));
//# 7948 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cMoreArgs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2707 "../../../src/fsharp/pars.fsy"
                            List.rev _1 
                   )
//# 2707 "../../../src/fsharp/pars.fsy"
                 : 'cArgs));
//# 7959 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2710 "../../../src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 2710 "../../../src/fsharp/pars.fsy"
                 : 'cArgs));
//# 7970 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2712 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 2712 "../../../src/fsharp/pars.fsy"
                 : 'cArgs));
//# 7980 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cMoreArgs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2718 "../../../src/fsharp/pars.fsy"
                            _3 :: _1 
                   )
//# 2718 "../../../src/fsharp/pars.fsy"
                 : 'cMoreArgs));
//# 7992 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2721 "../../../src/fsharp/pars.fsy"
                            [_3; _1] 
                   )
//# 2721 "../../../src/fsharp/pars.fsy"
                 : 'cMoreArgs));
//# 8004 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2727 "../../../src/fsharp/pars.fsy"
                            let m = lhs parseState in SynPat.Typed(SynPat.Wild m, _2, m) |> addAttribs _1 
                   )
//# 2727 "../../../src/fsharp/pars.fsy"
                 : 'cArg));
//# 8016 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2730 "../../../src/fsharp/pars.fsy"
                            let m = lhs parseState in SynPat.Typed(SynPat.Named (SynPat.Wild m, _3, false, None, m), _2, m) |> addAttribs _1 
                   )
//# 2730 "../../../src/fsharp/pars.fsy"
                 : 'cArg));
//# 8029 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2735 "../../../src/fsharp/pars.fsy"
                            let m = _1.Range
                            SynType.App(SynType.LongIdent(_1), None, [], [], None, false, m) 
                   )
//# 2735 "../../../src/fsharp/pars.fsy"
                 : 'cType));
//# 8041 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2739 "../../../src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("[]", m)], [])), None, [_1], [], None, true, m) 
                   )
//# 2739 "../../../src/fsharp/pars.fsy"
                 : 'cType));
//# 8054 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2743 "../../../src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("nativeptr", m)], [])), None, [_1], [], None, true, m) 
                   )
//# 2743 "../../../src/fsharp/pars.fsy"
                 : 'cType));
//# 8066 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2747 "../../../src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("byref", m)], [])), None, [_1], [], None, true, m) 
                   )
//# 2747 "../../../src/fsharp/pars.fsy"
                 : 'cType));
//# 8078 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2751 "../../../src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("nativeint", m)], [])), None, [], [], None, true, m) 
                   )
//# 2751 "../../../src/fsharp/pars.fsy"
                 : 'cType));
//# 8089 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2758 "../../../src/fsharp/pars.fsy"
                            SynReturnInfo((_2, SynArgInfo(_1, false, None)), rhs parseState 2) 
                   )
//# 2758 "../../../src/fsharp/pars.fsy"
                 : 'cRetType));
//# 8101 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2761 "../../../src/fsharp/pars.fsy"
                            let m = rhs parseState 2 
                            SynReturnInfo((SynType.App(SynType.LongIdent(LongIdentWithDots([ident("unit", m)], [])), None, [], [], None, false, m), SynArgInfo(_1, false, None)), m) 
                   )
//# 2761 "../../../src/fsharp/pars.fsy"
                 : 'cRetType));
//# 8113 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attr_localBinding)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreLocalBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2767 "../../../src/fsharp/pars.fsy"
                             let (moreBindings, moreBindingRanges) = List.unzip _2
                             let moreLocalBindingsLastRange = if moreBindingRanges.IsEmpty then None else Some (List.last moreBindingRanges)
                             match _1 with 
                             | Some (localBindingRange, attrLocalBindingBuilder) -> 
                                let lastRange = 
                                    match moreLocalBindingsLastRange with 
                                    | None -> localBindingRange 
                                    | Some m -> m
                                Some lastRange, (fun attrs vis mLetKwd -> attrLocalBindingBuilder attrs vis mLetKwd true ::  moreBindings)
                             | None -> 
                                moreLocalBindingsLastRange, (fun _attrs _vis _letm -> moreBindings) 
                   )
//# 2767 "../../../src/fsharp/pars.fsy"
                 : 'localBindings));
//# 8135 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attr_localBinding)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreLocalBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2782 "../../../src/fsharp/pars.fsy"
                             let mLetKwd = rhs parseState 1
                             (match _2 with 
                              | Some (localBindingRange, attrLocalBindingBuilder) -> (attrLocalBindingBuilder [] None mLetKwd false, localBindingRange) :: _3 
                              | None -> _3) 
                   )
//# 2782 "../../../src/fsharp/pars.fsy"
                 : 'moreLocalBindings));
//# 8150 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2788 "../../../src/fsharp/pars.fsy"
                             [] 
                   )
//# 2788 "../../../src/fsharp/pars.fsy"
                 : 'moreLocalBindings));
//# 8160 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2794 "../../../src/fsharp/pars.fsy"
                             let attrs2 = _1
                             let localBindingRange, localBindingBuilder = _2
                             let attrLocalBindingBuilder = (fun attrs vis mLetKwd _ -> localBindingBuilder (attrs@attrs2) vis mLetKwd)
                             Some(localBindingRange, attrLocalBindingBuilder) 
                   )
//# 2794 "../../../src/fsharp/pars.fsy"
                 : 'attr_localBinding));
//# 8175 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2800 "../../../src/fsharp/pars.fsy"
                             None 
                   )
//# 2800 "../../../src/fsharp/pars.fsy"
                 : 'attr_localBinding));
//# 8185 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizationsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2806 "../../../src/fsharp/pars.fsy"
                             let (expr:SynExpr), opts = _6
                             let eqm = rhs parseState 5 
                             let mRhs = expr.Range 
                             let optReturnType = _4 
                             let bindingBuilder, mBindLhs = _3 
                             let localBindingRange = unionRanges (rhs2 parseState 1 5) mRhs
                             let localBindingBuilder = 
                               (fun attrs vis mLetKwd -> 
                                 let mWhole = (unionRanges mLetKwd mRhs, attrs) ||> unionRangeWithListBy (fun (a: SynAttributeList) -> a.Range)
                                 let spBind = if IsControlFlowExpression expr then DebugPointAtBinding.NoneAtLet else DebugPointAtBinding.Yes mWhole
                                 let mWholeBindLhs = (mBindLhs, attrs) ||> unionRangeWithListBy (fun (a: SynAttributeList) -> a.Range)
                                 bindingBuilder (vis, _1, _2, mWholeBindLhs, spBind, optReturnType, expr, mRhs, opts, attrs, None))
                             localBindingRange, localBindingBuilder 
                   )
//# 2806 "../../../src/fsharp/pars.fsy"
                 : 'localBinding));
//# 8212 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2821 "../../../src/fsharp/pars.fsy"
                             let mWhole = rhs2 parseState 1 5 
                             let mRhs = rhs parseState 5
                             let optReturnType = _4 
                             let bindingBuilder, mBindLhs = _3 
                             let localBindingBuilder = 
                               (fun attrs vis mLetKwd -> 
                                 let spBind = DebugPointAtBinding.Yes (unionRanges mLetKwd mRhs)
                                 let eqm = rhs parseState 5
                                 let zeroWidthAtEnd = eqm.EndRange
                                 bindingBuilder (vis, _1, _2, mBindLhs, spBind, optReturnType, arbExpr("localBinding1", zeroWidthAtEnd), mRhs, [], attrs, None))  
                             mWhole, localBindingBuilder 
                   )
//# 2821 "../../../src/fsharp/pars.fsy"
                 : 'localBinding));
//# 8236 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2834 "../../../src/fsharp/pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 5) (FSComp.SR.parsUnexpectedEndOfFileDefinition())
                             let optReturnType = _4 
                             let mWhole = rhs2 parseState 1 (match optReturnType with None -> 3 | _ -> 4)
                             let mRhs = mWhole.EndRange  // zero-width range at end of last good token
                             let bindingBuilder, mBindLhs = _3 
                             let localBindingBuilder = 
                               (fun attrs vis mLetKwd -> 
                                 let spBind = DebugPointAtBinding.Yes (unionRanges mLetKwd mRhs)
                                 bindingBuilder (vis, _1, _2, mBindLhs, spBind, optReturnType, arbExpr("localBinding2", mRhs), mRhs, [], attrs, None))  
                             mWhole, localBindingBuilder 
                   )
//# 2834 "../../../src/fsharp/pars.fsy"
                 : 'localBinding));
//# 8260 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2849 "../../../src/fsharp/pars.fsy"
                             _2 
                   )
//# 2849 "../../../src/fsharp/pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
//# 8272 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2852 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFile())
                             let a, b = _2
                             (exprFromParseError a, b) 
                   )
//# 2852 "../../../src/fsharp/pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
//# 8286 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2857 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 2857 "../../../src/fsharp/pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
//# 8297 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_staticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2861 "../../../src/fsharp/pars.fsy"
                             _1, List.rev _2 
                   )
//# 2861 "../../../src/fsharp/pars.fsy"
                 : 'typedExprWithStaticOptimizations));
//# 8309 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_staticOptimizations)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimization)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2865 "../../../src/fsharp/pars.fsy"
                             _2 :: _1 
                   )
//# 2865 "../../../src/fsharp/pars.fsy"
                 : 'opt_staticOptimizations));
//# 8321 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2868 "../../../src/fsharp/pars.fsy"
                             [] 
                   )
//# 2868 "../../../src/fsharp/pars.fsy"
                 : 'opt_staticOptimizations));
//# 8331 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationConditions)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2872 "../../../src/fsharp/pars.fsy"
                             (_2, _4) 
                   )
//# 2872 "../../../src/fsharp/pars.fsy"
                 : 'staticOptimization));
//# 8343 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationConditions)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationCondition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2876 "../../../src/fsharp/pars.fsy"
                             _3 :: _1 
                   )
//# 2876 "../../../src/fsharp/pars.fsy"
                 : 'staticOptimizationConditions));
//# 8355 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationCondition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2879 "../../../src/fsharp/pars.fsy"
                             [_1 ] 
                   )
//# 2879 "../../../src/fsharp/pars.fsy"
                 : 'staticOptimizationConditions));
//# 8366 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2883 "../../../src/fsharp/pars.fsy"
                             SynStaticOptimizationConstraint.WhenTyparTyconEqualsTycon(_1, _3, lhs parseState) 
                   )
//# 2883 "../../../src/fsharp/pars.fsy"
                 : 'staticOptimizationCondition));
//# 8378 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2886 "../../../src/fsharp/pars.fsy"
                             SynStaticOptimizationConstraint.WhenTyparIsStruct(_1, lhs parseState) 
                   )
//# 2886 "../../../src/fsharp/pars.fsy"
                 : 'staticOptimizationCondition));
//# 8389 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : sbyte * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2890 "../../../src/fsharp/pars.fsy"
                           if snd _1 then errorR(Error(FSComp.SR.lexOutsideEightBitSigned(), lhs parseState))
                           SynConst.SByte (fst _1) 
                   )
//# 2890 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8401 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : byte)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2894 "../../../src/fsharp/pars.fsy"
                           SynConst.Byte _1 
                   )
//# 2894 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8412 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int16 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2897 "../../../src/fsharp/pars.fsy"
                           if snd _1 then errorR(Error(FSComp.SR.lexOutsideSixteenBitSigned(), lhs parseState))
                           SynConst.Int16 (fst _1) 
                   )
//# 2897 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8424 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint16)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2901 "../../../src/fsharp/pars.fsy"
                           SynConst.UInt16 _1 
                   )
//# 2901 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8435 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2904 "../../../src/fsharp/pars.fsy"
                           if snd _1 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                           SynConst.Int32 (fst _1) 
                   )
//# 2904 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8447 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint32)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2908 "../../../src/fsharp/pars.fsy"
                           SynConst.UInt32 _1 
                   )
//# 2908 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8458 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int64 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2911 "../../../src/fsharp/pars.fsy"
                           if snd _1 then errorR(Error(FSComp.SR.lexOutsideSixtyFourBitSigned(), lhs parseState))
                           SynConst.Int64 (fst _1) 
                   )
//# 2911 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8470 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2915 "../../../src/fsharp/pars.fsy"
                           SynConst.UInt64 _1 
                   )
//# 2915 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8481 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int64 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2918 "../../../src/fsharp/pars.fsy"
                           if snd _1 then errorR(Error(FSComp.SR.lexOutsideNativeSigned(), lhs parseState))
                           SynConst.IntPtr (fst _1) 
                   )
//# 2918 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8493 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2922 "../../../src/fsharp/pars.fsy"
                           SynConst.UIntPtr _1 
                   )
//# 2922 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8504 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : single)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2925 "../../../src/fsharp/pars.fsy"
                           SynConst.Single _1 
                   )
//# 2925 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8515 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : double)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2928 "../../../src/fsharp/pars.fsy"
                           SynConst.Double _1 
                   )
//# 2928 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8526 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2931 "../../../src/fsharp/pars.fsy"
                           SynConst.Char _1 
                   )
//# 2931 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8537 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.Decimal)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2934 "../../../src/fsharp/pars.fsy"
                           SynConst.Decimal _1 
                   )
//# 2934 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8548 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : (string * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2937 "../../../src/fsharp/pars.fsy"
                           SynConst.UserNum _1 
                   )
//# 2937 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8559 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2940 "../../../src/fsharp/pars.fsy"
                           let s, synStringKind = _1
                           SynConst.String (s, synStringKind, lhs parseState) 
                   )
//# 2940 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8571 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'sourceIdentifier)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2944 "../../../src/fsharp/pars.fsy"
                           let c,v = _1
                           SynConst.SourceIdentifier (c, v, lhs parseState) 
                   )
//# 2944 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8583 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : byte[] * SynByteStringKind * ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2948 "../../../src/fsharp/pars.fsy"
                           let (v, synByteStringKind, _) = _1
                           SynConst.Bytes (v, synByteStringKind, lhs parseState) 
                   )
//# 2948 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8595 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2953 "../../../src/fsharp/pars.fsy"
                           if _2 <> "/" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure())
                           if fst _3 = 0 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsIllegalDenominatorForMeasureExponent())
                           if (snd _1) || (snd _3) then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                           SynRationalConst.Rational(fst _1, fst _3, lhs parseState) 
                   )
//# 2953 "../../../src/fsharp/pars.fsy"
                 : 'rationalConstant));
//# 8611 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2959 "../../../src/fsharp/pars.fsy"
                           if _3 <> "/" then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure())
                           if fst _4 = 0 then reportParseErrorAt (rhs parseState 4) (FSComp.SR.parsIllegalDenominatorForMeasureExponent())
                           if (snd _2) || (snd _4) then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                           SynRationalConst.Negate(SynRationalConst.Rational(fst _2, fst _4, lhs parseState)) 
                   )
//# 2959 "../../../src/fsharp/pars.fsy"
                 : 'rationalConstant));
//# 8627 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2965 "../../../src/fsharp/pars.fsy"
                           if snd _1 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                           SynRationalConst.Integer(fst _1) 
                   )
//# 2965 "../../../src/fsharp/pars.fsy"
                 : 'rationalConstant));
//# 8639 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2969 "../../../src/fsharp/pars.fsy"
                           if snd _2 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                           SynRationalConst.Negate(SynRationalConst.Integer(fst _2)) 
                   )
//# 2969 "../../../src/fsharp/pars.fsy"
                 : 'rationalConstant));
//# 8651 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2973 "../../../src/fsharp/pars.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                                 SynRationalConst.Integer(fst _1) 
                   )
//# 2973 "../../../src/fsharp/pars.fsy"
                 : 'atomicUnsignedRationalConstant));
//# 8663 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rationalConstant)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2977 "../../../src/fsharp/pars.fsy"
                           _2 
                   )
//# 2977 "../../../src/fsharp/pars.fsy"
                 : 'atomicUnsignedRationalConstant));
//# 8675 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicUnsignedRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2980 "../../../src/fsharp/pars.fsy"
                                                          _1 
                   )
//# 2980 "../../../src/fsharp/pars.fsy"
                 : 'atomicRationalConstant));
//# 8686 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicUnsignedRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2983 "../../../src/fsharp/pars.fsy"
                           SynRationalConst.Negate(_2) 
                   )
//# 2983 "../../../src/fsharp/pars.fsy"
                 : 'atomicRationalConstant));
//# 8697 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2987 "../../../src/fsharp/pars.fsy"
                           _1, rhs parseState 1 
                   )
//# 2987 "../../../src/fsharp/pars.fsy"
                 : 'constant));
//# 8708 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2990 "../../../src/fsharp/pars.fsy"
                           SynConst.Measure(_1, rhs parseState 1, _3), lhs parseState 
                   )
//# 2990 "../../../src/fsharp/pars.fsy"
                 : 'constant));
//# 8720 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2995 "../../../src/fsharp/pars.fsy"
                             // Adds a grab point at the start of the binding, so as not to include XML doc comments on the arguments
                             let xmlDoc = LexbufLocalXmlDocStore.GrabXmlDocBeforeMarker(parseState.LexBuffer, (lhs parseState).StartRange)
                             // Adds grab point at the end of the binding head, so subsequent types don't erroneously include argument doc comemnts
                             grabXmlDoc(parseState, 1) |> ignore
                          
                             mkSynBinding (xmlDoc, _1), rhs parseState 1 
                   )
//# 2995 "../../../src/fsharp/pars.fsy"
                 : 'bindingPattern));
//# 8736 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3007 "../../../src/fsharp/pars.fsy"
                             let m = rhs parseState 1 
                             SynPat.Named(SynPat.Wild m, _1, false, None, m) 
                   )
//# 3007 "../../../src/fsharp/pars.fsy"
                 : 'simplePattern));
//# 8748 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3011 "../../../src/fsharp/pars.fsy"
                             SynPat.OptionalVal(_2, rhs parseState 2) 
                   )
//# 3011 "../../../src/fsharp/pars.fsy"
                 : 'simplePattern));
//# 8759 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3014 "../../../src/fsharp/pars.fsy"
                             SynPat.Typed(_1, _3, lhs parseState) 
                   )
//# 3014 "../../../src/fsharp/pars.fsy"
                 : 'simplePattern));
//# 8771 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3017 "../../../src/fsharp/pars.fsy"
                             SynPat.Attrib(_2, _1, lhs parseState) 
                   )
//# 3017 "../../../src/fsharp/pars.fsy"
                 : 'simplePattern));
//# 8783 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3021 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 3021 "../../../src/fsharp/pars.fsy"
                 : 'simplePatternCommaList));
//# 8794 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3024 "../../../src/fsharp/pars.fsy"
                             match _3 with
                             | SynPat.Tuple(_, pats, _) -> SynPat.Tuple(false, _1 :: pats, rhs2 parseState 1 3)
                             | _ -> SynPat.Tuple(false, [_1; _3], rhs2 parseState 1 3) 
                   )
//# 3024 "../../../src/fsharp/pars.fsy"
                 : 'simplePatternCommaList));
//# 8808 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3030 "../../../src/fsharp/pars.fsy"
                             let parenPat = SynPat.Paren(_2, rhs2 parseState 1 3)
                             let simplePats, _ = SimplePatsOfPat parseState.SynArgNameGenerator parenPat
                             simplePats 
                   )
//# 3030 "../../../src/fsharp/pars.fsy"
                 : 'simplePatterns));
//# 8822 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3035 "../../../src/fsharp/pars.fsy"
                             let pat = SynPat.Const(SynConst.Unit, rhs2 parseState 1 2)
                             let simplePats, _ = SimplePatsOfPat parseState.SynArgNameGenerator pat
                             simplePats 
                   )
//# 3035 "../../../src/fsharp/pars.fsy"
                 : 'simplePatterns));
//# 8835 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3040 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let parenPat = SynPat.Paren(SynPat.Tuple(false, [], rhs2 parseState 1 2), rhs2 parseState 1 2) // todo: report parsed pats anyway?
                             let simplePats, _ = SimplePatsOfPat parseState.SynArgNameGenerator parenPat
                             simplePats 
                   )
//# 3040 "../../../src/fsharp/pars.fsy"
                 : 'simplePatterns));
//# 8850 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3046 "../../../src/fsharp/pars.fsy"
                             let parenPat = SynPat.Paren(SynPat.Wild(rhs parseState 2), rhs2 parseState 1 3) // silent recovery
                             let simplePats, _ = SimplePatsOfPat parseState.SynArgNameGenerator parenPat
                             simplePats 
                   )
//# 3046 "../../../src/fsharp/pars.fsy"
                 : 'simplePatterns));
//# 8863 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3051 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let pat = SynPat.Wild(lhs parseState)
                             let simplePats, _ = SimplePatsOfPat parseState.SynArgNameGenerator pat
                             simplePats 
                   )
//# 3051 "../../../src/fsharp/pars.fsy"
                 : 'simplePatterns));
//# 8877 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3059 "../../../src/fsharp/pars.fsy"
                             SynPat.Named (_1, _3, false, None, rhs2 parseState 1 3) 
                   )
//# 3059 "../../../src/fsharp/pars.fsy"
                 : SynPat));
//# 8889 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3062 "../../../src/fsharp/pars.fsy"
                             SynPat.Or(_1, _3, rhs2 parseState 1 3) 
                   )
//# 3062 "../../../src/fsharp/pars.fsy"
                 : SynPat));
//# 8901 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3065 "../../../src/fsharp/pars.fsy"
                             SynPat.LongIdent (LongIdentWithDots(mkSynCaseName (rhs parseState 2) opNameCons, []), None, None, SynArgPats.Pats [SynPat.Tuple (false, [_1;_3], rhs2 parseState 1 3)], None, lhs parseState) 
                   )
//# 3065 "../../../src/fsharp/pars.fsy"
                 : SynPat));
//# 8913 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3068 "../../../src/fsharp/pars.fsy"
                             SynPat.Tuple(false, List.rev _1, lhs parseState) 
                   )
//# 3068 "../../../src/fsharp/pars.fsy"
                 : SynPat));
//# 8924 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3071 "../../../src/fsharp/pars.fsy"
                             SynPat.Ands(List.rev _1, lhs parseState) 
                   )
//# 3071 "../../../src/fsharp/pars.fsy"
                 : SynPat));
//# 8935 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3074 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 3074 "../../../src/fsharp/pars.fsy"
                 : SynPat));
//# 8946 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3078 "../../../src/fsharp/pars.fsy"
                             _3 :: _1 
                   )
//# 3078 "../../../src/fsharp/pars.fsy"
                 : 'tuplePatternElements));
//# 8958 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3081 "../../../src/fsharp/pars.fsy"
                             _3 :: _1 :: [] 
                   )
//# 3081 "../../../src/fsharp/pars.fsy"
                 : 'tuplePatternElements));
//# 8970 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3085 "../../../src/fsharp/pars.fsy"
                            _3 :: _1 
                   )
//# 3085 "../../../src/fsharp/pars.fsy"
                 : 'conjPatternElements));
//# 8982 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3088 "../../../src/fsharp/pars.fsy"
                            _3 :: _1 :: [] 
                   )
//# 3088 "../../../src/fsharp/pars.fsy"
                 : 'conjPatternElements));
//# 8994 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPair)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3092 "../../../src/fsharp/pars.fsy"
                            [_1], lhs parseState 
                   )
//# 3092 "../../../src/fsharp/pars.fsy"
                 : 'namePatPairs));
//# 9006 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPair)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3095 "../../../src/fsharp/pars.fsy"
                            let (rs, _) = _3 in (_1 :: rs), lhs parseState 
                   )
//# 3095 "../../../src/fsharp/pars.fsy"
                 : 'namePatPairs));
//# 9019 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3099 "../../../src/fsharp/pars.fsy"
                            (_1, _3) 
                   )
//# 3099 "../../../src/fsharp/pars.fsy"
                 : 'namePatPair));
//# 9031 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3103 "../../../src/fsharp/pars.fsy"
                             let vis, lid = _1 in SynPat.LongIdent (lid, None, Some _2, SynArgPats.Pats [], vis, lhs parseState) 
                   )
//# 3103 "../../../src/fsharp/pars.fsy"
                 : 'constrPattern));
//# 9043 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatsOrNamePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3106 "../../../src/fsharp/pars.fsy"
                             let vis, lid = _1 in SynPat.LongIdent (lid, None, _2, _3, vis, lhs parseState) 
                   )
//# 3106 "../../../src/fsharp/pars.fsy"
                 : 'constrPattern));
//# 9056 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatsOrNamePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3109 "../../../src/fsharp/pars.fsy"
                             let vis, lid = _1 in SynPat.LongIdent (lid, None, _2, _4, vis, lhs parseState) 
                   )
//# 3109 "../../../src/fsharp/pars.fsy"
                 : 'constrPattern));
//# 9069 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatsOrNamePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3112 "../../../src/fsharp/pars.fsy"
                             let vis, lid = _1 in SynPat.LongIdent (lid, None, _2, _4, vis, lhs parseState) 
                   )
//# 3112 "../../../src/fsharp/pars.fsy"
                 : 'constrPattern));
//# 9082 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeOrAnonRecdType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3115 "../../../src/fsharp/pars.fsy"
                             SynPat.IsInst(_2, lhs parseState) 
                   )
//# 3115 "../../../src/fsharp/pars.fsy"
                 : 'constrPattern));
//# 9093 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3118 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 3118 "../../../src/fsharp/pars.fsy"
                 : 'constrPattern));
//# 9104 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPairs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3122 "../../../src/fsharp/pars.fsy"
                             SynArgPats.NamePatPairs _2 
                   )
//# 3122 "../../../src/fsharp/pars.fsy"
                 : 'atomicPatsOrNamePatPairs));
//# 9116 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3125 "../../../src/fsharp/pars.fsy"
                             SynArgPats.Pats _1 
                   )
//# 3125 "../../../src/fsharp/pars.fsy"
                 : 'atomicPatsOrNamePatPairs));
//# 9127 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3129 "../../../src/fsharp/pars.fsy"
                             _1 :: _2 
                   )
//# 3129 "../../../src/fsharp/pars.fsy"
                 : 'atomicPatterns));
//# 9139 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3132 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessivePatternsShouldBeSpacedOrTupled())
                             _1 :: _3 
                   )
//# 3132 "../../../src/fsharp/pars.fsy"
                 : 'atomicPatterns));
//# 9152 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3136 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessivePatternsShouldBeSpacedOrTupled())
                             _1 :: _3 
                   )
//# 3136 "../../../src/fsharp/pars.fsy"
                 : 'atomicPatterns));
//# 9165 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3140 "../../../src/fsharp/pars.fsy"
                             [_1] 
                   )
//# 3140 "../../../src/fsharp/pars.fsy"
                 : 'atomicPatterns));
//# 9176 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'quoteExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3145 "../../../src/fsharp/pars.fsy"
                             SynPat.QuoteExpr(_1, lhs parseState) 
                   )
//# 3145 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9187 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3148 "../../../src/fsharp/pars.fsy"
                             SynPat.DeprecatedCharRange (_1, _3, rhs2 parseState 1 3) 
                   )
//# 3148 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9199 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElementsAux)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3151 "../../../src/fsharp/pars.fsy"
                             let rs, m = _2 in SynPat.Record (rs, rhs2 parseState 1 3) 
                   )
//# 3151 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9212 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3154 "../../../src/fsharp/pars.fsy"
                             SynPat.ArrayOrList(false, _2, lhs parseState) 
                   )
//# 3154 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9223 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3157 "../../../src/fsharp/pars.fsy"
                             SynPat.ArrayOrList(true, _2, lhs parseState) 
                   )
//# 3157 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9234 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3160 "../../../src/fsharp/pars.fsy"
                             SynPat.Wild (lhs parseState) 
                   )
//# 3160 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9244 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3163 "../../../src/fsharp/pars.fsy"
                             SynPat.OptionalVal(_2, lhs parseState) 
                   )
//# 3163 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9255 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3166 "../../../src/fsharp/pars.fsy"
                             let vis, lidwd = _1 
                             if not (isNilOrSingleton lidwd.Lid) || String.isLeadingIdentifierCharacterUpperCase (List.head lidwd.Lid).idText
                             then mkSynPatMaybeVar lidwd vis (lhs parseState)
                             else mkSynPatVar vis (List.head lidwd.Lid) 
                   )
//# 3166 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9269 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3172 "../../../src/fsharp/pars.fsy"
                             SynPat.Const (fst _1, snd _1) 
                   )
//# 3172 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9280 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3175 "../../../src/fsharp/pars.fsy"
                             SynPat.Const(SynConst.Bool false, lhs parseState) 
                   )
//# 3175 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9290 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3178 "../../../src/fsharp/pars.fsy"
                             SynPat.Const(SynConst.Bool true, lhs parseState) 
                   )
//# 3178 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9300 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3181 "../../../src/fsharp/pars.fsy"
                             SynPat.Null(lhs parseState) 
                   )
//# 3181 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9310 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPatternBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3184 "../../../src/fsharp/pars.fsy"
                             let m = (lhs parseState)
                             SynPat.Paren(_2 m, m) 
                   )
//# 3184 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9323 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPatternBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3188 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()) 
                             patFromParseError (_2 (rhs2 parseState 1 2)) 
                   )
//# 3188 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9336 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3192 "../../../src/fsharp/pars.fsy"
                             (* silent recovery *) SynPat.Wild (lhs parseState) 
                   )
//# 3192 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9347 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3195 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()) 
                             SynPat.Wild (lhs parseState)
                   )
//# 3195 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9359 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3199 "../../../src/fsharp/pars.fsy"
                             SynPat.Tuple(true, List.rev _3, lhs parseState) 
                   )
//# 3199 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9371 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3202 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()); 
                             SynPat.Tuple(true, List.rev _3, lhs parseState) 
                   )
//# 3202 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9384 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3206 "../../../src/fsharp/pars.fsy"
                             (* silent recovery *) SynPat.Wild (lhs parseState) 
                   )
//# 3206 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9395 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3209 "../../../src/fsharp/pars.fsy"
                              reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()); 
                              SynPat.Wild (lhs parseState)
                   )
//# 3209 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9407 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3214 "../../../src/fsharp/pars.fsy"
                             (fun m -> _1) 
                   )
//# 3214 "../../../src/fsharp/pars.fsy"
                 : 'parenPatternBody));
//# 9418 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3217 "../../../src/fsharp/pars.fsy"
                             (fun m -> SynPat.Const(SynConst.Unit, m)) 
                   )
//# 3217 "../../../src/fsharp/pars.fsy"
                 : 'parenPatternBody));
//# 9428 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3246 "../../../src/fsharp/pars.fsy"
                             SynPat.Named (_1, _3, false, None, rhs2 parseState 1 3) 
                   )
//# 3246 "../../../src/fsharp/pars.fsy"
                 : 'parenPattern));
//# 9440 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3249 "../../../src/fsharp/pars.fsy"
                             SynPat.Or(_1, _3, rhs2 parseState 1 3) 
                   )
//# 3249 "../../../src/fsharp/pars.fsy"
                 : 'parenPattern));
//# 9452 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3252 "../../../src/fsharp/pars.fsy"
                             SynPat.Tuple(false, List.rev _1, lhs parseState) 
                   )
//# 3252 "../../../src/fsharp/pars.fsy"
                 : 'parenPattern));
//# 9463 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjParenPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3255 "../../../src/fsharp/pars.fsy"
                             SynPat.Ands(List.rev _1, rhs2 parseState 1 3) 
                   )
//# 3255 "../../../src/fsharp/pars.fsy"
                 : 'parenPattern));
//# 9474 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3258 "../../../src/fsharp/pars.fsy"
                             let lhsm = lhs parseState 
                             SynPat.Typed(_1, _3, lhsm) 
                   )
//# 3258 "../../../src/fsharp/pars.fsy"
                 : 'parenPattern));
//# 9487 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3262 "../../../src/fsharp/pars.fsy"
                             let lhsm = lhs parseState 
                             SynPat.Attrib(_2, _1, lhsm) 
                   )
//# 3262 "../../../src/fsharp/pars.fsy"
                 : 'parenPattern));
//# 9500 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3266 "../../../src/fsharp/pars.fsy"
                             SynPat.LongIdent (LongIdentWithDots(mkSynCaseName (rhs parseState 2) opNameCons, []), None, None, SynArgPats.Pats [ SynPat.Tuple (false, [_1;_3], rhs2 parseState 1 3) ], None, lhs parseState) 
                   )
//# 3266 "../../../src/fsharp/pars.fsy"
                 : 'parenPattern));
//# 9512 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3268 "../../../src/fsharp/pars.fsy"
                                         _1 
                   )
//# 3268 "../../../src/fsharp/pars.fsy"
                 : 'parenPattern));
//# 9523 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3272 "../../../src/fsharp/pars.fsy"
                             _3 :: _1 
                   )
//# 3272 "../../../src/fsharp/pars.fsy"
                 : 'tupleParenPatternElements));
//# 9535 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3275 "../../../src/fsharp/pars.fsy"
                             _3 :: _1 :: [] 
                   )
//# 3275 "../../../src/fsharp/pars.fsy"
                 : 'tupleParenPatternElements));
//# 9547 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjParenPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3279 "../../../src/fsharp/pars.fsy"
                             _3 :: _1 
                   )
//# 3279 "../../../src/fsharp/pars.fsy"
                 : 'conjParenPatternElements));
//# 9559 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3282 "../../../src/fsharp/pars.fsy"
                             _3 :: _1 :: [] 
                   )
//# 3282 "../../../src/fsharp/pars.fsy"
                 : 'conjParenPatternElements));
//# 9571 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElement)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3286 "../../../src/fsharp/pars.fsy"
                             [_1], lhs parseState 
                   )
//# 3286 "../../../src/fsharp/pars.fsy"
                 : 'recordPatternElementsAux));
//# 9583 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElement)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElementsAux)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3289 "../../../src/fsharp/pars.fsy"
                             let r = _1 in let (rs, dropMark) = _3 in (r :: rs), lhs parseState 
                   )
//# 3289 "../../../src/fsharp/pars.fsy"
                 : 'recordPatternElementsAux));
//# 9596 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3292 "../../../src/fsharp/pars.fsy"
                                                    (List.frontAndBack _1.Lid, _3) 
                   )
//# 3292 "../../../src/fsharp/pars.fsy"
                 : 'recordPatternElement));
//# 9608 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3296 "../../../src/fsharp/pars.fsy"
                             [] 
                   )
//# 3296 "../../../src/fsharp/pars.fsy"
                 : 'listPatternElements));
//# 9618 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3299 "../../../src/fsharp/pars.fsy"
                             [_1] 
                   )
//# 3299 "../../../src/fsharp/pars.fsy"
                 : 'listPatternElements));
//# 9630 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3302 "../../../src/fsharp/pars.fsy"
                             _1 :: _3 
                   )
//# 3302 "../../../src/fsharp/pars.fsy"
                 : 'listPatternElements));
//# 9643 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3307 "../../../src/fsharp/pars.fsy"
                             _2 
                   )
//# 3307 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 9655 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3310 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileExpression())
                             exprFromParseError _2 
                   )
//# 3310 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 9668 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3314 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 3314 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 9679 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3319 "../../../src/fsharp/pars.fsy"
                             _2 
                   )
//# 3319 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 9691 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3322 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 3322 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 9702 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3328 "../../../src/fsharp/pars.fsy"
                           _1 
                   )
//# 3328 "../../../src/fsharp/pars.fsy"
                 : 'typedSeqExprBlockR));
//# 9713 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3331 "../../../src/fsharp/pars.fsy"
                           _1 
                   )
//# 3331 "../../../src/fsharp/pars.fsy"
                 : 'typedSeqExprBlockR));
//# 9724 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3335 "../../../src/fsharp/pars.fsy"
                           SynExpr.Typed (_1, _3, unionRanges _1.Range _3.Range) 
                   )
//# 3335 "../../../src/fsharp/pars.fsy"
                 : 'typedSeqExpr));
//# 9736 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3338 "../../../src/fsharp/pars.fsy"
                           _1 
                   )
//# 3338 "../../../src/fsharp/pars.fsy"
                 : 'typedSeqExpr));
//# 9747 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3342 "../../../src/fsharp/pars.fsy"
                           checkEndOfFileError _2; _1 
                   )
//# 3342 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 9759 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3346 "../../../src/fsharp/pars.fsy"
                             SynExpr.Sequential (DebugPointAtSequential.Both, true, _1, _3, unionRanges _1.Range _3.Range) 
                   )
//# 3346 "../../../src/fsharp/pars.fsy"
                 : 'seqExpr));
//# 9772 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3349 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 3349 "../../../src/fsharp/pars.fsy"
                 : 'seqExpr));
//# 9784 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3352 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 3352 "../../../src/fsharp/pars.fsy"
                 : 'seqExpr));
//# 9795 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3355 "../../../src/fsharp/pars.fsy"
                             SynExpr.Sequential (DebugPointAtSequential.Both, false, _1, _3, unionRanges _1.Range _3.Range ) 
                   )
//# 3355 "../../../src/fsharp/pars.fsy"
                 : 'seqExpr));
//# 9807 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3358 "../../../src/fsharp/pars.fsy"
                             SynExpr.Sequential (DebugPointAtSequential.Both, false, _1, _4, unionRanges _1.Range _4.Range) 
                   )
//# 3358 "../../../src/fsharp/pars.fsy"
                 : 'seqExpr));
//# 9820 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3361 "../../../src/fsharp/pars.fsy"
                            let hwlb, m = _1
                            let mLetKwd, isUse = match hwlb with (BindingSetPreAttrs(m, _, isUse, _, _))  -> m, isUse
                            let usedKeyword = if isUse then "use" else "let"
                            reportParseErrorAt mLetKwd (FSComp.SR.parsExpectedExpressionAfterLet(usedKeyword, usedKeyword))
                            let fauxRange = m.EndRange // zero width range at end of m
                            mkLocalBindings (m, hwlb, arbExpr("seqExpr", fauxRange)) 
                   )
//# 3361 "../../../src/fsharp/pars.fsy"
                 : 'seqExpr));
//# 9836 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3374 "../../../src/fsharp/pars.fsy"
                             debugPrint("recovering via error"); true 
                   )
//# 3374 "../../../src/fsharp/pars.fsy"
                 : 'recover));
//# 9846 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3377 "../../../src/fsharp/pars.fsy"
                             debugPrint("recovering via EOF"); false 
                   )
//# 3377 "../../../src/fsharp/pars.fsy"
                 : 'recover));
//# 9857 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreBinders)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3381 "../../../src/fsharp/pars.fsy"
                            let spBind = DebugPointAtBinding.Yes(rhs2 parseState 1 5) (* TODO Pretty sure this is wrong *)
                            let m = rhs parseState 1 (* TODO Pretty sure this is wrong *)
                            (spBind, _1, true, _2, _4, m) :: _6 
                   )
//# 3381 "../../../src/fsharp/pars.fsy"
                 : 'moreBinders));
//# 9873 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreBinders)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3386 "../../../src/fsharp/pars.fsy"
                            _5 "and!" (rhs parseState 1)  // report unterminated error
                            let spBind = DebugPointAtBinding.Yes(rhs2 parseState 1 5) (* TODO Pretty sure this is wrong *)
                            let m = rhs parseState 1 (* TODO Pretty sure this is wrong *)
                            (spBind, _1, true, _2, _4, m) :: _7 
                   )
//# 3386 "../../../src/fsharp/pars.fsy"
                 : 'moreBinders));
//# 9892 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3392 "../../../src/fsharp/pars.fsy"
                             [] 
                   )
//# 3392 "../../../src/fsharp/pars.fsy"
                 : 'moreBinders));
//# 9902 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3396 "../../../src/fsharp/pars.fsy"
                            mkLocalBindings (unionRanges (rhs2 parseState 1 2) _3.Range, _1, _3) 
                   )
//# 3396 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 9914 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3399 "../../../src/fsharp/pars.fsy"
                            mkLocalBindings (rhs2 parseState 1 2, _1, arbExpr("declExpr1", (rhs parseState 3))) 
                   )
//# 3399 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 9925 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3405 "../../../src/fsharp/pars.fsy"
                            let hwlb, m = _1
                            mkLocalBindings (unionRanges m _2.Range, hwlb, _2) 
                   )
//# 3405 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 9938 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3409 "../../../src/fsharp/pars.fsy"
                            let hwlb, m = _1
                            reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m, _, _, _, _))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (m, hwlb, arbExpr("declExpr2", (rhs parseState 2))) 
                   )
//# 3409 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 9951 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3414 "../../../src/fsharp/pars.fsy"
                            let hwlb, m = _1
                            mkLocalBindings (unionRanges m _3.Range, hwlb, _3) 
                   )
//# 3414 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 9964 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3418 "../../../src/fsharp/pars.fsy"
                            let hwlb, m = _1
                            //reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m, _, _, _, _))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (unionRanges m (rhs parseState 3), hwlb, arbExpr("declExpr3", (rhs parseState 3))) 
                   )
//# 3418 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 9977 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDoBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3423 "../../../src/fsharp/pars.fsy"
                            let e = snd _1
                            SynExpr.Do (e, unionRanges (rhs parseState 1).StartRange e.Range) 
                   )
//# 3423 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 9989 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonMatchingExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3427 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 3427 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10000 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonLambdaExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3430 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 3430 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10011 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3433 "../../../src/fsharp/pars.fsy"
                             let mMatch = (rhs parseState 1)
                             let mWith, (clauses, mLast) = _3 
                             let spBind = DebugPointAtBinding.Yes(unionRanges mMatch mWith) 
                             SynExpr.Match (spBind, _2, clauses, unionRanges mMatch mLast) 
                   )
//# 3433 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10026 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3439 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileMatch())
                             // Produce approximate expression during error recovery 
                             exprFromParseError _2 
                   )
//# 3439 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10040 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3444 "../../../src/fsharp/pars.fsy"
                             let mMatch = (rhs parseState 1)
                             let mWith, (clauses, mLast) = _3 
                             let spBind = DebugPointAtBinding.Yes(unionRanges mMatch mWith) 
                             SynExpr.MatchBang (spBind, _2, clauses, unionRanges mMatch mLast) 
                   )
//# 3444 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10055 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3450 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileMatch())
                             // Produce approximate expression during error recovery 
                             exprFromParseError _2 
                   )
//# 3450 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10069 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3455 "../../../src/fsharp/pars.fsy"
                             let mTry = (rhs parseState 1)
                             let spTry = DebugPointAtTry.Yes mTry
                             let mWith, (clauses, mLast) = _3 
                             let spWith = DebugPointAtWith.Yes mWith
                             let mTryToWith = unionRanges mTry mWith 
                             let mWithToLast = unionRanges mWith mLast 
                             let mTryToLast = unionRanges mTry mLast
                             SynExpr.TryWith (_2, mTryToWith, clauses, mWithToLast, mTryToLast, spTry, spWith) 
                   )
//# 3455 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10088 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3465 "../../../src/fsharp/pars.fsy"
                             // Produce approximate expression during error recovery 
                             // Include any expressions to make sure they gets type checked in case that generates useful results for intellisense 
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileTry())
                             exprFromParseError _2 
                   )
//# 3465 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10103 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3471 "../../../src/fsharp/pars.fsy"
                             let mTry = rhs parseState 1 
                             let spTry = DebugPointAtTry.Yes mTry
                             let spFinally = DebugPointAtFinally.Yes (rhs parseState 3) 
                             let mTryToLast = unionRanges mTry _4.Range 
                             SynExpr.TryFinally (_2, _4, mTryToLast, spTry, spFinally) 
                   )
//# 3471 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10119 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3478 "../../../src/fsharp/pars.fsy"
                             let mIf = (rhs parseState 1)
                             _3 _2 mIf 
                   )
//# 3478 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10132 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3482 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsIncompleteIf()) 
                             // Produce an approximate expression during error recovery. 
                             // Include expressions to make sure they get type checked in case that generates useful results for intellisense. 
                             // Generate a throwAway for the expression so it isn't forced to have a type 'bool' 
                             // from the context it is used in. 
                             exprFromParseError _2 
                   )
//# 3482 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10149 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3490 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsIncompleteIf())
                             // Produce an approximate expression during error recovery. There can still be value in doing this even
                             // for this pathological case.
                             let m = rhs parseState 1
                             let mEnd = m.EndRange
                             let spIfToThen = DebugPointAtBinding.Yes mEnd
                             exprFromParseError (SynExpr.IfThenElse (arbExpr("ifGuard1", mEnd), arbExpr("thenBody1", mEnd), None, spIfToThen, true, m, m)) 
                   )
//# 3490 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10166 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3499 "../../../src/fsharp/pars.fsy"
                             SynExpr.Lazy (_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 3499 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10177 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3502 "../../../src/fsharp/pars.fsy"
                             SynExpr.Assert (_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 3502 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10188 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3505 "../../../src/fsharp/pars.fsy"
                             raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsAssertIsNotFirstClassValue()) 
                   )
//# 3505 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10198 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3508 "../../../src/fsharp/pars.fsy"
                             SynExpr.Lazy (_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 3508 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10209 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3511 "../../../src/fsharp/pars.fsy"
                             SynExpr.Assert (_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 3511 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10220 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3514 "../../../src/fsharp/pars.fsy"
                             raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsAssertIsNotFirstClassValue()) 
                   )
//# 3514 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10230 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3517 "../../../src/fsharp/pars.fsy"
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = DebugPointAtWhile.Yes mWhileHeader 
                             let mWhileAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.While (spWhile, _2, _4, mWhileAll) 
                   )
//# 3517 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10247 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3523 "../../../src/fsharp/pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWhile())
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = DebugPointAtWhile.Yes mWhileHeader 
                             let mWhileAll = unionRanges (rhs parseState 1) _4.Range
                             exprFromParseError (SynExpr.While (spWhile, _2, _4, mWhileAll)) 
                   )
//# 3523 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10265 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3530 "../../../src/fsharp/pars.fsy"
                             // silent recovery 
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = DebugPointAtWhile.Yes mWhileHeader 
                             let mWhileBodyArb = unionRanges (rhs parseState 4) (rhs parseState 5)
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 5)
                             SynExpr.While (spWhile, _2, arbExpr("whileBody1", mWhileBodyArb), mWhileAll) 
                   )
//# 3530 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10283 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3538 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsWhileDoExpected())
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = DebugPointAtWhile.Yes mWhileHeader 
                             let mWhileBodyArb = rhs parseState 3
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 3)
                             exprFromParseError (SynExpr.While (spWhile, _2, arbExpr("whileBody2", mWhileBodyArb), mWhileAll))  
                   )
//# 3538 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10300 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3546 "../../../src/fsharp/pars.fsy"
                             if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWhile())
                             arbExpr("whileLoop1", rhs parseState 1)  
                   )
//# 3546 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10312 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3550 "../../../src/fsharp/pars.fsy"
                             //silent recovery
                             let mWhileHeader = rhs parseState 1
                             let spWhile = DebugPointAtWhile.Yes mWhileHeader 
                             let mWhileBodyArb = rhs parseState 3
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 3)
                             exprFromParseError (SynExpr.While (spWhile, arbExpr("whileGuard1", mWhileHeader), arbExpr("whileBody3", mWhileBodyArb), mWhileAll))  
                   )
//# 3550 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10328 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3558 "../../../src/fsharp/pars.fsy"
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, _) = _2 
                             SynExpr.ForEach (spBind, SeqExprOnly false, true, a, b, _4, unionRanges (rhs parseState 1) _4.Range) 
                   )
//# 3558 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10345 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3564 "../../../src/fsharp/pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, _) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.ForEach (spBind, SeqExprOnly false, true, a, b, _4, mForLoopAll) 
                   )
//# 3564 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10364 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3572 "../../../src/fsharp/pars.fsy"
                             // Silent recovery
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, _) = _2 
                             let mForLoopBodyArb = rhs parseState 5
                             let mForLoopAll = rhs2 parseState 1 5
                             SynExpr.ForEach (spBind, SeqExprOnly false, true, a, b, arbExpr("forLoopBody2a", mForLoopBodyArb), mForLoopAll) 
                   )
//# 3572 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10383 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3581 "../../../src/fsharp/pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, _) = _2 
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             SynExpr.ForEach (spBind, SeqExprOnly false, true, a, b, arbExpr("forLoopBody2", mForLoopBodyArb), mForLoopAll) 
                   )
//# 3581 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10402 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3590 "../../../src/fsharp/pars.fsy"
                             let (a, b, ok) = _2 
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsForDoExpected())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             SynExpr.ForEach (spBind, SeqExprOnly false, true, a, b, arbExpr("forLoopBody1", mForLoopBodyArb), mForLoopAll) 
                   )
//# 3590 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10420 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3599 "../../../src/fsharp/pars.fsy"
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, c, d) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.For (spBind, a, b, c, d, _4, mForLoopAll) 
                   )
//# 3599 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10438 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3606 "../../../src/fsharp/pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             // Still produce an expression
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, c, d) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             exprFromParseError (SynExpr.For (spBind, a, b, c, d, _4, mForLoopAll)) 
                   )
//# 3606 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10458 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3615 "../../../src/fsharp/pars.fsy"
                             // silent recovery 
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, c, d) = _2 
                             let mForLoopBodyArb = rhs parseState 5
                             let mForLoopAll = rhs2 parseState 1 5
                             SynExpr.For (spBind, a, b, c, d, arbExpr("declExpr11", mForLoopBodyArb), mForLoopAll) 
                   )
//# 3615 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10477 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3624 "../../../src/fsharp/pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, c, d) = _2 
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             exprFromParseError (SynExpr.For (spBind, a, b, c, d, arbExpr("declExpr11", mForLoopBodyArb), mForLoopAll)) 
                   )
//# 3624 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10496 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3633 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, c, d) = _2 
                             let mForLoopBodyArb = (rhs parseState 2).EndRange
                             let mForLoopAll = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.For (spBind, a, b, c, d, arbExpr("declExpr11", mForLoopBodyArb), mForLoopAll)) 
                   )
//# 3633 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10514 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3643 "../../../src/fsharp/pars.fsy"
                             // silent recovery 
                             let mForLoopHeader = rhs2 parseState 1 2
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             SynExpr.For (spBind, mkSynId mForLoopHeader "_loopVar", arbExpr("startLoopRange1", mForLoopHeader), true, arbExpr("endLoopRange1", rhs parseState 3), _4, mForLoopAll) 
                   )
//# 3643 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10531 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3650 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsIdentifierExpected())
                             arbExpr("declExpr12", (rhs parseState 1)) 
                   )
//# 3650 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10543 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3654 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsInOrEqualExpected())
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let mForLoopBodyArb = rhs parseState 4
                             let mForLoopAll = rhs2 parseState 1 4
                             SynExpr.ForEach (spBind, SeqExprOnly false, true, _2, arbExpr("forLoopCollection", mForLoopHeader), arbExpr("forLoopBody3", mForLoopBodyArb), mForLoopAll) 
                   )
//# 3654 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10560 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3662 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let mForLoopBodyArb = (rhs parseState 2).EndRange
                             let mForLoopAll = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.ForEach (spBind, SeqExprOnly false, true, _2, arbExpr("forLoopCollection", mForLoopHeader), arbExpr("forLoopBody3", mForLoopBodyArb), mForLoopAll)) 
                   )
//# 3662 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10577 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3670 "../../../src/fsharp/pars.fsy"
                            SynExpr.YieldOrReturn ((_1, not _1), _2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 3670 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10589 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3673 "../../../src/fsharp/pars.fsy"
                            SynExpr.YieldOrReturnFrom ((_1, not _1), _2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 3673 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10601 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3676 "../../../src/fsharp/pars.fsy"
                            let mYieldAll = rhs parseState 1
                            SynExpr.YieldOrReturn ((_1, not _1), arbExpr("yield", mYieldAll), mYieldAll) 
                   )
//# 3676 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10614 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3680 "../../../src/fsharp/pars.fsy"
                            let mYieldAll = rhs parseState 1
                            SynExpr.YieldOrReturnFrom ((_1, not _1), arbExpr("yield!", mYieldAll), mYieldAll) 
                   )
//# 3680 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10627 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreBinders)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3684 "../../../src/fsharp/pars.fsy"
                            let spBind = DebugPointAtBinding.Yes(rhs2 parseState 1 5)
                            let m = unionRanges (rhs parseState 1) _8.Range
                            SynExpr.LetOrUseBang(spBind, (_1 = "use"), true, _2, _4, _7, _8, m) 
                   )
//# 3684 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10645 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreBinders)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3689 "../../../src/fsharp/pars.fsy"
                            _5 (if _1 = "use" then "use!" else "let!") (rhs parseState 1)  // report unterminated error 
                            let spBind = DebugPointAtBinding.Yes(unionRanges (rhs parseState 1) _4.Range)
                            let m = unionRanges (rhs parseState 1) _8.Range
                            SynExpr.LetOrUseBang(spBind, (_1 = "use"), true, _2, _4, _7, _8, m) 
                   )
//# 3689 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10665 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3695 "../../../src/fsharp/pars.fsy"
                            // error recovery that allows intellisense when writing incomplete computation expressions 
                            let spBind = DebugPointAtBinding.Yes(unionRanges (rhs parseState 1) _4.Range) 
                            let mAll = unionRanges (rhs parseState 1) (rhs parseState 7)
                            let m = _4.Range.EndRange // zero-width range
                            SynExpr.LetOrUseBang(spBind, (_1 = "use"), true, _2, _4, [], SynExpr.ImplicitZero m, mAll) 
                   )
//# 3695 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10684 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3702 "../../../src/fsharp/pars.fsy"
                            let spBind = DebugPointAtBinding.NoneAtDo
                            SynExpr.LetOrUseBang(spBind, false, true, SynPat.Const(SynConst.Unit, _2.Range), _2, [], _5, unionRanges (rhs parseState 1) _5.Range) 
                   )
//# 3702 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10698 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3706 "../../../src/fsharp/pars.fsy"
                            SynExpr.DoBang (_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 3706 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10710 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrowThenExprR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3709 "../../../src/fsharp/pars.fsy"
                            let spBind = DebugPointAtFor.Yes (rhs2 parseState 1 2)
                            let (a, b, _) = _2 in SynExpr.ForEach (spBind, SeqExprOnly true, true, a, b, _4, unionRanges (rhs parseState 1) _4.Range) 
                   )
//# 3709 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10724 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3713 "../../../src/fsharp/pars.fsy"
                            SynExpr.Fixed (_2, (unionRanges (rhs parseState 1) _2.Range)) 
                   )
//# 3713 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10735 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3716 "../../../src/fsharp/pars.fsy"
                            errorR(Error(FSComp.SR.parsArrowUseIsLimited(), lhs parseState))
                            SynExpr.YieldOrReturn ((true, true), _2, (unionRanges (rhs parseState 1) _2.Range)) 
                   )
//# 3716 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10747 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3720 "../../../src/fsharp/pars.fsy"
                            SynExpr.TypeTest (_1, _3, unionRanges _1.Range _3.Range) 
                   )
//# 3720 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10759 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3723 "../../../src/fsharp/pars.fsy"
                            SynExpr.Upcast (_1, _3, unionRanges _1.Range _3.Range) 
                   )
//# 3723 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10771 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3726 "../../../src/fsharp/pars.fsy"
                            SynExpr.Downcast (_1, _3, unionRanges _1.Range _3.Range) 
                   )
//# 3726 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10783 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3729 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 ":=" _3 
                   )
//# 3729 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10795 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3732 "../../../src/fsharp/pars.fsy"
                            mkSynAssign _1 _3 
                   )
//# 3732 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10807 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3735 "../../../src/fsharp/pars.fsy"
                            let exprs, commas = _1
                            SynExpr.Tuple (false, List.rev exprs, List.rev commas, (commas.Head, exprs) ||> unionRangeWithListBy (fun e -> e.Range) ) 
                   )
//# 3735 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10819 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3739 "../../../src/fsharp/pars.fsy"
                            SynExpr.JoinIn (_1, rhs parseState 2, _3, unionRanges _1.Range _3.Range) 
                   )
//# 3739 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10831 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3742 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "||" _3 
                   )
//# 3742 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10843 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3745 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
//# 3745 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10856 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3748 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "or" _3 
                   )
//# 3748 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10868 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3751 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "&" _3 
                   )
//# 3751 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10880 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3754 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "&&" _3 
                   )
//# 3754 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10892 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3757 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
//# 3757 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10905 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3760 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "=" _3 
                   )
//# 3760 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10917 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3763 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
//# 3763 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10930 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3766 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "$" _3 
                   )
//# 3766 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10942 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3769 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "<" _3 
                   )
//# 3769 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10955 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3772 "../../../src/fsharp/pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("<"))  
                            exprFromParseError (mkSynInfix (rhs parseState 2) _1 "<" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3772 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10969 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3776 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 ">" _3 
                   )
//# 3776 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10982 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3779 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
//# 3779 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 10995 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3782 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
//# 3782 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11008 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3785 "../../../src/fsharp/pars.fsy"
                            let tupExpr = SynExpr.Tuple (false, [_1;_3], [rhs parseState 2], unionRanges _1.Range _3.Range)
                            SynExpr.App (ExprAtomicFlag.NonAtomic, true, mkSynIdGet (rhs parseState 2) opNameCons, tupExpr, unionRanges _1.Range _3.Range) 
                   )
//# 3785 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11021 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3789 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
//# 3789 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11034 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3792 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "-" _3 
                   )
//# 3792 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11046 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3795 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "*" _3 
                   )
//# 3795 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11058 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3798 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
//# 3798 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11071 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3801 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
//# 3801 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11084 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3804 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("in")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "@in" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3804 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11096 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3808 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("||")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "||" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3808 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11108 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3812 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3812 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11121 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3816 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("or")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "or" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3816 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11133 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3820 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("&")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "&" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3820 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11145 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3824 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("&&")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "&&" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3824 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11157 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3828 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3828 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11170 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3832 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("=")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "=" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3832 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11182 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3836 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3836 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11195 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3840 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("$")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "$" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3840 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11207 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3844 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("<")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "<" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3844 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11220 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3848 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(">")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 ">" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3848 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11233 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3852 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3852 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11246 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3856 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3856 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11259 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3860 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("::")) 
                            let tupExpr = SynExpr.Tuple (false, [_1;(arbExpr("declExprInfix", (rhs parseState 3).StartRange))], [rhs parseState 2], unionRanges _1.Range (rhs parseState 3).StartRange)
                            SynExpr.App (ExprAtomicFlag.NonAtomic, true, mkSynIdGet (rhs parseState 2) opNameCons, tupExpr, unionRanges _1.Range (rhs parseState 3).StartRange) 
                   )
//# 3860 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11272 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3865 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3865 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11285 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3869 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("-")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "-" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3869 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11297 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3873 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("*")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "*" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3873 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11309 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3877 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3877 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11322 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3881 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3881 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11335 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3884 "../../../src/fsharp/pars.fsy"
                                                                  _1 
                   )
//# 3884 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11346 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3888 "../../../src/fsharp/pars.fsy"
                             let con = SynConst.String (_1, SynStringKind.Regular, rhs parseState 1)
                             let arg2 = SynExpr.Const (con, con.Range (rhs parseState 1)) 
                             arg2 
                   )
//# 3888 "../../../src/fsharp/pars.fsy"
                 : 'dynamicArg));
//# 11359 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3893 "../../../src/fsharp/pars.fsy"
                             _2 
                   )
//# 3893 "../../../src/fsharp/pars.fsy"
                 : 'dynamicArg));
//# 11371 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3897 "../../../src/fsharp/pars.fsy"
                             rhs parseState 1, _2 
                   )
//# 3897 "../../../src/fsharp/pars.fsy"
                 : 'withClauses));
//# 11382 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3900 "../../../src/fsharp/pars.fsy"
                             rhs parseState 1, _2 
                   )
//# 3900 "../../../src/fsharp/pars.fsy"
                 : 'withClauses));
//# 11393 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3903 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWith())
                             rhs parseState 1, _2 
                   )
//# 3903 "../../../src/fsharp/pars.fsy"
                 : 'withClauses));
//# 11406 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3908 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 3908 "../../../src/fsharp/pars.fsy"
                 : 'withPatternClauses));
//# 11417 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3911 "../../../src/fsharp/pars.fsy"
                             _2 
                   )
//# 3911 "../../../src/fsharp/pars.fsy"
                 : 'withPatternClauses));
//# 11428 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3914 "../../../src/fsharp/pars.fsy"
                             // silent recovery 
                             let mLast = rhs parseState 1
                             [], mLast 
                   )
//# 3914 "../../../src/fsharp/pars.fsy"
                 : 'withPatternClauses));
//# 11440 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3919 "../../../src/fsharp/pars.fsy"
                             // silent recovery 
                             let mLast = rhs parseState 1
                             [], mLast 
                   )
//# 3919 "../../../src/fsharp/pars.fsy"
                 : 'withPatternClauses));
//# 11452 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternGuard)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3926 "../../../src/fsharp/pars.fsy"
                             _1, _2, rhs parseState 1 
                   )
//# 3926 "../../../src/fsharp/pars.fsy"
                 : 'patternAndGuard));
//# 11464 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3930 "../../../src/fsharp/pars.fsy"
                            let pat, guard, patm = _1 
                            let mLast = _2.Range 
                            let m = unionRanges _2.Range patm
                            [SynMatchClause(pat, guard, _2, m, DebugPointForTarget.Yes)], mLast  
                   )
//# 3930 "../../../src/fsharp/pars.fsy"
                 : 'patternClauses));
//# 11479 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3936 "../../../src/fsharp/pars.fsy"
                            let pat, guard, patm = _1 
                            let clauses, mLast = _4
                            let m = unionRanges _2.Range patm
                            (SynMatchClause(pat, guard, _2, m, DebugPointForTarget.Yes) :: clauses), mLast 
                   )
//# 3936 "../../../src/fsharp/pars.fsy"
                 : 'patternClauses));
//# 11495 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3942 "../../../src/fsharp/pars.fsy"
                            let pat, guard, patm = _1 
                            let mLast = rhs parseState 3 
                            let m = unionRanges _2.Range patm
                            // silent recovery
                            [SynMatchClause(pat, guard, _2, m, DebugPointForTarget.Yes)], mLast  
                   )
//# 3942 "../../../src/fsharp/pars.fsy"
                 : 'patternClauses));
//# 11511 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3949 "../../../src/fsharp/pars.fsy"
                            let pat, guard, patm = _1 
                            let mLast = _2.Range
                            let m = unionRanges _2.Range patm
                            // silent recovery 
                            [SynMatchClause(pat, guard, _2, m, DebugPointForTarget.Yes)], mLast 
                   )
//# 3949 "../../../src/fsharp/pars.fsy"
                 : 'patternClauses));
//# 11527 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3956 "../../../src/fsharp/pars.fsy"
                            let pat, guard, patm = _1 
                            let mLast = rhs parseState 2
                            let m = 
                                match guard with 
                                | Some e -> unionRanges patm e.Range 
                                | _ -> patm
                            // silent recovery 
                            [SynMatchClause(pat, guard, SynExpr.Const (SynConst.Unit, mLast.EndRange), m, DebugPointForTarget.Yes)], mLast 
                   )
//# 3956 "../../../src/fsharp/pars.fsy"
                 : 'patternClauses));
//# 11545 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3967 "../../../src/fsharp/pars.fsy"
                            Some _2 
                   )
//# 3967 "../../../src/fsharp/pars.fsy"
                 : 'patternGuard));
//# 11556 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3970 "../../../src/fsharp/pars.fsy"
                            None 
                   )
//# 3970 "../../../src/fsharp/pars.fsy"
                 : 'patternGuard));
//# 11566 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3974 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 3974 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11577 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprThen)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprElifs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3978 "../../../src/fsharp/pars.fsy"
                             let exprThen, mThen = _1 
                             (fun exprGuard mIf -> 
                                 let mIfToThen = unionRanges mIf mThen
                                 let lastBranch : SynExpr = match _2 with None -> exprThen | Some e -> e
                                 let mIfToEndOfLastBranch = unionRanges mIf lastBranch.Range
                                 let spIfToThen = DebugPointAtBinding.Yes(mIfToThen)
                                 SynExpr.IfThenElse (exprGuard, exprThen, _2, spIfToThen, false, mIfToThen, mIfToEndOfLastBranch)) 
                   )
//# 3978 "../../../src/fsharp/pars.fsy"
                 : 'ifExprCases));
//# 11595 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3988 "../../../src/fsharp/pars.fsy"
                             _2, rhs parseState 1 
                   )
//# 3988 "../../../src/fsharp/pars.fsy"
                 : 'ifExprThen));
//# 11606 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3991 "../../../src/fsharp/pars.fsy"
                             _3, rhs parseState 1 
                   )
//# 3991 "../../../src/fsharp/pars.fsy"
                 : 'ifExprThen));
//# 11618 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3994 "../../../src/fsharp/pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileThen())
                             exprFromParseError _3, rhs parseState 1 
                   )
//# 3994 "../../../src/fsharp/pars.fsy"
                 : 'ifExprThen));
//# 11631 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3999 "../../../src/fsharp/pars.fsy"
                             None 
                   )
//# 3999 "../../../src/fsharp/pars.fsy"
                 : 'ifExprElifs));
//# 11641 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4002 "../../../src/fsharp/pars.fsy"
                             Some _2 
                   )
//# 4002 "../../../src/fsharp/pars.fsy"
                 : 'ifExprElifs));
//# 11652 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4005 "../../../src/fsharp/pars.fsy"
                             Some _3 
                   )
//# 4005 "../../../src/fsharp/pars.fsy"
                 : 'ifExprElifs));
//# 11664 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4008 "../../../src/fsharp/pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileElse())
                             Some (exprFromParseError _3) 
                   )
//# 4008 "../../../src/fsharp/pars.fsy"
                 : 'ifExprElifs));
//# 11677 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4012 "../../../src/fsharp/pars.fsy"
                             let mElif = rhs parseState 1 
                             Some (_3 _2 mElif) 
                   )
//# 4012 "../../../src/fsharp/pars.fsy"
                 : 'ifExprElifs));
//# 11690 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4016 "../../../src/fsharp/pars.fsy"
                             Some (exprFromParseError _2) 
                   )
//# 4016 "../../../src/fsharp/pars.fsy"
                 : 'ifExprElifs));
//# 11702 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4020 "../../../src/fsharp/pars.fsy"
                             let exprs, commas = _1 in (_3 :: exprs), ((rhs parseState 2) :: commas) 
                   )
//# 4020 "../../../src/fsharp/pars.fsy"
                 : 'tupleExpr));
//# 11714 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4023 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let exprs, commas = _1     
                             let zeroWidthAtNextToken = (rhs parseState 3).StartRange
                             ((arbExpr("tupleExpr1", zeroWidthAtNextToken)) :: exprs), (rhs parseState 2) :: commas 
                   )
//# 4023 "../../../src/fsharp/pars.fsy"
                 : 'tupleExpr));
//# 11729 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4029 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let zeroWidthAtNextToken = (rhs parseState 3).StartRange 
                             ((arbExpr("tupleExpr2", zeroWidthAtNextToken)) :: [_1]), [rhs parseState 2] 
                   )
//# 4029 "../../../src/fsharp/pars.fsy"
                 : 'tupleExpr));
//# 11743 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4034 "../../../src/fsharp/pars.fsy"
                             [_3 ; _1], [rhs parseState 2] 
                   )
//# 4034 "../../../src/fsharp/pars.fsy"
                 : 'tupleExpr));
//# 11755 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4038 "../../../src/fsharp/pars.fsy"
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) "~-" _2 
                   )
//# 4038 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11766 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4041 "../../../src/fsharp/pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"+(_1)) _2 
                   )
//# 4041 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11779 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4045 "../../../src/fsharp/pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"+(_1)) _2 
                   )
//# 4045 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11792 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4049 "../../../src/fsharp/pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"+(_1)) _2 
                   )
//# 4049 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11805 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4053 "../../../src/fsharp/pars.fsy"
                             SynExpr.AddressOf (true, _2, rhs parseState 1, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 4053 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11816 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4056 "../../../src/fsharp/pars.fsy"
                             SynExpr.AddressOf (false, _2, rhs parseState 1, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 4056 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11827 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4059 "../../../src/fsharp/pars.fsy"
                             SynExpr.New (false, _2, _4, unionRanges (rhs parseState 1) _4.Range) 
                   )
//# 4059 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11840 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4062 "../../../src/fsharp/pars.fsy"
                             SynExpr.New (false, _2, arbExpr("minusExpr", (rhs parseState 4)), unionRanges (rhs parseState 1) (_2).Range) 
                   )
//# 4062 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11852 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4065 "../../../src/fsharp/pars.fsy"
                             arbExpr("minusExpr2", (rhs parseState 1)) 
                   )
//# 4065 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11862 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4068 "../../../src/fsharp/pars.fsy"
                             SynExpr.InferredUpcast (_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 4068 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11873 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4071 "../../../src/fsharp/pars.fsy"
                             SynExpr.InferredDowncast (_2, unionRanges (rhs parseState 1) _2.Range)
                   )
//# 4071 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11884 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4074 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 4074 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11895 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4078 "../../../src/fsharp/pars.fsy"
                             SynExpr.App (ExprAtomicFlag.NonAtomic, false, _1, _2, unionRanges _1.Range _2.Range)  
                   )
//# 4078 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11907 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4081 "../../../src/fsharp/pars.fsy"
                             let arg, _ = _1 
                             arg 
                   )
//# 4081 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11919 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4086 "../../../src/fsharp/pars.fsy"
                             let arg2, hpa2 = _2 
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt arg2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             if hpa2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessiveArgsShouldBeSpacedOrTupled())
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) arg2.Range) ("~"+(_1)) arg2 
                   )
//# 4086 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11934 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4092 "../../../src/fsharp/pars.fsy"
                             let arg, hpa = _1 
                             if hpa then reportParseErrorAt arg.Range (FSComp.SR.parsSuccessiveArgsShouldBeSpacedOrTupled())
                             arg 
                   )
//# 4092 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 11947 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4098 "../../../src/fsharp/pars.fsy"
                             let arg1, _ = _1 
                             let arg2, _ = _3 
                             SynExpr.App (ExprAtomicFlag.Atomic, false, arg1, arg2, unionRanges arg1.Range arg2.Range), true  
                   )
//# 4098 "../../../src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 11961 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4103 "../../../src/fsharp/pars.fsy"
                             let arg1, _ = _1 
                             let arg2, _ = _3 
                             SynExpr.App (ExprAtomicFlag.Atomic, false, arg1, arg2, unionRanges arg1.Range arg2.Range), true  
                   )
//# 4103 "../../../src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 11975 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * bool     * SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4108 "../../../src/fsharp/pars.fsy"
                             let arg1, _ = _1 
                             let mLessThan, mGreaterThan, _, args, commas, mTypeArgs = _3
                             let mWholeExpr = unionRanges arg1.Range mTypeArgs
                             SynExpr.TypeApp (arg1, mLessThan, args, commas, mGreaterThan, mTypeArgs, mWholeExpr), false 
                   )
//# 4108 "../../../src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 11990 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4114 "../../../src/fsharp/pars.fsy"
                             let arg2, hpa2 = _2 
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt arg2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             mkSynPrefixPrim (rhs parseState 1) (unionRanges (rhs parseState 1) arg2.Range) _1 arg2, hpa2 
                   )
//# 4114 "../../../src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12004 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4119 "../../../src/fsharp/pars.fsy"
                             let arg1, hpa1 = _1 
                             _3 arg1 (lhs parseState) (rhs parseState 2), hpa1 
                   )
//# 4119 "../../../src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12017 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4123 "../../../src/fsharp/pars.fsy"
                             let arg1 = SynExpr.Ident (ident("base", rhs parseState 1))
                             _3 arg1 (lhs parseState) (rhs parseState 2), false 
                   )
//# 4123 "../../../src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12029 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4127 "../../../src/fsharp/pars.fsy"
                             SynExpr.LongIdent (true, LongIdentWithDots([_2], []), None, rhs parseState 2), false 
                   )
//# 4127 "../../../src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12040 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'dynamicArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4130 "../../../src/fsharp/pars.fsy"
                             let arg1, hpa1 = _1
                             mkSynInfix (rhs parseState 2) arg1 "?" _3, hpa1 
                   )
//# 4130 "../../../src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12053 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4134 "../../../src/fsharp/pars.fsy"
                             SynExpr.Ident (ident(MangledGlobalName, rhs parseState 1)), false 
                   )
//# 4134 "../../../src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12063 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4137 "../../../src/fsharp/pars.fsy"
                             _1, false 
                   )
//# 4137 "../../../src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12074 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4140 "../../../src/fsharp/pars.fsy"
                             _2 (lhs parseState) false, false 
                   )
//# 4140 "../../../src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12085 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4143 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()) 
                             exprFromParseError (_2 (rhs2 parseState 1 2) false), false 
                   )
//# 4143 "../../../src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12098 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4147 "../../../src/fsharp/pars.fsy"
                             // silent recovery 
                             SynExpr.ArrayOrList (false, [ ], lhs parseState), false  
                   )
//# 4147 "../../../src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12109 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4151 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()) 
                             // silent recovery 
                             exprFromParseError (SynExpr.ArrayOrList (false, [ ], rhs parseState 1)), false  
                   )
//# 4151 "../../../src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12122 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4156 "../../../src/fsharp/pars.fsy"
                             let exprs, commas = _3
                             let m = rhs2 parseState 1 4
                             SynExpr.Tuple (true, List.rev exprs, List.rev commas, m), false 
                   )
//# 4156 "../../../src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12136 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4161 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedBracket());
                             let exprs, commas = _3
                             let m = (rhs parseState 1, exprs) ||> unionRangeWithListBy (fun e -> e.Range)
                             SynExpr.Tuple (true, List.rev exprs, List.rev commas, m), false 
                   )
//# 4161 "../../../src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12151 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4167 "../../../src/fsharp/pars.fsy"
                             _1, false 
                   )
//# 4167 "../../../src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12162 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identOrOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4171 "../../../src/fsharp/pars.fsy"
                             let idm = rhs parseState 1 
                             (fun e lhsm dotm -> mkSynDot dotm lhsm e _1) 
                   )
//# 4171 "../../../src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12174 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4175 "../../../src/fsharp/pars.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt (rhs parseState 3) (FSComp.SR.nrGlobalUsedOnlyAsFirstName()) 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm.Start dotm.End // previous lhsm is wrong after 'recover'
                                 mkSynDotMissing dotm fixedLhsm e) 
                   )
//# 4175 "../../../src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12187 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4181 "../../../src/fsharp/pars.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt dotm (FSComp.SR.parsMissingQualificationAfterDot()) 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm.Start dotm.End // previous lhsm is wrong after 'recover'
                                 mkSynDotMissing dotm fixedLhsm e) 
                   )
//# 4181 "../../../src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12200 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4186 "../../../src/fsharp/pars.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt dotm (FSComp.SR.parsMissingQualificationAfterDot()) 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm.Start dotm.End // previous lhsm is wrong after 'recover'
                                 // Include 'e' in the returned expression but throw it away
                                 SynExpr.DiscardAfterMissingQualificationAfterDot (e, fixedLhsm)) 
                   )
//# 4186 "../../../src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12215 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4192 "../../../src/fsharp/pars.fsy"
                             (fun e lhsm dotm -> 
                                 libraryOnlyError(lhs parseState)
                                 SynExpr.LibraryOnlyUnionCaseFieldGet (e, mkSynCaseName lhsm opNameCons, (fst _5), lhsm)) 
                   )
//# 4192 "../../../src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12229 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4197 "../../../src/fsharp/pars.fsy"
                             (fun e lhsm dotm -> 
                                 mlCompatWarning (FSComp.SR.parsParenFormIsForML()) (lhs parseState) 
                                 mkSynDotParenGet lhsm dotm e _2) 
                   )
//# 4197 "../../../src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12243 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4202 "../../../src/fsharp/pars.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackGet lhsm dotm e _2 false) 
                   )
//# 4202 "../../../src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12254 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4205 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()) 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackGet lhsm dotm e _2 false)) 
                   )
//# 4205 "../../../src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12267 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRangeSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4209 "../../../src/fsharp/pars.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackSeqSliceGet lhsm dotm e _2) 
                   )
//# 4209 "../../../src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12278 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRangeSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4212 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()) 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackSeqSliceGet lhsm dotm e _2)) 
                   )
//# 4212 "../../../src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12291 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4216 "../../../src/fsharp/pars.fsy"
                             let mArg = rhs2 parseState 1 3
                             (fun e lhsm dotm -> mkSynDotBrackGet lhsm dotm e (arbExpr("indexerExpr1", mArg)) false) 
                   )
//# 4216 "../../../src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12302 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4220 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket())
                             let mArg = (rhs parseState 1).EndRange 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackGet lhsm dotm e (arbExpr("indexerExpr2", mArg)) false)) 
                   )
//# 4220 "../../../src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12315 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRangeSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4226 "../../../src/fsharp/pars.fsy"
                                                                            _1 :: _3 
                   )
//# 4226 "../../../src/fsharp/pars.fsy"
                 : 'optRangeSeqExpr));
//# 12327 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4228 "../../../src/fsharp/pars.fsy"
                                    [_1] 
                   )
//# 4228 "../../../src/fsharp/pars.fsy"
                 : 'optRangeSeqExpr));
//# 12338 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeDeclExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeDeclExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4232 "../../../src/fsharp/pars.fsy"
                             SynIndexerArg.Two(
                               mkSynOptionalExpr (rhs parseState 1) (Some (fst _1)),
                               (snd _1),
                               mkSynOptionalExpr (rhs parseState 3) (Some (fst _3)),
                               (snd _3),
                               (rhs parseState 1),
                               (rhs parseState 3)) 
                   )
//# 4232 "../../../src/fsharp/pars.fsy"
                 : 'optRange));
//# 12356 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeDeclExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4241 "../../../src/fsharp/pars.fsy"
                             SynIndexerArg.Two(
                               mkSynOptionalExpr (rhs parseState 1) (Some (fst _1)),
                               (snd _1),
                               mkSynOptionalExpr (rhs parseState 2) None,
                               false,
                               (rhs parseState 1),
                               (rhs parseState 2)) 
                   )
//# 4241 "../../../src/fsharp/pars.fsy"
                 : 'optRange));
//# 12373 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeDeclExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4250 "../../../src/fsharp/pars.fsy"
                             SynIndexerArg.Two(
                               mkSynOptionalExpr (rhs parseState 1) None,
                               false,
                               mkSynOptionalExpr (rhs parseState 2) (Some (fst _2)),
                               (snd _2),
                               (rhs parseState 2),
                               (rhs parseState 1)) 
                   )
//# 4250 "../../../src/fsharp/pars.fsy"
                 : 'optRange));
//# 12390 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4259 "../../../src/fsharp/pars.fsy"
                             SynIndexerArg.Two(
                               mkSynOptionalExpr (rhs parseState 1) None,
                               false,
                               (mkSynOptionalExpr (rhs parseState 1) None),
                               false,
                               (rhs parseState 1),
                               (rhs parseState 1)) 
                   )
//# 4259 "../../../src/fsharp/pars.fsy"
                 : 'optRange));
//# 12406 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeDeclExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4268 "../../../src/fsharp/pars.fsy"
                             SynIndexerArg.One((fst _1), (snd _1), (rhs parseState 1)) 
                   )
//# 4268 "../../../src/fsharp/pars.fsy"
                 : 'optRange));
//# 12417 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4272 "../../../src/fsharp/pars.fsy"
                           _1, false 
                   )
//# 4272 "../../../src/fsharp/pars.fsy"
                 : 'rangeDeclExpr));
//# 12428 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4275 "../../../src/fsharp/pars.fsy"
                           if not (parseState.LexBuffer.SupportsFeature LanguageFeature.FromEndSlicing) then 
                             raiseParseErrorAt (rhs parseState 1) (FSComp.SR.fromEndSlicingRequiresVFive())
                           if _1 <> "^" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInvalidPrefixOperator())
                           _2, true 
                   )
//# 4275 "../../../src/fsharp/pars.fsy"
                 : 'rangeDeclExpr));
//# 12443 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4283 "../../../src/fsharp/pars.fsy"
                             SynExpr.Const (fst _1, snd _1) 
                   )
//# 4283 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 12454 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4286 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 4286 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 12465 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4289 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 4289 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 12476 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceBarExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4292 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 4292 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 12487 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interpolatedString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4295 "../../../src/fsharp/pars.fsy"
                             let parts, synStringKind = _1
                             SynExpr.InterpolatedString(parts, synStringKind, rhs parseState 1) 
                   )
//# 4295 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 12499 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4299 "../../../src/fsharp/pars.fsy"
                             SynExpr.Null (lhs parseState) 
                   )
//# 4299 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 12509 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4302 "../../../src/fsharp/pars.fsy"
                             SynExpr.Const (SynConst.Bool false, lhs parseState) 
                   )
//# 4302 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 12519 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4305 "../../../src/fsharp/pars.fsy"
                             SynExpr.Const (SynConst.Bool true, lhs parseState) 
                   )
//# 4305 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 12529 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'quoteExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4308 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 4308 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 12540 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4311 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 4311 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 12551 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'beginEndExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4314 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 4314 "../../../src/fsharp/pars.fsy"
                 : SynExpr));
//# 12562 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4318 "../../../src/fsharp/pars.fsy"
                             SynExpr.Paren (_2, rhs parseState 1, Some(rhs parseState 3), rhs2 parseState 1 3) 
                   )
//# 4318 "../../../src/fsharp/pars.fsy"
                 : 'beginEndExpr));
//# 12573 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4321 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBegin()); exprFromParseError _2 
                   )
//# 4321 "../../../src/fsharp/pars.fsy"
                 : 'beginEndExpr));
//# 12585 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4324 "../../../src/fsharp/pars.fsy"
                             (* silent recovery *) arbExpr("beginEndExpr", (lhs parseState))  
                   )
//# 4324 "../../../src/fsharp/pars.fsy"
                 : 'beginEndExpr));
//# 12595 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4327 "../../../src/fsharp/pars.fsy"
                             mkSynUnit (lhs parseState) 
                   )
//# 4327 "../../../src/fsharp/pars.fsy"
                 : 'beginEndExpr));
//# 12605 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4331 "../../../src/fsharp/pars.fsy"
                             if _1 <> _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMismatchedQuote(fst _1))
                             (SynExpr.Quote (mkSynIdGet (lhs parseState) (CompileOpName (fst _1)), snd _1, _2, false, lhs parseState)) 
                   )
//# 4331 "../../../src/fsharp/pars.fsy"
                 : 'quoteExpr));
//# 12619 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4335 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatched(fst _1))  
                             let mExpr = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.Quote (mkSynIdGet (lhs parseState) (CompileOpName (fst _1)), snd _1, _2, false, mExpr))  
                   )
//# 4335 "../../../src/fsharp/pars.fsy"
                 : 'quoteExpr));
//# 12634 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4340 "../../../src/fsharp/pars.fsy"
                             (* silent recovery *) SynExpr.Quote (mkSynIdGet (lhs parseState) (CompileOpName (fst _1)), snd _1, arbExpr("quoteExpr", (rhs parseState 2)), false, lhs parseState)  
                   )
//# 4340 "../../../src/fsharp/pars.fsy"
                 : 'quoteExpr));
//# 12646 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4343 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatched(fst _1))
                             exprFromParseError (SynExpr.Quote (mkSynIdGet (lhs parseState) (CompileOpName (fst _1)), snd _1, arbExpr("quoteExpr2", (rhs parseState 1).EndRange), false, rhs parseState 1))  
                   )
//# 4343 "../../../src/fsharp/pars.fsy"
                 : 'quoteExpr));
//# 12659 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4348 "../../../src/fsharp/pars.fsy"
                              _2 (lhs parseState) true 
                   )
//# 4348 "../../../src/fsharp/pars.fsy"
                 : 'arrayExpr));
//# 12670 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4351 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracketBar()) 
                             exprFromParseError (_2 (rhs2 parseState 1 2) true) 
                   )
//# 4351 "../../../src/fsharp/pars.fsy"
                 : 'arrayExpr));
//# 12683 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4355 "../../../src/fsharp/pars.fsy"
                              (* silent recovery *) SynExpr.ArrayOrList (true, [ ], lhs parseState) 
                   )
//# 4355 "../../../src/fsharp/pars.fsy"
                 : 'arrayExpr));
//# 12693 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4358 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracketBar())  
                             (* silent recovery *) 
                             exprFromParseError (SynExpr.ArrayOrList (true, [ ], rhs parseState 1)) 
                   )
//# 4358 "../../../src/fsharp/pars.fsy"
                 : 'arrayExpr));
//# 12706 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4364 "../../../src/fsharp/pars.fsy"
                             SynExpr.Const (SynConst.Unit, (rhs2 parseState 1 2)) 
                   )
//# 4364 "../../../src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12717 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4367 "../../../src/fsharp/pars.fsy"
                             let m = rhs2 parseState 1 3
                             SynExpr.Paren (_2 m, rhs parseState 1, Some(rhs parseState 3), m) 
                   )
//# 4367 "../../../src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12730 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_other_than_rparen_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4371 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).End
                             SynExpr.Paren (exprFromParseError (_2 lhsm), rhs parseState 1, None, lhsm) 
                   )
//# 4371 "../../../src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12744 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4376 "../../../src/fsharp/pars.fsy"
                             // silent recovery
                             SynExpr.Paren (arbExpr("parenExpr1", (rhs parseState 1).EndRange), (rhs parseState 1), Some(rhs parseState 3), (rhs2 parseState 1 3)) 
                   )
//# 4376 "../../../src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12756 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4380 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2tcs", lhsm) 
                   )
//# 4380 "../../../src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12768 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4385 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2mcs", lhsm) 
                   )
//# 4385 "../../../src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12780 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4390 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2rbcs", lhsm) 
                   )
//# 4390 "../../../src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12792 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4395 "../../../src/fsharp/pars.fsy"
                             let lparenRange = (rhs parseState 1)
                             reportParseErrorAt lparenRange (FSComp.SR.parsUnmatchedParen())
                             SynExpr.Paren(arbExpr("parenExpr2obecs", lparenRange.EndRange), lparenRange, None, lparenRange) 
                   )
//# 4395 "../../../src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12804 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4400 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()) 
                             arbExpr("parenExpr2", (lhs parseState))  
                   )
//# 4400 "../../../src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12816 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypars)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4412 "../../../src/fsharp/pars.fsy"
                             (fun m -> SynExpr.TraitCall (_1, _4, _6, m)) 
                   )
//# 4412 "../../../src/fsharp/pars.fsy"
                 : 'parenExprBody));
//# 12830 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4415 "../../../src/fsharp/pars.fsy"
                             (fun _m -> _1) 
                   )
//# 4415 "../../../src/fsharp/pars.fsy"
                 : 'parenExprBody));
//# 12841 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'inlineAssemblyExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4418 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 4418 "../../../src/fsharp/pars.fsy"
                 : 'parenExprBody));
//# 12852 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4422 "../../../src/fsharp/pars.fsy"
                             [_1] 
                   )
//# 4422 "../../../src/fsharp/pars.fsy"
                 : 'staticallyKnownHeadTypars));
//# 12863 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTyparAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4425 "../../../src/fsharp/pars.fsy"
                             List.rev _2 
                   )
//# 4425 "../../../src/fsharp/pars.fsy"
                 : 'staticallyKnownHeadTypars));
//# 12875 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTyparAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4429 "../../../src/fsharp/pars.fsy"
                            _3 :: _1
                   )
//# 4429 "../../../src/fsharp/pars.fsy"
                 : 'staticallyKnownHeadTyparAlts));
//# 12887 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4432 "../../../src/fsharp/pars.fsy"
                             [_1] 
                   )
//# 4432 "../../../src/fsharp/pars.fsy"
                 : 'staticallyKnownHeadTyparAlts));
//# 12898 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4436 "../../../src/fsharp/pars.fsy"
                             let m, r = _2 in r (rhs2 parseState 1 3) 
                   )
//# 4436 "../../../src/fsharp/pars.fsy"
                 : 'braceExpr));
//# 12911 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4439 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace())  
                            let m, r = _2 
                            // Note, we can't use 'exprFromParseError' because the extra syntax node interferes with some syntax-directed transformations for computation expressions
                            r (unionRanges (rhs parseState 1) m) 
                   )
//# 4439 "../../../src/fsharp/pars.fsy"
                 : 'braceExpr));
//# 12927 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4445 "../../../src/fsharp/pars.fsy"
                            // silent recovery 
                            arbExpr("braceExpr", rhs2 parseState 1 3)  
                   )
//# 4445 "../../../src/fsharp/pars.fsy"
                 : 'braceExpr));
//# 12940 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4449 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace())  
                            // Note, we can't use 'exprFromParseError' because the extra syntax node interferes with some syntax-directed transformations for computation expressions
                            SynExpr.Record (None, None, [], rhs parseState 1) 
                   )
//# 4449 "../../../src/fsharp/pars.fsy"
                 : 'braceExpr));
//# 12954 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4454 "../../../src/fsharp/pars.fsy"
                             let m = rhs2 parseState 1 2 
                             SynExpr.Record (None, None, [], m) 
                   )
//# 4454 "../../../src/fsharp/pars.fsy"
                 : 'braceExpr));
//# 12967 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4459 "../../../src/fsharp/pars.fsy"
                             (lhs parseState), (fun m -> let a, b, c = _1 in SynExpr.Record (a, b, c, m)) 
                   )
//# 4459 "../../../src/fsharp/pars.fsy"
                 : 'braceExprBody));
//# 12978 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4462 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 4462 "../../../src/fsharp/pars.fsy"
                 : 'braceExprBody));
//# 12989 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4465 "../../../src/fsharp/pars.fsy"
                            let m, r = _1 in (m, r false) 
                   )
//# 4465 "../../../src/fsharp/pars.fsy"
                 : 'braceExprBody));
//# 13000 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4469 "../../../src/fsharp/pars.fsy"
                            let m, r = _1 in (fun lhsm isArray -> SynExpr.ArrayOrListOfSeqExpr (isArray, r true m, lhsm)) 
                   )
//# 4469 "../../../src/fsharp/pars.fsy"
                 : 'listExprElements));
//# 13011 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4472 "../../../src/fsharp/pars.fsy"
                            (fun lhsm isArray -> SynExpr.ArrayOrList (isArray, [ ], lhsm)) 
                   )
//# 4472 "../../../src/fsharp/pars.fsy"
                 : 'listExprElements));
//# 13021 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4476 "../../../src/fsharp/pars.fsy"
                            _1.Range, (fun isArrayOrList lhsm -> SynExpr.CompExpr (isArrayOrList, ref(isArrayOrList), _1, lhsm)) 
                   )
//# 4476 "../../../src/fsharp/pars.fsy"
                 : 'monadicExprInitial));
//# 13032 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4479 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 4479 "../../../src/fsharp/pars.fsy"
                 : 'monadicExprInitial));
//# 13043 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4483 "../../../src/fsharp/pars.fsy"
                            let opm = (rhs parseState 2)
                            (unionRanges _1.Range _3.Range), (fun _isArray wholem -> 
                                                                     // in the case of "{ 1 .. 10 }", we want the range of the expression to include the curlies, that comes from a higher level rule in the grammar,
                                                                     // passed down as 'wholem', so patch up that range here
                                                                     match (mkSynInfix opm _1 ".." _3) with
                                                                     | SynExpr.App (a, b, c, d, _) -> SynExpr.App (a, b, c, d, wholem)
                                                                     | _ -> failwith "impossible") 
                   )
//# 4483 "../../../src/fsharp/pars.fsy"
                 : 'rangeSequenceExpr));
//# 13061 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4492 "../../../src/fsharp/pars.fsy"
                            (unionRanges _1.Range _5.Range), (fun _isArray wholem -> mkSynTrifix wholem ".. .." _1 _3 _5) 
                   )
//# 4492 "../../../src/fsharp/pars.fsy"
                 : 'rangeSequenceExpr));
//# 13074 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4495 "../../../src/fsharp/pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileExpression())
                            let opm = (rhs parseState 2)
                            let e = arbExpr("rangeSeqError1", (rhs parseState 3).StartRange)
                            (unionRanges _1.Range e.Range), (fun _isArray wholem -> 
                                                                     // in the case of "{ 1 .. 10 }", we want the range of the expression to include the curlies, that comes from a higher level rule in the grammar,
                                                                     // passed down as 'wholem', so patch up that range here
                                                                     match (mkSynInfix opm _1 ".." e) with
                                                                     | SynExpr.App (a, b, c, d, _) -> SynExpr.App (a, b, c, d, wholem)
                                                                     | _ -> failwith "impossible") 
                   )
//# 4495 "../../../src/fsharp/pars.fsy"
                 : 'rangeSequenceExpr));
//# 13094 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4508 "../../../src/fsharp/pars.fsy"
                            SynExpr.YieldOrReturn ((true, false), _2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 4508 "../../../src/fsharp/pars.fsy"
                 : 'arrowThenExprR));
//# 13105 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4513 "../../../src/fsharp/pars.fsy"
                            (_1, _3, true) 
                   )
//# 4513 "../../../src/fsharp/pars.fsy"
                 : 'forLoopBinder));
//# 13117 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4516 "../../../src/fsharp/pars.fsy"
                            let m, r = _3 in (_1, r false m, true) 
                   )
//# 4516 "../../../src/fsharp/pars.fsy"
                 : 'forLoopBinder));
//# 13129 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4519 "../../../src/fsharp/pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                            (_1, arbExpr("forLoopBinder", (rhs parseState 2)), false) 
                   )
//# 4519 "../../../src/fsharp/pars.fsy"
                 : 'forLoopBinder));
//# 13142 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4523 "../../../src/fsharp/pars.fsy"
                            if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInOrEqualExpected())
                            (_1, arbExpr("forLoopBinder2", (rhs parseState 1).EndRange), false) 
                   )
//# 4523 "../../../src/fsharp/pars.fsy"
                 : 'forLoopBinder));
//# 13155 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopDirection)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4528 "../../../src/fsharp/pars.fsy"
                             idOfPat parseState (rhs parseState 1) _1, _3, _4, _5 
                   )
//# 4528 "../../../src/fsharp/pars.fsy"
                 : 'forLoopRange));
//# 13169 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4531 "../../../src/fsharp/pars.fsy"
                            raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedSymbolEqualsInsteadOfIn()) 
                   )
//# 4531 "../../../src/fsharp/pars.fsy"
                 : 'forLoopRange));
//# 13181 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4534 "../../../src/fsharp/pars.fsy"
                                  true 
                   )
//# 4534 "../../../src/fsharp/pars.fsy"
                 : 'forLoopDirection));
//# 13191 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4536 "../../../src/fsharp/pars.fsy"
                                  false 
                   )
//# 4536 "../../../src/fsharp/pars.fsy"
                 : 'forLoopDirection));
//# 13201 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inlineAssemblyTypeArg)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'optCurriedArgExprs)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optInlineAssemblyReturnTypes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4540 "../../../src/fsharp/pars.fsy"
                             libraryOnlyWarning (lhs parseState)
                             let (s, _), sm = _2, rhs parseState 2
                             (fun m ->
                                 let ilInstrs = ParseAssemblyCodeInstructions s parseState.LexBuffer.SupportsFeature sm
                                 SynExpr.LibraryOnlyILAssembly (box ilInstrs, _3, List.rev _4, _5, m)) 
                   )
//# 4540 "../../../src/fsharp/pars.fsy"
                 : 'inlineAssemblyExpr));
//# 13219 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optCurriedArgExprs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4548 "../../../src/fsharp/pars.fsy"
                             _2 :: _1 
                   )
//# 4548 "../../../src/fsharp/pars.fsy"
                 : 'optCurriedArgExprs));
//# 13231 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4551 "../../../src/fsharp/pars.fsy"
                             [] 
                   )
//# 4551 "../../../src/fsharp/pars.fsy"
                 : 'optCurriedArgExprs));
//# 13241 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4555 "../../../src/fsharp/pars.fsy"
                             None 
                   )
//# 4555 "../../../src/fsharp/pars.fsy"
                 : 'opt_atomicExprAfterType));
//# 13251 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4558 "../../../src/fsharp/pars.fsy"
                             Some(_1) 
                   )
//# 4558 "../../../src/fsharp/pars.fsy"
                 : 'opt_atomicExprAfterType));
//# 13262 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4562 "../../../src/fsharp/pars.fsy"
                             [] 
                   )
//# 4562 "../../../src/fsharp/pars.fsy"
                 : 'opt_inlineAssemblyTypeArg));
//# 13272 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4565 "../../../src/fsharp/pars.fsy"
                              [_3] 
                   )
//# 4565 "../../../src/fsharp/pars.fsy"
                 : 'opt_inlineAssemblyTypeArg));
//# 13285 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4569 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 4569 "../../../src/fsharp/pars.fsy"
                 : 'optInlineAssemblyReturnTypes));
//# 13295 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4572 "../../../src/fsharp/pars.fsy"
                            [_2] 
                   )
//# 4572 "../../../src/fsharp/pars.fsy"
                 : 'optInlineAssemblyReturnTypes));
//# 13306 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4575 "../../../src/fsharp/pars.fsy"
                             [] 
                   )
//# 4575 "../../../src/fsharp/pars.fsy"
                 : 'optInlineAssemblyReturnTypes));
//# 13317 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4579 "../../../src/fsharp/pars.fsy"
                            let arg = match _4 with None -> mkSynUnit (lhs parseState) | Some e -> e 
                            let l = List.rev _5
                            let dummyField = mkRecdField (LongIdentWithDots([], [])) // dummy identifier, it will be discarded
                            let l = rebindRanges (dummyField, None) l _6 
                            let (_, _, inheritsSep) = List.head l
                            let bindings = List.tail l
                            (Some (_2, arg, rhs2 parseState 2 4, inheritsSep, rhs parseState 1), None, bindings) 
                   )
//# 4579 "../../../src/fsharp/pars.fsy"
                 : 'recdExpr));
//# 13338 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprCore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4588 "../../../src/fsharp/pars.fsy"
                           let a, b = _1 in (None, a, b) 
                   )
//# 4588 "../../../src/fsharp/pars.fsy"
                 : 'recdExpr));
//# 13349 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4592 "../../../src/fsharp/pars.fsy"
                            match _1 with 
                            | LongOrSingleIdent(false, (LongIdentWithDots(_, _) as f), None, m) ->  
                                 let f = mkRecdField f
                                 let l = List.rev _4
                                 let l = rebindRanges (f, Some _3) l _5
                                 (None, l)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsFieldBinding()) 
                   )
//# 4592 "../../../src/fsharp/pars.fsy"
                 : 'recdExprCore));
//# 13369 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4605 "../../../src/fsharp/pars.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())
                           reportParseErrorAt m (FSComp.SR.parsFieldBinding())
                           let f = mkUnderscoreRecdField m
                           (None, [ (f, None, None)  ]) 
                   )
//# 4605 "../../../src/fsharp/pars.fsy"
                 : 'recdExprCore));
//# 13383 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4612 "../../../src/fsharp/pars.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())      
                           let f = mkUnderscoreRecdField m
                           reportParseErrorAt (rhs2 parseState 1 2) (FSComp.SR.parsFieldBinding())
                           
                           (None, [ (f, None, None) ]) 
                   )
//# 4612 "../../../src/fsharp/pars.fsy"
                 : 'recdExprCore));
//# 13398 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4621 "../../../src/fsharp/pars.fsy"
                           reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnderscoreInvalidFieldName())
                           let f = mkUnderscoreRecdField (rhs parseState 1)
                           let l = List.rev _4
                           let l = rebindRanges (f, Some _3) l _5
                           (None, l) 
                   )
//# 4621 "../../../src/fsharp/pars.fsy"
                 : 'recdExprCore));
//# 13415 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4629 "../../../src/fsharp/pars.fsy"
                             let l = List.rev _4
                             let l = rebindRanges _3 l _5
                             (Some (_1, (rhs parseState 2, None)), l) 
                   )
//# 4629 "../../../src/fsharp/pars.fsy"
                 : 'recdExprCore));
//# 13431 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4634 "../../../src/fsharp/pars.fsy"
                            (Some (_1, (rhs parseState 2, None)), []) 
                   )
//# 4634 "../../../src/fsharp/pars.fsy"
                 : 'recdExprCore));
//# 13443 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4637 "../../../src/fsharp/pars.fsy"
                             let l = List.rev _4
                             let l = rebindRanges _3 l _5
                             (Some (_1, (rhs parseState 2, None)), l) 
                   )
//# 4637 "../../../src/fsharp/pars.fsy"
                 : 'recdExprCore));
//# 13459 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4643 "../../../src/fsharp/pars.fsy"
                            Some _1 
                   )
//# 4643 "../../../src/fsharp/pars.fsy"
                 : 'opt_seps_recd));
//# 13470 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4646 "../../../src/fsharp/pars.fsy"
                            None 
                   )
//# 4646 "../../../src/fsharp/pars.fsy"
                 : 'opt_seps_recd));
//# 13480 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4650 "../../../src/fsharp/pars.fsy"
                            (rhs parseState 1), None 
                   )
//# 4650 "../../../src/fsharp/pars.fsy"
                 : 'seps_recd));
//# 13490 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4653 "../../../src/fsharp/pars.fsy"
                            let m = (rhs parseState 1) in (m, Some m.End) 
                   )
//# 4653 "../../../src/fsharp/pars.fsy"
                 : 'seps_recd));
//# 13500 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4656 "../../../src/fsharp/pars.fsy"
                            (rhs2 parseState 1 2), Some (rhs parseState 1).End 
                   )
//# 4656 "../../../src/fsharp/pars.fsy"
                 : 'seps_recd));
//# 13510 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4659 "../../../src/fsharp/pars.fsy"
                            (rhs2 parseState 1 2), Some (rhs parseState 2).End 
                   )
//# 4659 "../../../src/fsharp/pars.fsy"
                 : 'seps_recd));
//# 13520 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4665 "../../../src/fsharp/pars.fsy"
                           mkRecdField _1 
                   )
//# 4665 "../../../src/fsharp/pars.fsy"
                 : 'pathOrUnderscore));
//# 13531 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4668 "../../../src/fsharp/pars.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())
                           mkUnderscoreRecdField m 
                   )
//# 4668 "../../../src/fsharp/pars.fsy"
                 : 'pathOrUnderscore));
//# 13543 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps_recd)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4674 "../../../src/fsharp/pars.fsy"
                            (_3, Some _2) :: _1 
                   )
//# 4674 "../../../src/fsharp/pars.fsy"
                 : 'recdExprBindings));
//# 13556 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4677 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 4677 "../../../src/fsharp/pars.fsy"
                 : 'recdExprBindings));
//# 13566 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4681 "../../../src/fsharp/pars.fsy"
                            (_1, Some _3) 
                   )
//# 4681 "../../../src/fsharp/pars.fsy"
                 : 'recdBinding));
//# 13578 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4684 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                            (_1, None) 
                   )
//# 4684 "../../../src/fsharp/pars.fsy"
                 : 'recdBinding));
//# 13590 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4688 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                            (_1, None) 
                   )
//# 4688 "../../../src/fsharp/pars.fsy"
                 : 'recdBinding));
//# 13603 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4692 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                            (_1, None) 
                   )
//# 4692 "../../../src/fsharp/pars.fsy"
                 : 'recdBinding));
//# 13615 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4696 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                            (_1, None) 
                   )
//# 4696 "../../../src/fsharp/pars.fsy"
                 : 'recdBinding));
//# 13628 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBaseCall)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4707 "../../../src/fsharp/pars.fsy"
                            let mNewExpr = rhs parseState 1
                            let fullRange = match _4 with [] -> (rhs parseState 1) | _ -> (rhs2 parseState 1 4)
                            fullRange, (fun m -> let (a, b) = _1 in SynExpr.ObjExpr (a, b, _2, _4, mNewExpr, m)) 
                   )
//# 4707 "../../../src/fsharp/pars.fsy"
                 : 'objExpr));
//# 13644 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBaseCall)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4712 "../../../src/fsharp/pars.fsy"
                            let mNewExpr = rhs parseState 1 
                            let fullRange = match _3 with [] -> (rhs parseState 1) | _ -> (rhs2 parseState 1 3)
                            fullRange, (fun m -> let (a, b) = _1 in SynExpr.ObjExpr (a, b, [], _3, mNewExpr, m)) 
                   )
//# 4712 "../../../src/fsharp/pars.fsy"
                 : 'objExpr));
//# 13659 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4717 "../../../src/fsharp/pars.fsy"
                            let mNewExpr = rhs parseState 1 
                            (rhs2 parseState 1 2), (fun m -> let (a, b) = _2, None in SynExpr.ObjExpr (a, b, [], [], mNewExpr, m)) 
                   )
//# 4717 "../../../src/fsharp/pars.fsy"
                 : 'objExpr));
//# 13671 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'baseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4722 "../../../src/fsharp/pars.fsy"
                            (_2, Some(_4, Some(_5))) 
                   )
//# 4722 "../../../src/fsharp/pars.fsy"
                 : 'objExprBaseCall));
//# 13685 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4725 "../../../src/fsharp/pars.fsy"
                            (_2, Some(_4, None)) 
                   )
//# 4725 "../../../src/fsharp/pars.fsy"
                 : 'objExprBaseCall));
//# 13698 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4728 "../../../src/fsharp/pars.fsy"
                            _2, None 
                   )
//# 4728 "../../../src/fsharp/pars.fsy"
                 : 'objExprBaseCall));
//# 13709 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4734 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 4734 "../../../src/fsharp/pars.fsy"
                 : 'opt_objExprBindings));
//# 13720 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4737 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 4737 "../../../src/fsharp/pars.fsy"
                 : 'opt_objExprBindings));
//# 13730 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4741 "../../../src/fsharp/pars.fsy"
                             let mWithKwd = (rhs parseState 1)
                             let _localBindingsLastRange, localBindingsBuilder = _2 
                             localBindingsBuilder [] None mWithKwd 
                   )
//# 4741 "../../../src/fsharp/pars.fsy"
                 : 'objExprBindings));
//# 13743 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4746 "../../../src/fsharp/pars.fsy"
                             let mWithKwd = (rhs parseState 1)
                             let _localBindingsLastRange, localBindingsBuilder = _2 
                             localBindingsBuilder [] None mWithKwd 
                   )
//# 4746 "../../../src/fsharp/pars.fsy"
                 : 'objExprBindings));
//# 13756 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4751 "../../../src/fsharp/pars.fsy"
                             _2 |> 
                             (List.choose (function 
                                               | SynMemberDefn.Member(b, m) -> Some b
                                               | SynMemberDefn.AutoProperty(_, _, _, _, _, _, _, _, _, _, m) -> errorR(Error(FSComp.SR.parsIllegalMemberVarInObjectImplementation(), m)); None
                                               | x -> errorR(Error(FSComp.SR.parsMemberIllegalInObjectImplementation(), x.Range)); None)) 
                   )
//# 4751 "../../../src/fsharp/pars.fsy"
                 : 'objExprBindings));
//# 13772 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterface)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4758 "../../../src/fsharp/pars.fsy"
                                                                  _1 :: _2 
                   )
//# 4758 "../../../src/fsharp/pars.fsy"
                 : 'objExprInterfaces));
//# 13784 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4762 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 4762 "../../../src/fsharp/pars.fsy"
                 : 'opt_objExprInterfaces));
//# 13794 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterface)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4765 "../../../src/fsharp/pars.fsy"
                            _1 :: _2 
                   )
//# 4765 "../../../src/fsharp/pars.fsy"
                 : 'opt_objExprInterfaces));
//# 13806 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4768 "../../../src/fsharp/pars.fsy"
                            (* silent recovery *) _2 
                   )
//# 4768 "../../../src/fsharp/pars.fsy"
                 : 'opt_objExprInterfaces));
//# 13817 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprBindings)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declEnd)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4772 "../../../src/fsharp/pars.fsy"
                           SynInterfaceImpl(_2, _3, lhs parseState) 
                   )
//# 4772 "../../../src/fsharp/pars.fsy"
                 : 'objExprInterface));
//# 13832 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceBarExprCore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4776 "../../../src/fsharp/pars.fsy"
                             _2 true 
                   )
//# 4776 "../../../src/fsharp/pars.fsy"
                 : 'braceBarExpr));
//# 13843 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceBarExprCore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4779 "../../../src/fsharp/pars.fsy"
                             _1 false 
                   )
//# 4779 "../../../src/fsharp/pars.fsy"
                 : 'braceBarExpr));
//# 13854 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprCore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bar_rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4783 "../../../src/fsharp/pars.fsy"
                            let orig, flds = _2
                            let flds = 
                                flds |> List.choose (function 
                                  | ((LongIdentWithDots([id], _), _), Some e, _) -> Some (id, e) 
                                  | ((LongIdentWithDots([id], _), _), None, _) -> Some (id, arbExpr("anonField", id.idRange)) 
                                  | _ -> reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInvalidAnonRecdType()); None) 
                            let m = rhs2 parseState 1 3
                            (fun isStruct -> SynExpr.AnonRecd (isStruct, orig, flds, m)) 
                   )
//# 4783 "../../../src/fsharp/pars.fsy"
                 : 'braceBarExprCore));
//# 13873 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprCore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4793 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBraceBar())  
                            let orig, flds = _2 
                            let flds = 
                                flds |> List.choose (function 
                                  | ((LongIdentWithDots([id], _), _), Some e, _) -> Some (id, e) 
                                  | ((LongIdentWithDots([id], _), _), None, _) -> Some (id, arbExpr("anonField", id.idRange)) 
                                  | _ -> reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInvalidAnonRecdType()); None) 
                            let m = rhs2 parseState 1 2
                            (fun isStruct -> SynExpr.AnonRecd (isStruct, orig, flds, m)) 
                   )
//# 4793 "../../../src/fsharp/pars.fsy"
                 : 'braceBarExprCore));
//# 13893 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bar_rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4804 "../../../src/fsharp/pars.fsy"
                            // silent recovery 
                            let m = rhs2 parseState 1 3
                            (fun _ -> arbExpr("braceBarExpr", m)) 
                   )
//# 4804 "../../../src/fsharp/pars.fsy"
                 : 'braceBarExprCore));
//# 13906 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4809 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBraceBar())  
                            let m = rhs2 parseState 1 1
                            (fun isStruct -> SynExpr.AnonRecd (isStruct, None, [], m)) 
                   )
//# 4809 "../../../src/fsharp/pars.fsy"
                 : 'braceBarExprCore));
//# 13919 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'bar_rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4814 "../../../src/fsharp/pars.fsy"
                            let m = rhs2 parseState 1 2
                            (fun isStruct -> SynExpr.AnonRecd (isStruct, None, [], m)) 
                   )
//# 4814 "../../../src/fsharp/pars.fsy"
                 : 'braceBarExprCore));
//# 13931 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4819 "../../../src/fsharp/pars.fsy"
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 _4 
                   )
//# 4819 "../../../src/fsharp/pars.fsy"
                 : 'anonLambdaExpr));
//# 13944 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4823 "../../../src/fsharp/pars.fsy"
                            let mAll = rhs2 parseState 1 3
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 (arbExpr("anonLambdaExpr1", (rhs parseState 4))) 
                   )
//# 4823 "../../../src/fsharp/pars.fsy"
                 : 'anonLambdaExpr));
//# 13956 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4827 "../../../src/fsharp/pars.fsy"
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 _4 
                   )
//# 4827 "../../../src/fsharp/pars.fsy"
                 : 'anonLambdaExpr));
//# 13969 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4831 "../../../src/fsharp/pars.fsy"
                            if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFunBody());
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 _4) 
                   )
//# 4831 "../../../src/fsharp/pars.fsy"
                 : 'anonLambdaExpr));
//# 13984 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4836 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs2 parseState 1 3) (FSComp.SR.parsMissingFunctionBody())
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs2 parseState 1 3) _2 (arbExpr("anonLambdaExpr2", (rhs parseState 4))) 
                   )
//# 4836 "../../../src/fsharp/pars.fsy"
                 : 'anonLambdaExpr));
//# 13996 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4840 "../../../src/fsharp/pars.fsy"
                            if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFunBody())
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs2 parseState 1 3) _2 (arbExpr("anonLambdaExpr3", (rhs parseState 4)))) 
                   )
//# 4840 "../../../src/fsharp/pars.fsy"
                 : 'anonLambdaExpr));
//# 14009 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4844 "../../../src/fsharp/pars.fsy"
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs2 parseState 1 2) _2 (arbExpr("anonLambdaExpr4", (rhs parseState 3)))) 
                   )
//# 4844 "../../../src/fsharp/pars.fsy"
                 : 'anonLambdaExpr));
//# 14020 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4847 "../../../src/fsharp/pars.fsy"
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs parseState 1) [] (arbExpr("anonLambdaExpr5", (rhs parseState 2)))) 
                   )
//# 4847 "../../../src/fsharp/pars.fsy"
                 : 'anonLambdaExpr));
//# 14030 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4851 "../../../src/fsharp/pars.fsy"
                            let clauses, mLast = _2
                            let mAll = unionRanges (rhs parseState 1) mLast
                            SynExpr.MatchLambda (false, (rhs parseState 1), clauses, DebugPointAtBinding.NoneAtInvisible, mAll) 
                   )
//# 4851 "../../../src/fsharp/pars.fsy"
                 : 'anonMatchingExpr));
//# 14043 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4856 "../../../src/fsharp/pars.fsy"
                            let clauses, mLast = _2
                            let mAll = unionRanges (rhs parseState 1) mLast
                            SynExpr.MatchLambda (false, (rhs parseState 1), clauses, DebugPointAtBinding.NoneAtInvisible, mAll) 
                   )
//# 4856 "../../../src/fsharp/pars.fsy"
                 : 'anonMatchingExpr));
//# 14056 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4865 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 4865 "../../../src/fsharp/pars.fsy"
                 : 'typeWithTypeConstraints));
//# 14067 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4868 "../../../src/fsharp/pars.fsy"
                            SynType.WithGlobalConstraints(_1, List.rev _3, lhs parseState) 
                   )
//# 4868 "../../../src/fsharp/pars.fsy"
                 : 'typeWithTypeConstraints));
//# 14079 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4872 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 4872 "../../../src/fsharp/pars.fsy"
                 : 'topTypeWithTypeConstraints));
//# 14090 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4875 "../../../src/fsharp/pars.fsy"
                            let ty, arity = _1 
                            // nb. it doesn't matter where the constraints go in the structure of the type. 
                            SynType.WithGlobalConstraints(ty, List.rev _3, lhs parseState), arity 
                   )
//# 4875 "../../../src/fsharp/pars.fsy"
                 : 'topTypeWithTypeConstraints));
//# 14104 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4881 "../../../src/fsharp/pars.fsy"
                            None 
                   )
//# 4881 "../../../src/fsharp/pars.fsy"
                 : 'opt_topReturnTypeWithTypeConstraints));
//# 14114 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4884 "../../../src/fsharp/pars.fsy"
                            let ty, arity = _2 
                            let arity = (match arity with SynValInfo([], rmdata)-> rmdata | _ -> SynInfo.unnamedRetVal)
                            Some (SynReturnInfo((ty, arity), rhs parseState 2)) 
                   )
//# 4884 "../../../src/fsharp/pars.fsy"
                 : 'opt_topReturnTypeWithTypeConstraints));
//# 14127 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4890 "../../../src/fsharp/pars.fsy"
                            let dty, dmdata= _1 
                            let rty, (SynValInfo(dmdatas, rmdata)) = _3 
                            SynType.Fun(dty, rty, lhs parseState), (SynValInfo(dmdata :: dmdatas, rmdata)) 
                   )
//# 4890 "../../../src/fsharp/pars.fsy"
                 : 'topType));
//# 14141 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4895 "../../../src/fsharp/pars.fsy"
                            let ty, rmdata = _1 in ty, (SynValInfo([], (match rmdata with [md] -> md | _ -> SynInfo.unnamedRetVal))) 
                   )
//# 4895 "../../../src/fsharp/pars.fsy"
                 : 'topType));
//# 14152 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4899 "../../../src/fsharp/pars.fsy"
                            let ty, mdata = _1 in let tys, mdatas = List.unzip _3 in (SynType.Tuple(false, List.map (fun ty -> (false, ty)) (ty :: tys), lhs parseState)), (mdata :: mdatas) 
                   )
//# 4899 "../../../src/fsharp/pars.fsy"
                 : 'topTupleType));
//# 14164 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4902 "../../../src/fsharp/pars.fsy"
                            let ty, mdata = _1 in ty, [mdata] 
                   )
//# 4902 "../../../src/fsharp/pars.fsy"
                 : 'topTupleType));
//# 14175 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4906 "../../../src/fsharp/pars.fsy"
                            _1 :: _3 
                   )
//# 4906 "../../../src/fsharp/pars.fsy"
                 : 'topTupleTypeElements));
//# 14187 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4909 "../../../src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 4909 "../../../src/fsharp/pars.fsy"
                 : 'topTupleTypeElements));
//# 14198 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4913 "../../../src/fsharp/pars.fsy"
                            match _2 with 
                            | SynType.LongIdent(LongIdentWithDots([id], _)) -> _4, SynArgInfo(_1, false, Some id)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsSyntaxErrorInLabeledType())  
                   )
//# 4913 "../../../src/fsharp/pars.fsy"
                 : 'topAppType));
//# 14213 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4918 "../../../src/fsharp/pars.fsy"
                            _5, SynArgInfo(_1, true, Some _3) 
                   )
//# 4918 "../../../src/fsharp/pars.fsy"
                 : 'topAppType));
//# 14226 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4921 "../../../src/fsharp/pars.fsy"
                            (_2, SynArgInfo(_1, false, None)) 
                   )
//# 4921 "../../../src/fsharp/pars.fsy"
                 : 'topAppType));
//# 14238 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4924 "../../../src/fsharp/pars.fsy"
                            match _1 with 
                            | SynType.LongIdent(LongIdentWithDots([id], _)) -> _3, SynArgInfo([], false, Some id)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsSyntaxErrorInLabeledType())  
                   )
//# 4924 "../../../src/fsharp/pars.fsy"
                 : 'topAppType));
//# 14252 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4929 "../../../src/fsharp/pars.fsy"
                            _4, SynArgInfo([], true, Some _2) 
                   )
//# 4929 "../../../src/fsharp/pars.fsy"
                 : 'topAppType));
//# 14264 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4932 "../../../src/fsharp/pars.fsy"
                            _1, SynArgInfo([], false, None) 
                   )
//# 4932 "../../../src/fsharp/pars.fsy"
                 : 'topAppType));
//# 14275 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4938 "../../../src/fsharp/pars.fsy"
                            SynType.Fun(_1, _3, lhs parseState) 
                   )
//# 4938 "../../../src/fsharp/pars.fsy"
                 : SynType));
//# 14287 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4941 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 4941 "../../../src/fsharp/pars.fsy"
                 : SynType));
//# 14298 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4944 "../../../src/fsharp/pars.fsy"
                                   checkEndOfFileError _2; _1 
                   )
//# 4944 "../../../src/fsharp/pars.fsy"
                 : SynType));
//# 14310 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4949 "../../../src/fsharp/pars.fsy"
                           SynType.Tuple(false, (false, _1) :: _3, lhs parseState) 
                   )
//# 4949 "../../../src/fsharp/pars.fsy"
                 : 'tupleType));
//# 14322 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4952 "../../../src/fsharp/pars.fsy"
                           if _1 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           SynType.Tuple(false, (true, SynType.StaticConstant (SynConst.Int32 1, lhs parseState)) :: _2, lhs parseState) 
                   )
//# 4952 "../../../src/fsharp/pars.fsy"
                 : 'tupleType));
//# 14335 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4956 "../../../src/fsharp/pars.fsy"
                           if _2 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           SynType.Tuple(false, (true, _1) :: _3, lhs parseState) 
                   )
//# 4956 "../../../src/fsharp/pars.fsy"
                 : 'tupleType));
//# 14349 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4960 "../../../src/fsharp/pars.fsy"
                           _1 
                   )
//# 4960 "../../../src/fsharp/pars.fsy"
                 : 'tupleType));
//# 14360 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4964 "../../../src/fsharp/pars.fsy"
                           (false, _1) :: _3 
                   )
//# 4964 "../../../src/fsharp/pars.fsy"
                 : 'tupleOrQuotTypeElements));
//# 14372 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4967 "../../../src/fsharp/pars.fsy"
                           if _2 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           (true, _1) :: _3 
                   )
//# 4967 "../../../src/fsharp/pars.fsy"
                 : 'tupleOrQuotTypeElements));
//# 14386 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4971 "../../../src/fsharp/pars.fsy"
                           [(false, _1)] 
                   )
//# 4971 "../../../src/fsharp/pars.fsy"
                 : 'tupleOrQuotTypeElements));
//# 14397 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4975 "../../../src/fsharp/pars.fsy"
                           SynType.LongIdent(_1) 
                   )
//# 4975 "../../../src/fsharp/pars.fsy"
                 : 'appTypeCon));
//# 14408 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4978 "../../../src/fsharp/pars.fsy"
                           SynType.Var(_1, lhs parseState) 
                   )
//# 4978 "../../../src/fsharp/pars.fsy"
                 : 'appTypeCon));
//# 14419 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4982 "../../../src/fsharp/pars.fsy"
                           if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                           if _2 = "^-" then SynType.MeasurePower(_1, SynRationalConst.Negate(_3), lhs parseState)
                           else SynType.MeasurePower(_1, _3, lhs parseState)  
                   )
//# 4982 "../../../src/fsharp/pars.fsy"
                 : 'appTypeConPower));
//# 14434 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4987 "../../../src/fsharp/pars.fsy"
                           _1 
                   )
//# 4987 "../../../src/fsharp/pars.fsy"
                 : 'appTypeConPower));
//# 14445 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4991 "../../../src/fsharp/pars.fsy"
                              SynType.Array(_2, _1, lhs parseState) 
                   )
//# 4991 "../../../src/fsharp/pars.fsy"
                 : 'appType));
//# 14457 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4994 "../../../src/fsharp/pars.fsy"
                              SynType.Array(_3, _1, lhs parseState) 
                   )
//# 4994 "../../../src/fsharp/pars.fsy"
                 : 'appType));
//# 14469 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4998 "../../../src/fsharp/pars.fsy"
                             SynType.App(_2, None, [_1], [], None, true, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 4998 "../../../src/fsharp/pars.fsy"
                 : 'appType));
//# 14481 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypePrefixArguments)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5001 "../../../src/fsharp/pars.fsy"
                             let args, commas = _2
                             mlCompatWarning (FSComp.SR.parsMultiArgumentGenericTypeFormDeprecated()) (unionRanges (rhs parseState 1) _4.Range); 
                             SynType.App(_4, None, args, commas, None, true, unionRanges (rhs parseState 1) _4.Range) 
                   )
//# 5001 "../../../src/fsharp/pars.fsy"
                 : 'appType));
//# 14496 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'powerType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5006 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 5006 "../../../src/fsharp/pars.fsy"
                 : 'appType));
//# 14507 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5009 "../../../src/fsharp/pars.fsy"
                              let tp, typ = _1, _3 
                              let m = lhs parseState 
                              SynType.WithGlobalConstraints(SynType.Var (tp, rhs parseState 1), [SynTypeConstraint.WhereTyparSubtypeOfType(tp, typ, m)], m)  
                   )
//# 5009 "../../../src/fsharp/pars.fsy"
                 : 'appType));
//# 14521 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5014 "../../../src/fsharp/pars.fsy"
                              SynType.HashConstraint(_3, lhs parseState) 
                   )
//# 5014 "../../../src/fsharp/pars.fsy"
                 : 'appType));
//# 14532 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5018 "../../../src/fsharp/pars.fsy"
                             1 
                   )
//# 5018 "../../../src/fsharp/pars.fsy"
                 : 'arrayTypeSuffix));
//# 14542 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5021 "../../../src/fsharp/pars.fsy"
                             2 
                   )
//# 5021 "../../../src/fsharp/pars.fsy"
                 : 'arrayTypeSuffix));
//# 14552 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5024 "../../../src/fsharp/pars.fsy"
                             3 
                   )
//# 5024 "../../../src/fsharp/pars.fsy"
                 : 'arrayTypeSuffix));
//# 14562 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5027 "../../../src/fsharp/pars.fsy"
                             4 
                   )
//# 5027 "../../../src/fsharp/pars.fsy"
                 : 'arrayTypeSuffix));
//# 14572 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5031 "../../../src/fsharp/pars.fsy"
                             let typeArgs, commas = _4 in _1 :: _3 :: List.rev typeArgs, (rhs parseState 2) :: (List.rev commas) 
                   )
//# 5031 "../../../src/fsharp/pars.fsy"
                 : 'appTypePrefixArguments));
//# 14585 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5035 "../../../src/fsharp/pars.fsy"
                             let typeArgs, commas = _1
                             _3 :: typeArgs, (rhs parseState 2) :: commas 
                   )
//# 5035 "../../../src/fsharp/pars.fsy"
                 : 'typeArgListElements));
//# 14598 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'dummyTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5039 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let typeArgs, commas = _1
                            _3 :: typeArgs, (rhs parseState 2) :: commas 
                   )
//# 5039 "../../../src/fsharp/pars.fsy"
                 : 'typeArgListElements));
//# 14612 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5044 "../../../src/fsharp/pars.fsy"
                             [], [] 
                   )
//# 5044 "../../../src/fsharp/pars.fsy"
                 : 'typeArgListElements));
//# 14622 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeOrAnonRecdType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5048 "../../../src/fsharp/pars.fsy"
                           _1 
                   )
//# 5048 "../../../src/fsharp/pars.fsy"
                 : 'powerType));
//# 14633 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeOrAnonRecdType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5051 "../../../src/fsharp/pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            if _2 = "^-" then SynType.MeasurePower(_1, SynRationalConst.Negate(_3), lhs parseState)
                            else SynType.MeasurePower(_1, _3, lhs parseState) 
                   )
//# 5051 "../../../src/fsharp/pars.fsy"
                 : 'powerType));
//# 14648 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypePrefixArguments)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5060 "../../../src/fsharp/pars.fsy"
                             let args, commas = _2
                             mlCompatWarning (FSComp.SR.parsMultiArgumentGenericTypeFormDeprecated()) (unionRanges (rhs parseState 1) _4.Range); 
                             SynType.App(_4, None, args, commas, None, true, unionRanges (rhs parseState 1) _4.Range) 
                   )
//# 5060 "../../../src/fsharp/pars.fsy"
                 : 'atomTypeNonAtomicDeprecated));
//# 14663 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5065 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 5065 "../../../src/fsharp/pars.fsy"
                 : 'atomTypeNonAtomicDeprecated));
//# 14674 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5069 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5069 "../../../src/fsharp/pars.fsy"
                 : 'atomTypeOrAnonRecdType));
//# 14685 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonRecdType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5072 "../../../src/fsharp/pars.fsy"
                            let flds, isStruct = _1
                            let flds2 = 
                                flds |> List.choose (function 
                                  | (SynField([], false, Some id, ty, false, _xmldoc, None, _m)) -> Some (id, ty) 
                                  | _ -> reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInvalidAnonRecdType()); None)
                            SynType.AnonRecd (isStruct, flds2, rhs parseState 1) 
                   )
//# 5072 "../../../src/fsharp/pars.fsy"
                 : 'atomTypeOrAnonRecdType));
//# 14701 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5083 "../../../src/fsharp/pars.fsy"
                            SynType.HashConstraint(_2, lhs parseState) 
                   )
//# 5083 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14712 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5086 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5086 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14723 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5089 "../../../src/fsharp/pars.fsy"
                            SynType.Anon (lhs parseState) 
                   )
//# 5089 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14733 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5092 "../../../src/fsharp/pars.fsy"
                            SynType.Paren (_2, lhs parseState) 
                   )
//# 5092 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14745 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5095 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen ())
                            SynType.Paren (_2, lhs parseState) 
                   )
//# 5095 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14758 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5099 "../../../src/fsharp/pars.fsy"
                           SynType.Tuple(true, (false, _3) :: _5, lhs parseState) 
                   )
//# 5099 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14771 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5102 "../../../src/fsharp/pars.fsy"
                           reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()) 
                           SynType.Tuple(true, (false, _3) :: _5, lhs parseState) 
                   )
//# 5102 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14785 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5106 "../../../src/fsharp/pars.fsy"
                           reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()) 
                           SynType.Anon (lhs parseState) 
                   )
//# 5106 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14798 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5110 "../../../src/fsharp/pars.fsy"
                           reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()) 
                           SynType.Anon (lhs parseState) 
                   )
//# 5110 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14811 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5114 "../../../src/fsharp/pars.fsy"
                           reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()) 
                           SynType.Anon (lhs parseState) 
                   )
//# 5114 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14823 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5118 "../../../src/fsharp/pars.fsy"
                            SynType.StaticConstant(_1, rhs parseState 1) 
                   )
//# 5118 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14834 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5121 "../../../src/fsharp/pars.fsy"
                            let m = rhs parseState 1
                            SynType.StaticConstant(SynConst.String (null, SynStringKind.Regular, m), m) 
                   )
//# 5121 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14845 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5125 "../../../src/fsharp/pars.fsy"
                             let e, _ = _2
                             SynType.StaticConstantExpr(e, lhs parseState) 
                   )
//# 5125 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14857 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5129 "../../../src/fsharp/pars.fsy"
                             SynType.StaticConstant(SynConst.Bool false, lhs parseState) 
                   )
//# 5129 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14867 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5132 "../../../src/fsharp/pars.fsy"
                             SynType.StaticConstant(SynConst.Bool true, lhs parseState) 
                   )
//# 5132 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14877 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5135 "../../../src/fsharp/pars.fsy"
                            (* silent recovery *) SynType.Anon (lhs parseState) 
                   )
//# 5135 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14888 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5138 "../../../src/fsharp/pars.fsy"
                            let mLessThan, mGreaterThan, args, commas, mWhole = _2 in SynType.App(_1, Some(mLessThan), args, commas, mGreaterThan, false, unionRanges _1.Range mWhole) 
                   )
//# 5138 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14900 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5141 "../../../src/fsharp/pars.fsy"
                            SynType.LongIdentApp(_1, _3, None, [], [], None, unionRanges (rhs parseState 1) _3.Range) 
                   )
//# 5141 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14912 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5144 "../../../src/fsharp/pars.fsy"
                            let mLessThan, mGreaterThan, args, commas, mWhole = _4 
                            SynType.LongIdentApp(_1, _3, Some(mLessThan), args, commas, mGreaterThan, unionRanges _1.Range mWhole) 
                   )
//# 5144 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14926 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5148 "../../../src/fsharp/pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedNameAfterToken())
                            _1 
                   )
//# 5148 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14939 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * bool     * SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5153 "../../../src/fsharp/pars.fsy"
                            let mLessThan, mGreaterThan, parsedOk, args, commas, mAll = _1
                            if parsedOk then // if someone has "foo<bar" without a closing greater-than, then the lexfilter does not introduce a HPA, even though it is adjacent
                                warning(Error(FSComp.SR.parsNonAdjacentTyargs(), rhs parseState 1))
                            mLessThan, mGreaterThan, args, commas, mAll 
                   )
//# 5153 "../../../src/fsharp/pars.fsy"
                 : range * range option * SynType list * range list * range));
//# 14953 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * bool     * SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5159 "../../../src/fsharp/pars.fsy"
                            let mLessThan, mGreaterThan, _, args, commas, mAll = _2
                            mLessThan, mGreaterThan, args, commas, mAll 
                   )
//# 5159 "../../../src/fsharp/pars.fsy"
                 : range * range option * SynType list * range list * range));
//# 14965 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5164 "../../../src/fsharp/pars.fsy"
                            let typeArgs, commas = _5
                            (rhs parseState 1), Some(rhs parseState 6), true, (_2 :: _4 :: List.rev typeArgs), (rhs parseState 3) :: (List.rev commas), lhs parseState 
                   )
//# 5164 "../../../src/fsharp/pars.fsy"
                 : range * range option * bool     * SynType list * range list * range));
//# 14981 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5168 "../../../src/fsharp/pars.fsy"
                            if not _6 then 
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileTypeArgs())
                            else
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMissingGreaterThan())
                            let typeArgs, commas = _5
                            let nextToken = rhs parseState 6
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, (_2 :: _4 :: List.rev typeArgs), (rhs parseState 3) :: (List.rev commas), unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
//# 5168 "../../../src/fsharp/pars.fsy"
                 : range * range option * bool     * SynType list * range list * range));
//# 15003 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5178 "../../../src/fsharp/pars.fsy"
                            if not _4 then reportParseErrorAt (rhs parseState 4) (FSComp.SR.parsMissingTypeArgs())
                            let nextToken = rhs parseState 4
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, [_2], [rhs parseState 3], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
//# 5178 "../../../src/fsharp/pars.fsy"
                 : range * range option * bool     * SynType list * range list * range));
//# 15019 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5184 "../../../src/fsharp/pars.fsy"
                            (rhs parseState 1), Some(rhs parseState 3), true, [_2], [], lhs parseState 
                   )
//# 5184 "../../../src/fsharp/pars.fsy"
                 : range * range option * bool     * SynType list * range list * range));
//# 15032 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5187 "../../../src/fsharp/pars.fsy"
                            let nextToken = rhs parseState 3
                            if not _3 then reportParseErrorAt nextToken (FSComp.SR.parsMissingTypeArgs())
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, [_2], [], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
//# 5187 "../../../src/fsharp/pars.fsy"
                 : range * range option * bool     * SynType list * range list * range));
//# 15048 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5193 "../../../src/fsharp/pars.fsy"
                            (rhs parseState 1), Some(rhs parseState 2), true, [], [], lhs parseState 
                   )
//# 5193 "../../../src/fsharp/pars.fsy"
                 : range * range option * bool     * SynType list * range list * range));
//# 15060 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5196 "../../../src/fsharp/pars.fsy"
                            if not _2 then  
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsExpectedTypeAfterToken())
                            else
                                reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let nextToken = rhs parseState 2
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, [], [], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
//# 5196 "../../../src/fsharp/pars.fsy"
                 : range * range option * bool     * SynType list * range list * range));
//# 15078 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5206 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5206 "../../../src/fsharp/pars.fsy"
                 : 'typeArgActual));
//# 15089 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5209 "../../../src/fsharp/pars.fsy"
                            SynType.StaticConstantNamed(_1, _3, unionRanges _1.Range _3.Range) 
                   )
//# 5209 "../../../src/fsharp/pars.fsy"
                 : 'typeArgActual));
//# 15101 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5212 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let dummy = SynType.StaticConstant(SynConst.Int32(0), rhs parseState 2)
                            SynType.StaticConstantNamed(_1, dummy, (rhs2 parseState 1 2))
                          
                   )
//# 5212 "../../../src/fsharp/pars.fsy"
                 : 'typeArgActual));
//# 15115 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5219 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5219 "../../../src/fsharp/pars.fsy"
                 : 'typeArgActualOrDummyIfEmpty));
//# 15126 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'dummyTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5222 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMissingTypeArgs())
                            _1 
                   )
//# 5222 "../../../src/fsharp/pars.fsy"
                 : 'typeArgActualOrDummyIfEmpty));
//# 15138 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5227 "../../../src/fsharp/pars.fsy"
                            let m = rhs parseState 1
                            let dummyStatVal = SynType.StaticConstant(SynConst.Int32(0), m)
                            let dummyName = SynType.LongIdent(LongIdentWithDots([ident("", m)], []))
                            let dummyTypeArg = SynType.StaticConstantNamed(dummyName, dummyStatVal, m)
                            dummyTypeArg 
                   )
//# 5227 "../../../src/fsharp/pars.fsy"
                 : 'dummyTypeArg));
//# 15152 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5235 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 5235 "../../../src/fsharp/pars.fsy"
                 : 'measureTypeArg));
//# 15165 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5238 "../../../src/fsharp/pars.fsy"
                            SynMeasure.Anon (lhs parseState) 
                   )
//# 5238 "../../../src/fsharp/pars.fsy"
                 : 'measureTypeArg));
//# 15177 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5242 "../../../src/fsharp/pars.fsy"
                            SynMeasure.Named(_1.Lid, _1.Range) 
                   )
//# 5242 "../../../src/fsharp/pars.fsy"
                 : 'measureTypeAtom));
//# 15188 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5245 "../../../src/fsharp/pars.fsy"
                            SynMeasure.Var(_1, lhs parseState) 
                   )
//# 5245 "../../../src/fsharp/pars.fsy"
                 : 'measureTypeAtom));
//# 15199 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5248 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 5248 "../../../src/fsharp/pars.fsy"
                 : 'measureTypeAtom));
//# 15211 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5252 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 5252 "../../../src/fsharp/pars.fsy"
                 : 'measureTypePower));
//# 15222 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5255 "../../../src/fsharp/pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            if _2 = "^-" then SynMeasure.Power(_1, SynRationalConst.Negate(_3), lhs parseState)
                            else SynMeasure.Power(_1, _3, lhs parseState) 
                   )
//# 5255 "../../../src/fsharp/pars.fsy"
                 : 'measureTypePower));
//# 15237 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5260 "../../../src/fsharp/pars.fsy"
                            if fst _1 <> 1 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedIntegerLiteralForUnitOfMeasure());
                            SynMeasure.One 
                   )
//# 5260 "../../../src/fsharp/pars.fsy"
                 : 'measureTypePower));
//# 15249 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypePower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5265 "../../../src/fsharp/pars.fsy"
                           [_1] 
                   )
//# 5265 "../../../src/fsharp/pars.fsy"
                 : 'measureTypeSeq));
//# 15260 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypePower)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5268 "../../../src/fsharp/pars.fsy"
                           _1 :: _2 
                   )
//# 5268 "../../../src/fsharp/pars.fsy"
                 : 'measureTypeSeq));
//# 15272 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5272 "../../../src/fsharp/pars.fsy"
                           SynMeasure.Seq(_1, lhs parseState) 
                   )
//# 5272 "../../../src/fsharp/pars.fsy"
                 : 'measureTypeExpr));
//# 15283 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5275 "../../../src/fsharp/pars.fsy"
                           SynMeasure.Product(_1, _3, lhs parseState) 
                   )
//# 5275 "../../../src/fsharp/pars.fsy"
                 : 'measureTypeExpr));
//# 15295 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5278 "../../../src/fsharp/pars.fsy"
                           if _2 <> "*" && _2 <> "/" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                           if _2 = "*" then SynMeasure.Product(_1, _3, lhs parseState)
                           else SynMeasure.Divide(_1, _3, lhs parseState) 
                   )
//# 5278 "../../../src/fsharp/pars.fsy"
                 : 'measureTypeExpr));
//# 15310 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5283 "../../../src/fsharp/pars.fsy"
                            if _1 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            SynMeasure.Divide(SynMeasure.One, _2, lhs parseState) 
                   )
//# 5283 "../../../src/fsharp/pars.fsy"
                 : 'measureTypeExpr));
//# 15323 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5288 "../../../src/fsharp/pars.fsy"
                             let id = mkSynId (lhs parseState) (_2).idText
                             SynTypar(id, TyparStaticReq.None, false) 
                   )
//# 5288 "../../../src/fsharp/pars.fsy"
                 : SynTypar));
//# 15335 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5292 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5292 "../../../src/fsharp/pars.fsy"
                 : SynTypar));
//# 15346 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5296 "../../../src/fsharp/pars.fsy"
                            if _1 <> "^" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedTypeParameter());
                            let id = mkSynId (lhs parseState) (_2).idText
                            SynTypar(id, TyparStaticReq.HeadType, false) 
                   )
//# 5296 "../../../src/fsharp/pars.fsy"
                 : 'staticallyKnownHeadTypar));
//# 15360 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5302 "../../../src/fsharp/pars.fsy"
                            ident(_1, rhs parseState 1) 
                   )
//# 5302 "../../../src/fsharp/pars.fsy"
                 : Ident));
//# 15371 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5307 "../../../src/fsharp/pars.fsy"
                             LongIdentWithDots([ident(MangledGlobalName, rhs parseState 1)], []) 
                   )
//# 5307 "../../../src/fsharp/pars.fsy"
                 : LongIdentWithDots));
//# 15381 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5310 "../../../src/fsharp/pars.fsy"
                            LongIdentWithDots([_1], []) 
                   )
//# 5310 "../../../src/fsharp/pars.fsy"
                 : LongIdentWithDots));
//# 15392 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5313 "../../../src/fsharp/pars.fsy"
                            let (LongIdentWithDots(lid, dotms)) = _1 in LongIdentWithDots(lid @ [_3], dotms @ [rhs parseState 2]) 
                   )
//# 5313 "../../../src/fsharp/pars.fsy"
                 : LongIdentWithDots));
//# 15404 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5316 "../../../src/fsharp/pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedNameAfterToken())
                            let (LongIdentWithDots(lid, dotms)) = _1 in LongIdentWithDots(lid, dotms @ [rhs parseState 2])  
                   )
//# 5316 "../../../src/fsharp/pars.fsy"
                 : LongIdentWithDots));
//# 15417 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'operatorName)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5323 "../../../src/fsharp/pars.fsy"
                             ident(CompileOpName _2, rhs parseState 2) 
                   )
//# 5323 "../../../src/fsharp/pars.fsy"
                 : 'opName));
//# 15429 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5326 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (lhs parseState) (FSComp.SR.parsErrorParsingAsOperatorName()); ident(CompileOpName "****", rhs parseState 2) 
                   )
//# 5326 "../../../src/fsharp/pars.fsy"
                 : 'opName));
//# 15440 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5329 "../../../src/fsharp/pars.fsy"
                             ident(CompileOpName "*", rhs parseState 1) 
                   )
//# 5329 "../../../src/fsharp/pars.fsy"
                 : 'opName));
//# 15450 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseNames)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5333 "../../../src/fsharp/pars.fsy"
                            let text = ("|" + String.concat "|" (List.rev _2) + "|")
                            ident(text, rhs2 parseState 2 3) 
                   )
//# 5333 "../../../src/fsharp/pars.fsy"
                 : 'opName));
//# 15463 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseNames)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5338 "../../../src/fsharp/pars.fsy"
                            let text = ("|" + String.concat "|" (List.rev _2) + "|_|" )
                            ident(text, rhs2 parseState 2 5) 
                   )
//# 5338 "../../../src/fsharp/pars.fsy"
                 : 'opName));
//# 15476 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5344 "../../../src/fsharp/pars.fsy"
                            if not (IsValidPrefixOperatorDefinitionName _1) then 
                                reportParseErrorAt (lhs parseState) (FSComp.SR.parsInvalidPrefixOperatorDefinition());
                            _1 
                   )
//# 5344 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15489 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5349 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5349 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15500 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5352 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5352 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15511 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5355 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5355 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15522 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5358 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5358 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15533 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5361 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5361 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15544 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5364 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5364 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15555 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5367 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5367 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15566 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5370 "../../../src/fsharp/pars.fsy"
                            "$" 
                   )
//# 5370 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15576 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5373 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5373 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15587 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5376 "../../../src/fsharp/pars.fsy"
                            "-" 
                   )
//# 5376 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15597 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5379 "../../../src/fsharp/pars.fsy"
                            "*" 
                   )
//# 5379 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15607 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5382 "../../../src/fsharp/pars.fsy"
                            "=" 
                   )
//# 5382 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15617 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5385 "../../../src/fsharp/pars.fsy"
                            "or" 
                   )
//# 5385 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15627 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5388 "../../../src/fsharp/pars.fsy"
                            "<" 
                   )
//# 5388 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15638 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5391 "../../../src/fsharp/pars.fsy"
                            ">" 
                   )
//# 5391 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15649 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5394 "../../../src/fsharp/pars.fsy"
                            "?" 
                   )
//# 5394 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15659 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5397 "../../../src/fsharp/pars.fsy"
                            "&" 
                   )
//# 5397 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15669 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5400 "../../../src/fsharp/pars.fsy"
                            "&&" 
                   )
//# 5400 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15679 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5403 "../../../src/fsharp/pars.fsy"
                            "||" 
                   )
//# 5403 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15689 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5406 "../../../src/fsharp/pars.fsy"
                            ":=" 
                   )
//# 5406 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15699 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5409 "../../../src/fsharp/pars.fsy"
                            if _1 <> ".[]"  && _1 <> ".()" && _1 <> ".()<-" then 
                                 deprecatedOperator (lhs parseState); 
                            _1 
                   )
//# 5409 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15712 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5414 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5414 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15723 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5417 "../../../src/fsharp/pars.fsy"
                            ".." 
                   )
//# 5417 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15733 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5420 "../../../src/fsharp/pars.fsy"
                            ".. .." 
                   )
//# 5420 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15743 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5423 "../../../src/fsharp/pars.fsy"
                            if _1 <> _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMismatchedQuotationName(fst _1));  
                            fst _1 
                   )
//# 5423 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15756 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5429 "../../../src/fsharp/pars.fsy"
                            if not (String.isLeadingIdentifierCharacterUpperCase _1) then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsActivePatternCaseMustBeginWithUpperCase());  
                            if (_1.IndexOf('|') <> -1) then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsActivePatternCaseContainsPipe());  
                            _1 
                   )
//# 5429 "../../../src/fsharp/pars.fsy"
                 : 'activePatternCaseName));
//# 15769 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5436 "../../../src/fsharp/pars.fsy"
                            [_2] 
                   )
//# 5436 "../../../src/fsharp/pars.fsy"
                 : 'activePatternCaseNames));
//# 15780 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseNames)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5439 "../../../src/fsharp/pars.fsy"
                            _3 :: _1 
                   )
//# 5439 "../../../src/fsharp/pars.fsy"
                 : 'activePatternCaseNames));
//# 15792 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5444 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5444 "../../../src/fsharp/pars.fsy"
                 : 'identOrOp));
//# 15803 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5447 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5447 "../../../src/fsharp/pars.fsy"
                 : 'identOrOp));
//# 15814 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5453 "../../../src/fsharp/pars.fsy"
                            LongIdentWithDots([_1], []) 
                   )
//# 5453 "../../../src/fsharp/pars.fsy"
                 : LongIdentWithDots));
//# 15825 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5456 "../../../src/fsharp/pars.fsy"
                            LongIdentWithDots([_1], []) 
                   )
//# 5456 "../../../src/fsharp/pars.fsy"
                 : LongIdentWithDots));
//# 15836 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5459 "../../../src/fsharp/pars.fsy"
                            let (LongIdentWithDots(lid, dotms)) = _3 in LongIdentWithDots(_1 :: lid, rhs parseState 2 :: dotms) 
                   )
//# 5459 "../../../src/fsharp/pars.fsy"
                 : LongIdentWithDots));
//# 15848 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5462 "../../../src/fsharp/pars.fsy"
                            (* silent recovery *) LongIdentWithDots([_1], [rhs parseState 2]) 
                   )
//# 5462 "../../../src/fsharp/pars.fsy"
                 : LongIdentWithDots));
//# 15859 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identOrOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5467 "../../../src/fsharp/pars.fsy"
                                     _1 
                   )
//# 5467 "../../../src/fsharp/pars.fsy"
                 : 'nameop));
//# 15870 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5471 "../../../src/fsharp/pars.fsy"
                            SynExpr.Ident(_1) 
                   )
//# 5471 "../../../src/fsharp/pars.fsy"
                 : 'identExpr));
//# 15881 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5474 "../../../src/fsharp/pars.fsy"
                            let m = lhs parseState
                            let mLparen = mkFileIndexRange m.FileIndex m.Start (mkPos m.StartLine (m.StartColumn + 1))
                            let mRparen = mkFileIndexRange m.FileIndex (mkPos m.EndLine (m.EndColumn - 1)) m.End
                            SynExpr.Paren(SynExpr.Ident(_1), mLparen, Some mRparen, m) 
                   )
//# 5474 "../../../src/fsharp/pars.fsy"
                 : 'identExpr));
//# 15895 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5480 "../../../src/fsharp/pars.fsy"
                                     
                   )
//# 5480 "../../../src/fsharp/pars.fsy"
                 : 'topSeparator));
//# 15905 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5481 "../../../src/fsharp/pars.fsy"
                                               
                   )
//# 5481 "../../../src/fsharp/pars.fsy"
                 : 'topSeparator));
//# 15915 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5482 "../../../src/fsharp/pars.fsy"
                                     
                   )
//# 5482 "../../../src/fsharp/pars.fsy"
                 : 'topSeparator));
//# 15925 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5485 "../../../src/fsharp/pars.fsy"
                                        
                   )
//# 5485 "../../../src/fsharp/pars.fsy"
                 : 'topSeparators));
//# 15936 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5486 "../../../src/fsharp/pars.fsy"
                                                      
                   )
//# 5486 "../../../src/fsharp/pars.fsy"
                 : 'topSeparators));
//# 15948 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5489 "../../../src/fsharp/pars.fsy"
                                                          
                   )
//# 5489 "../../../src/fsharp/pars.fsy"
                 : 'opt_topSeparators));
//# 15960 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5490 "../../../src/fsharp/pars.fsy"
                                                          
                   )
//# 5490 "../../../src/fsharp/pars.fsy"
                 : 'opt_topSeparators));
//# 15970 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5494 "../../../src/fsharp/pars.fsy"
                                     
                   )
//# 5494 "../../../src/fsharp/pars.fsy"
                 : 'seps));
//# 15980 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5495 "../../../src/fsharp/pars.fsy"
                                     
                   )
//# 5495 "../../../src/fsharp/pars.fsy"
                 : 'seps));
//# 15990 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5496 "../../../src/fsharp/pars.fsy"
                                               
                   )
//# 5496 "../../../src/fsharp/pars.fsy"
                 : 'seps));
//# 16000 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5497 "../../../src/fsharp/pars.fsy"
                                               
                   )
//# 5497 "../../../src/fsharp/pars.fsy"
                 : 'seps));
//# 16010 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5502 "../../../src/fsharp/pars.fsy"
                             
                   )
//# 5502 "../../../src/fsharp/pars.fsy"
                 : 'declEnd));
//# 16020 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5504 "../../../src/fsharp/pars.fsy"
                               
                   )
//# 5504 "../../../src/fsharp/pars.fsy"
                 : 'declEnd));
//# 16030 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5506 "../../../src/fsharp/pars.fsy"
                             
                   )
//# 5506 "../../../src/fsharp/pars.fsy"
                 : 'declEnd));
//# 16040 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5511 "../../../src/fsharp/pars.fsy"
                            
                   )
//# 5511 "../../../src/fsharp/pars.fsy"
                 : 'opt_declEnd));
//# 16050 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5513 "../../../src/fsharp/pars.fsy"
                             
                   )
//# 5513 "../../../src/fsharp/pars.fsy"
                 : 'opt_declEnd));
//# 16060 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5515 "../../../src/fsharp/pars.fsy"
                            
                   )
//# 5515 "../../../src/fsharp/pars.fsy"
                 : 'opt_declEnd));
//# 16070 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5517 "../../../src/fsharp/pars.fsy"
                            
                   )
//# 5517 "../../../src/fsharp/pars.fsy"
                 : 'opt_declEnd));
//# 16080 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5520 "../../../src/fsharp/pars.fsy"
                                       
                   )
//# 5520 "../../../src/fsharp/pars.fsy"
                 : 'opt_ODECLEND));
//# 16090 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5521 "../../../src/fsharp/pars.fsy"
                                       
                   )
//# 5521 "../../../src/fsharp/pars.fsy"
                 : 'opt_ODECLEND));
//# 16100 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5524 "../../../src/fsharp/pars.fsy"
                                       deprecatedWithError (FSComp.SR.parsNoEqualShouldFollowNamespace()) (lhs parseState); () 
                   )
//# 5524 "../../../src/fsharp/pars.fsy"
                 : 'deprecated_opt_equals));
//# 16110 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5525 "../../../src/fsharp/pars.fsy"
                                        
                   )
//# 5525 "../../../src/fsharp/pars.fsy"
                 : 'deprecated_opt_equals));
//# 16120 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5528 "../../../src/fsharp/pars.fsy"
                                       true 
                   )
//# 5528 "../../../src/fsharp/pars.fsy"
                 : 'opt_equals));
//# 16130 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5529 "../../../src/fsharp/pars.fsy"
                                       false 
                   )
//# 5529 "../../../src/fsharp/pars.fsy"
                 : 'opt_equals));
//# 16140 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5532 "../../../src/fsharp/pars.fsy"
                                       
                   )
//# 5532 "../../../src/fsharp/pars.fsy"
                 : 'opt_OBLOCKSEP));
//# 16150 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5533 "../../../src/fsharp/pars.fsy"
                                       
                   )
//# 5533 "../../../src/fsharp/pars.fsy"
                 : 'opt_OBLOCKSEP));
//# 16160 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5536 "../../../src/fsharp/pars.fsy"
                                       
                   )
//# 5536 "../../../src/fsharp/pars.fsy"
                 : 'opt_seps));
//# 16171 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5537 "../../../src/fsharp/pars.fsy"
                                       
                   )
//# 5537 "../../../src/fsharp/pars.fsy"
                 : 'opt_seps));
//# 16181 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5540 "../../../src/fsharp/pars.fsy"
                                       true 
                   )
//# 5540 "../../../src/fsharp/pars.fsy"
                 : 'opt_rec));
//# 16191 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5541 "../../../src/fsharp/pars.fsy"
                                       false 
                   )
//# 5541 "../../../src/fsharp/pars.fsy"
                 : 'opt_rec));
//# 16201 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5544 "../../../src/fsharp/pars.fsy"
                                       
                   )
//# 5544 "../../../src/fsharp/pars.fsy"
                 : 'opt_bar));
//# 16211 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5545 "../../../src/fsharp/pars.fsy"
                                       
                   )
//# 5545 "../../../src/fsharp/pars.fsy"
                 : 'opt_bar));
//# 16221 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5548 "../../../src/fsharp/pars.fsy"
                                       true 
                   )
//# 5548 "../../../src/fsharp/pars.fsy"
                 : 'opt_inline));
//# 16231 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5549 "../../../src/fsharp/pars.fsy"
                                       false 
                   )
//# 5549 "../../../src/fsharp/pars.fsy"
                 : 'opt_inline));
//# 16241 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5552 "../../../src/fsharp/pars.fsy"
                                       true 
                   )
//# 5552 "../../../src/fsharp/pars.fsy"
                 : 'opt_mutable));
//# 16251 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5553 "../../../src/fsharp/pars.fsy"
                                       false 
                   )
//# 5553 "../../../src/fsharp/pars.fsy"
                 : 'opt_mutable));
//# 16261 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5557 "../../../src/fsharp/pars.fsy"
                               
                   )
//# 5557 "../../../src/fsharp/pars.fsy"
                 : 'doToken));
//# 16271 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5558 "../../../src/fsharp/pars.fsy"
                               
                   )
//# 5558 "../../../src/fsharp/pars.fsy"
                 : 'doToken));
//# 16281 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5561 "../../../src/fsharp/pars.fsy"
                                
                   )
//# 5561 "../../../src/fsharp/pars.fsy"
                 : 'doneDeclEnd));
//# 16291 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5562 "../../../src/fsharp/pars.fsy"
                                    
                   )
//# 5562 "../../../src/fsharp/pars.fsy"
                 : 'doneDeclEnd));
//# 16301 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5565 "../../../src/fsharp/pars.fsy"
                                  mlCompatWarning (FSComp.SR.parsSyntaxModuleStructEndDeprecated()) (lhs parseState); 
                   )
//# 5565 "../../../src/fsharp/pars.fsy"
                 : 'structOrBegin));
//# 16311 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5566 "../../../src/fsharp/pars.fsy"
                                 
                   )
//# 5566 "../../../src/fsharp/pars.fsy"
                 : 'structOrBegin));
//# 16321 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5569 "../../../src/fsharp/pars.fsy"
                               mlCompatWarning (FSComp.SR.parsSyntaxModuleSigEndDeprecated()) (lhs parseState); 
                   )
//# 5569 "../../../src/fsharp/pars.fsy"
                 : 'sigOrBegin));
//# 16331 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5570 "../../../src/fsharp/pars.fsy"
                                 
                   )
//# 5570 "../../../src/fsharp/pars.fsy"
                 : 'sigOrBegin));
//# 16341 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5573 "../../../src/fsharp/pars.fsy"
                                 mlCompatWarning (FSComp.SR.parsSyntaxModuleSigEndDeprecated()) (lhs parseState); 
                   )
//# 5573 "../../../src/fsharp/pars.fsy"
                 : 'colonOrEquals));
//# 16351 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5574 "../../../src/fsharp/pars.fsy"
                                  
                   )
//# 5574 "../../../src/fsharp/pars.fsy"
                 : 'colonOrEquals));
//# 16361 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * SynStringKind * ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5579 "../../../src/fsharp/pars.fsy"
                            let (s, synStringKind, _) = _1
                            s, synStringKind 
                   )
//# 5579 "../../../src/fsharp/pars.fsy"
                 : 'string));
//# 16373 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5583 "../../../src/fsharp/pars.fsy"
                                          _1 
                   )
//# 5583 "../../../src/fsharp/pars.fsy"
                 : 'sourceIdentifier));
//# 16384 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5587 "../../../src/fsharp/pars.fsy"
                            (_1, None) 
                   )
//# 5587 "../../../src/fsharp/pars.fsy"
                 : 'interpolatedStringFill));
//# 16395 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5590 "../../../src/fsharp/pars.fsy"
                            (_1, Some _3) 
                   )
//# 5590 "../../../src/fsharp/pars.fsy"
                 : 'interpolatedStringFill));
//# 16407 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5594 "../../../src/fsharp/pars.fsy"
                            [ SynInterpolatedStringPart.String (fst _1, rhs parseState 1) ] 
                   )
//# 5594 "../../../src/fsharp/pars.fsy"
                 : 'interpolatedStringParts));
//# 16418 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interpolatedStringFill)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interpolatedStringParts)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5597 "../../../src/fsharp/pars.fsy"
                            SynInterpolatedStringPart.String (fst _1, rhs parseState 1) :: SynInterpolatedStringPart.FillExpr _2 :: _3 
                   )
//# 5597 "../../../src/fsharp/pars.fsy"
                 : 'interpolatedStringParts));
//# 16431 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interpolatedStringParts)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5600 "../../../src/fsharp/pars.fsy"
                            
                            let rbrace = parseState.InputEndPosition 1
                            let lbrace = parseState.InputStartPosition 2
                            reportParseErrorAt (mkSynRange rbrace lbrace) (FSComp.SR.parsEmptyFillInInterpolatedString())
                            SynInterpolatedStringPart.String (fst _1, rhs parseState 1) :: _2 
                   )
//# 5600 "../../../src/fsharp/pars.fsy"
                 : 'interpolatedStringParts));
//# 16447 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * SynStringKind * ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interpolatedStringFill)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interpolatedStringParts)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5611 "../../../src/fsharp/pars.fsy"
                           let s, synStringKind, _ = _1
                           SynInterpolatedStringPart.String (s, rhs parseState 1) :: SynInterpolatedStringPart.FillExpr _2 :: _3, synStringKind 
                   )
//# 5611 "../../../src/fsharp/pars.fsy"
                 : 'interpolatedString));
//# 16461 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * SynStringKind * ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5615 "../../../src/fsharp/pars.fsy"
                           let s, synStringKind, _ = _1
                           [ SynInterpolatedStringPart.String (s, rhs parseState 1) ], synStringKind 
                   )
//# 5615 "../../../src/fsharp/pars.fsy"
                 : 'interpolatedString));
//# 16473 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * SynStringKind * ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interpolatedStringParts)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5619 "../../../src/fsharp/pars.fsy"
                           
                           let s, synStringKind, _ = _1
                           let rbrace = parseState.InputEndPosition 1
                           let lbrace = parseState.InputStartPosition 2
                           reportParseErrorAt (mkSynRange rbrace lbrace) (FSComp.SR.parsEmptyFillInInterpolatedString())
                           SynInterpolatedStringPart.String (s, rhs parseState 1) :: _2, synStringKind 
                   )
//# 5619 "../../../src/fsharp/pars.fsy"
                 : 'interpolatedString));
//# 16490 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5627 "../../../src/fsharp/pars.fsy"
                                                     
                   )
//# 5627 "../../../src/fsharp/pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
//# 16500 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5628 "../../../src/fsharp/pars.fsy"
                                                     
                   )
//# 5628 "../../../src/fsharp/pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
//# 16510 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5629 "../../../src/fsharp/pars.fsy"
                                         
                   )
//# 5629 "../../../src/fsharp/pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
//# 16520 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5632 "../../../src/fsharp/pars.fsy"
                                                 
                   )
//# 5632 "../../../src/fsharp/pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_TYAPP));
//# 16530 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5633 "../../../src/fsharp/pars.fsy"
                                         
                   )
//# 5633 "../../../src/fsharp/pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_TYAPP));
//# 16540 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5637 "../../../src/fsharp/pars.fsy"
                                                        
                   )
//# 5637 "../../../src/fsharp/pars.fsy"
                 : 'typeKeyword));
//# 16551 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5638 "../../../src/fsharp/pars.fsy"
                                        
                   )
//# 5638 "../../../src/fsharp/pars.fsy"
                 : 'typeKeyword));
//# 16561 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5639 "../../../src/fsharp/pars.fsy"
                                
                   )
//# 5639 "../../../src/fsharp/pars.fsy"
                 : 'typeKeyword));
//# 16571 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5643 "../../../src/fsharp/pars.fsy"
                                                            
                   )
//# 5643 "../../../src/fsharp/pars.fsy"
                 : 'moduleKeyword));
//# 16582 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5644 "../../../src/fsharp/pars.fsy"
                                          
                   )
//# 5644 "../../../src/fsharp/pars.fsy"
                 : 'moduleKeyword));
//# 16592 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5645 "../../../src/fsharp/pars.fsy"
                                  
                   )
//# 5645 "../../../src/fsharp/pars.fsy"
                 : 'moduleKeyword));
//# 16602 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5648 "../../../src/fsharp/pars.fsy"
                                                     
                   )
//# 5648 "../../../src/fsharp/pars.fsy"
                 : 'rbrace));
//# 16613 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5649 "../../../src/fsharp/pars.fsy"
                                          
                   )
//# 5649 "../../../src/fsharp/pars.fsy"
                 : 'rbrace));
//# 16623 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5650 "../../../src/fsharp/pars.fsy"
                                  
                   )
//# 5650 "../../../src/fsharp/pars.fsy"
                 : 'rbrace));
//# 16634 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5653 "../../../src/fsharp/pars.fsy"
                                      
                   )
//# 5653 "../../../src/fsharp/pars.fsy"
                 : 'bar_rbrace));
//# 16644 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5656 "../../../src/fsharp/pars.fsy"
                                                     
                   )
//# 5656 "../../../src/fsharp/pars.fsy"
                 : 'rparen));
//# 16655 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5657 "../../../src/fsharp/pars.fsy"
                                          
                   )
//# 5657 "../../../src/fsharp/pars.fsy"
                 : 'rparen));
//# 16665 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5658 "../../../src/fsharp/pars.fsy"
                                  
                   )
//# 5658 "../../../src/fsharp/pars.fsy"
                 : 'rparen));
//# 16675 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5661 "../../../src/fsharp/pars.fsy"
                                                           
                   )
//# 5661 "../../../src/fsharp/pars.fsy"
                 : 'oblockend));
//# 16686 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5662 "../../../src/fsharp/pars.fsy"
                                             
                   )
//# 5662 "../../../src/fsharp/pars.fsy"
                 : 'oblockend));
//# 16696 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5663 "../../../src/fsharp/pars.fsy"
                                     
                   )
//# 5663 "../../../src/fsharp/pars.fsy"
                 : 'oblockend));
//# 16706 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5666 "../../../src/fsharp/pars.fsy"
                                            false 
                   )
//# 5666 "../../../src/fsharp/pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
//# 16716 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5667 "../../../src/fsharp/pars.fsy"
                                              false 
                   )
//# 5667 "../../../src/fsharp/pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
//# 16726 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5668 "../../../src/fsharp/pars.fsy"
                                              false 
                   )
//# 5668 "../../../src/fsharp/pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
//# 16736 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5669 "../../../src/fsharp/pars.fsy"
                                                 false 
                   )
//# 5669 "../../../src/fsharp/pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
//# 16746 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5670 "../../../src/fsharp/pars.fsy"
                                   _1 
                   )
//# 5670 "../../../src/fsharp/pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
//# 16757 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5673 "../../../src/fsharp/pars.fsy"
                                            false 
                   )
//# 5673 "../../../src/fsharp/pars.fsy"
                 : 'ends_coming_soon_or_recover));
//# 16767 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5674 "../../../src/fsharp/pars.fsy"
                                              false 
                   )
//# 5674 "../../../src/fsharp/pars.fsy"
                 : 'ends_coming_soon_or_recover));
//# 16777 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5675 "../../../src/fsharp/pars.fsy"
                                              false 
                   )
//# 5675 "../../../src/fsharp/pars.fsy"
                 : 'ends_coming_soon_or_recover));
//# 16787 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5676 "../../../src/fsharp/pars.fsy"
                                              false 
                   )
//# 5676 "../../../src/fsharp/pars.fsy"
                 : 'ends_coming_soon_or_recover));
//# 16797 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5677 "../../../src/fsharp/pars.fsy"
                                                 false 
                   )
//# 5677 "../../../src/fsharp/pars.fsy"
                 : 'ends_coming_soon_or_recover));
//# 16807 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5678 "../../../src/fsharp/pars.fsy"
                                   _1 
                   )
//# 5678 "../../../src/fsharp/pars.fsy"
                 : 'ends_coming_soon_or_recover));
|]
//# 16819 "pars.fs"
let tables () : Internal.Utilities.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Internal.Utilities.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 205;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let signatureFile lexer lexbuf : ParsedSigFile =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
let implementationFile lexer lexbuf : ParsedImplFile =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 2))
let interaction lexer lexbuf : ParsedScriptInteraction =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 4))
let typedSeqExprEOF lexer lexbuf : SynExpr =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 6))
let typEOF lexer lexbuf : SynType =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 8))
