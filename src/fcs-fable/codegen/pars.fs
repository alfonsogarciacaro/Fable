// Implementation file for parser generated by fsyacc
module internal FSharp.Compiler.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Compiler
open Internal.Utilities.Text.Lexing
open Internal.Utilities.Text.Parsing.ParseHelpers
//# 3 "../../../src/fsharp/pars.fsy"


#nowarn "1182"  // generated code has lots of unused "parseState"

open System

open Internal.Utilities
open Internal.Utilities.Text.Parsing

open FSharp.Compiler
open FSharp.Compiler.AbstractIL
open FSharp.Compiler.AbstractIL.Internal
open FSharp.Compiler.AbstractIL.Internal.Library
open FSharp.Compiler.ErrorLogger
open FSharp.Compiler.Features
open FSharp.Compiler.Lib
open FSharp.Compiler.ParseHelpers
open FSharp.Compiler.PrettyNaming
open FSharp.Compiler.Range
open FSharp.Compiler.SyntaxTree
open FSharp.Compiler.SyntaxTreeOps
open FSharp.Compiler.XmlDoc

#if DEBUG
let debugPrint s =
    if Internal.Utilities.Text.Parsing.Flags.debug then 
        printfn "\n%s" s
#else
let debugPrint s = ignore s
#endif

let exprFromParseError (e:SynExpr) = SynExpr.FromParseError (e, e.Range)

let patFromParseError (e:SynPat) = SynPat.FromParseError(e, e.Range)

let mkSynOptionalExpr (m: range) xopt = 
    let m = m.MakeSynthetic()
    match xopt with 
    | None -> mkSynLidGet m FSharpLib.CorePath "None"
    | Some x  -> SynExpr.App (ExprAtomicFlag.NonAtomic, false, mkSynLidGet m FSharpLib.CorePath "Some", x, m)

// record bindings returned by the recdExprBindings rule has shape:
// (binding, separator-before-this-binding)
// this function converts arguments from form
// binding1 (binding2*sep1, binding3*sep2...) sepN
// to form
// binding1*sep1, binding2*sep2
let rebindRanges first fields lastSep = 
    let rec run (name, value) l acc = 
        match l with
        | [] -> List.rev ((name, value, lastSep) :: acc)
        | (f, m) :: xs -> run f xs ((name, value, m) :: acc)
    run first fields []

let mkUnderscoreRecdField m = LongIdentWithDots([ident("_", m)], []), false

let mkRecdField lidwd = lidwd, true

let mkSynDoBinding (vis, strict, expr, m) = 
    match vis with
    | Some vis -> errorR(Error(FSComp.SR.parsDoCannotHaveVisibilityDeclarations (vis.ToString()), m))
    | None -> ()
    Binding (None,
             (if strict then DoBinding else StandaloneExpression),
             false, false, [], PreXmlDoc.Empty, SynInfo.emptySynValData,
             (if strict then SynPat.Const(SynConst.Unit, m) else SynPat.Wild m),
             None, expr, m, NoDebugPointAtDoBinding)

let mkSynDoDecl (e: SynExpr) = 
    let spExpr = if IsControlFlowExpression e then NoDebugPointAtDoBinding else DebugPointAtBinding e.Range in
    SynModuleDecl.DoExpr(spExpr, e, e.Range)

let addAttribs attrs p =  SynPat.Attrib(p, attrs, p.Range)


// This function is called by the generated parser code. Returning initiates error recovery 
// It must be called precisely "parse_error_rich"
let parse_error_rich = Some (fun (ctxt: ParseErrorContext<_>) -> 
    errorR(SyntaxError(box ctxt, ctxt.ParseState.LexBuffer.LexemeRange)))

let reportParseErrorAt m s = errorR(Error(s, m))

let unionRangeWithPos (r:range) p =
    let r2 = mkRange r.FileName p p
    unionRanges r r2

let raiseParseErrorAt m s = 
    reportParseErrorAt m s; 
    // This initiates error recovery
    raise RecoverableParseError 

/// Report a good error at the end of file, e.g. for non-terminated strings
let checkEndOfFileError t = 
  match t with 
  | LexCont.IfDefSkip(_, _, _, m) ->
      reportParseErrorAt m (FSComp.SR.parsEofInHashIf())

  | LexCont.String (_, _, LexerStringStyle.SingleQuote, kind, m) -> 
     if kind.IsInterpolated then
         reportParseErrorAt m (FSComp.SR.parsEofInInterpolatedString())
     else
         reportParseErrorAt m (FSComp.SR.parsEofInString())

  | LexCont.String (_, _, LexerStringStyle.TripleQuote, kind, m) ->
     if kind.IsInterpolated then
         reportParseErrorAt m (FSComp.SR.parsEofInInterpolatedTripleQuoteString())
     else
         reportParseErrorAt m (FSComp.SR.parsEofInTripleQuoteString())

  | LexCont.String (_, _, LexerStringStyle.Verbatim, kind, m) ->
     if kind.IsInterpolated then
         reportParseErrorAt m (FSComp.SR.parsEofInInterpolatedVerbatimString())
     else
         reportParseErrorAt m (FSComp.SR.parsEofInVerbatimString())

  | LexCont.Comment (_, _, _, m) ->
     reportParseErrorAt m (FSComp.SR.parsEofInComment())

  | LexCont.SingleLineComment (_, _, _, m) ->
     reportParseErrorAt m (FSComp.SR.parsEofInComment())

  | LexCont.StringInComment (_, _, LexerStringStyle.SingleQuote, _, m) ->
     reportParseErrorAt m (FSComp.SR.parsEofInStringInComment())

  | LexCont.StringInComment (_, _, LexerStringStyle.Verbatim, _, m) ->
     reportParseErrorAt m (FSComp.SR.parsEofInVerbatimStringInComment())

  | LexCont.StringInComment (_, _, LexerStringStyle.TripleQuote, _, m) ->
     reportParseErrorAt m (FSComp.SR.parsEofInTripleQuoteStringInComment())

  | LexCont.MLOnly (_, _, m) ->
     reportParseErrorAt m (FSComp.SR.parsEofInIfOcaml())

  | LexCont.EndLine(_, _, LexerEndlineContinuation.Skip(_, m)) ->
     reportParseErrorAt m (FSComp.SR.parsEofInDirective())

  | LexCont.EndLine(endifs, nesting, LexerEndlineContinuation.Token)
  | LexCont.Token(endifs, nesting) -> 
      match endifs with 
      | [] -> ()
      | (_, m) :: _  -> reportParseErrorAt m (FSComp.SR.parsNoHashEndIfFound())
      match nesting with 
      | [] -> ()
      | (_, _, m) :: _  -> reportParseErrorAt m (FSComp.SR.parsEofInInterpolatedStringFill())

type BindingSet = BindingSetPreAttrs of range * bool * bool * (SynAttributes -> SynAccess option -> SynAttributes * SynBinding list) * range

let mkClassMemberLocalBindings(isStatic, initialRangeOpt, attrs, vis, BindingSetPreAttrs(_, isRec, isUse, declsPreAttrs, bindingSetRange)) = 
   let ignoredFreeAttrs, decls = declsPreAttrs attrs vis
   let wholeRange = 
       match initialRangeOpt with 
       | None -> bindingSetRange
       | Some m -> unionRanges m bindingSetRange
   if not (isNil ignoredFreeAttrs) then warning(Error(FSComp.SR.parsAttributesIgnored(), wholeRange));
   if isUse then errorR(Error(FSComp.SR.parsUseBindingsIllegalInImplicitClassConstructors(), wholeRange))
   SynMemberDefn.LetBindings (decls, isStatic, isRec, wholeRange)

let mkLocalBindings (mWhole, BindingSetPreAttrs(_, isRec, isUse, declsPreAttrs, _), body) = 
   let ignoredFreeAttrs, decls = declsPreAttrs [] None 
   if not (isNil ignoredFreeAttrs) then warning(Error(FSComp.SR.parsAttributesIgnored(), mWhole))
   SynExpr.LetOrUse (isRec, isUse, decls, body, mWhole) 

let mkDefnBindings (mWhole, BindingSetPreAttrs(_, isRec, isUse, declsPreAttrs, _bindingSetRange), attrs, vis, attrsm) = 
    if isUse then warning(Error(FSComp.SR.parsUseBindingsIllegalInModules(), mWhole))
    let freeAttrs, decls = declsPreAttrs attrs vis 
    let letDecls = [ SynModuleDecl.Let (isRec, decls, mWhole) ] 
    let attrDecls = if not (isNil freeAttrs) then [ SynModuleDecl.Attributes (freeAttrs, attrsm) ] else [] 
    attrDecls @ letDecls

let idOfPat (parseState:IParseState) m p = 
    match p with
    | SynPat.Wild r when parseState.LexBuffer.SupportsFeature LanguageFeature.WildCardInForLoop ->
        mkSynId r "_"
    | SynPat.Named (SynPat.Wild _, id, false, _, _) -> id
    | SynPat.LongIdent(LongIdentWithDots([id], _), _, None, SynArgPats.Pats [], None, _) -> id
    | _ -> raiseParseErrorAt m (FSComp.SR.parsIntegerForLoopRequiresSimpleIdentifier())

let checkForMultipleAugmentations m a1 a2 = 
    if not (isNil a1) && not (isNil a2) then raiseParseErrorAt m (FSComp.SR.parsOnlyOneWithAugmentationAllowed())
    a1 @ a2

let grabXmlDoc(parseState:IParseState, elemIdx) = 
    LexbufLocalXmlDocStore.GrabXmlDocBeforeMarker(parseState.LexBuffer, rhs parseState elemIdx)

let rangeOfLongIdent(lid:LongIdent) =
    System.Diagnostics.Debug.Assert(not lid.IsEmpty, "the parser should never produce a long-id that is the empty list") 
    (lid.Head.idRange, lid) ||> unionRangeWithListBy (fun id -> id.idRange) 


//# 197 "pars.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | HASH_IF of (range * string * ParseHelpers.LexerContinuation)
  | HASH_ELSE of (range * string * ParseHelpers.LexerContinuation)
  | HASH_ENDIF of (range * string * ParseHelpers.LexerContinuation)
  | COMMENT of (ParseHelpers.LexerContinuation)
  | WHITESPACE of (ParseHelpers.LexerContinuation)
  | HASH_LINE of (ParseHelpers.LexerContinuation)
  | HASH_LIGHT of (ParseHelpers.LexerContinuation)
  | INACTIVECODE of (ParseHelpers.LexerContinuation)
  | LINE_COMMENT of (ParseHelpers.LexerContinuation)
  | STRING_TEXT of (ParseHelpers.LexerContinuation)
  | EOF of (ParseHelpers.LexerContinuation)
  | LEX_FAILURE of (string)
  | ODUMMY of (token)
  | FIXED
  | OINTERFACE_MEMBER
  | OBLOCKEND
  | OBLOCKEND_COMING_SOON
  | OBLOCKEND_IS_HERE
  | ORIGHT_BLOCK_END
  | ODECLEND
  | OEND
  | OBLOCKSEP
  | OBLOCKBEGIN
  | ORESET
  | OFUN
  | OFUNCTION
  | OWITH
  | OELSE
  | OTHEN
  | ODO_BANG
  | ODO
  | OAND_BANG of (bool)
  | OBINDER of (string)
  | OLET of (bool)
  | HIGH_PRECEDENCE_TYAPP
  | HIGH_PRECEDENCE_PAREN_APP
  | HIGH_PRECEDENCE_BRACK_APP
  | TYPE_COMING_SOON
  | TYPE_IS_HERE
  | MODULE_COMING_SOON
  | MODULE_IS_HERE
  | EXTERN
  | VOID
  | PUBLIC
  | PRIVATE
  | INTERNAL
  | GLOBAL
  | STATIC
  | MEMBER
  | CLASS
  | ABSTRACT
  | OVERRIDE
  | DEFAULT
  | CONSTRUCTOR
  | INHERIT
  | GREATER_RBRACK
  | STRUCT
  | SIG
  | BAR
  | RBRACK
  | RBRACE_COMING_SOON
  | RBRACE_IS_HERE
  | MINUS
  | DOLLAR
  | BAR_RBRACK
  | BAR_RBRACE
  | UNDERSCORE
  | SEMICOLON_SEMICOLON
  | LARROW
  | EQUALS
  | LBRACK
  | LBRACK_BAR
  | LBRACE_BAR
  | LBRACK_LESS
  | QMARK
  | QMARK_QMARK
  | DOT
  | COLON
  | COLON_COLON
  | COLON_GREATER
  | COLON_QMARK_GREATER
  | COLON_QMARK
  | COLON_EQUALS
  | SEMICOLON
  | WHEN
  | WHILE
  | WITH
  | HASH
  | AMP
  | AMP_AMP
  | QUOTE
  | LPAREN
  | RPAREN
  | RPAREN_COMING_SOON
  | RPAREN_IS_HERE
  | STAR
  | COMMA
  | RARROW
  | GREATER_BAR_RBRACK
  | LPAREN_STAR_RPAREN
  | OPEN
  | OR
  | REC
  | THEN
  | TO
  | TRUE
  | TRY
  | TYPE
  | VAL
  | INLINE
  | INTERFACE
  | INSTANCE
  | CONST
  | LAZY
  | OLAZY
  | MATCH
  | MATCH_BANG
  | MUTABLE
  | NEW
  | OF
  | EXCEPTION
  | FALSE
  | FOR
  | FUN
  | FUNCTION
  | IF
  | IN
  | JOIN_IN
  | FINALLY
  | DO_BANG
  | AND
  | AS
  | ASSERT
  | OASSERT
  | ASR
  | BEGIN
  | DO
  | DONE
  | DOWNTO
  | ELSE
  | ELIF
  | END
  | DOT_DOT
  | DOT_DOT_HAT
  | BAR_BAR
  | UPCAST
  | DOWNCAST
  | NULL
  | RESERVED
  | MODULE
  | NAMESPACE
  | DELEGATE
  | CONSTRAINT
  | BASE
  | LQUOTE of (string * bool)
  | RQUOTE of (string * bool)
  | RQUOTE_DOT of (string * bool)
  | PERCENT_OP of (string)
  | BINDER of (string)
  | LESS of (bool)
  | GREATER of (bool)
  | LET of (bool)
  | YIELD of (bool)
  | YIELD_BANG of (bool)
  | AND_BANG of (bool)
  | BIGNUM of ((string * string))
  | DECIMAL of (System.Decimal)
  | CHAR of (char)
  | IEEE64 of (double)
  | IEEE32 of (single)
  | UNATIVEINT of (uint64)
  | UINT64 of (uint64)
  | UINT32 of (uint32)
  | UINT16 of (uint16)
  | UINT8 of (byte)
  | NATIVEINT of (int64 * bool)
  | INT64 of (int64 * bool)
  | INT32 of (int32 * bool)
  | INT32_DOT_DOT of (int32 * bool)
  | INT16 of (int16 * bool)
  | INT8 of (sbyte * bool)
  | FUNKY_OPERATOR_NAME of (string)
  | ADJACENT_PREFIX_OP of (string)
  | PLUS_MINUS_OP of (string)
  | INFIX_AMP_OP of (string)
  | INFIX_STAR_DIV_MOD_OP of (string)
  | PREFIX_OP of (string)
  | INFIX_BAR_OP of (string)
  | INFIX_AT_HAT_OP of (string)
  | INFIX_COMPARE_OP of (string)
  | INFIX_STAR_STAR_OP of (string)
  | IDENT of (string)
  | KEYWORD_STRING of (string)
  | LBRACE of (ParseHelpers.LexerContinuation)
  | RBRACE of (ParseHelpers.LexerContinuation)
  | INTERP_STRING_END of (string * ParseHelpers.LexerContinuation)
  | INTERP_STRING_PART of (string * ParseHelpers.LexerContinuation)
  | INTERP_STRING_BEGIN_PART of (string * ParseHelpers.LexerContinuation)
  | INTERP_STRING_BEGIN_END of (string * ParseHelpers.LexerContinuation)
  | STRING of (string * ParseHelpers.LexerContinuation)
  | BYTEARRAY of (byte[] * ParseHelpers.LexerContinuation)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_HASH_IF
    | TOKEN_HASH_ELSE
    | TOKEN_HASH_ENDIF
    | TOKEN_COMMENT
    | TOKEN_WHITESPACE
    | TOKEN_HASH_LINE
    | TOKEN_HASH_LIGHT
    | TOKEN_INACTIVECODE
    | TOKEN_LINE_COMMENT
    | TOKEN_STRING_TEXT
    | TOKEN_EOF
    | TOKEN_LEX_FAILURE
    | TOKEN_ODUMMY
    | TOKEN_FIXED
    | TOKEN_OINTERFACE_MEMBER
    | TOKEN_OBLOCKEND
    | TOKEN_OBLOCKEND_COMING_SOON
    | TOKEN_OBLOCKEND_IS_HERE
    | TOKEN_ORIGHT_BLOCK_END
    | TOKEN_ODECLEND
    | TOKEN_OEND
    | TOKEN_OBLOCKSEP
    | TOKEN_OBLOCKBEGIN
    | TOKEN_ORESET
    | TOKEN_OFUN
    | TOKEN_OFUNCTION
    | TOKEN_OWITH
    | TOKEN_OELSE
    | TOKEN_OTHEN
    | TOKEN_ODO_BANG
    | TOKEN_ODO
    | TOKEN_OAND_BANG
    | TOKEN_OBINDER
    | TOKEN_OLET
    | TOKEN_HIGH_PRECEDENCE_TYAPP
    | TOKEN_HIGH_PRECEDENCE_PAREN_APP
    | TOKEN_HIGH_PRECEDENCE_BRACK_APP
    | TOKEN_TYPE_COMING_SOON
    | TOKEN_TYPE_IS_HERE
    | TOKEN_MODULE_COMING_SOON
    | TOKEN_MODULE_IS_HERE
    | TOKEN_EXTERN
    | TOKEN_VOID
    | TOKEN_PUBLIC
    | TOKEN_PRIVATE
    | TOKEN_INTERNAL
    | TOKEN_GLOBAL
    | TOKEN_STATIC
    | TOKEN_MEMBER
    | TOKEN_CLASS
    | TOKEN_ABSTRACT
    | TOKEN_OVERRIDE
    | TOKEN_DEFAULT
    | TOKEN_CONSTRUCTOR
    | TOKEN_INHERIT
    | TOKEN_GREATER_RBRACK
    | TOKEN_STRUCT
    | TOKEN_SIG
    | TOKEN_BAR
    | TOKEN_RBRACK
    | TOKEN_RBRACE_COMING_SOON
    | TOKEN_RBRACE_IS_HERE
    | TOKEN_MINUS
    | TOKEN_DOLLAR
    | TOKEN_BAR_RBRACK
    | TOKEN_BAR_RBRACE
    | TOKEN_UNDERSCORE
    | TOKEN_SEMICOLON_SEMICOLON
    | TOKEN_LARROW
    | TOKEN_EQUALS
    | TOKEN_LBRACK
    | TOKEN_LBRACK_BAR
    | TOKEN_LBRACE_BAR
    | TOKEN_LBRACK_LESS
    | TOKEN_QMARK
    | TOKEN_QMARK_QMARK
    | TOKEN_DOT
    | TOKEN_COLON
    | TOKEN_COLON_COLON
    | TOKEN_COLON_GREATER
    | TOKEN_COLON_QMARK_GREATER
    | TOKEN_COLON_QMARK
    | TOKEN_COLON_EQUALS
    | TOKEN_SEMICOLON
    | TOKEN_WHEN
    | TOKEN_WHILE
    | TOKEN_WITH
    | TOKEN_HASH
    | TOKEN_AMP
    | TOKEN_AMP_AMP
    | TOKEN_QUOTE
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_RPAREN_COMING_SOON
    | TOKEN_RPAREN_IS_HERE
    | TOKEN_STAR
    | TOKEN_COMMA
    | TOKEN_RARROW
    | TOKEN_GREATER_BAR_RBRACK
    | TOKEN_LPAREN_STAR_RPAREN
    | TOKEN_OPEN
    | TOKEN_OR
    | TOKEN_REC
    | TOKEN_THEN
    | TOKEN_TO
    | TOKEN_TRUE
    | TOKEN_TRY
    | TOKEN_TYPE
    | TOKEN_VAL
    | TOKEN_INLINE
    | TOKEN_INTERFACE
    | TOKEN_INSTANCE
    | TOKEN_CONST
    | TOKEN_LAZY
    | TOKEN_OLAZY
    | TOKEN_MATCH
    | TOKEN_MATCH_BANG
    | TOKEN_MUTABLE
    | TOKEN_NEW
    | TOKEN_OF
    | TOKEN_EXCEPTION
    | TOKEN_FALSE
    | TOKEN_FOR
    | TOKEN_FUN
    | TOKEN_FUNCTION
    | TOKEN_IF
    | TOKEN_IN
    | TOKEN_JOIN_IN
    | TOKEN_FINALLY
    | TOKEN_DO_BANG
    | TOKEN_AND
    | TOKEN_AS
    | TOKEN_ASSERT
    | TOKEN_OASSERT
    | TOKEN_ASR
    | TOKEN_BEGIN
    | TOKEN_DO
    | TOKEN_DONE
    | TOKEN_DOWNTO
    | TOKEN_ELSE
    | TOKEN_ELIF
    | TOKEN_END
    | TOKEN_DOT_DOT
    | TOKEN_DOT_DOT_HAT
    | TOKEN_BAR_BAR
    | TOKEN_UPCAST
    | TOKEN_DOWNCAST
    | TOKEN_NULL
    | TOKEN_RESERVED
    | TOKEN_MODULE
    | TOKEN_NAMESPACE
    | TOKEN_DELEGATE
    | TOKEN_CONSTRAINT
    | TOKEN_BASE
    | TOKEN_LQUOTE
    | TOKEN_RQUOTE
    | TOKEN_RQUOTE_DOT
    | TOKEN_PERCENT_OP
    | TOKEN_BINDER
    | TOKEN_LESS
    | TOKEN_GREATER
    | TOKEN_LET
    | TOKEN_YIELD
    | TOKEN_YIELD_BANG
    | TOKEN_AND_BANG
    | TOKEN_BIGNUM
    | TOKEN_DECIMAL
    | TOKEN_CHAR
    | TOKEN_IEEE64
    | TOKEN_IEEE32
    | TOKEN_UNATIVEINT
    | TOKEN_UINT64
    | TOKEN_UINT32
    | TOKEN_UINT16
    | TOKEN_UINT8
    | TOKEN_NATIVEINT
    | TOKEN_INT64
    | TOKEN_INT32
    | TOKEN_INT32_DOT_DOT
    | TOKEN_INT16
    | TOKEN_INT8
    | TOKEN_FUNKY_OPERATOR_NAME
    | TOKEN_ADJACENT_PREFIX_OP
    | TOKEN_PLUS_MINUS_OP
    | TOKEN_INFIX_AMP_OP
    | TOKEN_INFIX_STAR_DIV_MOD_OP
    | TOKEN_PREFIX_OP
    | TOKEN_INFIX_BAR_OP
    | TOKEN_INFIX_AT_HAT_OP
    | TOKEN_INFIX_COMPARE_OP
    | TOKEN_INFIX_STAR_STAR_OP
    | TOKEN_IDENT
    | TOKEN_KEYWORD_STRING
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_INTERP_STRING_END
    | TOKEN_INTERP_STRING_PART
    | TOKEN_INTERP_STRING_BEGIN_PART
    | TOKEN_INTERP_STRING_BEGIN_END
    | TOKEN_STRING
    | TOKEN_BYTEARRAY
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startsignatureFile
    | NONTERM__startimplementationFile
    | NONTERM__startinteraction
    | NONTERM__starttypedSeqExprEOF
    | NONTERM__starttypEOF
    | NONTERM_interaction
    | NONTERM_interactiveTerminator
    | NONTERM_interactiveItemsTerminator
    | NONTERM_interactiveDefns
    | NONTERM_interactiveExpr
    | NONTERM_interactiveHash
    | NONTERM_interactiveSeparators
    | NONTERM_interactiveSeparator
    | NONTERM_hashDirective
    | NONTERM_hashDirectiveArgs
    | NONTERM_hashDirectiveArg
    | NONTERM_signatureFile
    | NONTERM_moduleIntro
    | NONTERM_namespaceIntro
    | NONTERM_fileNamespaceSpecs
    | NONTERM_fileNamespaceSpecList
    | NONTERM_fileNamespaceSpec
    | NONTERM_fileModuleSpec
    | NONTERM_moduleSpfnsPossiblyEmptyBlock
    | NONTERM_moduleSpfnsPossiblyEmpty
    | NONTERM_moduleSpfns
    | NONTERM_moduleSpfn
    | NONTERM_valSpfn
    | NONTERM_optLiteralValueSpfn
    | NONTERM_moduleSpecBlock
    | NONTERM_tyconSpfns
    | NONTERM_tyconSpfnList
    | NONTERM_tyconSpfn
    | NONTERM_tyconSpfnRhsBlock
    | NONTERM_tyconSpfnRhs
    | NONTERM_tyconClassSpfn
    | NONTERM_classSpfnBlockKindUnspecified
    | NONTERM_classSpfnBlock
    | NONTERM_classSpfnMembers
    | NONTERM_classSpfnMembersAtLeastOne
    | NONTERM_classMemberSpfn
    | NONTERM_classMemberSpfnGetSet
    | NONTERM_classMemberSpfnGetSetElements
    | NONTERM_memberSpecFlags
    | NONTERM_exconSpfn
    | NONTERM_opt_classSpfn
    | NONTERM_implementationFile
    | NONTERM_fileNamespaceImpls
    | NONTERM_fileNamespaceImplList
    | NONTERM_fileNamespaceImpl
    | NONTERM_fileModuleImpl
    | NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock
    | NONTERM_moduleDefnsOrExprPossiblyEmpty
    | NONTERM_moduleDefnsOrExpr
    | NONTERM_moduleDefns
    | NONTERM_moduleDefnOrDirective
    | NONTERM_moduleDefn
    | NONTERM_openDecl
    | NONTERM_namedModuleAbbrevBlock
    | NONTERM_namedModuleDefnBlock
    | NONTERM_wrappedNamedModuleDefn
    | NONTERM_tyconDefnAugmentation
    | NONTERM_opt_attributes
    | NONTERM_attributes
    | NONTERM_attributeList
    | NONTERM_attributeListElements
    | NONTERM_attribute
    | NONTERM_attributeTarget
    | NONTERM_memberFlags
    | NONTERM_typeNameInfo
    | NONTERM_tyconDefnList
    | NONTERM_tyconDefn
    | NONTERM_tyconDefnRhsBlock
    | NONTERM_tyconDefnRhs
    | NONTERM_tyconClassDefn
    | NONTERM_classDefnBlockKindUnspecified
    | NONTERM_classDefnBlock
    | NONTERM_classDefnMembers
    | NONTERM_classDefnMembersAtLeastOne
    | NONTERM_classDefnMemberGetSet
    | NONTERM_classDefnMemberGetSetElements
    | NONTERM_classDefnMemberGetSetElement
    | NONTERM_memberCore
    | NONTERM_abstractMemberFlags
    | NONTERM_classDefnMember
    | NONTERM_valDefnDecl
    | NONTERM_autoPropsDefnDecl
    | NONTERM_opt_typ
    | NONTERM_atomicPatternLongIdent
    | NONTERM_opt_access
    | NONTERM_access
    | NONTERM_opt_declVisibility
    | NONTERM_opt_interfaceImplDefn
    | NONTERM_opt_classDefn
    | NONTERM_inheritsDefn
    | NONTERM_optAsSpec
    | NONTERM_asSpec
    | NONTERM_optBaseSpec
    | NONTERM_baseSpec
    | NONTERM_objectImplementationBlock
    | NONTERM_objectImplementationMembers
    | NONTERM_objectImplementationMember
    | NONTERM_memberOrOverride
    | NONTERM_tyconDefnOrSpfnSimpleRepr
    | NONTERM_braceFieldDeclList
    | NONTERM_anonRecdType
    | NONTERM_braceBarFieldDeclListCore
    | NONTERM_inlineAssemblyTyconRepr
    | NONTERM_classOrInterfaceOrStruct
    | NONTERM_interfaceMember
    | NONTERM_tyconNameAndTyparDecls
    | NONTERM_prefixTyparDecls
    | NONTERM_typarDeclList
    | NONTERM_typarDecl
    | NONTERM_postfixTyparDecls
    | NONTERM_explicitValTyparDeclsCore
    | NONTERM_explicitValTyparDecls
    | NONTERM_opt_explicitValTyparDecls
    | NONTERM_opt_explicitValTyparDecls2
    | NONTERM_opt_typeConstraints
    | NONTERM_typeConstraints
    | NONTERM_typeConstraint
    | NONTERM_typarAlts
    | NONTERM_unionTypeRepr
    | NONTERM_barAndgrabXmlDoc
    | NONTERM_attrUnionCaseDecls
    | NONTERM_attrUnionCaseDecl
    | NONTERM_unionCaseName
    | NONTERM_firstUnionCaseDeclOfMany
    | NONTERM_firstUnionCaseDecl
    | NONTERM_unionCaseReprElements
    | NONTERM_unionCaseReprElement
    | NONTERM_unionCaseRepr
    | NONTERM_recdFieldDeclList
    | NONTERM_recdFieldDecl
    | NONTERM_fieldDecl
    | NONTERM_exconDefn
    | NONTERM_exceptionAndGrabDoc
    | NONTERM_exconCore
    | NONTERM_exconIntro
    | NONTERM_exconRepr
    | NONTERM_defnBindings
    | NONTERM_doBinding
    | NONTERM_hardwhiteLetBindings
    | NONTERM_hardwhiteDoBinding
    | NONTERM_classDefnBindings
    | NONTERM_hardwhiteDefnBindingsTerminator
    | NONTERM_cPrototype
    | NONTERM_cArgs
    | NONTERM_cMoreArgs
    | NONTERM_cArg
    | NONTERM_cType
    | NONTERM_cRetType
    | NONTERM_localBindings
    | NONTERM_moreLocalBindings
    | NONTERM_attr_localBinding
    | NONTERM_localBinding
    | NONTERM_typedExprWithStaticOptimizationsBlock
    | NONTERM_typedExprWithStaticOptimizations
    | NONTERM_opt_staticOptimizations
    | NONTERM_staticOptimization
    | NONTERM_staticOptimizationConditions
    | NONTERM_staticOptimizationCondition
    | NONTERM_rawConstant
    | NONTERM_rationalConstant
    | NONTERM_atomicUnsignedRationalConstant
    | NONTERM_atomicRationalConstant
    | NONTERM_constant
    | NONTERM_bindingPattern
    | NONTERM_simplePattern
    | NONTERM_simplePatternCommaList
    | NONTERM_simplePatterns
    | NONTERM_headBindingPattern
    | NONTERM_tuplePatternElements
    | NONTERM_conjPatternElements
    | NONTERM_namePatPairs
    | NONTERM_namePatPair
    | NONTERM_constrPattern
    | NONTERM_atomicPatsOrNamePatPairs
    | NONTERM_atomicPatterns
    | NONTERM_atomicPattern
    | NONTERM_parenPatternBody
    | NONTERM_parenPattern
    | NONTERM_tupleParenPatternElements
    | NONTERM_conjParenPatternElements
    | NONTERM_recordPatternElementsAux
    | NONTERM_recordPatternElement
    | NONTERM_listPatternElements
    | NONTERM_typedSeqExprBlock
    | NONTERM_declExprBlock
    | NONTERM_typedSeqExprBlockR
    | NONTERM_typedSeqExpr
    | NONTERM_typedSeqExprEOF
    | NONTERM_seqExpr
    | NONTERM_recover
    | NONTERM_moreBinders
    | NONTERM_declExpr
    | NONTERM_dynamicArg
    | NONTERM_withClauses
    | NONTERM_withPatternClauses
    | NONTERM_patternAndGuard
    | NONTERM_patternClauses
    | NONTERM_patternGuard
    | NONTERM_patternResult
    | NONTERM_ifExprCases
    | NONTERM_ifExprThen
    | NONTERM_ifExprElifs
    | NONTERM_tupleExpr
    | NONTERM_minusExpr
    | NONTERM_appExpr
    | NONTERM_argExpr
    | NONTERM_atomicExpr
    | NONTERM_atomicExprQualification
    | NONTERM_optRangeSeqExpr
    | NONTERM_optRange
    | NONTERM_rangeDeclExpr
    | NONTERM_atomicExprAfterType
    | NONTERM_beginEndExpr
    | NONTERM_quoteExpr
    | NONTERM_arrayExpr
    | NONTERM_parenExpr
    | NONTERM_parenExprBody
    | NONTERM_staticallyKnownHeadTypars
    | NONTERM_staticallyKnownHeadTyparAlts
    | NONTERM_braceExpr
    | NONTERM_braceExprBody
    | NONTERM_listExprElements
    | NONTERM_monadicExprInitial
    | NONTERM_rangeSequenceExpr
    | NONTERM_arrowThenExprR
    | NONTERM_forLoopBinder
    | NONTERM_forLoopRange
    | NONTERM_forLoopDirection
    | NONTERM_inlineAssemblyExpr
    | NONTERM_optCurriedArgExprs
    | NONTERM_opt_atomicExprAfterType
    | NONTERM_opt_inlineAssemblyTypeArg
    | NONTERM_optInlineAssemblyReturnTypes
    | NONTERM_recdExpr
    | NONTERM_recdExprCore
    | NONTERM_opt_seps_recd
    | NONTERM_seps_recd
    | NONTERM_pathOrUnderscore
    | NONTERM_recdExprBindings
    | NONTERM_recdBinding
    | NONTERM_objExpr
    | NONTERM_objExprBaseCall
    | NONTERM_opt_objExprBindings
    | NONTERM_objExprBindings
    | NONTERM_objExprInterfaces
    | NONTERM_opt_objExprInterfaces
    | NONTERM_objExprInterface
    | NONTERM_braceBarExpr
    | NONTERM_braceBarExprCore
    | NONTERM_anonLambdaExpr
    | NONTERM_anonMatchingExpr
    | NONTERM_typeWithTypeConstraints
    | NONTERM_topTypeWithTypeConstraints
    | NONTERM_opt_topReturnTypeWithTypeConstraints
    | NONTERM_topType
    | NONTERM_topTupleType
    | NONTERM_topTupleTypeElements
    | NONTERM_topAppType
    | NONTERM_typ
    | NONTERM_typEOF
    | NONTERM_tupleType
    | NONTERM_tupleOrQuotTypeElements
    | NONTERM_appTypeCon
    | NONTERM_appTypeConPower
    | NONTERM_appType
    | NONTERM_arrayTypeSuffix
    | NONTERM_appTypePrefixArguments
    | NONTERM_typeArgListElements
    | NONTERM_powerType
    | NONTERM_atomTypeNonAtomicDeprecated
    | NONTERM_atomTypeOrAnonRecdType
    | NONTERM_atomType
    | NONTERM_typeArgsNoHpaDeprecated
    | NONTERM_typeArgsActual
    | NONTERM_typeArgActual
    | NONTERM_typeArgActualOrDummyIfEmpty
    | NONTERM_dummyTypeArg
    | NONTERM_measureTypeArg
    | NONTERM_measureTypeAtom
    | NONTERM_measureTypePower
    | NONTERM_measureTypeSeq
    | NONTERM_measureTypeExpr
    | NONTERM_typar
    | NONTERM_staticallyKnownHeadTypar
    | NONTERM_ident
    | NONTERM_path
    | NONTERM_opName
    | NONTERM_operatorName
    | NONTERM_activePatternCaseName
    | NONTERM_activePatternCaseNames
    | NONTERM_identOrOp
    | NONTERM_pathOp
    | NONTERM_nameop
    | NONTERM_identExpr
    | NONTERM_topSeparator
    | NONTERM_topSeparators
    | NONTERM_opt_topSeparators
    | NONTERM_seps
    | NONTERM_declEnd
    | NONTERM_opt_declEnd
    | NONTERM_opt_ODECLEND
    | NONTERM_deprecated_opt_equals
    | NONTERM_opt_equals
    | NONTERM_opt_OBLOCKSEP
    | NONTERM_opt_seps
    | NONTERM_opt_rec
    | NONTERM_opt_bar
    | NONTERM_opt_inline
    | NONTERM_opt_mutable
    | NONTERM_doToken
    | NONTERM_doneDeclEnd
    | NONTERM_structOrBegin
    | NONTERM_sigOrBegin
    | NONTERM_colonOrEquals
    | NONTERM_stringOrKeywordString
    | NONTERM_interpolatedStringFill
    | NONTERM_interpolatedStringParts
    | NONTERM_interpolatedString
    | NONTERM_opt_HIGH_PRECEDENCE_APP
    | NONTERM_opt_HIGH_PRECEDENCE_TYAPP
    | NONTERM_typeKeyword
    | NONTERM_moduleKeyword
    | NONTERM_rbrace
    | NONTERM_bar_rbrace
    | NONTERM_rparen
    | NONTERM_oblockend
    | NONTERM_ends_other_than_rparen_coming_soon_or_recover
    | NONTERM_ends_coming_soon_or_recover

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | HASH_IF _ -> 0 
  | HASH_ELSE _ -> 1 
  | HASH_ENDIF _ -> 2 
  | COMMENT _ -> 3 
  | WHITESPACE _ -> 4 
  | HASH_LINE _ -> 5 
  | HASH_LIGHT _ -> 6 
  | INACTIVECODE _ -> 7 
  | LINE_COMMENT _ -> 8 
  | STRING_TEXT _ -> 9 
  | EOF _ -> 10 
  | LEX_FAILURE _ -> 11 
  | ODUMMY _ -> 12 
  | FIXED  -> 13 
  | OINTERFACE_MEMBER  -> 14 
  | OBLOCKEND  -> 15 
  | OBLOCKEND_COMING_SOON  -> 16 
  | OBLOCKEND_IS_HERE  -> 17 
  | ORIGHT_BLOCK_END  -> 18 
  | ODECLEND  -> 19 
  | OEND  -> 20 
  | OBLOCKSEP  -> 21 
  | OBLOCKBEGIN  -> 22 
  | ORESET  -> 23 
  | OFUN  -> 24 
  | OFUNCTION  -> 25 
  | OWITH  -> 26 
  | OELSE  -> 27 
  | OTHEN  -> 28 
  | ODO_BANG  -> 29 
  | ODO  -> 30 
  | OAND_BANG _ -> 31 
  | OBINDER _ -> 32 
  | OLET _ -> 33 
  | HIGH_PRECEDENCE_TYAPP  -> 34 
  | HIGH_PRECEDENCE_PAREN_APP  -> 35 
  | HIGH_PRECEDENCE_BRACK_APP  -> 36 
  | TYPE_COMING_SOON  -> 37 
  | TYPE_IS_HERE  -> 38 
  | MODULE_COMING_SOON  -> 39 
  | MODULE_IS_HERE  -> 40 
  | EXTERN  -> 41 
  | VOID  -> 42 
  | PUBLIC  -> 43 
  | PRIVATE  -> 44 
  | INTERNAL  -> 45 
  | GLOBAL  -> 46 
  | STATIC  -> 47 
  | MEMBER  -> 48 
  | CLASS  -> 49 
  | ABSTRACT  -> 50 
  | OVERRIDE  -> 51 
  | DEFAULT  -> 52 
  | CONSTRUCTOR  -> 53 
  | INHERIT  -> 54 
  | GREATER_RBRACK  -> 55 
  | STRUCT  -> 56 
  | SIG  -> 57 
  | BAR  -> 58 
  | RBRACK  -> 59 
  | RBRACE_COMING_SOON  -> 60 
  | RBRACE_IS_HERE  -> 61 
  | MINUS  -> 62 
  | DOLLAR  -> 63 
  | BAR_RBRACK  -> 64 
  | BAR_RBRACE  -> 65 
  | UNDERSCORE  -> 66 
  | SEMICOLON_SEMICOLON  -> 67 
  | LARROW  -> 68 
  | EQUALS  -> 69 
  | LBRACK  -> 70 
  | LBRACK_BAR  -> 71 
  | LBRACE_BAR  -> 72 
  | LBRACK_LESS  -> 73 
  | QMARK  -> 74 
  | QMARK_QMARK  -> 75 
  | DOT  -> 76 
  | COLON  -> 77 
  | COLON_COLON  -> 78 
  | COLON_GREATER  -> 79 
  | COLON_QMARK_GREATER  -> 80 
  | COLON_QMARK  -> 81 
  | COLON_EQUALS  -> 82 
  | SEMICOLON  -> 83 
  | WHEN  -> 84 
  | WHILE  -> 85 
  | WITH  -> 86 
  | HASH  -> 87 
  | AMP  -> 88 
  | AMP_AMP  -> 89 
  | QUOTE  -> 90 
  | LPAREN  -> 91 
  | RPAREN  -> 92 
  | RPAREN_COMING_SOON  -> 93 
  | RPAREN_IS_HERE  -> 94 
  | STAR  -> 95 
  | COMMA  -> 96 
  | RARROW  -> 97 
  | GREATER_BAR_RBRACK  -> 98 
  | LPAREN_STAR_RPAREN  -> 99 
  | OPEN  -> 100 
  | OR  -> 101 
  | REC  -> 102 
  | THEN  -> 103 
  | TO  -> 104 
  | TRUE  -> 105 
  | TRY  -> 106 
  | TYPE  -> 107 
  | VAL  -> 108 
  | INLINE  -> 109 
  | INTERFACE  -> 110 
  | INSTANCE  -> 111 
  | CONST  -> 112 
  | LAZY  -> 113 
  | OLAZY  -> 114 
  | MATCH  -> 115 
  | MATCH_BANG  -> 116 
  | MUTABLE  -> 117 
  | NEW  -> 118 
  | OF  -> 119 
  | EXCEPTION  -> 120 
  | FALSE  -> 121 
  | FOR  -> 122 
  | FUN  -> 123 
  | FUNCTION  -> 124 
  | IF  -> 125 
  | IN  -> 126 
  | JOIN_IN  -> 127 
  | FINALLY  -> 128 
  | DO_BANG  -> 129 
  | AND  -> 130 
  | AS  -> 131 
  | ASSERT  -> 132 
  | OASSERT  -> 133 
  | ASR  -> 134 
  | BEGIN  -> 135 
  | DO  -> 136 
  | DONE  -> 137 
  | DOWNTO  -> 138 
  | ELSE  -> 139 
  | ELIF  -> 140 
  | END  -> 141 
  | DOT_DOT  -> 142 
  | DOT_DOT_HAT  -> 143 
  | BAR_BAR  -> 144 
  | UPCAST  -> 145 
  | DOWNCAST  -> 146 
  | NULL  -> 147 
  | RESERVED  -> 148 
  | MODULE  -> 149 
  | NAMESPACE  -> 150 
  | DELEGATE  -> 151 
  | CONSTRAINT  -> 152 
  | BASE  -> 153 
  | LQUOTE _ -> 154 
  | RQUOTE _ -> 155 
  | RQUOTE_DOT _ -> 156 
  | PERCENT_OP _ -> 157 
  | BINDER _ -> 158 
  | LESS _ -> 159 
  | GREATER _ -> 160 
  | LET _ -> 161 
  | YIELD _ -> 162 
  | YIELD_BANG _ -> 163 
  | AND_BANG _ -> 164 
  | BIGNUM _ -> 165 
  | DECIMAL _ -> 166 
  | CHAR _ -> 167 
  | IEEE64 _ -> 168 
  | IEEE32 _ -> 169 
  | UNATIVEINT _ -> 170 
  | UINT64 _ -> 171 
  | UINT32 _ -> 172 
  | UINT16 _ -> 173 
  | UINT8 _ -> 174 
  | NATIVEINT _ -> 175 
  | INT64 _ -> 176 
  | INT32 _ -> 177 
  | INT32_DOT_DOT _ -> 178 
  | INT16 _ -> 179 
  | INT8 _ -> 180 
  | FUNKY_OPERATOR_NAME _ -> 181 
  | ADJACENT_PREFIX_OP _ -> 182 
  | PLUS_MINUS_OP _ -> 183 
  | INFIX_AMP_OP _ -> 184 
  | INFIX_STAR_DIV_MOD_OP _ -> 185 
  | PREFIX_OP _ -> 186 
  | INFIX_BAR_OP _ -> 187 
  | INFIX_AT_HAT_OP _ -> 188 
  | INFIX_COMPARE_OP _ -> 189 
  | INFIX_STAR_STAR_OP _ -> 190 
  | IDENT _ -> 191 
  | KEYWORD_STRING _ -> 192 
  | LBRACE _ -> 193 
  | RBRACE _ -> 194 
  | INTERP_STRING_END _ -> 195 
  | INTERP_STRING_PART _ -> 196 
  | INTERP_STRING_BEGIN_PART _ -> 197 
  | INTERP_STRING_BEGIN_END _ -> 198 
  | STRING _ -> 199 
  | BYTEARRAY _ -> 200 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_HASH_IF 
  | 1 -> TOKEN_HASH_ELSE 
  | 2 -> TOKEN_HASH_ENDIF 
  | 3 -> TOKEN_COMMENT 
  | 4 -> TOKEN_WHITESPACE 
  | 5 -> TOKEN_HASH_LINE 
  | 6 -> TOKEN_HASH_LIGHT 
  | 7 -> TOKEN_INACTIVECODE 
  | 8 -> TOKEN_LINE_COMMENT 
  | 9 -> TOKEN_STRING_TEXT 
  | 10 -> TOKEN_EOF 
  | 11 -> TOKEN_LEX_FAILURE 
  | 12 -> TOKEN_ODUMMY 
  | 13 -> TOKEN_FIXED 
  | 14 -> TOKEN_OINTERFACE_MEMBER 
  | 15 -> TOKEN_OBLOCKEND 
  | 16 -> TOKEN_OBLOCKEND_COMING_SOON 
  | 17 -> TOKEN_OBLOCKEND_IS_HERE 
  | 18 -> TOKEN_ORIGHT_BLOCK_END 
  | 19 -> TOKEN_ODECLEND 
  | 20 -> TOKEN_OEND 
  | 21 -> TOKEN_OBLOCKSEP 
  | 22 -> TOKEN_OBLOCKBEGIN 
  | 23 -> TOKEN_ORESET 
  | 24 -> TOKEN_OFUN 
  | 25 -> TOKEN_OFUNCTION 
  | 26 -> TOKEN_OWITH 
  | 27 -> TOKEN_OELSE 
  | 28 -> TOKEN_OTHEN 
  | 29 -> TOKEN_ODO_BANG 
  | 30 -> TOKEN_ODO 
  | 31 -> TOKEN_OAND_BANG 
  | 32 -> TOKEN_OBINDER 
  | 33 -> TOKEN_OLET 
  | 34 -> TOKEN_HIGH_PRECEDENCE_TYAPP 
  | 35 -> TOKEN_HIGH_PRECEDENCE_PAREN_APP 
  | 36 -> TOKEN_HIGH_PRECEDENCE_BRACK_APP 
  | 37 -> TOKEN_TYPE_COMING_SOON 
  | 38 -> TOKEN_TYPE_IS_HERE 
  | 39 -> TOKEN_MODULE_COMING_SOON 
  | 40 -> TOKEN_MODULE_IS_HERE 
  | 41 -> TOKEN_EXTERN 
  | 42 -> TOKEN_VOID 
  | 43 -> TOKEN_PUBLIC 
  | 44 -> TOKEN_PRIVATE 
  | 45 -> TOKEN_INTERNAL 
  | 46 -> TOKEN_GLOBAL 
  | 47 -> TOKEN_STATIC 
  | 48 -> TOKEN_MEMBER 
  | 49 -> TOKEN_CLASS 
  | 50 -> TOKEN_ABSTRACT 
  | 51 -> TOKEN_OVERRIDE 
  | 52 -> TOKEN_DEFAULT 
  | 53 -> TOKEN_CONSTRUCTOR 
  | 54 -> TOKEN_INHERIT 
  | 55 -> TOKEN_GREATER_RBRACK 
  | 56 -> TOKEN_STRUCT 
  | 57 -> TOKEN_SIG 
  | 58 -> TOKEN_BAR 
  | 59 -> TOKEN_RBRACK 
  | 60 -> TOKEN_RBRACE_COMING_SOON 
  | 61 -> TOKEN_RBRACE_IS_HERE 
  | 62 -> TOKEN_MINUS 
  | 63 -> TOKEN_DOLLAR 
  | 64 -> TOKEN_BAR_RBRACK 
  | 65 -> TOKEN_BAR_RBRACE 
  | 66 -> TOKEN_UNDERSCORE 
  | 67 -> TOKEN_SEMICOLON_SEMICOLON 
  | 68 -> TOKEN_LARROW 
  | 69 -> TOKEN_EQUALS 
  | 70 -> TOKEN_LBRACK 
  | 71 -> TOKEN_LBRACK_BAR 
  | 72 -> TOKEN_LBRACE_BAR 
  | 73 -> TOKEN_LBRACK_LESS 
  | 74 -> TOKEN_QMARK 
  | 75 -> TOKEN_QMARK_QMARK 
  | 76 -> TOKEN_DOT 
  | 77 -> TOKEN_COLON 
  | 78 -> TOKEN_COLON_COLON 
  | 79 -> TOKEN_COLON_GREATER 
  | 80 -> TOKEN_COLON_QMARK_GREATER 
  | 81 -> TOKEN_COLON_QMARK 
  | 82 -> TOKEN_COLON_EQUALS 
  | 83 -> TOKEN_SEMICOLON 
  | 84 -> TOKEN_WHEN 
  | 85 -> TOKEN_WHILE 
  | 86 -> TOKEN_WITH 
  | 87 -> TOKEN_HASH 
  | 88 -> TOKEN_AMP 
  | 89 -> TOKEN_AMP_AMP 
  | 90 -> TOKEN_QUOTE 
  | 91 -> TOKEN_LPAREN 
  | 92 -> TOKEN_RPAREN 
  | 93 -> TOKEN_RPAREN_COMING_SOON 
  | 94 -> TOKEN_RPAREN_IS_HERE 
  | 95 -> TOKEN_STAR 
  | 96 -> TOKEN_COMMA 
  | 97 -> TOKEN_RARROW 
  | 98 -> TOKEN_GREATER_BAR_RBRACK 
  | 99 -> TOKEN_LPAREN_STAR_RPAREN 
  | 100 -> TOKEN_OPEN 
  | 101 -> TOKEN_OR 
  | 102 -> TOKEN_REC 
  | 103 -> TOKEN_THEN 
  | 104 -> TOKEN_TO 
  | 105 -> TOKEN_TRUE 
  | 106 -> TOKEN_TRY 
  | 107 -> TOKEN_TYPE 
  | 108 -> TOKEN_VAL 
  | 109 -> TOKEN_INLINE 
  | 110 -> TOKEN_INTERFACE 
  | 111 -> TOKEN_INSTANCE 
  | 112 -> TOKEN_CONST 
  | 113 -> TOKEN_LAZY 
  | 114 -> TOKEN_OLAZY 
  | 115 -> TOKEN_MATCH 
  | 116 -> TOKEN_MATCH_BANG 
  | 117 -> TOKEN_MUTABLE 
  | 118 -> TOKEN_NEW 
  | 119 -> TOKEN_OF 
  | 120 -> TOKEN_EXCEPTION 
  | 121 -> TOKEN_FALSE 
  | 122 -> TOKEN_FOR 
  | 123 -> TOKEN_FUN 
  | 124 -> TOKEN_FUNCTION 
  | 125 -> TOKEN_IF 
  | 126 -> TOKEN_IN 
  | 127 -> TOKEN_JOIN_IN 
  | 128 -> TOKEN_FINALLY 
  | 129 -> TOKEN_DO_BANG 
  | 130 -> TOKEN_AND 
  | 131 -> TOKEN_AS 
  | 132 -> TOKEN_ASSERT 
  | 133 -> TOKEN_OASSERT 
  | 134 -> TOKEN_ASR 
  | 135 -> TOKEN_BEGIN 
  | 136 -> TOKEN_DO 
  | 137 -> TOKEN_DONE 
  | 138 -> TOKEN_DOWNTO 
  | 139 -> TOKEN_ELSE 
  | 140 -> TOKEN_ELIF 
  | 141 -> TOKEN_END 
  | 142 -> TOKEN_DOT_DOT 
  | 143 -> TOKEN_DOT_DOT_HAT 
  | 144 -> TOKEN_BAR_BAR 
  | 145 -> TOKEN_UPCAST 
  | 146 -> TOKEN_DOWNCAST 
  | 147 -> TOKEN_NULL 
  | 148 -> TOKEN_RESERVED 
  | 149 -> TOKEN_MODULE 
  | 150 -> TOKEN_NAMESPACE 
  | 151 -> TOKEN_DELEGATE 
  | 152 -> TOKEN_CONSTRAINT 
  | 153 -> TOKEN_BASE 
  | 154 -> TOKEN_LQUOTE 
  | 155 -> TOKEN_RQUOTE 
  | 156 -> TOKEN_RQUOTE_DOT 
  | 157 -> TOKEN_PERCENT_OP 
  | 158 -> TOKEN_BINDER 
  | 159 -> TOKEN_LESS 
  | 160 -> TOKEN_GREATER 
  | 161 -> TOKEN_LET 
  | 162 -> TOKEN_YIELD 
  | 163 -> TOKEN_YIELD_BANG 
  | 164 -> TOKEN_AND_BANG 
  | 165 -> TOKEN_BIGNUM 
  | 166 -> TOKEN_DECIMAL 
  | 167 -> TOKEN_CHAR 
  | 168 -> TOKEN_IEEE64 
  | 169 -> TOKEN_IEEE32 
  | 170 -> TOKEN_UNATIVEINT 
  | 171 -> TOKEN_UINT64 
  | 172 -> TOKEN_UINT32 
  | 173 -> TOKEN_UINT16 
  | 174 -> TOKEN_UINT8 
  | 175 -> TOKEN_NATIVEINT 
  | 176 -> TOKEN_INT64 
  | 177 -> TOKEN_INT32 
  | 178 -> TOKEN_INT32_DOT_DOT 
  | 179 -> TOKEN_INT16 
  | 180 -> TOKEN_INT8 
  | 181 -> TOKEN_FUNKY_OPERATOR_NAME 
  | 182 -> TOKEN_ADJACENT_PREFIX_OP 
  | 183 -> TOKEN_PLUS_MINUS_OP 
  | 184 -> TOKEN_INFIX_AMP_OP 
  | 185 -> TOKEN_INFIX_STAR_DIV_MOD_OP 
  | 186 -> TOKEN_PREFIX_OP 
  | 187 -> TOKEN_INFIX_BAR_OP 
  | 188 -> TOKEN_INFIX_AT_HAT_OP 
  | 189 -> TOKEN_INFIX_COMPARE_OP 
  | 190 -> TOKEN_INFIX_STAR_STAR_OP 
  | 191 -> TOKEN_IDENT 
  | 192 -> TOKEN_KEYWORD_STRING 
  | 193 -> TOKEN_LBRACE 
  | 194 -> TOKEN_RBRACE 
  | 195 -> TOKEN_INTERP_STRING_END 
  | 196 -> TOKEN_INTERP_STRING_PART 
  | 197 -> TOKEN_INTERP_STRING_BEGIN_PART 
  | 198 -> TOKEN_INTERP_STRING_BEGIN_END 
  | 199 -> TOKEN_STRING 
  | 200 -> TOKEN_BYTEARRAY 
  | 203 -> TOKEN_end_of_input
  | 201 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startsignatureFile 
    | 1 -> NONTERM__startimplementationFile 
    | 2 -> NONTERM__startinteraction 
    | 3 -> NONTERM__starttypedSeqExprEOF 
    | 4 -> NONTERM__starttypEOF 
    | 5 -> NONTERM_interaction 
    | 6 -> NONTERM_interaction 
    | 7 -> NONTERM_interaction 
    | 8 -> NONTERM_interactiveTerminator 
    | 9 -> NONTERM_interactiveTerminator 
    | 10 -> NONTERM_interactiveItemsTerminator 
    | 11 -> NONTERM_interactiveItemsTerminator 
    | 12 -> NONTERM_interactiveItemsTerminator 
    | 13 -> NONTERM_interactiveItemsTerminator 
    | 14 -> NONTERM_interactiveItemsTerminator 
    | 15 -> NONTERM_interactiveItemsTerminator 
    | 16 -> NONTERM_interactiveItemsTerminator 
    | 17 -> NONTERM_interactiveDefns 
    | 18 -> NONTERM_interactiveDefns 
    | 19 -> NONTERM_interactiveExpr 
    | 20 -> NONTERM_interactiveHash 
    | 21 -> NONTERM_interactiveSeparators 
    | 22 -> NONTERM_interactiveSeparators 
    | 23 -> NONTERM_interactiveSeparator 
    | 24 -> NONTERM_interactiveSeparator 
    | 25 -> NONTERM_hashDirective 
    | 26 -> NONTERM_hashDirectiveArgs 
    | 27 -> NONTERM_hashDirectiveArgs 
    | 28 -> NONTERM_hashDirectiveArg 
    | 29 -> NONTERM_signatureFile 
    | 30 -> NONTERM_signatureFile 
    | 31 -> NONTERM_signatureFile 
    | 32 -> NONTERM_moduleIntro 
    | 33 -> NONTERM_namespaceIntro 
    | 34 -> NONTERM_fileNamespaceSpecs 
    | 35 -> NONTERM_fileNamespaceSpecs 
    | 36 -> NONTERM_fileNamespaceSpecList 
    | 37 -> NONTERM_fileNamespaceSpecList 
    | 38 -> NONTERM_fileNamespaceSpec 
    | 39 -> NONTERM_fileModuleSpec 
    | 40 -> NONTERM_fileModuleSpec 
    | 41 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 42 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 43 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 44 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 45 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 46 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 47 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 48 -> NONTERM_moduleSpfns 
    | 49 -> NONTERM_moduleSpfns 
    | 50 -> NONTERM_moduleSpfns 
    | 51 -> NONTERM_moduleSpfn 
    | 52 -> NONTERM_moduleSpfn 
    | 53 -> NONTERM_moduleSpfn 
    | 54 -> NONTERM_moduleSpfn 
    | 55 -> NONTERM_moduleSpfn 
    | 56 -> NONTERM_moduleSpfn 
    | 57 -> NONTERM_moduleSpfn 
    | 58 -> NONTERM_valSpfn 
    | 59 -> NONTERM_optLiteralValueSpfn 
    | 60 -> NONTERM_optLiteralValueSpfn 
    | 61 -> NONTERM_optLiteralValueSpfn 
    | 62 -> NONTERM_moduleSpecBlock 
    | 63 -> NONTERM_moduleSpecBlock 
    | 64 -> NONTERM_moduleSpecBlock 
    | 65 -> NONTERM_tyconSpfns 
    | 66 -> NONTERM_tyconSpfnList 
    | 67 -> NONTERM_tyconSpfnList 
    | 68 -> NONTERM_tyconSpfn 
    | 69 -> NONTERM_tyconSpfn 
    | 70 -> NONTERM_tyconSpfnRhsBlock 
    | 71 -> NONTERM_tyconSpfnRhsBlock 
    | 72 -> NONTERM_tyconSpfnRhs 
    | 73 -> NONTERM_tyconSpfnRhs 
    | 74 -> NONTERM_tyconSpfnRhs 
    | 75 -> NONTERM_tyconClassSpfn 
    | 76 -> NONTERM_tyconClassSpfn 
    | 77 -> NONTERM_tyconClassSpfn 
    | 78 -> NONTERM_tyconClassSpfn 
    | 79 -> NONTERM_classSpfnBlockKindUnspecified 
    | 80 -> NONTERM_classSpfnBlockKindUnspecified 
    | 81 -> NONTERM_classSpfnBlockKindUnspecified 
    | 82 -> NONTERM_classSpfnBlockKindUnspecified 
    | 83 -> NONTERM_classSpfnBlock 
    | 84 -> NONTERM_classSpfnBlock 
    | 85 -> NONTERM_classSpfnBlock 
    | 86 -> NONTERM_classSpfnMembers 
    | 87 -> NONTERM_classSpfnMembers 
    | 88 -> NONTERM_classSpfnMembersAtLeastOne 
    | 89 -> NONTERM_classMemberSpfn 
    | 90 -> NONTERM_classMemberSpfn 
    | 91 -> NONTERM_classMemberSpfn 
    | 92 -> NONTERM_classMemberSpfn 
    | 93 -> NONTERM_classMemberSpfn 
    | 94 -> NONTERM_classMemberSpfn 
    | 95 -> NONTERM_classMemberSpfn 
    | 96 -> NONTERM_classMemberSpfnGetSet 
    | 97 -> NONTERM_classMemberSpfnGetSet 
    | 98 -> NONTERM_classMemberSpfnGetSet 
    | 99 -> NONTERM_classMemberSpfnGetSet 
    | 100 -> NONTERM_classMemberSpfnGetSetElements 
    | 101 -> NONTERM_classMemberSpfnGetSetElements 
    | 102 -> NONTERM_memberSpecFlags 
    | 103 -> NONTERM_memberSpecFlags 
    | 104 -> NONTERM_memberSpecFlags 
    | 105 -> NONTERM_exconSpfn 
    | 106 -> NONTERM_opt_classSpfn 
    | 107 -> NONTERM_opt_classSpfn 
    | 108 -> NONTERM_implementationFile 
    | 109 -> NONTERM_implementationFile 
    | 110 -> NONTERM_implementationFile 
    | 111 -> NONTERM_fileNamespaceImpls 
    | 112 -> NONTERM_fileNamespaceImpls 
    | 113 -> NONTERM_fileNamespaceImplList 
    | 114 -> NONTERM_fileNamespaceImplList 
    | 115 -> NONTERM_fileNamespaceImpl 
    | 116 -> NONTERM_fileModuleImpl 
    | 117 -> NONTERM_fileModuleImpl 
    | 118 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 119 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 120 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 121 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 122 -> NONTERM_moduleDefnsOrExprPossiblyEmpty 
    | 123 -> NONTERM_moduleDefnsOrExprPossiblyEmpty 
    | 124 -> NONTERM_moduleDefnsOrExpr 
    | 125 -> NONTERM_moduleDefnsOrExpr 
    | 126 -> NONTERM_moduleDefnsOrExpr 
    | 127 -> NONTERM_moduleDefnsOrExpr 
    | 128 -> NONTERM_moduleDefnsOrExpr 
    | 129 -> NONTERM_moduleDefns 
    | 130 -> NONTERM_moduleDefns 
    | 131 -> NONTERM_moduleDefns 
    | 132 -> NONTERM_moduleDefns 
    | 133 -> NONTERM_moduleDefns 
    | 134 -> NONTERM_moduleDefnOrDirective 
    | 135 -> NONTERM_moduleDefnOrDirective 
    | 136 -> NONTERM_moduleDefn 
    | 137 -> NONTERM_moduleDefn 
    | 138 -> NONTERM_moduleDefn 
    | 139 -> NONTERM_moduleDefn 
    | 140 -> NONTERM_moduleDefn 
    | 141 -> NONTERM_moduleDefn 
    | 142 -> NONTERM_moduleDefn 
    | 143 -> NONTERM_moduleDefn 
    | 144 -> NONTERM_openDecl 
    | 145 -> NONTERM_openDecl 
    | 146 -> NONTERM_namedModuleAbbrevBlock 
    | 147 -> NONTERM_namedModuleAbbrevBlock 
    | 148 -> NONTERM_namedModuleDefnBlock 
    | 149 -> NONTERM_namedModuleDefnBlock 
    | 150 -> NONTERM_namedModuleDefnBlock 
    | 151 -> NONTERM_namedModuleDefnBlock 
    | 152 -> NONTERM_namedModuleDefnBlock 
    | 153 -> NONTERM_namedModuleDefnBlock 
    | 154 -> NONTERM_namedModuleDefnBlock 
    | 155 -> NONTERM_wrappedNamedModuleDefn 
    | 156 -> NONTERM_wrappedNamedModuleDefn 
    | 157 -> NONTERM_wrappedNamedModuleDefn 
    | 158 -> NONTERM_tyconDefnAugmentation 
    | 159 -> NONTERM_opt_attributes 
    | 160 -> NONTERM_opt_attributes 
    | 161 -> NONTERM_attributes 
    | 162 -> NONTERM_attributes 
    | 163 -> NONTERM_attributeList 
    | 164 -> NONTERM_attributeList 
    | 165 -> NONTERM_attributeList 
    | 166 -> NONTERM_attributeList 
    | 167 -> NONTERM_attributeListElements 
    | 168 -> NONTERM_attributeListElements 
    | 169 -> NONTERM_attribute 
    | 170 -> NONTERM_attribute 
    | 171 -> NONTERM_attribute 
    | 172 -> NONTERM_attributeTarget 
    | 173 -> NONTERM_attributeTarget 
    | 174 -> NONTERM_attributeTarget 
    | 175 -> NONTERM_attributeTarget 
    | 176 -> NONTERM_memberFlags 
    | 177 -> NONTERM_memberFlags 
    | 178 -> NONTERM_memberFlags 
    | 179 -> NONTERM_memberFlags 
    | 180 -> NONTERM_typeNameInfo 
    | 181 -> NONTERM_tyconDefnList 
    | 182 -> NONTERM_tyconDefnList 
    | 183 -> NONTERM_tyconDefn 
    | 184 -> NONTERM_tyconDefn 
    | 185 -> NONTERM_tyconDefn 
    | 186 -> NONTERM_tyconDefn 
    | 187 -> NONTERM_tyconDefnRhsBlock 
    | 188 -> NONTERM_tyconDefnRhsBlock 
    | 189 -> NONTERM_tyconDefnRhsBlock 
    | 190 -> NONTERM_tyconDefnRhs 
    | 191 -> NONTERM_tyconDefnRhs 
    | 192 -> NONTERM_tyconDefnRhs 
    | 193 -> NONTERM_tyconClassDefn 
    | 194 -> NONTERM_tyconClassDefn 
    | 195 -> NONTERM_tyconClassDefn 
    | 196 -> NONTERM_tyconClassDefn 
    | 197 -> NONTERM_classDefnBlockKindUnspecified 
    | 198 -> NONTERM_classDefnBlockKindUnspecified 
    | 199 -> NONTERM_classDefnBlock 
    | 200 -> NONTERM_classDefnBlock 
    | 201 -> NONTERM_classDefnBlock 
    | 202 -> NONTERM_classDefnMembers 
    | 203 -> NONTERM_classDefnMembers 
    | 204 -> NONTERM_classDefnMembers 
    | 205 -> NONTERM_classDefnMembersAtLeastOne 
    | 206 -> NONTERM_classDefnMemberGetSet 
    | 207 -> NONTERM_classDefnMemberGetSet 
    | 208 -> NONTERM_classDefnMemberGetSet 
    | 209 -> NONTERM_classDefnMemberGetSetElements 
    | 210 -> NONTERM_classDefnMemberGetSetElements 
    | 211 -> NONTERM_classDefnMemberGetSetElement 
    | 212 -> NONTERM_memberCore 
    | 213 -> NONTERM_memberCore 
    | 214 -> NONTERM_abstractMemberFlags 
    | 215 -> NONTERM_abstractMemberFlags 
    | 216 -> NONTERM_classDefnMember 
    | 217 -> NONTERM_classDefnMember 
    | 218 -> NONTERM_classDefnMember 
    | 219 -> NONTERM_classDefnMember 
    | 220 -> NONTERM_classDefnMember 
    | 221 -> NONTERM_classDefnMember 
    | 222 -> NONTERM_classDefnMember 
    | 223 -> NONTERM_classDefnMember 
    | 224 -> NONTERM_classDefnMember 
    | 225 -> NONTERM_classDefnMember 
    | 226 -> NONTERM_classDefnMember 
    | 227 -> NONTERM_valDefnDecl 
    | 228 -> NONTERM_autoPropsDefnDecl 
    | 229 -> NONTERM_opt_typ 
    | 230 -> NONTERM_opt_typ 
    | 231 -> NONTERM_atomicPatternLongIdent 
    | 232 -> NONTERM_atomicPatternLongIdent 
    | 233 -> NONTERM_atomicPatternLongIdent 
    | 234 -> NONTERM_atomicPatternLongIdent 
    | 235 -> NONTERM_atomicPatternLongIdent 
    | 236 -> NONTERM_opt_access 
    | 237 -> NONTERM_opt_access 
    | 238 -> NONTERM_access 
    | 239 -> NONTERM_access 
    | 240 -> NONTERM_access 
    | 241 -> NONTERM_opt_declVisibility 
    | 242 -> NONTERM_opt_declVisibility 
    | 243 -> NONTERM_opt_interfaceImplDefn 
    | 244 -> NONTERM_opt_interfaceImplDefn 
    | 245 -> NONTERM_opt_classDefn 
    | 246 -> NONTERM_opt_classDefn 
    | 247 -> NONTERM_inheritsDefn 
    | 248 -> NONTERM_inheritsDefn 
    | 249 -> NONTERM_inheritsDefn 
    | 250 -> NONTERM_optAsSpec 
    | 251 -> NONTERM_optAsSpec 
    | 252 -> NONTERM_asSpec 
    | 253 -> NONTERM_optBaseSpec 
    | 254 -> NONTERM_optBaseSpec 
    | 255 -> NONTERM_baseSpec 
    | 256 -> NONTERM_baseSpec 
    | 257 -> NONTERM_objectImplementationBlock 
    | 258 -> NONTERM_objectImplementationBlock 
    | 259 -> NONTERM_objectImplementationBlock 
    | 260 -> NONTERM_objectImplementationMembers 
    | 261 -> NONTERM_objectImplementationMembers 
    | 262 -> NONTERM_objectImplementationMember 
    | 263 -> NONTERM_objectImplementationMember 
    | 264 -> NONTERM_objectImplementationMember 
    | 265 -> NONTERM_objectImplementationMember 
    | 266 -> NONTERM_memberOrOverride 
    | 267 -> NONTERM_memberOrOverride 
    | 268 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 269 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 270 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 271 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 272 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 273 -> NONTERM_braceFieldDeclList 
    | 274 -> NONTERM_braceFieldDeclList 
    | 275 -> NONTERM_braceFieldDeclList 
    | 276 -> NONTERM_anonRecdType 
    | 277 -> NONTERM_anonRecdType 
    | 278 -> NONTERM_braceBarFieldDeclListCore 
    | 279 -> NONTERM_braceBarFieldDeclListCore 
    | 280 -> NONTERM_braceBarFieldDeclListCore 
    | 281 -> NONTERM_inlineAssemblyTyconRepr 
    | 282 -> NONTERM_classOrInterfaceOrStruct 
    | 283 -> NONTERM_classOrInterfaceOrStruct 
    | 284 -> NONTERM_classOrInterfaceOrStruct 
    | 285 -> NONTERM_interfaceMember 
    | 286 -> NONTERM_interfaceMember 
    | 287 -> NONTERM_tyconNameAndTyparDecls 
    | 288 -> NONTERM_tyconNameAndTyparDecls 
    | 289 -> NONTERM_tyconNameAndTyparDecls 
    | 290 -> NONTERM_prefixTyparDecls 
    | 291 -> NONTERM_prefixTyparDecls 
    | 292 -> NONTERM_typarDeclList 
    | 293 -> NONTERM_typarDeclList 
    | 294 -> NONTERM_typarDecl 
    | 295 -> NONTERM_postfixTyparDecls 
    | 296 -> NONTERM_explicitValTyparDeclsCore 
    | 297 -> NONTERM_explicitValTyparDeclsCore 
    | 298 -> NONTERM_explicitValTyparDeclsCore 
    | 299 -> NONTERM_explicitValTyparDecls 
    | 300 -> NONTERM_opt_explicitValTyparDecls 
    | 301 -> NONTERM_opt_explicitValTyparDecls 
    | 302 -> NONTERM_opt_explicitValTyparDecls2 
    | 303 -> NONTERM_opt_explicitValTyparDecls2 
    | 304 -> NONTERM_opt_typeConstraints 
    | 305 -> NONTERM_opt_typeConstraints 
    | 306 -> NONTERM_typeConstraints 
    | 307 -> NONTERM_typeConstraints 
    | 308 -> NONTERM_typeConstraint 
    | 309 -> NONTERM_typeConstraint 
    | 310 -> NONTERM_typeConstraint 
    | 311 -> NONTERM_typeConstraint 
    | 312 -> NONTERM_typeConstraint 
    | 313 -> NONTERM_typeConstraint 
    | 314 -> NONTERM_typeConstraint 
    | 315 -> NONTERM_typeConstraint 
    | 316 -> NONTERM_typeConstraint 
    | 317 -> NONTERM_typeConstraint 
    | 318 -> NONTERM_typarAlts 
    | 319 -> NONTERM_typarAlts 
    | 320 -> NONTERM_unionTypeRepr 
    | 321 -> NONTERM_unionTypeRepr 
    | 322 -> NONTERM_unionTypeRepr 
    | 323 -> NONTERM_barAndgrabXmlDoc 
    | 324 -> NONTERM_attrUnionCaseDecls 
    | 325 -> NONTERM_attrUnionCaseDecls 
    | 326 -> NONTERM_attrUnionCaseDecl 
    | 327 -> NONTERM_attrUnionCaseDecl 
    | 328 -> NONTERM_attrUnionCaseDecl 
    | 329 -> NONTERM_attrUnionCaseDecl 
    | 330 -> NONTERM_unionCaseName 
    | 331 -> NONTERM_unionCaseName 
    | 332 -> NONTERM_unionCaseName 
    | 333 -> NONTERM_firstUnionCaseDeclOfMany 
    | 334 -> NONTERM_firstUnionCaseDeclOfMany 
    | 335 -> NONTERM_firstUnionCaseDeclOfMany 
    | 336 -> NONTERM_firstUnionCaseDecl 
    | 337 -> NONTERM_firstUnionCaseDecl 
    | 338 -> NONTERM_unionCaseReprElements 
    | 339 -> NONTERM_unionCaseReprElements 
    | 340 -> NONTERM_unionCaseReprElement 
    | 341 -> NONTERM_unionCaseReprElement 
    | 342 -> NONTERM_unionCaseRepr 
    | 343 -> NONTERM_unionCaseRepr 
    | 344 -> NONTERM_recdFieldDeclList 
    | 345 -> NONTERM_recdFieldDeclList 
    | 346 -> NONTERM_recdFieldDecl 
    | 347 -> NONTERM_fieldDecl 
    | 348 -> NONTERM_exconDefn 
    | 349 -> NONTERM_exceptionAndGrabDoc 
    | 350 -> NONTERM_exconCore 
    | 351 -> NONTERM_exconIntro 
    | 352 -> NONTERM_exconIntro 
    | 353 -> NONTERM_exconRepr 
    | 354 -> NONTERM_exconRepr 
    | 355 -> NONTERM_defnBindings 
    | 356 -> NONTERM_defnBindings 
    | 357 -> NONTERM_doBinding 
    | 358 -> NONTERM_hardwhiteLetBindings 
    | 359 -> NONTERM_hardwhiteDoBinding 
    | 360 -> NONTERM_classDefnBindings 
    | 361 -> NONTERM_classDefnBindings 
    | 362 -> NONTERM_classDefnBindings 
    | 363 -> NONTERM_classDefnBindings 
    | 364 -> NONTERM_hardwhiteDefnBindingsTerminator 
    | 365 -> NONTERM_hardwhiteDefnBindingsTerminator 
    | 366 -> NONTERM_cPrototype 
    | 367 -> NONTERM_cArgs 
    | 368 -> NONTERM_cArgs 
    | 369 -> NONTERM_cArgs 
    | 370 -> NONTERM_cMoreArgs 
    | 371 -> NONTERM_cMoreArgs 
    | 372 -> NONTERM_cArg 
    | 373 -> NONTERM_cArg 
    | 374 -> NONTERM_cType 
    | 375 -> NONTERM_cType 
    | 376 -> NONTERM_cType 
    | 377 -> NONTERM_cType 
    | 378 -> NONTERM_cType 
    | 379 -> NONTERM_cRetType 
    | 380 -> NONTERM_cRetType 
    | 381 -> NONTERM_localBindings 
    | 382 -> NONTERM_moreLocalBindings 
    | 383 -> NONTERM_moreLocalBindings 
    | 384 -> NONTERM_attr_localBinding 
    | 385 -> NONTERM_attr_localBinding 
    | 386 -> NONTERM_localBinding 
    | 387 -> NONTERM_localBinding 
    | 388 -> NONTERM_localBinding 
    | 389 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 390 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 391 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 392 -> NONTERM_typedExprWithStaticOptimizations 
    | 393 -> NONTERM_opt_staticOptimizations 
    | 394 -> NONTERM_opt_staticOptimizations 
    | 395 -> NONTERM_staticOptimization 
    | 396 -> NONTERM_staticOptimizationConditions 
    | 397 -> NONTERM_staticOptimizationConditions 
    | 398 -> NONTERM_staticOptimizationCondition 
    | 399 -> NONTERM_staticOptimizationCondition 
    | 400 -> NONTERM_rawConstant 
    | 401 -> NONTERM_rawConstant 
    | 402 -> NONTERM_rawConstant 
    | 403 -> NONTERM_rawConstant 
    | 404 -> NONTERM_rawConstant 
    | 405 -> NONTERM_rawConstant 
    | 406 -> NONTERM_rawConstant 
    | 407 -> NONTERM_rawConstant 
    | 408 -> NONTERM_rawConstant 
    | 409 -> NONTERM_rawConstant 
    | 410 -> NONTERM_rawConstant 
    | 411 -> NONTERM_rawConstant 
    | 412 -> NONTERM_rawConstant 
    | 413 -> NONTERM_rawConstant 
    | 414 -> NONTERM_rawConstant 
    | 415 -> NONTERM_rawConstant 
    | 416 -> NONTERM_rawConstant 
    | 417 -> NONTERM_rationalConstant 
    | 418 -> NONTERM_rationalConstant 
    | 419 -> NONTERM_rationalConstant 
    | 420 -> NONTERM_rationalConstant 
    | 421 -> NONTERM_atomicUnsignedRationalConstant 
    | 422 -> NONTERM_atomicUnsignedRationalConstant 
    | 423 -> NONTERM_atomicRationalConstant 
    | 424 -> NONTERM_atomicRationalConstant 
    | 425 -> NONTERM_constant 
    | 426 -> NONTERM_constant 
    | 427 -> NONTERM_bindingPattern 
    | 428 -> NONTERM_simplePattern 
    | 429 -> NONTERM_simplePattern 
    | 430 -> NONTERM_simplePattern 
    | 431 -> NONTERM_simplePattern 
    | 432 -> NONTERM_simplePatternCommaList 
    | 433 -> NONTERM_simplePatternCommaList 
    | 434 -> NONTERM_simplePatterns 
    | 435 -> NONTERM_simplePatterns 
    | 436 -> NONTERM_simplePatterns 
    | 437 -> NONTERM_simplePatterns 
    | 438 -> NONTERM_simplePatterns 
    | 439 -> NONTERM_headBindingPattern 
    | 440 -> NONTERM_headBindingPattern 
    | 441 -> NONTERM_headBindingPattern 
    | 442 -> NONTERM_headBindingPattern 
    | 443 -> NONTERM_headBindingPattern 
    | 444 -> NONTERM_headBindingPattern 
    | 445 -> NONTERM_tuplePatternElements 
    | 446 -> NONTERM_tuplePatternElements 
    | 447 -> NONTERM_conjPatternElements 
    | 448 -> NONTERM_conjPatternElements 
    | 449 -> NONTERM_namePatPairs 
    | 450 -> NONTERM_namePatPairs 
    | 451 -> NONTERM_namePatPair 
    | 452 -> NONTERM_constrPattern 
    | 453 -> NONTERM_constrPattern 
    | 454 -> NONTERM_constrPattern 
    | 455 -> NONTERM_constrPattern 
    | 456 -> NONTERM_constrPattern 
    | 457 -> NONTERM_constrPattern 
    | 458 -> NONTERM_atomicPatsOrNamePatPairs 
    | 459 -> NONTERM_atomicPatsOrNamePatPairs 
    | 460 -> NONTERM_atomicPatterns 
    | 461 -> NONTERM_atomicPatterns 
    | 462 -> NONTERM_atomicPatterns 
    | 463 -> NONTERM_atomicPatterns 
    | 464 -> NONTERM_atomicPattern 
    | 465 -> NONTERM_atomicPattern 
    | 466 -> NONTERM_atomicPattern 
    | 467 -> NONTERM_atomicPattern 
    | 468 -> NONTERM_atomicPattern 
    | 469 -> NONTERM_atomicPattern 
    | 470 -> NONTERM_atomicPattern 
    | 471 -> NONTERM_atomicPattern 
    | 472 -> NONTERM_atomicPattern 
    | 473 -> NONTERM_atomicPattern 
    | 474 -> NONTERM_atomicPattern 
    | 475 -> NONTERM_atomicPattern 
    | 476 -> NONTERM_atomicPattern 
    | 477 -> NONTERM_atomicPattern 
    | 478 -> NONTERM_atomicPattern 
    | 479 -> NONTERM_atomicPattern 
    | 480 -> NONTERM_atomicPattern 
    | 481 -> NONTERM_atomicPattern 
    | 482 -> NONTERM_atomicPattern 
    | 483 -> NONTERM_atomicPattern 
    | 484 -> NONTERM_parenPatternBody 
    | 485 -> NONTERM_parenPatternBody 
    | 486 -> NONTERM_parenPattern 
    | 487 -> NONTERM_parenPattern 
    | 488 -> NONTERM_parenPattern 
    | 489 -> NONTERM_parenPattern 
    | 490 -> NONTERM_parenPattern 
    | 491 -> NONTERM_parenPattern 
    | 492 -> NONTERM_parenPattern 
    | 493 -> NONTERM_parenPattern 
    | 494 -> NONTERM_tupleParenPatternElements 
    | 495 -> NONTERM_tupleParenPatternElements 
    | 496 -> NONTERM_conjParenPatternElements 
    | 497 -> NONTERM_conjParenPatternElements 
    | 498 -> NONTERM_recordPatternElementsAux 
    | 499 -> NONTERM_recordPatternElementsAux 
    | 500 -> NONTERM_recordPatternElement 
    | 501 -> NONTERM_listPatternElements 
    | 502 -> NONTERM_listPatternElements 
    | 503 -> NONTERM_listPatternElements 
    | 504 -> NONTERM_typedSeqExprBlock 
    | 505 -> NONTERM_typedSeqExprBlock 
    | 506 -> NONTERM_typedSeqExprBlock 
    | 507 -> NONTERM_declExprBlock 
    | 508 -> NONTERM_declExprBlock 
    | 509 -> NONTERM_typedSeqExprBlockR 
    | 510 -> NONTERM_typedSeqExprBlockR 
    | 511 -> NONTERM_typedSeqExpr 
    | 512 -> NONTERM_typedSeqExpr 
    | 513 -> NONTERM_typedSeqExprEOF 
    | 514 -> NONTERM_seqExpr 
    | 515 -> NONTERM_seqExpr 
    | 516 -> NONTERM_seqExpr 
    | 517 -> NONTERM_seqExpr 
    | 518 -> NONTERM_seqExpr 
    | 519 -> NONTERM_seqExpr 
    | 520 -> NONTERM_recover 
    | 521 -> NONTERM_recover 
    | 522 -> NONTERM_moreBinders 
    | 523 -> NONTERM_moreBinders 
    | 524 -> NONTERM_moreBinders 
    | 525 -> NONTERM_declExpr 
    | 526 -> NONTERM_declExpr 
    | 527 -> NONTERM_declExpr 
    | 528 -> NONTERM_declExpr 
    | 529 -> NONTERM_declExpr 
    | 530 -> NONTERM_declExpr 
    | 531 -> NONTERM_declExpr 
    | 532 -> NONTERM_declExpr 
    | 533 -> NONTERM_declExpr 
    | 534 -> NONTERM_declExpr 
    | 535 -> NONTERM_declExpr 
    | 536 -> NONTERM_declExpr 
    | 537 -> NONTERM_declExpr 
    | 538 -> NONTERM_declExpr 
    | 539 -> NONTERM_declExpr 
    | 540 -> NONTERM_declExpr 
    | 541 -> NONTERM_declExpr 
    | 542 -> NONTERM_declExpr 
    | 543 -> NONTERM_declExpr 
    | 544 -> NONTERM_declExpr 
    | 545 -> NONTERM_declExpr 
    | 546 -> NONTERM_declExpr 
    | 547 -> NONTERM_declExpr 
    | 548 -> NONTERM_declExpr 
    | 549 -> NONTERM_declExpr 
    | 550 -> NONTERM_declExpr 
    | 551 -> NONTERM_declExpr 
    | 552 -> NONTERM_declExpr 
    | 553 -> NONTERM_declExpr 
    | 554 -> NONTERM_declExpr 
    | 555 -> NONTERM_declExpr 
    | 556 -> NONTERM_declExpr 
    | 557 -> NONTERM_declExpr 
    | 558 -> NONTERM_declExpr 
    | 559 -> NONTERM_declExpr 
    | 560 -> NONTERM_declExpr 
    | 561 -> NONTERM_declExpr 
    | 562 -> NONTERM_declExpr 
    | 563 -> NONTERM_declExpr 
    | 564 -> NONTERM_declExpr 
    | 565 -> NONTERM_declExpr 
    | 566 -> NONTERM_declExpr 
    | 567 -> NONTERM_declExpr 
    | 568 -> NONTERM_declExpr 
    | 569 -> NONTERM_declExpr 
    | 570 -> NONTERM_declExpr 
    | 571 -> NONTERM_declExpr 
    | 572 -> NONTERM_declExpr 
    | 573 -> NONTERM_declExpr 
    | 574 -> NONTERM_declExpr 
    | 575 -> NONTERM_declExpr 
    | 576 -> NONTERM_declExpr 
    | 577 -> NONTERM_declExpr 
    | 578 -> NONTERM_declExpr 
    | 579 -> NONTERM_declExpr 
    | 580 -> NONTERM_declExpr 
    | 581 -> NONTERM_declExpr 
    | 582 -> NONTERM_declExpr 
    | 583 -> NONTERM_declExpr 
    | 584 -> NONTERM_declExpr 
    | 585 -> NONTERM_declExpr 
    | 586 -> NONTERM_declExpr 
    | 587 -> NONTERM_declExpr 
    | 588 -> NONTERM_declExpr 
    | 589 -> NONTERM_declExpr 
    | 590 -> NONTERM_declExpr 
    | 591 -> NONTERM_declExpr 
    | 592 -> NONTERM_declExpr 
    | 593 -> NONTERM_declExpr 
    | 594 -> NONTERM_declExpr 
    | 595 -> NONTERM_declExpr 
    | 596 -> NONTERM_declExpr 
    | 597 -> NONTERM_declExpr 
    | 598 -> NONTERM_declExpr 
    | 599 -> NONTERM_declExpr 
    | 600 -> NONTERM_declExpr 
    | 601 -> NONTERM_declExpr 
    | 602 -> NONTERM_declExpr 
    | 603 -> NONTERM_declExpr 
    | 604 -> NONTERM_declExpr 
    | 605 -> NONTERM_declExpr 
    | 606 -> NONTERM_declExpr 
    | 607 -> NONTERM_declExpr 
    | 608 -> NONTERM_declExpr 
    | 609 -> NONTERM_declExpr 
    | 610 -> NONTERM_declExpr 
    | 611 -> NONTERM_declExpr 
    | 612 -> NONTERM_declExpr 
    | 613 -> NONTERM_declExpr 
    | 614 -> NONTERM_declExpr 
    | 615 -> NONTERM_declExpr 
    | 616 -> NONTERM_declExpr 
    | 617 -> NONTERM_declExpr 
    | 618 -> NONTERM_declExpr 
    | 619 -> NONTERM_declExpr 
    | 620 -> NONTERM_declExpr 
    | 621 -> NONTERM_declExpr 
    | 622 -> NONTERM_declExpr 
    | 623 -> NONTERM_declExpr 
    | 624 -> NONTERM_declExpr 
    | 625 -> NONTERM_declExpr 
    | 626 -> NONTERM_declExpr 
    | 627 -> NONTERM_declExpr 
    | 628 -> NONTERM_declExpr 
    | 629 -> NONTERM_declExpr 
    | 630 -> NONTERM_dynamicArg 
    | 631 -> NONTERM_dynamicArg 
    | 632 -> NONTERM_withClauses 
    | 633 -> NONTERM_withClauses 
    | 634 -> NONTERM_withClauses 
    | 635 -> NONTERM_withPatternClauses 
    | 636 -> NONTERM_withPatternClauses 
    | 637 -> NONTERM_withPatternClauses 
    | 638 -> NONTERM_withPatternClauses 
    | 639 -> NONTERM_patternAndGuard 
    | 640 -> NONTERM_patternClauses 
    | 641 -> NONTERM_patternClauses 
    | 642 -> NONTERM_patternClauses 
    | 643 -> NONTERM_patternClauses 
    | 644 -> NONTERM_patternClauses 
    | 645 -> NONTERM_patternGuard 
    | 646 -> NONTERM_patternGuard 
    | 647 -> NONTERM_patternResult 
    | 648 -> NONTERM_ifExprCases 
    | 649 -> NONTERM_ifExprThen 
    | 650 -> NONTERM_ifExprThen 
    | 651 -> NONTERM_ifExprThen 
    | 652 -> NONTERM_ifExprElifs 
    | 653 -> NONTERM_ifExprElifs 
    | 654 -> NONTERM_ifExprElifs 
    | 655 -> NONTERM_ifExprElifs 
    | 656 -> NONTERM_ifExprElifs 
    | 657 -> NONTERM_ifExprElifs 
    | 658 -> NONTERM_tupleExpr 
    | 659 -> NONTERM_tupleExpr 
    | 660 -> NONTERM_tupleExpr 
    | 661 -> NONTERM_tupleExpr 
    | 662 -> NONTERM_minusExpr 
    | 663 -> NONTERM_minusExpr 
    | 664 -> NONTERM_minusExpr 
    | 665 -> NONTERM_minusExpr 
    | 666 -> NONTERM_minusExpr 
    | 667 -> NONTERM_minusExpr 
    | 668 -> NONTERM_minusExpr 
    | 669 -> NONTERM_minusExpr 
    | 670 -> NONTERM_minusExpr 
    | 671 -> NONTERM_minusExpr 
    | 672 -> NONTERM_minusExpr 
    | 673 -> NONTERM_minusExpr 
    | 674 -> NONTERM_appExpr 
    | 675 -> NONTERM_appExpr 
    | 676 -> NONTERM_argExpr 
    | 677 -> NONTERM_argExpr 
    | 678 -> NONTERM_atomicExpr 
    | 679 -> NONTERM_atomicExpr 
    | 680 -> NONTERM_atomicExpr 
    | 681 -> NONTERM_atomicExpr 
    | 682 -> NONTERM_atomicExpr 
    | 683 -> NONTERM_atomicExpr 
    | 684 -> NONTERM_atomicExpr 
    | 685 -> NONTERM_atomicExpr 
    | 686 -> NONTERM_atomicExpr 
    | 687 -> NONTERM_atomicExpr 
    | 688 -> NONTERM_atomicExpr 
    | 689 -> NONTERM_atomicExpr 
    | 690 -> NONTERM_atomicExpr 
    | 691 -> NONTERM_atomicExpr 
    | 692 -> NONTERM_atomicExpr 
    | 693 -> NONTERM_atomicExpr 
    | 694 -> NONTERM_atomicExpr 
    | 695 -> NONTERM_atomicExprQualification 
    | 696 -> NONTERM_atomicExprQualification 
    | 697 -> NONTERM_atomicExprQualification 
    | 698 -> NONTERM_atomicExprQualification 
    | 699 -> NONTERM_atomicExprQualification 
    | 700 -> NONTERM_atomicExprQualification 
    | 701 -> NONTERM_atomicExprQualification 
    | 702 -> NONTERM_atomicExprQualification 
    | 703 -> NONTERM_atomicExprQualification 
    | 704 -> NONTERM_atomicExprQualification 
    | 705 -> NONTERM_atomicExprQualification 
    | 706 -> NONTERM_atomicExprQualification 
    | 707 -> NONTERM_optRangeSeqExpr 
    | 708 -> NONTERM_optRangeSeqExpr 
    | 709 -> NONTERM_optRange 
    | 710 -> NONTERM_optRange 
    | 711 -> NONTERM_optRange 
    | 712 -> NONTERM_optRange 
    | 713 -> NONTERM_optRange 
    | 714 -> NONTERM_rangeDeclExpr 
    | 715 -> NONTERM_rangeDeclExpr 
    | 716 -> NONTERM_atomicExprAfterType 
    | 717 -> NONTERM_atomicExprAfterType 
    | 718 -> NONTERM_atomicExprAfterType 
    | 719 -> NONTERM_atomicExprAfterType 
    | 720 -> NONTERM_atomicExprAfterType 
    | 721 -> NONTERM_atomicExprAfterType 
    | 722 -> NONTERM_atomicExprAfterType 
    | 723 -> NONTERM_atomicExprAfterType 
    | 724 -> NONTERM_atomicExprAfterType 
    | 725 -> NONTERM_atomicExprAfterType 
    | 726 -> NONTERM_atomicExprAfterType 
    | 727 -> NONTERM_beginEndExpr 
    | 728 -> NONTERM_beginEndExpr 
    | 729 -> NONTERM_beginEndExpr 
    | 730 -> NONTERM_beginEndExpr 
    | 731 -> NONTERM_quoteExpr 
    | 732 -> NONTERM_quoteExpr 
    | 733 -> NONTERM_quoteExpr 
    | 734 -> NONTERM_quoteExpr 
    | 735 -> NONTERM_arrayExpr 
    | 736 -> NONTERM_arrayExpr 
    | 737 -> NONTERM_arrayExpr 
    | 738 -> NONTERM_arrayExpr 
    | 739 -> NONTERM_parenExpr 
    | 740 -> NONTERM_parenExpr 
    | 741 -> NONTERM_parenExpr 
    | 742 -> NONTERM_parenExpr 
    | 743 -> NONTERM_parenExpr 
    | 744 -> NONTERM_parenExpr 
    | 745 -> NONTERM_parenExpr 
    | 746 -> NONTERM_parenExpr 
    | 747 -> NONTERM_parenExpr 
    | 748 -> NONTERM_parenExprBody 
    | 749 -> NONTERM_parenExprBody 
    | 750 -> NONTERM_parenExprBody 
    | 751 -> NONTERM_staticallyKnownHeadTypars 
    | 752 -> NONTERM_staticallyKnownHeadTypars 
    | 753 -> NONTERM_staticallyKnownHeadTyparAlts 
    | 754 -> NONTERM_staticallyKnownHeadTyparAlts 
    | 755 -> NONTERM_braceExpr 
    | 756 -> NONTERM_braceExpr 
    | 757 -> NONTERM_braceExpr 
    | 758 -> NONTERM_braceExpr 
    | 759 -> NONTERM_braceExpr 
    | 760 -> NONTERM_braceExprBody 
    | 761 -> NONTERM_braceExprBody 
    | 762 -> NONTERM_braceExprBody 
    | 763 -> NONTERM_listExprElements 
    | 764 -> NONTERM_listExprElements 
    | 765 -> NONTERM_monadicExprInitial 
    | 766 -> NONTERM_monadicExprInitial 
    | 767 -> NONTERM_rangeSequenceExpr 
    | 768 -> NONTERM_rangeSequenceExpr 
    | 769 -> NONTERM_rangeSequenceExpr 
    | 770 -> NONTERM_arrowThenExprR 
    | 771 -> NONTERM_forLoopBinder 
    | 772 -> NONTERM_forLoopBinder 
    | 773 -> NONTERM_forLoopBinder 
    | 774 -> NONTERM_forLoopBinder 
    | 775 -> NONTERM_forLoopRange 
    | 776 -> NONTERM_forLoopRange 
    | 777 -> NONTERM_forLoopDirection 
    | 778 -> NONTERM_forLoopDirection 
    | 779 -> NONTERM_inlineAssemblyExpr 
    | 780 -> NONTERM_optCurriedArgExprs 
    | 781 -> NONTERM_optCurriedArgExprs 
    | 782 -> NONTERM_opt_atomicExprAfterType 
    | 783 -> NONTERM_opt_atomicExprAfterType 
    | 784 -> NONTERM_opt_inlineAssemblyTypeArg 
    | 785 -> NONTERM_opt_inlineAssemblyTypeArg 
    | 786 -> NONTERM_optInlineAssemblyReturnTypes 
    | 787 -> NONTERM_optInlineAssemblyReturnTypes 
    | 788 -> NONTERM_optInlineAssemblyReturnTypes 
    | 789 -> NONTERM_recdExpr 
    | 790 -> NONTERM_recdExpr 
    | 791 -> NONTERM_recdExprCore 
    | 792 -> NONTERM_recdExprCore 
    | 793 -> NONTERM_recdExprCore 
    | 794 -> NONTERM_recdExprCore 
    | 795 -> NONTERM_recdExprCore 
    | 796 -> NONTERM_recdExprCore 
    | 797 -> NONTERM_recdExprCore 
    | 798 -> NONTERM_opt_seps_recd 
    | 799 -> NONTERM_opt_seps_recd 
    | 800 -> NONTERM_seps_recd 
    | 801 -> NONTERM_seps_recd 
    | 802 -> NONTERM_seps_recd 
    | 803 -> NONTERM_seps_recd 
    | 804 -> NONTERM_pathOrUnderscore 
    | 805 -> NONTERM_pathOrUnderscore 
    | 806 -> NONTERM_recdExprBindings 
    | 807 -> NONTERM_recdExprBindings 
    | 808 -> NONTERM_recdBinding 
    | 809 -> NONTERM_recdBinding 
    | 810 -> NONTERM_recdBinding 
    | 811 -> NONTERM_recdBinding 
    | 812 -> NONTERM_recdBinding 
    | 813 -> NONTERM_objExpr 
    | 814 -> NONTERM_objExpr 
    | 815 -> NONTERM_objExpr 
    | 816 -> NONTERM_objExprBaseCall 
    | 817 -> NONTERM_objExprBaseCall 
    | 818 -> NONTERM_objExprBaseCall 
    | 819 -> NONTERM_opt_objExprBindings 
    | 820 -> NONTERM_opt_objExprBindings 
    | 821 -> NONTERM_objExprBindings 
    | 822 -> NONTERM_objExprBindings 
    | 823 -> NONTERM_objExprBindings 
    | 824 -> NONTERM_objExprInterfaces 
    | 825 -> NONTERM_opt_objExprInterfaces 
    | 826 -> NONTERM_opt_objExprInterfaces 
    | 827 -> NONTERM_opt_objExprInterfaces 
    | 828 -> NONTERM_objExprInterface 
    | 829 -> NONTERM_braceBarExpr 
    | 830 -> NONTERM_braceBarExpr 
    | 831 -> NONTERM_braceBarExprCore 
    | 832 -> NONTERM_braceBarExprCore 
    | 833 -> NONTERM_braceBarExprCore 
    | 834 -> NONTERM_braceBarExprCore 
    | 835 -> NONTERM_braceBarExprCore 
    | 836 -> NONTERM_anonLambdaExpr 
    | 837 -> NONTERM_anonLambdaExpr 
    | 838 -> NONTERM_anonLambdaExpr 
    | 839 -> NONTERM_anonLambdaExpr 
    | 840 -> NONTERM_anonLambdaExpr 
    | 841 -> NONTERM_anonLambdaExpr 
    | 842 -> NONTERM_anonLambdaExpr 
    | 843 -> NONTERM_anonLambdaExpr 
    | 844 -> NONTERM_anonMatchingExpr 
    | 845 -> NONTERM_anonMatchingExpr 
    | 846 -> NONTERM_typeWithTypeConstraints 
    | 847 -> NONTERM_typeWithTypeConstraints 
    | 848 -> NONTERM_topTypeWithTypeConstraints 
    | 849 -> NONTERM_topTypeWithTypeConstraints 
    | 850 -> NONTERM_opt_topReturnTypeWithTypeConstraints 
    | 851 -> NONTERM_opt_topReturnTypeWithTypeConstraints 
    | 852 -> NONTERM_topType 
    | 853 -> NONTERM_topType 
    | 854 -> NONTERM_topTupleType 
    | 855 -> NONTERM_topTupleType 
    | 856 -> NONTERM_topTupleTypeElements 
    | 857 -> NONTERM_topTupleTypeElements 
    | 858 -> NONTERM_topAppType 
    | 859 -> NONTERM_topAppType 
    | 860 -> NONTERM_topAppType 
    | 861 -> NONTERM_topAppType 
    | 862 -> NONTERM_topAppType 
    | 863 -> NONTERM_topAppType 
    | 864 -> NONTERM_typ 
    | 865 -> NONTERM_typ 
    | 866 -> NONTERM_typEOF 
    | 867 -> NONTERM_tupleType 
    | 868 -> NONTERM_tupleType 
    | 869 -> NONTERM_tupleType 
    | 870 -> NONTERM_tupleType 
    | 871 -> NONTERM_tupleOrQuotTypeElements 
    | 872 -> NONTERM_tupleOrQuotTypeElements 
    | 873 -> NONTERM_tupleOrQuotTypeElements 
    | 874 -> NONTERM_appTypeCon 
    | 875 -> NONTERM_appTypeCon 
    | 876 -> NONTERM_appTypeConPower 
    | 877 -> NONTERM_appTypeConPower 
    | 878 -> NONTERM_appType 
    | 879 -> NONTERM_appType 
    | 880 -> NONTERM_appType 
    | 881 -> NONTERM_appType 
    | 882 -> NONTERM_appType 
    | 883 -> NONTERM_appType 
    | 884 -> NONTERM_appType 
    | 885 -> NONTERM_arrayTypeSuffix 
    | 886 -> NONTERM_arrayTypeSuffix 
    | 887 -> NONTERM_arrayTypeSuffix 
    | 888 -> NONTERM_arrayTypeSuffix 
    | 889 -> NONTERM_appTypePrefixArguments 
    | 890 -> NONTERM_typeArgListElements 
    | 891 -> NONTERM_typeArgListElements 
    | 892 -> NONTERM_typeArgListElements 
    | 893 -> NONTERM_powerType 
    | 894 -> NONTERM_powerType 
    | 895 -> NONTERM_atomTypeNonAtomicDeprecated 
    | 896 -> NONTERM_atomTypeNonAtomicDeprecated 
    | 897 -> NONTERM_atomTypeOrAnonRecdType 
    | 898 -> NONTERM_atomTypeOrAnonRecdType 
    | 899 -> NONTERM_atomType 
    | 900 -> NONTERM_atomType 
    | 901 -> NONTERM_atomType 
    | 902 -> NONTERM_atomType 
    | 903 -> NONTERM_atomType 
    | 904 -> NONTERM_atomType 
    | 905 -> NONTERM_atomType 
    | 906 -> NONTERM_atomType 
    | 907 -> NONTERM_atomType 
    | 908 -> NONTERM_atomType 
    | 909 -> NONTERM_atomType 
    | 910 -> NONTERM_atomType 
    | 911 -> NONTERM_atomType 
    | 912 -> NONTERM_atomType 
    | 913 -> NONTERM_atomType 
    | 914 -> NONTERM_atomType 
    | 915 -> NONTERM_atomType 
    | 916 -> NONTERM_atomType 
    | 917 -> NONTERM_atomType 
    | 918 -> NONTERM_atomType 
    | 919 -> NONTERM_typeArgsNoHpaDeprecated 
    | 920 -> NONTERM_typeArgsNoHpaDeprecated 
    | 921 -> NONTERM_typeArgsActual 
    | 922 -> NONTERM_typeArgsActual 
    | 923 -> NONTERM_typeArgsActual 
    | 924 -> NONTERM_typeArgsActual 
    | 925 -> NONTERM_typeArgsActual 
    | 926 -> NONTERM_typeArgsActual 
    | 927 -> NONTERM_typeArgsActual 
    | 928 -> NONTERM_typeArgActual 
    | 929 -> NONTERM_typeArgActual 
    | 930 -> NONTERM_typeArgActual 
    | 931 -> NONTERM_typeArgActualOrDummyIfEmpty 
    | 932 -> NONTERM_typeArgActualOrDummyIfEmpty 
    | 933 -> NONTERM_dummyTypeArg 
    | 934 -> NONTERM_measureTypeArg 
    | 935 -> NONTERM_measureTypeArg 
    | 936 -> NONTERM_measureTypeAtom 
    | 937 -> NONTERM_measureTypeAtom 
    | 938 -> NONTERM_measureTypeAtom 
    | 939 -> NONTERM_measureTypePower 
    | 940 -> NONTERM_measureTypePower 
    | 941 -> NONTERM_measureTypePower 
    | 942 -> NONTERM_measureTypeSeq 
    | 943 -> NONTERM_measureTypeSeq 
    | 944 -> NONTERM_measureTypeExpr 
    | 945 -> NONTERM_measureTypeExpr 
    | 946 -> NONTERM_measureTypeExpr 
    | 947 -> NONTERM_measureTypeExpr 
    | 948 -> NONTERM_typar 
    | 949 -> NONTERM_typar 
    | 950 -> NONTERM_staticallyKnownHeadTypar 
    | 951 -> NONTERM_ident 
    | 952 -> NONTERM_path 
    | 953 -> NONTERM_path 
    | 954 -> NONTERM_path 
    | 955 -> NONTERM_path 
    | 956 -> NONTERM_opName 
    | 957 -> NONTERM_opName 
    | 958 -> NONTERM_opName 
    | 959 -> NONTERM_opName 
    | 960 -> NONTERM_opName 
    | 961 -> NONTERM_operatorName 
    | 962 -> NONTERM_operatorName 
    | 963 -> NONTERM_operatorName 
    | 964 -> NONTERM_operatorName 
    | 965 -> NONTERM_operatorName 
    | 966 -> NONTERM_operatorName 
    | 967 -> NONTERM_operatorName 
    | 968 -> NONTERM_operatorName 
    | 969 -> NONTERM_operatorName 
    | 970 -> NONTERM_operatorName 
    | 971 -> NONTERM_operatorName 
    | 972 -> NONTERM_operatorName 
    | 973 -> NONTERM_operatorName 
    | 974 -> NONTERM_operatorName 
    | 975 -> NONTERM_operatorName 
    | 976 -> NONTERM_operatorName 
    | 977 -> NONTERM_operatorName 
    | 978 -> NONTERM_operatorName 
    | 979 -> NONTERM_operatorName 
    | 980 -> NONTERM_operatorName 
    | 981 -> NONTERM_operatorName 
    | 982 -> NONTERM_operatorName 
    | 983 -> NONTERM_operatorName 
    | 984 -> NONTERM_operatorName 
    | 985 -> NONTERM_operatorName 
    | 986 -> NONTERM_operatorName 
    | 987 -> NONTERM_activePatternCaseName 
    | 988 -> NONTERM_activePatternCaseNames 
    | 989 -> NONTERM_activePatternCaseNames 
    | 990 -> NONTERM_identOrOp 
    | 991 -> NONTERM_identOrOp 
    | 992 -> NONTERM_pathOp 
    | 993 -> NONTERM_pathOp 
    | 994 -> NONTERM_pathOp 
    | 995 -> NONTERM_pathOp 
    | 996 -> NONTERM_nameop 
    | 997 -> NONTERM_identExpr 
    | 998 -> NONTERM_identExpr 
    | 999 -> NONTERM_topSeparator 
    | 1000 -> NONTERM_topSeparator 
    | 1001 -> NONTERM_topSeparator 
    | 1002 -> NONTERM_topSeparators 
    | 1003 -> NONTERM_topSeparators 
    | 1004 -> NONTERM_opt_topSeparators 
    | 1005 -> NONTERM_opt_topSeparators 
    | 1006 -> NONTERM_seps 
    | 1007 -> NONTERM_seps 
    | 1008 -> NONTERM_seps 
    | 1009 -> NONTERM_seps 
    | 1010 -> NONTERM_declEnd 
    | 1011 -> NONTERM_declEnd 
    | 1012 -> NONTERM_declEnd 
    | 1013 -> NONTERM_opt_declEnd 
    | 1014 -> NONTERM_opt_declEnd 
    | 1015 -> NONTERM_opt_declEnd 
    | 1016 -> NONTERM_opt_declEnd 
    | 1017 -> NONTERM_opt_ODECLEND 
    | 1018 -> NONTERM_opt_ODECLEND 
    | 1019 -> NONTERM_deprecated_opt_equals 
    | 1020 -> NONTERM_deprecated_opt_equals 
    | 1021 -> NONTERM_opt_equals 
    | 1022 -> NONTERM_opt_equals 
    | 1023 -> NONTERM_opt_OBLOCKSEP 
    | 1024 -> NONTERM_opt_OBLOCKSEP 
    | 1025 -> NONTERM_opt_seps 
    | 1026 -> NONTERM_opt_seps 
    | 1027 -> NONTERM_opt_rec 
    | 1028 -> NONTERM_opt_rec 
    | 1029 -> NONTERM_opt_bar 
    | 1030 -> NONTERM_opt_bar 
    | 1031 -> NONTERM_opt_inline 
    | 1032 -> NONTERM_opt_inline 
    | 1033 -> NONTERM_opt_mutable 
    | 1034 -> NONTERM_opt_mutable 
    | 1035 -> NONTERM_doToken 
    | 1036 -> NONTERM_doToken 
    | 1037 -> NONTERM_doneDeclEnd 
    | 1038 -> NONTERM_doneDeclEnd 
    | 1039 -> NONTERM_structOrBegin 
    | 1040 -> NONTERM_structOrBegin 
    | 1041 -> NONTERM_sigOrBegin 
    | 1042 -> NONTERM_sigOrBegin 
    | 1043 -> NONTERM_colonOrEquals 
    | 1044 -> NONTERM_colonOrEquals 
    | 1045 -> NONTERM_stringOrKeywordString 
    | 1046 -> NONTERM_stringOrKeywordString 
    | 1047 -> NONTERM_interpolatedStringFill 
    | 1048 -> NONTERM_interpolatedStringFill 
    | 1049 -> NONTERM_interpolatedStringParts 
    | 1050 -> NONTERM_interpolatedStringParts 
    | 1051 -> NONTERM_interpolatedStringParts 
    | 1052 -> NONTERM_interpolatedString 
    | 1053 -> NONTERM_interpolatedString 
    | 1054 -> NONTERM_interpolatedString 
    | 1055 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 1056 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 1057 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 1058 -> NONTERM_opt_HIGH_PRECEDENCE_TYAPP 
    | 1059 -> NONTERM_opt_HIGH_PRECEDENCE_TYAPP 
    | 1060 -> NONTERM_typeKeyword 
    | 1061 -> NONTERM_typeKeyword 
    | 1062 -> NONTERM_typeKeyword 
    | 1063 -> NONTERM_moduleKeyword 
    | 1064 -> NONTERM_moduleKeyword 
    | 1065 -> NONTERM_moduleKeyword 
    | 1066 -> NONTERM_rbrace 
    | 1067 -> NONTERM_rbrace 
    | 1068 -> NONTERM_rbrace 
    | 1069 -> NONTERM_bar_rbrace 
    | 1070 -> NONTERM_rparen 
    | 1071 -> NONTERM_rparen 
    | 1072 -> NONTERM_rparen 
    | 1073 -> NONTERM_oblockend 
    | 1074 -> NONTERM_oblockend 
    | 1075 -> NONTERM_oblockend 
    | 1076 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1077 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1078 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1079 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1080 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1081 -> NONTERM_ends_coming_soon_or_recover 
    | 1082 -> NONTERM_ends_coming_soon_or_recover 
    | 1083 -> NONTERM_ends_coming_soon_or_recover 
    | 1084 -> NONTERM_ends_coming_soon_or_recover 
    | 1085 -> NONTERM_ends_coming_soon_or_recover 
    | 1086 -> NONTERM_ends_coming_soon_or_recover 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 203 
let _fsyacc_tagOfErrorTerminal = 201

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | HASH_IF _ -> "HASH_IF" 
  | HASH_ELSE _ -> "HASH_ELSE" 
  | HASH_ENDIF _ -> "HASH_ENDIF" 
  | COMMENT _ -> "COMMENT" 
  | WHITESPACE _ -> "WHITESPACE" 
  | HASH_LINE _ -> "HASH_LINE" 
  | HASH_LIGHT _ -> "HASH_LIGHT" 
  | INACTIVECODE _ -> "INACTIVECODE" 
  | LINE_COMMENT _ -> "LINE_COMMENT" 
  | STRING_TEXT _ -> "STRING_TEXT" 
  | EOF _ -> "EOF" 
  | LEX_FAILURE _ -> "LEX_FAILURE" 
  | ODUMMY _ -> "ODUMMY" 
  | FIXED  -> "FIXED" 
  | OINTERFACE_MEMBER  -> "OINTERFACE_MEMBER" 
  | OBLOCKEND  -> "OBLOCKEND" 
  | OBLOCKEND_COMING_SOON  -> "OBLOCKEND_COMING_SOON" 
  | OBLOCKEND_IS_HERE  -> "OBLOCKEND_IS_HERE" 
  | ORIGHT_BLOCK_END  -> "ORIGHT_BLOCK_END" 
  | ODECLEND  -> "ODECLEND" 
  | OEND  -> "OEND" 
  | OBLOCKSEP  -> "OBLOCKSEP" 
  | OBLOCKBEGIN  -> "OBLOCKBEGIN" 
  | ORESET  -> "ORESET" 
  | OFUN  -> "OFUN" 
  | OFUNCTION  -> "OFUNCTION" 
  | OWITH  -> "OWITH" 
  | OELSE  -> "OELSE" 
  | OTHEN  -> "OTHEN" 
  | ODO_BANG  -> "ODO_BANG" 
  | ODO  -> "ODO" 
  | OAND_BANG _ -> "OAND_BANG" 
  | OBINDER _ -> "OBINDER" 
  | OLET _ -> "OLET" 
  | HIGH_PRECEDENCE_TYAPP  -> "HIGH_PRECEDENCE_TYAPP" 
  | HIGH_PRECEDENCE_PAREN_APP  -> "HIGH_PRECEDENCE_PAREN_APP" 
  | HIGH_PRECEDENCE_BRACK_APP  -> "HIGH_PRECEDENCE_BRACK_APP" 
  | TYPE_COMING_SOON  -> "TYPE_COMING_SOON" 
  | TYPE_IS_HERE  -> "TYPE_IS_HERE" 
  | MODULE_COMING_SOON  -> "MODULE_COMING_SOON" 
  | MODULE_IS_HERE  -> "MODULE_IS_HERE" 
  | EXTERN  -> "EXTERN" 
  | VOID  -> "VOID" 
  | PUBLIC  -> "PUBLIC" 
  | PRIVATE  -> "PRIVATE" 
  | INTERNAL  -> "INTERNAL" 
  | GLOBAL  -> "GLOBAL" 
  | STATIC  -> "STATIC" 
  | MEMBER  -> "MEMBER" 
  | CLASS  -> "CLASS" 
  | ABSTRACT  -> "ABSTRACT" 
  | OVERRIDE  -> "OVERRIDE" 
  | DEFAULT  -> "DEFAULT" 
  | CONSTRUCTOR  -> "CONSTRUCTOR" 
  | INHERIT  -> "INHERIT" 
  | GREATER_RBRACK  -> "GREATER_RBRACK" 
  | STRUCT  -> "STRUCT" 
  | SIG  -> "SIG" 
  | BAR  -> "BAR" 
  | RBRACK  -> "RBRACK" 
  | RBRACE_COMING_SOON  -> "RBRACE_COMING_SOON" 
  | RBRACE_IS_HERE  -> "RBRACE_IS_HERE" 
  | MINUS  -> "MINUS" 
  | DOLLAR  -> "DOLLAR" 
  | BAR_RBRACK  -> "BAR_RBRACK" 
  | BAR_RBRACE  -> "BAR_RBRACE" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | SEMICOLON_SEMICOLON  -> "SEMICOLON_SEMICOLON" 
  | LARROW  -> "LARROW" 
  | EQUALS  -> "EQUALS" 
  | LBRACK  -> "LBRACK" 
  | LBRACK_BAR  -> "LBRACK_BAR" 
  | LBRACE_BAR  -> "LBRACE_BAR" 
  | LBRACK_LESS  -> "LBRACK_LESS" 
  | QMARK  -> "QMARK" 
  | QMARK_QMARK  -> "QMARK_QMARK" 
  | DOT  -> "DOT" 
  | COLON  -> "COLON" 
  | COLON_COLON  -> "COLON_COLON" 
  | COLON_GREATER  -> "COLON_GREATER" 
  | COLON_QMARK_GREATER  -> "COLON_QMARK_GREATER" 
  | COLON_QMARK  -> "COLON_QMARK" 
  | COLON_EQUALS  -> "COLON_EQUALS" 
  | SEMICOLON  -> "SEMICOLON" 
  | WHEN  -> "WHEN" 
  | WHILE  -> "WHILE" 
  | WITH  -> "WITH" 
  | HASH  -> "HASH" 
  | AMP  -> "AMP" 
  | AMP_AMP  -> "AMP_AMP" 
  | QUOTE  -> "QUOTE" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | RPAREN_COMING_SOON  -> "RPAREN_COMING_SOON" 
  | RPAREN_IS_HERE  -> "RPAREN_IS_HERE" 
  | STAR  -> "STAR" 
  | COMMA  -> "COMMA" 
  | RARROW  -> "RARROW" 
  | GREATER_BAR_RBRACK  -> "GREATER_BAR_RBRACK" 
  | LPAREN_STAR_RPAREN  -> "LPAREN_STAR_RPAREN" 
  | OPEN  -> "OPEN" 
  | OR  -> "OR" 
  | REC  -> "REC" 
  | THEN  -> "THEN" 
  | TO  -> "TO" 
  | TRUE  -> "TRUE" 
  | TRY  -> "TRY" 
  | TYPE  -> "TYPE" 
  | VAL  -> "VAL" 
  | INLINE  -> "INLINE" 
  | INTERFACE  -> "INTERFACE" 
  | INSTANCE  -> "INSTANCE" 
  | CONST  -> "CONST" 
  | LAZY  -> "LAZY" 
  | OLAZY  -> "OLAZY" 
  | MATCH  -> "MATCH" 
  | MATCH_BANG  -> "MATCH_BANG" 
  | MUTABLE  -> "MUTABLE" 
  | NEW  -> "NEW" 
  | OF  -> "OF" 
  | EXCEPTION  -> "EXCEPTION" 
  | FALSE  -> "FALSE" 
  | FOR  -> "FOR" 
  | FUN  -> "FUN" 
  | FUNCTION  -> "FUNCTION" 
  | IF  -> "IF" 
  | IN  -> "IN" 
  | JOIN_IN  -> "JOIN_IN" 
  | FINALLY  -> "FINALLY" 
  | DO_BANG  -> "DO_BANG" 
  | AND  -> "AND" 
  | AS  -> "AS" 
  | ASSERT  -> "ASSERT" 
  | OASSERT  -> "OASSERT" 
  | ASR  -> "ASR" 
  | BEGIN  -> "BEGIN" 
  | DO  -> "DO" 
  | DONE  -> "DONE" 
  | DOWNTO  -> "DOWNTO" 
  | ELSE  -> "ELSE" 
  | ELIF  -> "ELIF" 
  | END  -> "END" 
  | DOT_DOT  -> "DOT_DOT" 
  | DOT_DOT_HAT  -> "DOT_DOT_HAT" 
  | BAR_BAR  -> "BAR_BAR" 
  | UPCAST  -> "UPCAST" 
  | DOWNCAST  -> "DOWNCAST" 
  | NULL  -> "NULL" 
  | RESERVED  -> "RESERVED" 
  | MODULE  -> "MODULE" 
  | NAMESPACE  -> "NAMESPACE" 
  | DELEGATE  -> "DELEGATE" 
  | CONSTRAINT  -> "CONSTRAINT" 
  | BASE  -> "BASE" 
  | LQUOTE _ -> "LQUOTE" 
  | RQUOTE _ -> "RQUOTE" 
  | RQUOTE_DOT _ -> "RQUOTE_DOT" 
  | PERCENT_OP _ -> "PERCENT_OP" 
  | BINDER _ -> "BINDER" 
  | LESS _ -> "LESS" 
  | GREATER _ -> "GREATER" 
  | LET _ -> "LET" 
  | YIELD _ -> "YIELD" 
  | YIELD_BANG _ -> "YIELD_BANG" 
  | AND_BANG _ -> "AND_BANG" 
  | BIGNUM _ -> "BIGNUM" 
  | DECIMAL _ -> "DECIMAL" 
  | CHAR _ -> "CHAR" 
  | IEEE64 _ -> "IEEE64" 
  | IEEE32 _ -> "IEEE32" 
  | UNATIVEINT _ -> "UNATIVEINT" 
  | UINT64 _ -> "UINT64" 
  | UINT32 _ -> "UINT32" 
  | UINT16 _ -> "UINT16" 
  | UINT8 _ -> "UINT8" 
  | NATIVEINT _ -> "NATIVEINT" 
  | INT64 _ -> "INT64" 
  | INT32 _ -> "INT32" 
  | INT32_DOT_DOT _ -> "INT32_DOT_DOT" 
  | INT16 _ -> "INT16" 
  | INT8 _ -> "INT8" 
  | FUNKY_OPERATOR_NAME _ -> "FUNKY_OPERATOR_NAME" 
  | ADJACENT_PREFIX_OP _ -> "ADJACENT_PREFIX_OP" 
  | PLUS_MINUS_OP _ -> "PLUS_MINUS_OP" 
  | INFIX_AMP_OP _ -> "INFIX_AMP_OP" 
  | INFIX_STAR_DIV_MOD_OP _ -> "INFIX_STAR_DIV_MOD_OP" 
  | PREFIX_OP _ -> "PREFIX_OP" 
  | INFIX_BAR_OP _ -> "INFIX_BAR_OP" 
  | INFIX_AT_HAT_OP _ -> "INFIX_AT_HAT_OP" 
  | INFIX_COMPARE_OP _ -> "INFIX_COMPARE_OP" 
  | INFIX_STAR_STAR_OP _ -> "INFIX_STAR_STAR_OP" 
  | IDENT _ -> "IDENT" 
  | KEYWORD_STRING _ -> "KEYWORD_STRING" 
  | LBRACE _ -> "LBRACE" 
  | RBRACE _ -> "RBRACE" 
  | INTERP_STRING_END _ -> "INTERP_STRING_END" 
  | INTERP_STRING_PART _ -> "INTERP_STRING_PART" 
  | INTERP_STRING_BEGIN_PART _ -> "INTERP_STRING_BEGIN_PART" 
  | INTERP_STRING_BEGIN_END _ -> "INTERP_STRING_BEGIN_END" 
  | STRING _ -> "STRING" 
  | BYTEARRAY _ -> "BYTEARRAY" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | HASH_IF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_ELSE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_ENDIF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | WHITESPACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_LINE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_LIGHT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INACTIVECODE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LINE_COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING_TEXT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EOF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LEX_FAILURE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ODUMMY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FIXED  -> (null : System.Object) 
  | OINTERFACE_MEMBER  -> (null : System.Object) 
  | OBLOCKEND  -> (null : System.Object) 
  | OBLOCKEND_COMING_SOON  -> (null : System.Object) 
  | OBLOCKEND_IS_HERE  -> (null : System.Object) 
  | ORIGHT_BLOCK_END  -> (null : System.Object) 
  | ODECLEND  -> (null : System.Object) 
  | OEND  -> (null : System.Object) 
  | OBLOCKSEP  -> (null : System.Object) 
  | OBLOCKBEGIN  -> (null : System.Object) 
  | ORESET  -> (null : System.Object) 
  | OFUN  -> (null : System.Object) 
  | OFUNCTION  -> (null : System.Object) 
  | OWITH  -> (null : System.Object) 
  | OELSE  -> (null : System.Object) 
  | OTHEN  -> (null : System.Object) 
  | ODO_BANG  -> (null : System.Object) 
  | ODO  -> (null : System.Object) 
  | OAND_BANG _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OBINDER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OLET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HIGH_PRECEDENCE_TYAPP  -> (null : System.Object) 
  | HIGH_PRECEDENCE_PAREN_APP  -> (null : System.Object) 
  | HIGH_PRECEDENCE_BRACK_APP  -> (null : System.Object) 
  | TYPE_COMING_SOON  -> (null : System.Object) 
  | TYPE_IS_HERE  -> (null : System.Object) 
  | MODULE_COMING_SOON  -> (null : System.Object) 
  | MODULE_IS_HERE  -> (null : System.Object) 
  | EXTERN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | PUBLIC  -> (null : System.Object) 
  | PRIVATE  -> (null : System.Object) 
  | INTERNAL  -> (null : System.Object) 
  | GLOBAL  -> (null : System.Object) 
  | STATIC  -> (null : System.Object) 
  | MEMBER  -> (null : System.Object) 
  | CLASS  -> (null : System.Object) 
  | ABSTRACT  -> (null : System.Object) 
  | OVERRIDE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | CONSTRUCTOR  -> (null : System.Object) 
  | INHERIT  -> (null : System.Object) 
  | GREATER_RBRACK  -> (null : System.Object) 
  | STRUCT  -> (null : System.Object) 
  | SIG  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | RBRACE_COMING_SOON  -> (null : System.Object) 
  | RBRACE_IS_HERE  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | DOLLAR  -> (null : System.Object) 
  | BAR_RBRACK  -> (null : System.Object) 
  | BAR_RBRACE  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | SEMICOLON_SEMICOLON  -> (null : System.Object) 
  | LARROW  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | LBRACK_BAR  -> (null : System.Object) 
  | LBRACE_BAR  -> (null : System.Object) 
  | LBRACK_LESS  -> (null : System.Object) 
  | QMARK  -> (null : System.Object) 
  | QMARK_QMARK  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | COLON_COLON  -> (null : System.Object) 
  | COLON_GREATER  -> (null : System.Object) 
  | COLON_QMARK_GREATER  -> (null : System.Object) 
  | COLON_QMARK  -> (null : System.Object) 
  | COLON_EQUALS  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | WHEN  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | HASH  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | AMP_AMP  -> (null : System.Object) 
  | QUOTE  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | RPAREN_COMING_SOON  -> (null : System.Object) 
  | RPAREN_IS_HERE  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | RARROW  -> (null : System.Object) 
  | GREATER_BAR_RBRACK  -> (null : System.Object) 
  | LPAREN_STAR_RPAREN  -> (null : System.Object) 
  | OPEN  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | REC  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | TO  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | TRY  -> (null : System.Object) 
  | TYPE  -> (null : System.Object) 
  | VAL  -> (null : System.Object) 
  | INLINE  -> (null : System.Object) 
  | INTERFACE  -> (null : System.Object) 
  | INSTANCE  -> (null : System.Object) 
  | CONST  -> (null : System.Object) 
  | LAZY  -> (null : System.Object) 
  | OLAZY  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | MATCH_BANG  -> (null : System.Object) 
  | MUTABLE  -> (null : System.Object) 
  | NEW  -> (null : System.Object) 
  | OF  -> (null : System.Object) 
  | EXCEPTION  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | FUNCTION  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | JOIN_IN  -> (null : System.Object) 
  | FINALLY  -> (null : System.Object) 
  | DO_BANG  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | AS  -> (null : System.Object) 
  | ASSERT  -> (null : System.Object) 
  | OASSERT  -> (null : System.Object) 
  | ASR  -> (null : System.Object) 
  | BEGIN  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | DONE  -> (null : System.Object) 
  | DOWNTO  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | ELIF  -> (null : System.Object) 
  | END  -> (null : System.Object) 
  | DOT_DOT  -> (null : System.Object) 
  | DOT_DOT_HAT  -> (null : System.Object) 
  | BAR_BAR  -> (null : System.Object) 
  | UPCAST  -> (null : System.Object) 
  | DOWNCAST  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | RESERVED  -> (null : System.Object) 
  | MODULE  -> (null : System.Object) 
  | NAMESPACE  -> (null : System.Object) 
  | DELEGATE  -> (null : System.Object) 
  | CONSTRAINT  -> (null : System.Object) 
  | BASE  -> (null : System.Object) 
  | LQUOTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RQUOTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RQUOTE_DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PERCENT_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BINDER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LESS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | GREATER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | YIELD _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | YIELD_BANG _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | AND_BANG _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BIGNUM _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECIMAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IEEE64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IEEE32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UNATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT8 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32_DOT_DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT8 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FUNKY_OPERATOR_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ADJACENT_PREFIX_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PLUS_MINUS_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_AMP_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_STAR_DIV_MOD_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PREFIX_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_BAR_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_AT_HAT_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_COMPARE_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_STAR_STAR_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IDENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | KEYWORD_STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LBRACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RBRACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INTERP_STRING_END _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INTERP_STRING_PART _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INTERP_STRING_BEGIN_PART _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INTERP_STRING_BEGIN_END _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BYTEARRAY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 1us; 65535us; 4us; 5us; 7us; 65535us; 4us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 15us; 24us; 15us; 26us; 15us; 4us; 65535us; 4us; 10us; 22us; 23us; 24us; 25us; 26us; 27us; 5us; 65535us; 4us; 16us; 22us; 16us; 24us; 16us; 26us; 16us; 28us; 29us; 4us; 65535us; 4us; 18us; 22us; 18us; 24us; 18us; 26us; 18us; 4us; 65535us; 4us; 20us; 22us; 20us; 24us; 20us; 26us; 20us; 4us; 65535us; 16us; 22us; 18us; 24us; 20us; 26us; 34us; 35us; 4us; 65535us; 16us; 34us; 18us; 34us; 20us; 34us; 34us; 34us; 23us; 65535us; 0us; 84us; 2us; 256us; 4us; 33us; 22us; 33us; 24us; 33us; 26us; 33us; 61us; 84us; 65us; 84us; 69us; 84us; 79us; 84us; 82us; 84us; 111us; 84us; 114us; 84us; 118us; 84us; 223us; 256us; 227us; 256us; 230us; 256us; 242us; 256us; 246us; 256us; 248us; 256us; 253us; 256us; 281us; 256us; 291us; 256us; 1us; 65535us; 39us; 40us; 1us; 65535us; 40us; 41us; 1us; 65535us; 0us; 1us; 6us; 65535us; 31us; 268us; 64us; 65us; 87us; 88us; 226us; 227us; 240us; 268us; 258us; 268us; 4us; 65535us; 56us; 60us; 58us; 60us; 218us; 222us; 220us; 222us; 1us; 65535us; 0us; 43us; 2us; 65535us; 56us; 57us; 58us; 59us; 2us; 65535us; 56us; 58us; 58us; 58us; 2us; 65535us; 0us; 56us; 61us; 62us; 3us; 65535us; 0us; 67us; 61us; 67us; 65us; 66us; 6us; 65535us; 0us; 68us; 61us; 68us; 65us; 68us; 69us; 70us; 114us; 115us; 118us; 119us; 9us; 65535us; 0us; 76us; 61us; 76us; 65us; 76us; 69us; 76us; 79us; 80us; 82us; 83us; 111us; 112us; 114us; 76us; 118us; 76us; 9us; 65535us; 0us; 78us; 61us; 78us; 65us; 78us; 69us; 78us; 79us; 78us; 82us; 78us; 111us; 78us; 114us; 78us; 118us; 78us; 9us; 65535us; 0us; 85us; 61us; 85us; 65us; 85us; 69us; 85us; 79us; 85us; 82us; 85us; 111us; 85us; 114us; 85us; 118us; 85us; 2us; 65535us; 103us; 104us; 179us; 180us; 1us; 65535us; 89us; 91us; 2us; 65535us; 64us; 92us; 87us; 92us; 2us; 65535us; 121us; 122us; 124us; 125us; 3us; 65535us; 121us; 123us; 124us; 123us; 190us; 191us; 1us; 65535us; 127us; 128us; 2us; 65535us; 127us; 137us; 130us; 131us; 2us; 65535us; 127us; 140us; 130us; 140us; 2us; 65535us; 127us; 144us; 130us; 144us; 3us; 65535us; 145us; 146us; 155us; 156us; 209us; 210us; 8us; 65535us; 130us; 152us; 132us; 133us; 145us; 163us; 151us; 152us; 155us; 163us; 159us; 160us; 166us; 167us; 209us; 163us; 8us; 65535us; 130us; 164us; 132us; 164us; 145us; 164us; 151us; 164us; 155us; 164us; 159us; 164us; 166us; 164us; 209us; 164us; 11us; 65535us; 130us; 165us; 132us; 165us; 145us; 165us; 151us; 165us; 155us; 165us; 159us; 165us; 166us; 165us; 209us; 165us; 609us; 610us; 616us; 617us; 1400us; 1401us; 3us; 65535us; 178us; 179us; 434us; 435us; 464us; 465us; 2us; 65535us; 195us; 196us; 197us; 198us; 2us; 65535us; 170us; 172us; 171us; 172us; 2us; 65535us; 64us; 93us; 87us; 93us; 5us; 65535us; 126us; 129us; 133us; 134us; 135us; 136us; 137us; 138us; 207us; 208us; 1us; 65535us; 2us; 3us; 1us; 65535us; 2us; 212us; 2us; 65535us; 218us; 219us; 220us; 221us; 2us; 65535us; 218us; 220us; 220us; 220us; 2us; 65535us; 2us; 218us; 223us; 224us; 3us; 65535us; 2us; 229us; 223us; 229us; 227us; 228us; 5us; 65535us; 2us; 237us; 223us; 237us; 227us; 237us; 230us; 231us; 291us; 292us; 9us; 65535us; 2us; 238us; 223us; 238us; 227us; 238us; 230us; 238us; 242us; 243us; 248us; 249us; 253us; 254us; 281us; 285us; 291us; 238us; 10us; 65535us; 2us; 244us; 223us; 244us; 227us; 244us; 230us; 244us; 242us; 244us; 246us; 247us; 248us; 244us; 253us; 244us; 281us; 244us; 291us; 244us; 10us; 65535us; 2us; 246us; 223us; 246us; 227us; 246us; 230us; 246us; 242us; 246us; 246us; 246us; 248us; 246us; 253us; 246us; 281us; 246us; 291us; 246us; 15us; 65535us; 2us; 255us; 4us; 28us; 22us; 28us; 24us; 28us; 26us; 28us; 28us; 28us; 223us; 255us; 227us; 255us; 230us; 255us; 242us; 255us; 246us; 255us; 248us; 255us; 253us; 255us; 281us; 255us; 291us; 255us; 24us; 65535us; 0us; 94us; 2us; 273us; 4us; 273us; 22us; 273us; 24us; 273us; 26us; 273us; 28us; 273us; 61us; 94us; 65us; 94us; 69us; 94us; 79us; 94us; 82us; 94us; 111us; 94us; 114us; 94us; 118us; 94us; 223us; 273us; 227us; 273us; 230us; 273us; 242us; 273us; 246us; 273us; 248us; 273us; 253us; 273us; 281us; 273us; 291us; 273us; 1us; 65535us; 89us; 90us; 1us; 65535us; 269us; 270us; 2us; 65535us; 269us; 289us; 281us; 282us; 1us; 65535us; 346us; 349us; 81us; 65535us; 0us; 63us; 2us; 225us; 4us; 30us; 22us; 30us; 24us; 30us; 26us; 30us; 28us; 257us; 61us; 63us; 65us; 86us; 69us; 86us; 79us; 86us; 82us; 86us; 95us; 96us; 111us; 86us; 114us; 86us; 118us; 86us; 121us; 340us; 124us; 340us; 127us; 526us; 130us; 169us; 132us; 168us; 145us; 168us; 151us; 168us; 155us; 168us; 159us; 168us; 166us; 168us; 190us; 340us; 209us; 168us; 223us; 225us; 227us; 239us; 230us; 239us; 242us; 239us; 246us; 257us; 248us; 239us; 253us; 239us; 264us; 340us; 281us; 239us; 291us; 239us; 296us; 417us; 343us; 340us; 346us; 350us; 347us; 526us; 355us; 526us; 357us; 418us; 359us; 417us; 373us; 417us; 377us; 417us; 379us; 417us; 383us; 417us; 389us; 417us; 392us; 417us; 403us; 404us; 450us; 340us; 485us; 513us; 488us; 417us; 505us; 513us; 511us; 513us; 538us; 676us; 547us; 676us; 567us; 576us; 572us; 576us; 573us; 576us; 579us; 576us; 584us; 576us; 609us; 168us; 616us; 168us; 625us; 635us; 628us; 635us; 633us; 635us; 673us; 676us; 686us; 687us; 697us; 748us; 703us; 748us; 715us; 742us; 720us; 729us; 725us; 729us; 727us; 729us; 745us; 748us; 1400us; 168us; 1504us; 514us; 1506us; 748us; 118us; 65535us; 0us; 299us; 2us; 271us; 4us; 271us; 22us; 271us; 24us; 271us; 26us; 271us; 28us; 271us; 61us; 299us; 65us; 299us; 69us; 299us; 79us; 299us; 82us; 299us; 95us; 299us; 102us; 1570us; 111us; 299us; 114us; 299us; 118us; 299us; 121us; 299us; 124us; 299us; 127us; 299us; 130us; 299us; 132us; 299us; 142us; 1570us; 145us; 299us; 151us; 299us; 155us; 299us; 159us; 299us; 166us; 299us; 177us; 1570us; 190us; 299us; 193us; 1570us; 209us; 299us; 223us; 271us; 227us; 271us; 230us; 271us; 242us; 271us; 246us; 271us; 248us; 271us; 253us; 271us; 264us; 299us; 281us; 271us; 291us; 271us; 296us; 299us; 300us; 301us; 343us; 299us; 346us; 299us; 347us; 299us; 355us; 299us; 357us; 299us; 359us; 299us; 370us; 1570us; 373us; 299us; 377us; 299us; 379us; 299us; 383us; 299us; 389us; 299us; 392us; 299us; 403us; 299us; 433us; 1570us; 450us; 299us; 485us; 299us; 488us; 299us; 505us; 299us; 511us; 299us; 538us; 299us; 547us; 299us; 567us; 299us; 572us; 299us; 573us; 299us; 579us; 299us; 584us; 299us; 609us; 299us; 616us; 299us; 625us; 299us; 628us; 299us; 633us; 299us; 642us; 1570us; 673us; 299us; 686us; 299us; 697us; 299us; 703us; 299us; 715us; 299us; 720us; 299us; 725us; 299us; 727us; 299us; 745us; 299us; 821us; 821us; 822us; 821us; 824us; 821us; 859us; 936us; 871us; 936us; 887us; 936us; 890us; 936us; 901us; 936us; 909us; 936us; 931us; 936us; 936us; 936us; 937us; 936us; 939us; 936us; 940us; 936us; 941us; 936us; 942us; 936us; 948us; 936us; 950us; 936us; 1057us; 936us; 1208us; 936us; 1210us; 936us; 1215us; 936us; 1222us; 936us; 1400us; 299us; 1504us; 299us; 1506us; 299us; 1550us; 936us; 1552us; 936us; 1559us; 1570us; 1562us; 1570us; 1565us; 1570us; 1568us; 1570us; 118us; 65535us; 0us; 300us; 2us; 300us; 4us; 300us; 22us; 300us; 24us; 300us; 26us; 300us; 28us; 300us; 61us; 300us; 65us; 300us; 69us; 300us; 79us; 300us; 82us; 300us; 95us; 300us; 102us; 300us; 111us; 300us; 114us; 300us; 118us; 300us; 121us; 300us; 124us; 300us; 127us; 300us; 130us; 300us; 132us; 300us; 142us; 300us; 145us; 300us; 151us; 300us; 155us; 300us; 159us; 300us; 166us; 300us; 177us; 300us; 190us; 300us; 193us; 300us; 209us; 300us; 223us; 300us; 227us; 300us; 230us; 300us; 242us; 300us; 246us; 300us; 248us; 300us; 253us; 300us; 264us; 300us; 281us; 300us; 291us; 300us; 296us; 300us; 300us; 300us; 343us; 300us; 346us; 300us; 347us; 300us; 355us; 300us; 357us; 300us; 359us; 300us; 370us; 300us; 373us; 300us; 377us; 300us; 379us; 300us; 383us; 300us; 389us; 300us; 392us; 300us; 403us; 300us; 433us; 300us; 450us; 300us; 485us; 300us; 488us; 300us; 505us; 300us; 511us; 300us; 538us; 300us; 547us; 300us; 567us; 300us; 572us; 300us; 573us; 300us; 579us; 300us; 584us; 300us; 609us; 300us; 616us; 300us; 625us; 300us; 628us; 300us; 633us; 300us; 642us; 300us; 673us; 300us; 686us; 300us; 697us; 300us; 703us; 300us; 715us; 300us; 720us; 300us; 725us; 300us; 727us; 300us; 745us; 300us; 821us; 300us; 822us; 300us; 824us; 300us; 859us; 300us; 871us; 300us; 887us; 300us; 890us; 300us; 901us; 300us; 909us; 300us; 931us; 300us; 936us; 300us; 937us; 300us; 939us; 300us; 940us; 300us; 941us; 300us; 942us; 300us; 948us; 300us; 950us; 300us; 1057us; 300us; 1208us; 300us; 1210us; 300us; 1215us; 300us; 1222us; 300us; 1400us; 300us; 1504us; 300us; 1506us; 300us; 1550us; 300us; 1552us; 300us; 1559us; 300us; 1562us; 300us; 1565us; 300us; 1568us; 300us; 1us; 65535us; 302us; 303us; 2us; 65535us; 302us; 312us; 313us; 314us; 2us; 65535us; 302us; 318us; 313us; 318us; 4us; 65535us; 170us; 204us; 171us; 204us; 419us; 423us; 420us; 423us; 6us; 65535us; 121us; 126us; 124us; 126us; 190us; 126us; 264us; 346us; 343us; 346us; 450us; 346us; 2us; 65535us; 265us; 266us; 344us; 345us; 3us; 65535us; 264us; 265us; 343us; 344us; 450us; 451us; 2us; 65535us; 347us; 348us; 355us; 356us; 3us; 65535us; 347us; 365us; 355us; 365us; 357us; 358us; 3us; 65535us; 347us; 368us; 355us; 368us; 357us; 368us; 3us; 65535us; 347us; 372us; 355us; 372us; 357us; 372us; 3us; 65535us; 296us; 297us; 373us; 374us; 488us; 489us; 10us; 65535us; 296us; 387us; 357us; 380us; 359us; 360us; 373us; 387us; 377us; 390us; 379us; 380us; 383us; 384us; 389us; 390us; 392us; 393us; 488us; 387us; 10us; 65535us; 296us; 388us; 357us; 388us; 359us; 388us; 373us; 388us; 377us; 388us; 379us; 388us; 383us; 388us; 389us; 388us; 392us; 388us; 488us; 388us; 1us; 65535us; 411us; 414us; 2us; 65535us; 394us; 395us; 396us; 397us; 3us; 65535us; 394us; 400us; 396us; 400us; 401us; 402us; 3us; 65535us; 423us; 424us; 515us; 516us; 521us; 522us; 2us; 65535us; 419us; 429us; 420us; 429us; 10us; 65535us; 296us; 391us; 357us; 391us; 359us; 391us; 373us; 391us; 377us; 391us; 379us; 391us; 383us; 391us; 389us; 391us; 392us; 391us; 488us; 391us; 3us; 65535us; 335us; 440us; 419us; 438us; 420us; 438us; 2us; 65535us; 423us; 442us; 515us; 518us; 1us; 65535us; 461us; 462us; 44us; 65535us; 404us; 861us; 409us; 861us; 444us; 896us; 752us; 861us; 844us; 861us; 845us; 861us; 849us; 861us; 850us; 861us; 851us; 861us; 852us; 861us; 859us; 861us; 862us; 896us; 864us; 896us; 866us; 896us; 871us; 861us; 875us; 896us; 877us; 896us; 879us; 896us; 887us; 861us; 890us; 861us; 901us; 861us; 909us; 861us; 931us; 861us; 936us; 861us; 937us; 861us; 939us; 861us; 940us; 861us; 941us; 861us; 942us; 861us; 948us; 861us; 950us; 861us; 995us; 861us; 1000us; 861us; 1057us; 861us; 1086us; 861us; 1093us; 861us; 1208us; 861us; 1210us; 861us; 1215us; 861us; 1222us; 861us; 1532us; 896us; 1537us; 896us; 1550us; 861us; 1552us; 861us; 10us; 65535us; 49us; 50us; 98us; 99us; 173us; 174us; 340us; 561us; 453us; 454us; 459us; 460us; 635us; 636us; 678us; 679us; 687us; 688us; 716us; 717us; 66us; 65535us; 30us; 484us; 49us; 480us; 63us; 484us; 86us; 484us; 98us; 480us; 168us; 484us; 169us; 484us; 173us; 480us; 225us; 484us; 239us; 484us; 257us; 484us; 340us; 480us; 350us; 484us; 404us; 475us; 409us; 475us; 417us; 484us; 418us; 484us; 444us; 475us; 453us; 480us; 459us; 480us; 526us; 484us; 635us; 480us; 678us; 480us; 687us; 480us; 716us; 480us; 752us; 475us; 844us; 475us; 845us; 475us; 849us; 475us; 850us; 475us; 851us; 475us; 852us; 475us; 859us; 475us; 862us; 475us; 864us; 475us; 866us; 475us; 871us; 475us; 875us; 475us; 877us; 475us; 879us; 475us; 887us; 475us; 890us; 475us; 901us; 475us; 909us; 475us; 931us; 475us; 936us; 475us; 937us; 475us; 939us; 475us; 940us; 475us; 941us; 475us; 942us; 475us; 948us; 475us; 950us; 475us; 995us; 475us; 1000us; 475us; 1057us; 475us; 1086us; 475us; 1093us; 475us; 1208us; 475us; 1210us; 475us; 1215us; 475us; 1222us; 475us; 1532us; 475us; 1537us; 475us; 1550us; 475us; 1552us; 475us; 12us; 65535us; 30us; 31us; 63us; 64us; 86us; 87us; 168us; 170us; 169us; 171us; 225us; 226us; 239us; 240us; 257us; 258us; 350us; 351us; 417us; 419us; 418us; 420us; 526us; 527us; 1us; 65535us; 427us; 428us; 4us; 65535us; 360us; 361us; 362us; 363us; 365us; 366us; 683us; 684us; 2us; 65535us; 419us; 437us; 420us; 437us; 2us; 65535us; 353us; 354us; 445us; 446us; 2us; 65535us; 353us; 498us; 445us; 498us; 2us; 65535us; 492us; 493us; 495us; 496us; 3us; 65535us; 492us; 501us; 495us; 501us; 1276us; 1502us; 2us; 65535us; 485us; 486us; 1504us; 1509us; 4us; 65535us; 485us; 509us; 505us; 506us; 511us; 512us; 1504us; 509us; 4us; 65535us; 485us; 510us; 505us; 510us; 511us; 510us; 1504us; 510us; 2us; 65535us; 513us; 515us; 514us; 515us; 5us; 65535us; 127us; 139us; 130us; 139us; 347us; 367us; 355us; 367us; 357us; 367us; 6us; 65535us; 171us; 534us; 420us; 534us; 527us; 534us; 639us; 670us; 661us; 670us; 692us; 670us; 67us; 65535us; 8us; 1649us; 102us; 1649us; 142us; 1649us; 171us; 1649us; 177us; 1649us; 181us; 1649us; 183us; 1649us; 193us; 1649us; 276us; 1649us; 370us; 1649us; 420us; 1649us; 426us; 1649us; 433us; 1649us; 456us; 1649us; 466us; 1649us; 527us; 1649us; 535us; 1649us; 599us; 1649us; 602us; 1649us; 612us; 1649us; 622us; 1649us; 639us; 1649us; 642us; 1649us; 661us; 1649us; 664us; 1649us; 667us; 1649us; 681us; 1649us; 692us; 1649us; 775us; 1649us; 819us; 1649us; 868us; 1649us; 934us; 1649us; 964us; 1649us; 1151us; 1649us; 1153us; 1649us; 1155us; 1649us; 1448us; 1649us; 1451us; 1649us; 1453us; 1649us; 1517us; 1649us; 1559us; 1649us; 1562us; 1649us; 1565us; 1649us; 1568us; 1649us; 1570us; 1649us; 1572us; 1649us; 1576us; 1649us; 1579us; 1649us; 1583us; 1649us; 1586us; 1649us; 1591us; 1649us; 1593us; 1649us; 1595us; 1649us; 1598us; 1649us; 1600us; 1649us; 1614us; 1649us; 1619us; 1649us; 1622us; 1649us; 1633us; 1649us; 1637us; 1649us; 1643us; 1649us; 1654us; 1649us; 1660us; 1649us; 1661us; 1649us; 1684us; 1649us; 1686us; 1649us; 1697us; 1649us; 68us; 65535us; 8us; 546us; 102us; 546us; 142us; 546us; 171us; 546us; 177us; 546us; 181us; 546us; 183us; 546us; 193us; 546us; 276us; 546us; 370us; 546us; 420us; 546us; 426us; 546us; 433us; 546us; 456us; 546us; 466us; 546us; 527us; 546us; 535us; 546us; 544us; 545us; 599us; 546us; 602us; 546us; 612us; 546us; 622us; 546us; 639us; 546us; 642us; 546us; 661us; 546us; 664us; 546us; 667us; 546us; 681us; 546us; 692us; 546us; 775us; 546us; 819us; 546us; 868us; 546us; 934us; 546us; 964us; 546us; 1151us; 546us; 1153us; 546us; 1155us; 546us; 1448us; 546us; 1451us; 546us; 1453us; 546us; 1517us; 546us; 1559us; 546us; 1562us; 546us; 1565us; 546us; 1568us; 546us; 1570us; 546us; 1572us; 546us; 1576us; 546us; 1579us; 546us; 1583us; 546us; 1586us; 546us; 1591us; 546us; 1593us; 546us; 1595us; 546us; 1598us; 546us; 1600us; 546us; 1614us; 546us; 1619us; 546us; 1622us; 546us; 1633us; 546us; 1637us; 546us; 1643us; 546us; 1654us; 546us; 1660us; 546us; 1661us; 546us; 1684us; 546us; 1686us; 546us; 1697us; 546us; 1us; 65535us; 535us; 536us; 5us; 65535us; 127us; 145us; 130us; 145us; 347us; 373us; 355us; 373us; 357us; 373us; 9us; 65535us; 170us; 181us; 171us; 181us; 419us; 426us; 420us; 426us; 1498us; 1517us; 1500us; 1517us; 1511us; 1517us; 1513us; 1517us; 1515us; 1517us; 1us; 65535us; 340us; 341us; 1us; 65535us; 561us; 563us; 3us; 65535us; 567us; 568us; 579us; 570us; 584us; 571us; 5us; 65535us; 567us; 575us; 572us; 574us; 573us; 574us; 579us; 575us; 584us; 575us; 1us; 65535us; 562us; 565us; 1us; 65535us; 584us; 585us; 4us; 65535us; 100us; 588us; 175us; 588us; 431us; 588us; 861us; 589us; 3us; 65535us; 100us; 101us; 175us; 176us; 431us; 432us; 1us; 65535us; 861us; 862us; 3us; 65535us; 341us; 342us; 570us; 580us; 585us; 586us; 3us; 65535us; 590us; 591us; 1556us; 592us; 1558us; 593us; 4us; 65535us; 590us; 596us; 594us; 595us; 1556us; 596us; 1558us; 596us; 1us; 65535us; 612us; 613us; 3us; 65535us; 171us; 533us; 420us; 533us; 527us; 533us; 5us; 65535us; 171us; 625us; 420us; 625us; 527us; 625us; 627us; 628us; 632us; 633us; 3us; 65535us; 625us; 626us; 628us; 629us; 633us; 634us; 3us; 65535us; 625us; 632us; 628us; 632us; 633us; 632us; 1us; 65535us; 636us; 637us; 3us; 65535us; 171us; 627us; 420us; 627us; 527us; 627us; 3us; 65535us; 171us; 630us; 420us; 630us; 527us; 630us; 4us; 65535us; 639us; 671us; 661us; 671us; 664us; 665us; 692us; 671us; 4us; 65535us; 639us; 663us; 661us; 663us; 664us; 663us; 692us; 663us; 3us; 65535us; 639us; 640us; 661us; 662us; 692us; 693us; 3us; 65535us; 538us; 539us; 547us; 548us; 673us; 674us; 3us; 65535us; 538us; 672us; 547us; 672us; 673us; 672us; 3us; 65535us; 185us; 186us; 188us; 189us; 676us; 677us; 4us; 65535us; 31us; 267us; 226us; 267us; 240us; 267us; 258us; 267us; 6us; 65535us; 31us; 686us; 64us; 686us; 87us; 686us; 226us; 686us; 240us; 686us; 258us; 686us; 6us; 65535us; 31us; 683us; 64us; 207us; 87us; 207us; 226us; 683us; 240us; 683us; 258us; 683us; 1us; 65535us; 688us; 689us; 1us; 65535us; 689us; 690us; 118us; 65535us; 6us; 1006us; 31us; 260us; 105us; 1006us; 107us; 1006us; 226us; 260us; 240us; 260us; 258us; 259us; 262us; 1006us; 335us; 709us; 407us; 1006us; 412us; 1006us; 419us; 709us; 420us; 709us; 447us; 1006us; 463us; 1006us; 700us; 1006us; 706us; 1006us; 755us; 1006us; 759us; 1006us; 769us; 1006us; 952us; 1006us; 957us; 1006us; 971us; 1006us; 973us; 1006us; 976us; 1006us; 979us; 1006us; 996us; 1006us; 1001us; 1006us; 1007us; 1006us; 1010us; 1006us; 1013us; 1006us; 1019us; 1006us; 1023us; 1006us; 1027us; 1006us; 1031us; 1006us; 1033us; 1006us; 1038us; 1006us; 1040us; 1006us; 1042us; 1006us; 1044us; 1006us; 1046us; 1006us; 1048us; 1006us; 1059us; 1006us; 1067us; 1006us; 1074us; 1006us; 1080us; 1006us; 1082us; 1006us; 1087us; 1006us; 1091us; 1006us; 1094us; 1006us; 1098us; 1006us; 1101us; 1006us; 1104us; 1006us; 1106us; 1006us; 1111us; 1006us; 1113us; 1006us; 1157us; 1006us; 1159us; 1006us; 1163us; 1006us; 1164us; 1006us; 1165us; 1006us; 1166us; 1006us; 1167us; 1006us; 1168us; 1006us; 1169us; 1006us; 1170us; 1006us; 1171us; 1006us; 1172us; 1006us; 1173us; 1006us; 1175us; 1006us; 1176us; 1006us; 1177us; 1006us; 1178us; 1006us; 1179us; 1006us; 1180us; 1006us; 1181us; 1006us; 1182us; 1006us; 1183us; 1006us; 1205us; 1006us; 1227us; 1006us; 1228us; 1006us; 1232us; 1006us; 1234us; 1006us; 1238us; 1006us; 1240us; 1006us; 1244us; 1006us; 1247us; 1006us; 1249us; 1006us; 1313us; 1006us; 1320us; 1006us; 1327us; 1006us; 1334us; 1006us; 1344us; 1006us; 1347us; 1006us; 1349us; 1006us; 1352us; 1006us; 1364us; 1006us; 1371us; 1006us; 1372us; 1006us; 1378us; 1006us; 1384us; 1006us; 1385us; 1006us; 1386us; 1006us; 1402us; 1006us; 1412us; 1006us; 1425us; 1006us; 1426us; 1006us; 1428us; 1006us; 1430us; 1006us; 1434us; 1006us; 1435us; 1006us; 1462us; 1006us; 1467us; 1006us; 1492us; 1006us; 1534us; 1006us; 1539us; 1006us; 1829us; 1006us; 1833us; 1006us; 7us; 65535us; 31us; 263us; 226us; 263us; 240us; 263us; 258us; 263us; 335us; 710us; 419us; 710us; 420us; 710us; 118us; 65535us; 6us; 979us; 31us; 262us; 105us; 1010us; 107us; 1010us; 226us; 262us; 240us; 262us; 258us; 261us; 262us; 979us; 335us; 711us; 407us; 979us; 412us; 979us; 419us; 711us; 420us; 711us; 447us; 979us; 463us; 979us; 700us; 979us; 706us; 979us; 755us; 979us; 759us; 979us; 769us; 979us; 952us; 979us; 957us; 979us; 971us; 979us; 973us; 979us; 976us; 979us; 979us; 979us; 996us; 979us; 1001us; 979us; 1007us; 979us; 1010us; 979us; 1013us; 979us; 1019us; 979us; 1023us; 979us; 1027us; 979us; 1031us; 979us; 1033us; 1010us; 1038us; 1010us; 1040us; 1010us; 1042us; 1010us; 1044us; 1010us; 1046us; 1010us; 1048us; 979us; 1059us; 979us; 1067us; 979us; 1074us; 979us; 1080us; 1010us; 1082us; 1010us; 1087us; 979us; 1091us; 979us; 1094us; 979us; 1098us; 979us; 1101us; 979us; 1104us; 979us; 1106us; 979us; 1111us; 1010us; 1113us; 979us; 1157us; 1010us; 1159us; 1010us; 1163us; 1010us; 1164us; 1010us; 1165us; 1010us; 1166us; 1010us; 1167us; 1010us; 1168us; 1010us; 1169us; 1010us; 1170us; 1010us; 1171us; 1010us; 1172us; 1010us; 1173us; 1010us; 1175us; 1010us; 1176us; 1010us; 1177us; 1010us; 1178us; 1010us; 1179us; 1010us; 1180us; 1010us; 1181us; 1010us; 1182us; 1010us; 1183us; 1010us; 1205us; 979us; 1227us; 1010us; 1228us; 979us; 1232us; 1010us; 1234us; 979us; 1238us; 1010us; 1240us; 979us; 1244us; 1010us; 1247us; 1010us; 1249us; 1010us; 1313us; 979us; 1320us; 1010us; 1327us; 979us; 1334us; 979us; 1344us; 1010us; 1347us; 1010us; 1349us; 1010us; 1352us; 1010us; 1364us; 979us; 1371us; 979us; 1372us; 979us; 1378us; 979us; 1384us; 979us; 1385us; 979us; 1386us; 979us; 1402us; 979us; 1412us; 979us; 1425us; 1010us; 1426us; 1010us; 1428us; 979us; 1430us; 1010us; 1434us; 1010us; 1435us; 1010us; 1462us; 1010us; 1467us; 1010us; 1492us; 1010us; 1534us; 979us; 1539us; 979us; 1829us; 1010us; 1833us; 1010us; 117us; 65535us; 6us; 1016us; 31us; 1016us; 105us; 1016us; 107us; 1016us; 226us; 1016us; 240us; 1016us; 262us; 1016us; 335us; 712us; 407us; 1016us; 412us; 1016us; 419us; 712us; 420us; 712us; 447us; 1016us; 463us; 1016us; 700us; 1016us; 706us; 1016us; 755us; 1016us; 759us; 1016us; 769us; 1016us; 952us; 1016us; 957us; 1016us; 971us; 1016us; 973us; 1016us; 976us; 1016us; 979us; 1016us; 996us; 1016us; 1001us; 1016us; 1007us; 1016us; 1010us; 1016us; 1013us; 1016us; 1019us; 1016us; 1023us; 1016us; 1027us; 1016us; 1031us; 1016us; 1033us; 1016us; 1038us; 1016us; 1040us; 1016us; 1042us; 1016us; 1044us; 1016us; 1046us; 1016us; 1048us; 1016us; 1059us; 1016us; 1067us; 1016us; 1074us; 1016us; 1080us; 1016us; 1082us; 1016us; 1087us; 1016us; 1091us; 1016us; 1094us; 1016us; 1098us; 1016us; 1101us; 1016us; 1104us; 1016us; 1106us; 1016us; 1111us; 1016us; 1113us; 1016us; 1157us; 1016us; 1159us; 1016us; 1163us; 1016us; 1164us; 1016us; 1165us; 1016us; 1166us; 1016us; 1167us; 1016us; 1168us; 1016us; 1169us; 1016us; 1170us; 1016us; 1171us; 1016us; 1172us; 1016us; 1173us; 1016us; 1175us; 1016us; 1176us; 1016us; 1177us; 1016us; 1178us; 1016us; 1179us; 1016us; 1180us; 1016us; 1181us; 1016us; 1182us; 1016us; 1183us; 1016us; 1205us; 1016us; 1227us; 1016us; 1228us; 1016us; 1232us; 1016us; 1234us; 1016us; 1238us; 1016us; 1240us; 1016us; 1244us; 1016us; 1247us; 1016us; 1249us; 1016us; 1313us; 1016us; 1320us; 1016us; 1327us; 1016us; 1334us; 1016us; 1344us; 1016us; 1347us; 1016us; 1349us; 1016us; 1352us; 1016us; 1364us; 1016us; 1371us; 1016us; 1372us; 1016us; 1378us; 1016us; 1384us; 1016us; 1385us; 1016us; 1386us; 1016us; 1402us; 1016us; 1412us; 1016us; 1425us; 1016us; 1426us; 1016us; 1428us; 1016us; 1430us; 1016us; 1434us; 1016us; 1435us; 1016us; 1462us; 1016us; 1467us; 1016us; 1492us; 1016us; 1534us; 1016us; 1539us; 1016us; 1829us; 1016us; 1833us; 1016us; 3us; 65535us; 335us; 422us; 419us; 421us; 420us; 421us; 5us; 65535us; 704us; 705us; 707us; 708us; 1002us; 1003us; 1095us; 1096us; 1107us; 1108us; 118us; 65535us; 6us; 699us; 31us; 699us; 105us; 699us; 107us; 699us; 226us; 699us; 240us; 699us; 258us; 699us; 262us; 699us; 335us; 699us; 407us; 699us; 412us; 699us; 419us; 699us; 420us; 699us; 447us; 699us; 463us; 699us; 700us; 699us; 706us; 699us; 755us; 699us; 759us; 699us; 769us; 699us; 952us; 699us; 957us; 699us; 971us; 699us; 973us; 699us; 976us; 699us; 979us; 699us; 996us; 699us; 1001us; 699us; 1007us; 699us; 1010us; 699us; 1013us; 699us; 1019us; 699us; 1023us; 699us; 1027us; 699us; 1031us; 699us; 1033us; 699us; 1038us; 699us; 1040us; 699us; 1042us; 699us; 1044us; 699us; 1046us; 699us; 1048us; 699us; 1059us; 699us; 1067us; 699us; 1074us; 699us; 1080us; 699us; 1082us; 699us; 1087us; 699us; 1091us; 699us; 1094us; 699us; 1098us; 699us; 1101us; 699us; 1104us; 699us; 1106us; 699us; 1111us; 699us; 1113us; 699us; 1157us; 699us; 1159us; 699us; 1163us; 699us; 1164us; 699us; 1165us; 699us; 1166us; 699us; 1167us; 699us; 1168us; 699us; 1169us; 699us; 1170us; 699us; 1171us; 699us; 1172us; 699us; 1173us; 699us; 1175us; 699us; 1176us; 699us; 1177us; 699us; 1178us; 699us; 1179us; 699us; 1180us; 699us; 1181us; 699us; 1182us; 699us; 1183us; 699us; 1205us; 699us; 1227us; 699us; 1228us; 699us; 1232us; 699us; 1234us; 699us; 1238us; 699us; 1240us; 699us; 1244us; 699us; 1247us; 699us; 1249us; 699us; 1313us; 699us; 1320us; 699us; 1327us; 699us; 1334us; 699us; 1344us; 699us; 1347us; 699us; 1349us; 699us; 1352us; 699us; 1364us; 699us; 1371us; 699us; 1372us; 699us; 1378us; 699us; 1384us; 699us; 1385us; 699us; 1386us; 699us; 1402us; 699us; 1412us; 699us; 1425us; 699us; 1426us; 699us; 1428us; 699us; 1430us; 699us; 1434us; 699us; 1435us; 699us; 1462us; 699us; 1467us; 699us; 1492us; 699us; 1534us; 699us; 1539us; 699us; 1829us; 699us; 1833us; 699us; 1us; 65535us; 720us; 721us; 1us; 65535us; 720us; 723us; 3us; 65535us; 720us; 724us; 725us; 726us; 727us; 728us; 2us; 65535us; 729us; 730us; 742us; 733us; 1us; 65535us; 715us; 716us; 4us; 65535us; 697us; 698us; 703us; 704us; 1504us; 1505us; 1506us; 1507us; 2us; 65535us; 743us; 744us; 746us; 747us; 5us; 65535us; 697us; 743us; 703us; 743us; 745us; 746us; 1504us; 743us; 1506us; 743us; 2us; 65535us; 514us; 749us; 748us; 749us; 1us; 65535us; 755us; 756us; 2us; 65535us; 755us; 763us; 759us; 760us; 1us; 65535us; 764us; 765us; 1us; 65535us; 765us; 766us; 1us; 65535us; 767us; 768us; 2us; 65535us; 767us; 773us; 771us; 772us; 265us; 65535us; 6us; 810us; 8us; 1668us; 31us; 810us; 102us; 1668us; 105us; 810us; 107us; 810us; 142us; 1668us; 171us; 1668us; 177us; 1668us; 181us; 1668us; 183us; 1668us; 193us; 1668us; 226us; 810us; 240us; 810us; 262us; 810us; 276us; 1668us; 316us; 810us; 320us; 810us; 325us; 810us; 370us; 1668us; 404us; 810us; 407us; 810us; 409us; 810us; 412us; 810us; 420us; 1668us; 426us; 1668us; 433us; 1668us; 444us; 810us; 447us; 810us; 456us; 1668us; 463us; 810us; 466us; 1668us; 491us; 1668us; 494us; 810us; 527us; 1668us; 535us; 1668us; 553us; 1668us; 599us; 1668us; 602us; 1668us; 612us; 1668us; 622us; 1668us; 639us; 1668us; 642us; 1668us; 645us; 810us; 657us; 810us; 661us; 1668us; 664us; 1668us; 667us; 1668us; 681us; 1668us; 692us; 1668us; 700us; 810us; 706us; 810us; 752us; 810us; 755us; 810us; 759us; 810us; 769us; 810us; 775us; 1668us; 819us; 1668us; 844us; 810us; 845us; 810us; 849us; 810us; 850us; 810us; 851us; 810us; 852us; 810us; 859us; 810us; 862us; 810us; 864us; 810us; 866us; 810us; 868us; 1668us; 871us; 810us; 875us; 810us; 877us; 810us; 879us; 810us; 887us; 810us; 890us; 810us; 901us; 810us; 909us; 810us; 931us; 810us; 934us; 1668us; 936us; 810us; 937us; 810us; 939us; 810us; 940us; 810us; 941us; 810us; 942us; 810us; 948us; 810us; 950us; 810us; 952us; 810us; 957us; 810us; 964us; 1668us; 971us; 810us; 973us; 810us; 976us; 810us; 979us; 810us; 995us; 810us; 996us; 810us; 1000us; 810us; 1001us; 810us; 1007us; 810us; 1010us; 810us; 1013us; 810us; 1019us; 810us; 1023us; 810us; 1027us; 810us; 1031us; 810us; 1033us; 810us; 1038us; 810us; 1040us; 810us; 1042us; 810us; 1044us; 810us; 1046us; 810us; 1048us; 810us; 1057us; 810us; 1059us; 810us; 1067us; 810us; 1074us; 810us; 1080us; 810us; 1082us; 810us; 1086us; 810us; 1087us; 810us; 1091us; 810us; 1093us; 810us; 1094us; 810us; 1098us; 810us; 1101us; 810us; 1104us; 810us; 1106us; 810us; 1111us; 810us; 1113us; 810us; 1151us; 1668us; 1153us; 1668us; 1155us; 1668us; 1157us; 810us; 1159us; 810us; 1163us; 810us; 1164us; 810us; 1165us; 810us; 1166us; 810us; 1167us; 810us; 1168us; 810us; 1169us; 810us; 1170us; 810us; 1171us; 810us; 1172us; 810us; 1173us; 810us; 1175us; 810us; 1176us; 810us; 1177us; 810us; 1178us; 810us; 1179us; 810us; 1180us; 810us; 1181us; 810us; 1182us; 810us; 1183us; 810us; 1205us; 810us; 1208us; 810us; 1210us; 810us; 1215us; 810us; 1222us; 810us; 1227us; 810us; 1228us; 810us; 1232us; 810us; 1234us; 810us; 1238us; 810us; 1240us; 810us; 1244us; 810us; 1247us; 810us; 1249us; 810us; 1251us; 810us; 1252us; 810us; 1254us; 810us; 1255us; 810us; 1257us; 810us; 1258us; 810us; 1260us; 810us; 1261us; 810us; 1263us; 810us; 1264us; 810us; 1266us; 810us; 1267us; 810us; 1269us; 1668us; 1270us; 1668us; 1273us; 810us; 1274us; 810us; 1279us; 810us; 1281us; 810us; 1283us; 810us; 1284us; 810us; 1285us; 810us; 1288us; 810us; 1295us; 810us; 1296us; 810us; 1299us; 810us; 1300us; 810us; 1313us; 810us; 1320us; 810us; 1327us; 810us; 1334us; 810us; 1344us; 810us; 1347us; 810us; 1349us; 810us; 1352us; 810us; 1364us; 810us; 1371us; 810us; 1372us; 810us; 1378us; 810us; 1384us; 810us; 1385us; 810us; 1386us; 810us; 1402us; 810us; 1412us; 810us; 1425us; 810us; 1426us; 810us; 1428us; 810us; 1430us; 810us; 1434us; 810us; 1435us; 810us; 1442us; 810us; 1448us; 1668us; 1451us; 1668us; 1453us; 1668us; 1455us; 1668us; 1457us; 810us; 1462us; 810us; 1467us; 810us; 1492us; 810us; 1517us; 1668us; 1525us; 810us; 1532us; 810us; 1534us; 810us; 1537us; 810us; 1539us; 810us; 1550us; 810us; 1552us; 810us; 1559us; 1668us; 1562us; 1668us; 1565us; 1668us; 1568us; 1668us; 1570us; 1668us; 1572us; 1668us; 1576us; 1668us; 1579us; 1668us; 1583us; 1668us; 1586us; 1668us; 1591us; 1668us; 1593us; 1668us; 1595us; 1668us; 1598us; 1668us; 1600us; 1668us; 1614us; 1668us; 1619us; 1668us; 1622us; 1668us; 1633us; 1668us; 1637us; 1668us; 1643us; 1668us; 1650us; 1668us; 1654us; 1668us; 1660us; 1668us; 1661us; 1668us; 1670us; 810us; 1684us; 1668us; 1686us; 1668us; 1697us; 1668us; 1829us; 810us; 1833us; 810us; 1us; 65535us; 804us; 805us; 4us; 65535us; 808us; 809us; 1607us; 807us; 1641us; 807us; 1712us; 807us; 3us; 65535us; 1607us; 1608us; 1641us; 1642us; 1712us; 1713us; 192us; 65535us; 6us; 1353us; 31us; 1353us; 105us; 1353us; 107us; 1353us; 226us; 1353us; 240us; 1353us; 262us; 1353us; 316us; 1353us; 320us; 1353us; 325us; 1353us; 404us; 897us; 407us; 1353us; 409us; 897us; 412us; 1353us; 444us; 897us; 447us; 1353us; 463us; 1353us; 494us; 1353us; 645us; 646us; 657us; 658us; 700us; 1353us; 706us; 1353us; 752us; 897us; 755us; 1353us; 759us; 1353us; 769us; 1353us; 844us; 897us; 845us; 897us; 849us; 897us; 850us; 897us; 851us; 897us; 852us; 897us; 859us; 897us; 862us; 897us; 864us; 897us; 866us; 897us; 871us; 897us; 875us; 897us; 877us; 897us; 879us; 897us; 887us; 897us; 890us; 897us; 901us; 897us; 909us; 897us; 931us; 897us; 936us; 897us; 937us; 897us; 939us; 897us; 940us; 897us; 941us; 897us; 942us; 897us; 948us; 897us; 950us; 897us; 952us; 1353us; 957us; 1353us; 971us; 1353us; 973us; 1353us; 976us; 1353us; 979us; 1353us; 995us; 897us; 996us; 1353us; 1000us; 897us; 1001us; 1353us; 1007us; 1353us; 1010us; 1353us; 1013us; 1353us; 1019us; 1353us; 1023us; 1353us; 1027us; 1353us; 1031us; 1353us; 1033us; 1353us; 1038us; 1353us; 1040us; 1353us; 1042us; 1353us; 1044us; 1353us; 1046us; 1353us; 1048us; 1353us; 1057us; 897us; 1059us; 1353us; 1067us; 1353us; 1074us; 1353us; 1080us; 1353us; 1082us; 1353us; 1086us; 897us; 1087us; 1353us; 1091us; 1353us; 1093us; 897us; 1094us; 1353us; 1098us; 1353us; 1101us; 1353us; 1104us; 1353us; 1106us; 1353us; 1111us; 1353us; 1113us; 1353us; 1157us; 1353us; 1159us; 1353us; 1163us; 1353us; 1164us; 1353us; 1165us; 1353us; 1166us; 1353us; 1167us; 1353us; 1168us; 1353us; 1169us; 1353us; 1170us; 1353us; 1171us; 1353us; 1172us; 1353us; 1173us; 1353us; 1175us; 1353us; 1176us; 1353us; 1177us; 1353us; 1178us; 1353us; 1179us; 1353us; 1180us; 1353us; 1181us; 1353us; 1182us; 1353us; 1183us; 1353us; 1205us; 1353us; 1208us; 897us; 1210us; 897us; 1215us; 897us; 1222us; 897us; 1227us; 1353us; 1228us; 1353us; 1232us; 1353us; 1234us; 1353us; 1238us; 1353us; 1240us; 1353us; 1244us; 1353us; 1247us; 1353us; 1249us; 1353us; 1251us; 1353us; 1252us; 1353us; 1254us; 1353us; 1255us; 1353us; 1257us; 1353us; 1258us; 1353us; 1260us; 1353us; 1261us; 1353us; 1263us; 1353us; 1264us; 1353us; 1266us; 1353us; 1267us; 1353us; 1273us; 1353us; 1274us; 1353us; 1279us; 1353us; 1281us; 1353us; 1283us; 1353us; 1284us; 1353us; 1285us; 1353us; 1288us; 1353us; 1295us; 1353us; 1296us; 1353us; 1299us; 1353us; 1300us; 1353us; 1313us; 1353us; 1320us; 1353us; 1327us; 1353us; 1334us; 1353us; 1344us; 1353us; 1347us; 1353us; 1349us; 1353us; 1352us; 1353us; 1364us; 1353us; 1371us; 1353us; 1372us; 1353us; 1378us; 1353us; 1384us; 1353us; 1385us; 1353us; 1386us; 1353us; 1402us; 1353us; 1412us; 1353us; 1425us; 1353us; 1426us; 1353us; 1428us; 1353us; 1430us; 1353us; 1434us; 1353us; 1435us; 1353us; 1442us; 1353us; 1457us; 1353us; 1462us; 1353us; 1467us; 1353us; 1492us; 1353us; 1525us; 1353us; 1532us; 897us; 1534us; 1353us; 1537us; 897us; 1539us; 1353us; 1550us; 897us; 1552us; 897us; 1670us; 1353us; 1829us; 1353us; 1833us; 1353us; 3us; 65535us; 404us; 405us; 409us; 410us; 752us; 753us; 3us; 65535us; 821us; 817us; 822us; 818us; 824us; 818us; 2us; 65535us; 822us; 823us; 824us; 825us; 1us; 65535us; 352us; 353us; 13us; 65535us; 404us; 813us; 409us; 813us; 752us; 813us; 844us; 832us; 845us; 833us; 849us; 834us; 850us; 835us; 851us; 836us; 852us; 837us; 995us; 838us; 1000us; 839us; 1086us; 840us; 1093us; 841us; 13us; 65535us; 404us; 846us; 409us; 846us; 752us; 846us; 844us; 846us; 845us; 846us; 849us; 846us; 850us; 846us; 851us; 846us; 852us; 846us; 995us; 846us; 1000us; 846us; 1086us; 846us; 1093us; 846us; 13us; 65535us; 404us; 847us; 409us; 847us; 752us; 847us; 844us; 847us; 845us; 847us; 849us; 847us; 850us; 847us; 851us; 847us; 852us; 847us; 995us; 847us; 1000us; 847us; 1086us; 847us; 1093us; 847us; 2us; 65535us; 855us; 856us; 871us; 872us; 2us; 65535us; 855us; 853us; 871us; 853us; 35us; 65535us; 404us; 848us; 409us; 848us; 752us; 848us; 844us; 848us; 845us; 848us; 849us; 848us; 850us; 848us; 851us; 848us; 852us; 848us; 859us; 938us; 871us; 938us; 887us; 938us; 890us; 938us; 901us; 938us; 909us; 938us; 931us; 938us; 936us; 938us; 937us; 938us; 939us; 938us; 940us; 938us; 941us; 938us; 942us; 938us; 948us; 938us; 950us; 938us; 995us; 848us; 1000us; 848us; 1057us; 938us; 1086us; 848us; 1093us; 848us; 1208us; 938us; 1210us; 938us; 1215us; 938us; 1222us; 938us; 1550us; 938us; 1552us; 938us; 3us; 65535us; 862us; 863us; 864us; 865us; 866us; 867us; 8us; 65535us; 862us; 874us; 864us; 874us; 866us; 874us; 875us; 876us; 877us; 878us; 879us; 880us; 1532us; 1533us; 1537us; 1538us; 44us; 65535us; 404us; 870us; 409us; 870us; 444us; 445us; 752us; 870us; 844us; 870us; 845us; 870us; 849us; 870us; 850us; 870us; 851us; 870us; 852us; 870us; 859us; 870us; 862us; 875us; 864us; 875us; 866us; 875us; 871us; 870us; 875us; 875us; 877us; 875us; 879us; 875us; 887us; 870us; 890us; 870us; 901us; 870us; 909us; 870us; 931us; 870us; 936us; 870us; 937us; 870us; 939us; 870us; 940us; 870us; 941us; 870us; 942us; 870us; 948us; 870us; 950us; 870us; 995us; 870us; 1000us; 870us; 1057us; 870us; 1086us; 870us; 1093us; 870us; 1208us; 870us; 1210us; 870us; 1215us; 870us; 1222us; 870us; 1532us; 875us; 1537us; 875us; 1550us; 870us; 1552us; 870us; 2us; 65535us; 871us; 902us; 901us; 902us; 22us; 65535us; 859us; 860us; 871us; 916us; 887us; 926us; 890us; 926us; 901us; 916us; 909us; 923us; 931us; 917us; 936us; 918us; 937us; 919us; 939us; 920us; 940us; 921us; 941us; 922us; 942us; 924us; 948us; 925us; 950us; 926us; 1057us; 927us; 1208us; 928us; 1210us; 928us; 1215us; 928us; 1222us; 928us; 1550us; 928us; 1552us; 928us; 22us; 65535us; 859us; 932us; 871us; 932us; 887us; 932us; 890us; 932us; 901us; 932us; 909us; 910us; 931us; 932us; 936us; 932us; 937us; 932us; 939us; 932us; 940us; 932us; 941us; 932us; 942us; 932us; 948us; 932us; 950us; 932us; 1057us; 932us; 1208us; 932us; 1210us; 932us; 1215us; 932us; 1222us; 932us; 1550us; 932us; 1552us; 932us; 22us; 65535us; 859us; 933us; 871us; 933us; 887us; 933us; 890us; 933us; 901us; 933us; 909us; 933us; 931us; 933us; 936us; 933us; 937us; 933us; 939us; 933us; 940us; 933us; 941us; 933us; 942us; 933us; 948us; 933us; 950us; 933us; 1057us; 933us; 1208us; 933us; 1210us; 933us; 1215us; 933us; 1222us; 933us; 1550us; 933us; 1552us; 933us; 2us; 65535us; 884us; 885us; 945us; 946us; 2us; 65535us; 884us; 943us; 945us; 943us; 3us; 65535us; 887us; 888us; 890us; 891us; 950us; 951us; 25us; 65535us; 262us; 1011us; 407us; 408us; 412us; 413us; 447us; 448us; 463us; 464us; 700us; 701us; 706us; 707us; 769us; 770us; 979us; 1011us; 996us; 997us; 1001us; 1002us; 1010us; 1011us; 1013us; 1014us; 1031us; 1032us; 1048us; 1049us; 1059us; 1060us; 1067us; 1068us; 1074us; 1075us; 1087us; 1088us; 1091us; 1092us; 1094us; 1095us; 1098us; 1099us; 1104us; 1105us; 1106us; 1107us; 1534us; 1535us; 6us; 65535us; 1042us; 1043us; 1044us; 1045us; 1159us; 1160us; 1462us; 1463us; 1467us; 1468us; 1492us; 1493us; 5us; 65535us; 1027us; 1028us; 1113us; 1114us; 1228us; 1229us; 1428us; 1429us; 1539us; 1540us; 52us; 65535us; 6us; 966us; 262us; 956us; 407us; 956us; 412us; 956us; 447us; 956us; 463us; 956us; 700us; 956us; 706us; 956us; 755us; 764us; 759us; 764us; 769us; 956us; 952us; 953us; 957us; 958us; 976us; 977us; 979us; 956us; 996us; 956us; 1001us; 956us; 1007us; 1008us; 1010us; 956us; 1013us; 956us; 1019us; 1020us; 1023us; 1024us; 1027us; 961us; 1031us; 956us; 1048us; 956us; 1059us; 956us; 1067us; 956us; 1074us; 956us; 1087us; 956us; 1091us; 956us; 1094us; 956us; 1098us; 956us; 1101us; 1102us; 1104us; 956us; 1106us; 956us; 1113us; 961us; 1205us; 1206us; 1228us; 961us; 1234us; 1235us; 1240us; 1241us; 1327us; 1332us; 1334us; 1335us; 1364us; 1365us; 1371us; 1373us; 1372us; 1373us; 1384us; 1404us; 1385us; 1404us; 1386us; 1404us; 1402us; 1403us; 1428us; 961us; 1534us; 956us; 1539us; 961us; 1us; 65535us; 6us; 7us; 57us; 65535us; 6us; 963us; 262us; 963us; 407us; 963us; 412us; 963us; 447us; 963us; 463us; 963us; 700us; 963us; 706us; 963us; 755us; 963us; 759us; 963us; 769us; 963us; 952us; 963us; 957us; 963us; 971us; 972us; 973us; 974us; 976us; 963us; 979us; 963us; 996us; 963us; 1001us; 963us; 1007us; 963us; 1010us; 963us; 1013us; 963us; 1019us; 963us; 1023us; 963us; 1027us; 963us; 1031us; 963us; 1048us; 963us; 1059us; 963us; 1067us; 963us; 1074us; 963us; 1087us; 963us; 1091us; 963us; 1094us; 963us; 1098us; 963us; 1101us; 963us; 1104us; 963us; 1106us; 963us; 1113us; 963us; 1205us; 963us; 1228us; 963us; 1234us; 963us; 1240us; 963us; 1313us; 1423us; 1327us; 963us; 1334us; 963us; 1364us; 963us; 1371us; 963us; 1372us; 963us; 1378us; 1423us; 1384us; 963us; 1385us; 963us; 1386us; 963us; 1402us; 963us; 1412us; 1423us; 1428us; 963us; 1534us; 963us; 1539us; 963us; 101us; 65535us; 70us; 73us; 146us; 148us; 152us; 154us; 156us; 158us; 160us; 162us; 231us; 234us; 271us; 272us; 282us; 284us; 285us; 287us; 292us; 294us; 302us; 1874us; 304us; 1874us; 361us; 364us; 374us; 376us; 380us; 381us; 384us; 385us; 491us; 1874us; 506us; 508us; 530us; 531us; 539us; 541us; 548us; 550us; 704us; 714us; 707us; 714us; 754us; 758us; 760us; 762us; 824us; 831us; 825us; 828us; 871us; 907us; 901us; 907us; 902us; 904us; 909us; 915us; 910us; 912us; 927us; 1079us; 953us; 955us; 1002us; 714us; 1020us; 1022us; 1024us; 1026us; 1028us; 1030us; 1033us; 1037us; 1034us; 1036us; 1046us; 1055us; 1047us; 1054us; 1049us; 1051us; 1057us; 1874us; 1058us; 1874us; 1059us; 1874us; 1060us; 1874us; 1066us; 1073us; 1067us; 1072us; 1068us; 1070us; 1080us; 1084us; 1082us; 1085us; 1095us; 714us; 1107us; 714us; 1139us; 1246us; 1162us; 1322us; 1173us; 1174us; 1211us; 1213us; 1235us; 1237us; 1241us; 1243us; 1247us; 1874us; 1249us; 1874us; 1301us; 1326us; 1304us; 1326us; 1313us; 1318us; 1314us; 1316us; 1334us; 1342us; 1335us; 1337us; 1338us; 1340us; 1365us; 1367us; 1371us; 1377us; 1372us; 1377us; 1373us; 1375us; 1378us; 1383us; 1379us; 1381us; 1384us; 1397us; 1385us; 1397us; 1386us; 1397us; 1388us; 1868us; 1412us; 1417us; 1413us; 1415us; 1425us; 1427us; 1430us; 1874us; 1491us; 1874us; 1492us; 1874us; 1525us; 1530us; 1526us; 1528us; 1539us; 1545us; 1540us; 1542us; 1609us; 1666us; 1636us; 1689us; 1655us; 1658us; 1656us; 1658us; 1660us; 1667us; 1661us; 1665us; 1662us; 1664us; 1679us; 1874us; 1684us; 1695us; 1686us; 1874us; 1691us; 1874us; 1733us; 1874us; 4us; 65535us; 998us; 999us; 1004us; 1005us; 1090us; 1091us; 1097us; 1098us; 114us; 65535us; 6us; 968us; 31us; 32us; 105us; 106us; 107us; 108us; 226us; 241us; 240us; 241us; 262us; 968us; 407us; 968us; 412us; 968us; 447us; 968us; 463us; 968us; 700us; 968us; 706us; 968us; 755us; 968us; 759us; 968us; 769us; 968us; 952us; 968us; 957us; 968us; 971us; 968us; 973us; 968us; 976us; 968us; 979us; 968us; 996us; 968us; 1001us; 968us; 1007us; 968us; 1010us; 968us; 1013us; 968us; 1019us; 968us; 1023us; 968us; 1027us; 968us; 1031us; 968us; 1033us; 1034us; 1038us; 1039us; 1040us; 1041us; 1042us; 960us; 1044us; 960us; 1046us; 1047us; 1048us; 968us; 1059us; 968us; 1067us; 968us; 1074us; 968us; 1080us; 1081us; 1082us; 1083us; 1087us; 968us; 1091us; 968us; 1094us; 968us; 1098us; 968us; 1101us; 968us; 1104us; 968us; 1106us; 968us; 1111us; 1112us; 1113us; 968us; 1157us; 1115us; 1159us; 960us; 1163us; 1116us; 1164us; 1117us; 1165us; 1118us; 1166us; 1119us; 1167us; 1120us; 1168us; 1121us; 1169us; 1122us; 1170us; 1123us; 1171us; 1124us; 1172us; 1125us; 1173us; 1126us; 1175us; 1127us; 1176us; 1128us; 1177us; 1129us; 1178us; 1130us; 1179us; 1131us; 1180us; 1132us; 1181us; 1133us; 1182us; 1134us; 1183us; 1135us; 1205us; 968us; 1227us; 1136us; 1228us; 968us; 1232us; 1137us; 1234us; 968us; 1238us; 1138us; 1240us; 968us; 1244us; 1139us; 1247us; 1140us; 1249us; 1142us; 1313us; 970us; 1320us; 1141us; 1327us; 968us; 1334us; 969us; 1344us; 1143us; 1347us; 1143us; 1349us; 1143us; 1352us; 1144us; 1364us; 968us; 1371us; 968us; 1372us; 968us; 1378us; 970us; 1384us; 968us; 1385us; 968us; 1386us; 968us; 1402us; 968us; 1412us; 970us; 1425us; 1147us; 1426us; 1148us; 1428us; 968us; 1430us; 1145us; 1434us; 1146us; 1435us; 1149us; 1462us; 960us; 1467us; 960us; 1492us; 960us; 1534us; 968us; 1539us; 968us; 1829us; 1150us; 1833us; 1150us; 1us; 65535us; 1309us; 1310us; 3us; 65535us; 1020us; 1021us; 1024us; 1025us; 1028us; 1029us; 4us; 65535us; 1208us; 1209us; 1210us; 1211us; 1550us; 1551us; 1552us; 1553us; 6us; 65535us; 1208us; 1220us; 1210us; 1220us; 1215us; 1220us; 1222us; 1220us; 1550us; 1220us; 1552us; 1220us; 6us; 65535us; 1208us; 1214us; 1210us; 1214us; 1215us; 1216us; 1222us; 1223us; 1550us; 1214us; 1552us; 1214us; 1us; 65535us; 928us; 1219us; 1us; 65535us; 1220us; 1221us; 2us; 65535us; 1034us; 1035us; 1139us; 1245us; 2us; 65535us; 1034us; 1230us; 1139us; 1230us; 1us; 65535us; 1230us; 1231us; 114us; 65535us; 6us; 1161us; 31us; 1161us; 105us; 1161us; 107us; 1161us; 226us; 1161us; 240us; 1161us; 262us; 1161us; 407us; 1161us; 412us; 1161us; 447us; 1161us; 463us; 1161us; 700us; 1161us; 706us; 1161us; 755us; 1161us; 759us; 1161us; 769us; 1161us; 952us; 1161us; 957us; 1161us; 971us; 1161us; 973us; 1161us; 976us; 1161us; 979us; 1161us; 996us; 1161us; 1001us; 1161us; 1007us; 1161us; 1010us; 1161us; 1013us; 1161us; 1019us; 1161us; 1023us; 1161us; 1027us; 1161us; 1031us; 1161us; 1033us; 1161us; 1038us; 1161us; 1040us; 1161us; 1042us; 1161us; 1044us; 1161us; 1046us; 1161us; 1048us; 1161us; 1059us; 1161us; 1067us; 1161us; 1074us; 1161us; 1080us; 1161us; 1082us; 1161us; 1087us; 1161us; 1091us; 1161us; 1094us; 1161us; 1098us; 1161us; 1101us; 1161us; 1104us; 1161us; 1106us; 1161us; 1111us; 1161us; 1113us; 1161us; 1157us; 1161us; 1159us; 1161us; 1163us; 1161us; 1164us; 1161us; 1165us; 1161us; 1166us; 1161us; 1167us; 1161us; 1168us; 1161us; 1169us; 1161us; 1170us; 1161us; 1171us; 1161us; 1172us; 1161us; 1173us; 1161us; 1175us; 1161us; 1176us; 1161us; 1177us; 1161us; 1178us; 1161us; 1179us; 1161us; 1180us; 1161us; 1181us; 1161us; 1182us; 1161us; 1183us; 1161us; 1205us; 1161us; 1227us; 1161us; 1228us; 1161us; 1232us; 1161us; 1234us; 1161us; 1238us; 1161us; 1240us; 1161us; 1244us; 1161us; 1247us; 1161us; 1249us; 1161us; 1313us; 1161us; 1320us; 1162us; 1327us; 1161us; 1334us; 1161us; 1344us; 1161us; 1347us; 1161us; 1349us; 1161us; 1352us; 1161us; 1364us; 1161us; 1371us; 1161us; 1372us; 1161us; 1378us; 1161us; 1384us; 1161us; 1385us; 1161us; 1386us; 1161us; 1402us; 1161us; 1412us; 1161us; 1425us; 1161us; 1426us; 1161us; 1428us; 1161us; 1430us; 1161us; 1434us; 1161us; 1435us; 1161us; 1462us; 1161us; 1467us; 1161us; 1492us; 1161us; 1534us; 1161us; 1539us; 1161us; 1829us; 1161us; 1833us; 1161us; 128us; 65535us; 6us; 1158us; 31us; 1158us; 105us; 1158us; 107us; 1158us; 226us; 1158us; 240us; 1158us; 262us; 1158us; 407us; 1158us; 412us; 1158us; 447us; 1158us; 463us; 1158us; 700us; 1158us; 706us; 1158us; 755us; 1158us; 759us; 1158us; 769us; 1158us; 952us; 1158us; 957us; 1158us; 971us; 1158us; 973us; 1158us; 976us; 1158us; 979us; 1158us; 996us; 1158us; 1001us; 1158us; 1007us; 1158us; 1010us; 1158us; 1013us; 1158us; 1019us; 1158us; 1023us; 1158us; 1027us; 1158us; 1031us; 1158us; 1033us; 1158us; 1038us; 1158us; 1040us; 1158us; 1042us; 1158us; 1044us; 1158us; 1046us; 1158us; 1048us; 1158us; 1059us; 1158us; 1067us; 1158us; 1074us; 1158us; 1080us; 1158us; 1082us; 1158us; 1087us; 1158us; 1091us; 1158us; 1094us; 1158us; 1098us; 1158us; 1101us; 1158us; 1104us; 1158us; 1106us; 1158us; 1111us; 1158us; 1113us; 1158us; 1157us; 1158us; 1159us; 1158us; 1163us; 1158us; 1164us; 1158us; 1165us; 1158us; 1166us; 1158us; 1167us; 1158us; 1168us; 1158us; 1169us; 1158us; 1170us; 1158us; 1171us; 1158us; 1172us; 1158us; 1173us; 1158us; 1175us; 1158us; 1176us; 1158us; 1177us; 1158us; 1178us; 1158us; 1179us; 1158us; 1180us; 1158us; 1181us; 1158us; 1182us; 1158us; 1183us; 1158us; 1205us; 1158us; 1227us; 1158us; 1228us; 1158us; 1232us; 1158us; 1234us; 1158us; 1238us; 1158us; 1240us; 1158us; 1244us; 1158us; 1247us; 1158us; 1249us; 1158us; 1251us; 1253us; 1252us; 1253us; 1254us; 1256us; 1255us; 1256us; 1257us; 1259us; 1258us; 1259us; 1260us; 1262us; 1261us; 1262us; 1263us; 1265us; 1264us; 1265us; 1266us; 1268us; 1267us; 1268us; 1279us; 1280us; 1281us; 1282us; 1313us; 1158us; 1320us; 1158us; 1327us; 1158us; 1334us; 1158us; 1344us; 1158us; 1347us; 1158us; 1349us; 1158us; 1352us; 1158us; 1364us; 1158us; 1371us; 1158us; 1372us; 1158us; 1378us; 1158us; 1384us; 1158us; 1385us; 1158us; 1386us; 1158us; 1402us; 1158us; 1412us; 1158us; 1425us; 1158us; 1426us; 1158us; 1428us; 1158us; 1430us; 1158us; 1434us; 1158us; 1435us; 1158us; 1462us; 1158us; 1467us; 1158us; 1492us; 1158us; 1534us; 1158us; 1539us; 1158us; 1829us; 1158us; 1833us; 1158us; 129us; 65535us; 6us; 1283us; 31us; 1283us; 105us; 1283us; 107us; 1283us; 226us; 1283us; 240us; 1283us; 262us; 1283us; 407us; 1283us; 412us; 1283us; 447us; 1283us; 463us; 1283us; 700us; 1283us; 706us; 1283us; 755us; 1283us; 759us; 1283us; 769us; 1283us; 952us; 1283us; 957us; 1283us; 971us; 1283us; 973us; 1283us; 976us; 1283us; 979us; 1283us; 996us; 1283us; 1001us; 1283us; 1007us; 1283us; 1010us; 1283us; 1013us; 1283us; 1019us; 1283us; 1023us; 1283us; 1027us; 1283us; 1031us; 1283us; 1033us; 1283us; 1038us; 1283us; 1040us; 1283us; 1042us; 1283us; 1044us; 1283us; 1046us; 1283us; 1048us; 1283us; 1059us; 1283us; 1067us; 1283us; 1074us; 1283us; 1080us; 1283us; 1082us; 1283us; 1087us; 1283us; 1091us; 1283us; 1094us; 1283us; 1098us; 1283us; 1101us; 1283us; 1104us; 1283us; 1106us; 1283us; 1111us; 1283us; 1113us; 1283us; 1157us; 1283us; 1159us; 1283us; 1163us; 1283us; 1164us; 1283us; 1165us; 1283us; 1166us; 1283us; 1167us; 1283us; 1168us; 1283us; 1169us; 1283us; 1170us; 1283us; 1171us; 1283us; 1172us; 1283us; 1173us; 1283us; 1175us; 1283us; 1176us; 1283us; 1177us; 1283us; 1178us; 1283us; 1179us; 1283us; 1180us; 1283us; 1181us; 1283us; 1182us; 1283us; 1183us; 1283us; 1205us; 1283us; 1227us; 1283us; 1228us; 1283us; 1232us; 1283us; 1234us; 1283us; 1238us; 1283us; 1240us; 1283us; 1244us; 1283us; 1247us; 1283us; 1249us; 1283us; 1251us; 1283us; 1252us; 1283us; 1254us; 1283us; 1255us; 1283us; 1257us; 1283us; 1258us; 1283us; 1260us; 1283us; 1261us; 1283us; 1263us; 1283us; 1264us; 1283us; 1266us; 1283us; 1267us; 1283us; 1279us; 1283us; 1281us; 1283us; 1313us; 1283us; 1320us; 1283us; 1327us; 1283us; 1334us; 1283us; 1344us; 1283us; 1347us; 1283us; 1349us; 1283us; 1352us; 1283us; 1364us; 1283us; 1371us; 1283us; 1372us; 1283us; 1378us; 1283us; 1384us; 1283us; 1385us; 1283us; 1386us; 1283us; 1402us; 1283us; 1412us; 1284us; 1425us; 1283us; 1426us; 1283us; 1428us; 1283us; 1430us; 1283us; 1434us; 1283us; 1435us; 1283us; 1462us; 1283us; 1467us; 1283us; 1492us; 1283us; 1525us; 1285us; 1534us; 1283us; 1539us; 1283us; 1829us; 1283us; 1833us; 1283us; 4us; 65535us; 1283us; 1286us; 1284us; 1286us; 1285us; 1286us; 1442us; 1445us; 139us; 65535us; 6us; 1287us; 31us; 1287us; 105us; 1287us; 107us; 1287us; 226us; 1287us; 240us; 1287us; 262us; 1287us; 407us; 1287us; 412us; 1287us; 447us; 1287us; 463us; 1287us; 700us; 1287us; 706us; 1287us; 755us; 1287us; 759us; 1287us; 769us; 1287us; 952us; 1287us; 957us; 1287us; 971us; 1287us; 973us; 1287us; 976us; 1287us; 979us; 1287us; 996us; 1287us; 1001us; 1287us; 1007us; 1287us; 1010us; 1287us; 1013us; 1287us; 1019us; 1287us; 1023us; 1287us; 1027us; 1287us; 1031us; 1287us; 1033us; 1287us; 1038us; 1287us; 1040us; 1287us; 1042us; 1287us; 1044us; 1287us; 1046us; 1287us; 1048us; 1287us; 1059us; 1287us; 1067us; 1287us; 1074us; 1287us; 1080us; 1287us; 1082us; 1287us; 1087us; 1287us; 1091us; 1287us; 1094us; 1287us; 1098us; 1287us; 1101us; 1287us; 1104us; 1287us; 1106us; 1287us; 1111us; 1287us; 1113us; 1287us; 1157us; 1287us; 1159us; 1287us; 1163us; 1287us; 1164us; 1287us; 1165us; 1287us; 1166us; 1287us; 1167us; 1287us; 1168us; 1287us; 1169us; 1287us; 1170us; 1287us; 1171us; 1287us; 1172us; 1287us; 1173us; 1287us; 1175us; 1287us; 1176us; 1287us; 1177us; 1287us; 1178us; 1287us; 1179us; 1287us; 1180us; 1287us; 1181us; 1287us; 1182us; 1287us; 1183us; 1287us; 1205us; 1287us; 1227us; 1287us; 1228us; 1287us; 1232us; 1287us; 1234us; 1287us; 1238us; 1287us; 1240us; 1287us; 1244us; 1287us; 1247us; 1287us; 1249us; 1287us; 1251us; 1287us; 1252us; 1287us; 1254us; 1287us; 1255us; 1287us; 1257us; 1287us; 1258us; 1287us; 1260us; 1287us; 1261us; 1287us; 1263us; 1287us; 1264us; 1287us; 1266us; 1287us; 1267us; 1287us; 1279us; 1287us; 1281us; 1287us; 1283us; 1290us; 1284us; 1290us; 1285us; 1290us; 1288us; 1289us; 1295us; 1291us; 1296us; 1292us; 1299us; 1293us; 1300us; 1293us; 1313us; 1287us; 1320us; 1287us; 1327us; 1287us; 1334us; 1287us; 1344us; 1287us; 1347us; 1287us; 1349us; 1287us; 1352us; 1287us; 1364us; 1287us; 1371us; 1287us; 1372us; 1287us; 1378us; 1287us; 1384us; 1287us; 1385us; 1287us; 1386us; 1287us; 1402us; 1287us; 1412us; 1287us; 1425us; 1287us; 1426us; 1287us; 1428us; 1287us; 1430us; 1287us; 1434us; 1287us; 1435us; 1287us; 1442us; 1290us; 1462us; 1287us; 1467us; 1287us; 1492us; 1287us; 1525us; 1287us; 1534us; 1287us; 1539us; 1287us; 1670us; 1294us; 1829us; 1287us; 1833us; 1287us; 2us; 65535us; 1301us; 1302us; 1304us; 1305us; 2us; 65535us; 1334us; 1338us; 1344us; 1345us; 2us; 65535us; 1334us; 1343us; 1344us; 1343us; 4us; 65535us; 1334us; 1346us; 1344us; 1346us; 1347us; 1348us; 1349us; 1350us; 146us; 65535us; 6us; 1323us; 31us; 1323us; 105us; 1323us; 107us; 1323us; 226us; 1323us; 240us; 1323us; 262us; 1323us; 316us; 1446us; 320us; 1446us; 325us; 1446us; 407us; 1323us; 412us; 1323us; 447us; 1323us; 463us; 1323us; 494us; 495us; 700us; 1323us; 706us; 1323us; 755us; 1323us; 759us; 1323us; 769us; 1323us; 952us; 1323us; 957us; 1323us; 971us; 1323us; 973us; 1323us; 976us; 1323us; 979us; 1323us; 996us; 1323us; 1001us; 1323us; 1007us; 1323us; 1010us; 1323us; 1013us; 1323us; 1019us; 1323us; 1023us; 1323us; 1027us; 1323us; 1031us; 1323us; 1033us; 1323us; 1038us; 1323us; 1040us; 1323us; 1042us; 1323us; 1044us; 1323us; 1046us; 1323us; 1048us; 1323us; 1059us; 1323us; 1067us; 1323us; 1074us; 1323us; 1080us; 1323us; 1082us; 1323us; 1087us; 1323us; 1091us; 1323us; 1094us; 1323us; 1098us; 1323us; 1101us; 1323us; 1104us; 1323us; 1106us; 1323us; 1111us; 1323us; 1113us; 1323us; 1157us; 1323us; 1159us; 1323us; 1163us; 1323us; 1164us; 1323us; 1165us; 1323us; 1166us; 1323us; 1167us; 1323us; 1168us; 1323us; 1169us; 1323us; 1170us; 1323us; 1171us; 1323us; 1172us; 1323us; 1173us; 1323us; 1175us; 1323us; 1176us; 1323us; 1177us; 1323us; 1178us; 1323us; 1179us; 1323us; 1180us; 1323us; 1181us; 1323us; 1182us; 1323us; 1183us; 1323us; 1205us; 1323us; 1227us; 1323us; 1228us; 1323us; 1232us; 1323us; 1234us; 1323us; 1238us; 1323us; 1240us; 1323us; 1244us; 1323us; 1247us; 1323us; 1249us; 1323us; 1251us; 1323us; 1252us; 1323us; 1254us; 1323us; 1255us; 1323us; 1257us; 1323us; 1258us; 1323us; 1260us; 1323us; 1261us; 1323us; 1263us; 1323us; 1264us; 1323us; 1266us; 1323us; 1267us; 1323us; 1273us; 1275us; 1274us; 1276us; 1279us; 1323us; 1281us; 1323us; 1283us; 1323us; 1284us; 1323us; 1285us; 1323us; 1288us; 1323us; 1295us; 1323us; 1296us; 1323us; 1299us; 1323us; 1300us; 1323us; 1313us; 1323us; 1320us; 1323us; 1327us; 1323us; 1334us; 1323us; 1344us; 1323us; 1347us; 1323us; 1349us; 1323us; 1352us; 1323us; 1364us; 1323us; 1371us; 1323us; 1372us; 1323us; 1378us; 1323us; 1384us; 1323us; 1385us; 1323us; 1386us; 1323us; 1402us; 1323us; 1412us; 1323us; 1425us; 1323us; 1426us; 1323us; 1428us; 1323us; 1430us; 1323us; 1434us; 1323us; 1435us; 1323us; 1442us; 1323us; 1457us; 1446us; 1462us; 1323us; 1467us; 1323us; 1492us; 1323us; 1525us; 1323us; 1534us; 1323us; 1539us; 1323us; 1670us; 1323us; 1829us; 1323us; 1833us; 1323us; 146us; 65535us; 6us; 1363us; 31us; 1363us; 105us; 1363us; 107us; 1363us; 226us; 1363us; 240us; 1363us; 262us; 1363us; 316us; 1363us; 320us; 1363us; 325us; 1363us; 407us; 1363us; 412us; 1363us; 447us; 1363us; 463us; 1363us; 494us; 1363us; 700us; 1363us; 706us; 1363us; 755us; 1363us; 759us; 1363us; 769us; 1363us; 952us; 1363us; 957us; 1363us; 971us; 1363us; 973us; 1363us; 976us; 1363us; 979us; 1363us; 996us; 1363us; 1001us; 1363us; 1007us; 1363us; 1010us; 1363us; 1013us; 1363us; 1019us; 1363us; 1023us; 1363us; 1027us; 1363us; 1031us; 1363us; 1033us; 1363us; 1038us; 1363us; 1040us; 1363us; 1042us; 1363us; 1044us; 1363us; 1046us; 1363us; 1048us; 1363us; 1059us; 1363us; 1067us; 1363us; 1074us; 1363us; 1080us; 1363us; 1082us; 1363us; 1087us; 1363us; 1091us; 1363us; 1094us; 1363us; 1098us; 1363us; 1101us; 1363us; 1104us; 1363us; 1106us; 1363us; 1111us; 1363us; 1113us; 1363us; 1157us; 1363us; 1159us; 1363us; 1163us; 1363us; 1164us; 1363us; 1165us; 1363us; 1166us; 1363us; 1167us; 1363us; 1168us; 1363us; 1169us; 1363us; 1170us; 1363us; 1171us; 1363us; 1172us; 1363us; 1173us; 1363us; 1175us; 1363us; 1176us; 1363us; 1177us; 1363us; 1178us; 1363us; 1179us; 1363us; 1180us; 1363us; 1181us; 1363us; 1182us; 1363us; 1183us; 1363us; 1205us; 1363us; 1227us; 1363us; 1228us; 1363us; 1232us; 1363us; 1234us; 1363us; 1238us; 1363us; 1240us; 1363us; 1244us; 1363us; 1247us; 1363us; 1249us; 1363us; 1251us; 1363us; 1252us; 1363us; 1254us; 1363us; 1255us; 1363us; 1257us; 1363us; 1258us; 1363us; 1260us; 1363us; 1261us; 1363us; 1263us; 1363us; 1264us; 1363us; 1266us; 1363us; 1267us; 1363us; 1273us; 1363us; 1274us; 1363us; 1279us; 1363us; 1281us; 1363us; 1283us; 1363us; 1284us; 1363us; 1285us; 1363us; 1288us; 1363us; 1295us; 1363us; 1296us; 1363us; 1299us; 1363us; 1300us; 1363us; 1313us; 1363us; 1320us; 1363us; 1327us; 1363us; 1334us; 1363us; 1344us; 1363us; 1347us; 1363us; 1349us; 1363us; 1352us; 1363us; 1364us; 1363us; 1371us; 1363us; 1372us; 1363us; 1378us; 1363us; 1384us; 1363us; 1385us; 1363us; 1386us; 1363us; 1402us; 1363us; 1412us; 1363us; 1425us; 1363us; 1426us; 1363us; 1428us; 1363us; 1430us; 1363us; 1434us; 1363us; 1435us; 1363us; 1442us; 1363us; 1457us; 1363us; 1462us; 1363us; 1467us; 1363us; 1492us; 1363us; 1525us; 1363us; 1534us; 1363us; 1539us; 1363us; 1670us; 1363us; 1829us; 1363us; 1833us; 1363us; 190us; 65535us; 6us; 1361us; 31us; 1361us; 105us; 1361us; 107us; 1361us; 226us; 1361us; 240us; 1361us; 262us; 1361us; 316us; 1361us; 320us; 1361us; 325us; 1361us; 404us; 881us; 407us; 1361us; 409us; 881us; 412us; 1361us; 444us; 881us; 447us; 1361us; 463us; 1361us; 494us; 1361us; 700us; 1361us; 706us; 1361us; 752us; 881us; 755us; 1361us; 759us; 1361us; 769us; 1361us; 844us; 881us; 845us; 881us; 849us; 881us; 850us; 881us; 851us; 881us; 852us; 881us; 859us; 881us; 862us; 881us; 864us; 881us; 866us; 881us; 871us; 881us; 875us; 881us; 877us; 881us; 879us; 881us; 887us; 881us; 890us; 881us; 901us; 881us; 909us; 881us; 931us; 881us; 936us; 881us; 937us; 881us; 939us; 881us; 940us; 881us; 941us; 881us; 942us; 881us; 948us; 881us; 950us; 881us; 952us; 1361us; 957us; 1361us; 971us; 1361us; 973us; 1361us; 976us; 1361us; 979us; 1361us; 995us; 881us; 996us; 1361us; 1000us; 881us; 1001us; 1361us; 1007us; 1361us; 1010us; 1361us; 1013us; 1361us; 1019us; 1361us; 1023us; 1361us; 1027us; 1361us; 1031us; 1361us; 1033us; 1361us; 1038us; 1361us; 1040us; 1361us; 1042us; 1361us; 1044us; 1361us; 1046us; 1361us; 1048us; 1361us; 1057us; 881us; 1059us; 1361us; 1067us; 1361us; 1074us; 1361us; 1080us; 1361us; 1082us; 1361us; 1086us; 881us; 1087us; 1361us; 1091us; 1361us; 1093us; 881us; 1094us; 1361us; 1098us; 1361us; 1101us; 1361us; 1104us; 1361us; 1106us; 1361us; 1111us; 1361us; 1113us; 1361us; 1157us; 1361us; 1159us; 1361us; 1163us; 1361us; 1164us; 1361us; 1165us; 1361us; 1166us; 1361us; 1167us; 1361us; 1168us; 1361us; 1169us; 1361us; 1170us; 1361us; 1171us; 1361us; 1172us; 1361us; 1173us; 1361us; 1175us; 1361us; 1176us; 1361us; 1177us; 1361us; 1178us; 1361us; 1179us; 1361us; 1180us; 1361us; 1181us; 1361us; 1182us; 1361us; 1183us; 1361us; 1205us; 1361us; 1208us; 881us; 1210us; 881us; 1215us; 881us; 1222us; 881us; 1227us; 1361us; 1228us; 1361us; 1232us; 1361us; 1234us; 1361us; 1238us; 1361us; 1240us; 1361us; 1244us; 1361us; 1247us; 1361us; 1249us; 1361us; 1251us; 1361us; 1252us; 1361us; 1254us; 1361us; 1255us; 1361us; 1257us; 1361us; 1258us; 1361us; 1260us; 1361us; 1261us; 1361us; 1263us; 1361us; 1264us; 1361us; 1266us; 1361us; 1267us; 1361us; 1273us; 1361us; 1274us; 1361us; 1279us; 1361us; 1281us; 1361us; 1283us; 1361us; 1284us; 1361us; 1285us; 1361us; 1288us; 1361us; 1295us; 1361us; 1296us; 1361us; 1299us; 1361us; 1300us; 1361us; 1313us; 1361us; 1320us; 1361us; 1327us; 1361us; 1334us; 1361us; 1344us; 1361us; 1347us; 1361us; 1349us; 1361us; 1352us; 1361us; 1364us; 1361us; 1371us; 1361us; 1372us; 1361us; 1378us; 1361us; 1384us; 1361us; 1385us; 1361us; 1386us; 1361us; 1402us; 1361us; 1412us; 1361us; 1425us; 1361us; 1426us; 1361us; 1428us; 1361us; 1430us; 1361us; 1434us; 1361us; 1435us; 1361us; 1442us; 1361us; 1457us; 1361us; 1462us; 1361us; 1467us; 1361us; 1492us; 1361us; 1525us; 1361us; 1532us; 881us; 1534us; 1361us; 1537us; 881us; 1539us; 1361us; 1550us; 881us; 1552us; 881us; 1670us; 1361us; 1829us; 1361us; 1833us; 1361us; 146us; 65535us; 6us; 1362us; 31us; 1362us; 105us; 1362us; 107us; 1362us; 226us; 1362us; 240us; 1362us; 262us; 1362us; 316us; 1362us; 320us; 1362us; 325us; 1362us; 407us; 1362us; 412us; 1362us; 447us; 1362us; 463us; 1362us; 494us; 1362us; 700us; 1362us; 706us; 1362us; 755us; 1362us; 759us; 1362us; 769us; 1362us; 952us; 1362us; 957us; 1362us; 971us; 1362us; 973us; 1362us; 976us; 1362us; 979us; 1362us; 996us; 1362us; 1001us; 1362us; 1007us; 1362us; 1010us; 1362us; 1013us; 1362us; 1019us; 1362us; 1023us; 1362us; 1027us; 1362us; 1031us; 1362us; 1033us; 1362us; 1038us; 1362us; 1040us; 1362us; 1042us; 1362us; 1044us; 1362us; 1046us; 1362us; 1048us; 1362us; 1059us; 1362us; 1067us; 1362us; 1074us; 1362us; 1080us; 1362us; 1082us; 1362us; 1087us; 1362us; 1091us; 1362us; 1094us; 1362us; 1098us; 1362us; 1101us; 1362us; 1104us; 1362us; 1106us; 1362us; 1111us; 1362us; 1113us; 1362us; 1157us; 1362us; 1159us; 1362us; 1163us; 1362us; 1164us; 1362us; 1165us; 1362us; 1166us; 1362us; 1167us; 1362us; 1168us; 1362us; 1169us; 1362us; 1170us; 1362us; 1171us; 1362us; 1172us; 1362us; 1173us; 1362us; 1175us; 1362us; 1176us; 1362us; 1177us; 1362us; 1178us; 1362us; 1179us; 1362us; 1180us; 1362us; 1181us; 1362us; 1182us; 1362us; 1183us; 1362us; 1205us; 1362us; 1227us; 1362us; 1228us; 1362us; 1232us; 1362us; 1234us; 1362us; 1238us; 1362us; 1240us; 1362us; 1244us; 1362us; 1247us; 1362us; 1249us; 1362us; 1251us; 1362us; 1252us; 1362us; 1254us; 1362us; 1255us; 1362us; 1257us; 1362us; 1258us; 1362us; 1260us; 1362us; 1261us; 1362us; 1263us; 1362us; 1264us; 1362us; 1266us; 1362us; 1267us; 1362us; 1273us; 1362us; 1274us; 1362us; 1279us; 1362us; 1281us; 1362us; 1283us; 1362us; 1284us; 1362us; 1285us; 1362us; 1288us; 1362us; 1295us; 1362us; 1296us; 1362us; 1299us; 1362us; 1300us; 1362us; 1313us; 1362us; 1320us; 1362us; 1327us; 1362us; 1334us; 1362us; 1344us; 1362us; 1347us; 1362us; 1349us; 1362us; 1352us; 1362us; 1364us; 1362us; 1371us; 1362us; 1372us; 1362us; 1378us; 1362us; 1384us; 1362us; 1385us; 1362us; 1386us; 1362us; 1402us; 1362us; 1412us; 1362us; 1425us; 1362us; 1426us; 1362us; 1428us; 1362us; 1430us; 1362us; 1434us; 1362us; 1435us; 1362us; 1442us; 1362us; 1457us; 1362us; 1462us; 1362us; 1467us; 1362us; 1492us; 1362us; 1525us; 1362us; 1534us; 1362us; 1539us; 1362us; 1670us; 1362us; 1829us; 1362us; 1833us; 1362us; 146us; 65535us; 6us; 1354us; 31us; 1354us; 105us; 1354us; 107us; 1354us; 226us; 1354us; 240us; 1354us; 262us; 1354us; 316us; 1354us; 320us; 1354us; 325us; 1354us; 407us; 1354us; 412us; 1354us; 447us; 1354us; 463us; 1354us; 494us; 1354us; 700us; 1354us; 706us; 1354us; 755us; 1354us; 759us; 1354us; 769us; 1354us; 952us; 1354us; 957us; 1354us; 971us; 1354us; 973us; 1354us; 976us; 1354us; 979us; 1354us; 996us; 1354us; 1001us; 1354us; 1007us; 1354us; 1010us; 1354us; 1013us; 1354us; 1019us; 1354us; 1023us; 1354us; 1027us; 1354us; 1031us; 1354us; 1033us; 1354us; 1038us; 1354us; 1040us; 1354us; 1042us; 1354us; 1044us; 1354us; 1046us; 1354us; 1048us; 1354us; 1059us; 1354us; 1067us; 1354us; 1074us; 1354us; 1080us; 1354us; 1082us; 1354us; 1087us; 1354us; 1091us; 1354us; 1094us; 1354us; 1098us; 1354us; 1101us; 1354us; 1104us; 1354us; 1106us; 1354us; 1111us; 1354us; 1113us; 1354us; 1157us; 1354us; 1159us; 1354us; 1163us; 1354us; 1164us; 1354us; 1165us; 1354us; 1166us; 1354us; 1167us; 1354us; 1168us; 1354us; 1169us; 1354us; 1170us; 1354us; 1171us; 1354us; 1172us; 1354us; 1173us; 1354us; 1175us; 1354us; 1176us; 1354us; 1177us; 1354us; 1178us; 1354us; 1179us; 1354us; 1180us; 1354us; 1181us; 1354us; 1182us; 1354us; 1183us; 1354us; 1205us; 1354us; 1227us; 1354us; 1228us; 1354us; 1232us; 1354us; 1234us; 1354us; 1238us; 1354us; 1240us; 1354us; 1244us; 1354us; 1247us; 1354us; 1249us; 1354us; 1251us; 1354us; 1252us; 1354us; 1254us; 1354us; 1255us; 1354us; 1257us; 1354us; 1258us; 1354us; 1260us; 1354us; 1261us; 1354us; 1263us; 1354us; 1264us; 1354us; 1266us; 1354us; 1267us; 1354us; 1273us; 1354us; 1274us; 1354us; 1279us; 1354us; 1281us; 1354us; 1283us; 1354us; 1284us; 1354us; 1285us; 1354us; 1288us; 1354us; 1295us; 1354us; 1296us; 1354us; 1299us; 1354us; 1300us; 1354us; 1313us; 1354us; 1320us; 1354us; 1327us; 1354us; 1334us; 1354us; 1344us; 1354us; 1347us; 1354us; 1349us; 1354us; 1352us; 1354us; 1364us; 1354us; 1371us; 1354us; 1372us; 1354us; 1378us; 1354us; 1384us; 1354us; 1385us; 1354us; 1386us; 1354us; 1402us; 1354us; 1412us; 1354us; 1425us; 1354us; 1426us; 1354us; 1428us; 1354us; 1430us; 1354us; 1434us; 1354us; 1435us; 1354us; 1442us; 1354us; 1457us; 1354us; 1462us; 1354us; 1467us; 1354us; 1492us; 1354us; 1525us; 1354us; 1534us; 1354us; 1539us; 1354us; 1670us; 1354us; 1829us; 1354us; 1833us; 1354us; 3us; 65535us; 1384us; 1388us; 1385us; 1388us; 1386us; 1388us; 3us; 65535us; 1384us; 1398us; 1385us; 1398us; 1386us; 1398us; 1us; 65535us; 1385us; 1408us; 146us; 65535us; 6us; 1355us; 31us; 1355us; 105us; 1355us; 107us; 1355us; 226us; 1355us; 240us; 1355us; 262us; 1355us; 316us; 1355us; 320us; 1355us; 325us; 1355us; 407us; 1355us; 412us; 1355us; 447us; 1355us; 463us; 1355us; 494us; 1355us; 700us; 1355us; 706us; 1355us; 755us; 1355us; 759us; 1355us; 769us; 1355us; 952us; 1355us; 957us; 1355us; 971us; 1355us; 973us; 1355us; 976us; 1355us; 979us; 1355us; 996us; 1355us; 1001us; 1355us; 1007us; 1355us; 1010us; 1355us; 1013us; 1355us; 1019us; 1355us; 1023us; 1355us; 1027us; 1355us; 1031us; 1355us; 1033us; 1355us; 1038us; 1355us; 1040us; 1355us; 1042us; 1355us; 1044us; 1355us; 1046us; 1355us; 1048us; 1355us; 1059us; 1355us; 1067us; 1355us; 1074us; 1355us; 1080us; 1355us; 1082us; 1355us; 1087us; 1355us; 1091us; 1355us; 1094us; 1355us; 1098us; 1355us; 1101us; 1355us; 1104us; 1355us; 1106us; 1355us; 1111us; 1355us; 1113us; 1355us; 1157us; 1355us; 1159us; 1355us; 1163us; 1355us; 1164us; 1355us; 1165us; 1355us; 1166us; 1355us; 1167us; 1355us; 1168us; 1355us; 1169us; 1355us; 1170us; 1355us; 1171us; 1355us; 1172us; 1355us; 1173us; 1355us; 1175us; 1355us; 1176us; 1355us; 1177us; 1355us; 1178us; 1355us; 1179us; 1355us; 1180us; 1355us; 1181us; 1355us; 1182us; 1355us; 1183us; 1355us; 1205us; 1355us; 1227us; 1355us; 1228us; 1355us; 1232us; 1355us; 1234us; 1355us; 1238us; 1355us; 1240us; 1355us; 1244us; 1355us; 1247us; 1355us; 1249us; 1355us; 1251us; 1355us; 1252us; 1355us; 1254us; 1355us; 1255us; 1355us; 1257us; 1355us; 1258us; 1355us; 1260us; 1355us; 1261us; 1355us; 1263us; 1355us; 1264us; 1355us; 1266us; 1355us; 1267us; 1355us; 1273us; 1355us; 1274us; 1355us; 1279us; 1355us; 1281us; 1355us; 1283us; 1355us; 1284us; 1355us; 1285us; 1355us; 1288us; 1355us; 1295us; 1355us; 1296us; 1355us; 1299us; 1355us; 1300us; 1355us; 1313us; 1355us; 1320us; 1355us; 1327us; 1355us; 1334us; 1355us; 1344us; 1355us; 1347us; 1355us; 1349us; 1355us; 1352us; 1355us; 1364us; 1355us; 1371us; 1355us; 1372us; 1355us; 1378us; 1355us; 1384us; 1355us; 1385us; 1355us; 1386us; 1355us; 1402us; 1355us; 1412us; 1355us; 1425us; 1355us; 1426us; 1355us; 1428us; 1355us; 1430us; 1355us; 1434us; 1355us; 1435us; 1355us; 1442us; 1355us; 1457us; 1355us; 1462us; 1355us; 1467us; 1355us; 1492us; 1355us; 1525us; 1355us; 1534us; 1355us; 1539us; 1355us; 1670us; 1355us; 1829us; 1355us; 1833us; 1355us; 1us; 65535us; 1412us; 1413us; 2us; 65535us; 1313us; 1314us; 1378us; 1379us; 3us; 65535us; 1313us; 1422us; 1378us; 1422us; 1412us; 1421us; 5us; 65535us; 1313us; 1424us; 1378us; 1424us; 1412us; 1424us; 1430us; 1431us; 1434us; 1436us; 1us; 65535us; 1109us; 1110us; 1us; 65535us; 1057us; 1058us; 1us; 65535us; 1057us; 1066us; 1us; 65535us; 1146us; 1435us; 3us; 65535us; 1384us; 1405us; 1385us; 1405us; 1386us; 1405us; 1us; 65535us; 1441us; 1442us; 4us; 65535us; 316us; 317us; 320us; 321us; 325us; 326us; 1457us; 1458us; 1us; 65535us; 1440us; 1441us; 1us; 65535us; 1442us; 1443us; 1us; 65535us; 1412us; 1419us; 2us; 65535us; 1412us; 1461us; 1525us; 1526us; 6us; 65535us; 1459us; 1460us; 1464us; 1465us; 1469us; 1470us; 1473us; 1474us; 1475us; 1476us; 1479us; 1480us; 6us; 65535us; 1459us; 1483us; 1464us; 1483us; 1469us; 1483us; 1473us; 1483us; 1475us; 1482us; 1479us; 1483us; 3us; 65535us; 1471us; 1491us; 1475us; 1491us; 1483us; 1491us; 5us; 65535us; 1458us; 1459us; 1463us; 1464us; 1468us; 1469us; 1472us; 1473us; 1478us; 1479us; 3us; 65535us; 1471us; 1472us; 1475us; 1478us; 1483us; 1490us; 1us; 65535us; 1412us; 1420us; 1us; 65535us; 1412us; 1496us; 1us; 65535us; 1518us; 1519us; 2us; 65535us; 1496us; 1497us; 1518us; 1503us; 1us; 65535us; 1500us; 1501us; 4us; 65535us; 1498us; 1499us; 1511us; 1512us; 1513us; 1514us; 1515us; 1516us; 5us; 65535us; 1498us; 1513us; 1500us; 1511us; 1511us; 1513us; 1513us; 1513us; 1515us; 1513us; 146us; 65535us; 6us; 1356us; 31us; 1356us; 105us; 1356us; 107us; 1356us; 226us; 1356us; 240us; 1356us; 262us; 1356us; 316us; 1356us; 320us; 1356us; 325us; 1356us; 407us; 1356us; 412us; 1356us; 447us; 1356us; 463us; 1356us; 494us; 1356us; 700us; 1356us; 706us; 1356us; 755us; 1356us; 759us; 1356us; 769us; 1356us; 952us; 1356us; 957us; 1356us; 971us; 1356us; 973us; 1356us; 976us; 1356us; 979us; 1356us; 996us; 1356us; 1001us; 1356us; 1007us; 1356us; 1010us; 1356us; 1013us; 1356us; 1019us; 1356us; 1023us; 1356us; 1027us; 1356us; 1031us; 1356us; 1033us; 1356us; 1038us; 1356us; 1040us; 1356us; 1042us; 1356us; 1044us; 1356us; 1046us; 1356us; 1048us; 1356us; 1059us; 1356us; 1067us; 1356us; 1074us; 1356us; 1080us; 1356us; 1082us; 1356us; 1087us; 1356us; 1091us; 1356us; 1094us; 1356us; 1098us; 1356us; 1101us; 1356us; 1104us; 1356us; 1106us; 1356us; 1111us; 1356us; 1113us; 1356us; 1157us; 1356us; 1159us; 1356us; 1163us; 1356us; 1164us; 1356us; 1165us; 1356us; 1166us; 1356us; 1167us; 1356us; 1168us; 1356us; 1169us; 1356us; 1170us; 1356us; 1171us; 1356us; 1172us; 1356us; 1173us; 1356us; 1175us; 1356us; 1176us; 1356us; 1177us; 1356us; 1178us; 1356us; 1179us; 1356us; 1180us; 1356us; 1181us; 1356us; 1182us; 1356us; 1183us; 1356us; 1205us; 1356us; 1227us; 1356us; 1228us; 1356us; 1232us; 1356us; 1234us; 1356us; 1238us; 1356us; 1240us; 1356us; 1244us; 1356us; 1247us; 1356us; 1249us; 1356us; 1251us; 1356us; 1252us; 1356us; 1254us; 1356us; 1255us; 1356us; 1257us; 1356us; 1258us; 1356us; 1260us; 1356us; 1261us; 1356us; 1263us; 1356us; 1264us; 1356us; 1266us; 1356us; 1267us; 1356us; 1273us; 1356us; 1274us; 1356us; 1279us; 1356us; 1281us; 1356us; 1283us; 1356us; 1284us; 1356us; 1285us; 1356us; 1288us; 1356us; 1295us; 1356us; 1296us; 1356us; 1299us; 1356us; 1300us; 1356us; 1313us; 1356us; 1320us; 1356us; 1327us; 1356us; 1334us; 1356us; 1344us; 1356us; 1347us; 1356us; 1349us; 1356us; 1352us; 1356us; 1364us; 1356us; 1371us; 1356us; 1372us; 1356us; 1378us; 1356us; 1384us; 1356us; 1385us; 1356us; 1386us; 1356us; 1402us; 1356us; 1412us; 1356us; 1425us; 1356us; 1426us; 1356us; 1428us; 1356us; 1430us; 1356us; 1434us; 1356us; 1435us; 1356us; 1442us; 1356us; 1457us; 1356us; 1462us; 1356us; 1467us; 1356us; 1492us; 1356us; 1525us; 1356us; 1534us; 1356us; 1539us; 1356us; 1670us; 1356us; 1829us; 1356us; 1833us; 1356us; 148us; 65535us; 6us; 1524us; 31us; 1524us; 105us; 1524us; 107us; 1524us; 226us; 1524us; 240us; 1524us; 262us; 1524us; 316us; 1524us; 320us; 1524us; 325us; 1524us; 407us; 1524us; 412us; 1524us; 447us; 1524us; 463us; 1524us; 494us; 1524us; 700us; 1524us; 706us; 1524us; 755us; 1524us; 759us; 1524us; 769us; 1524us; 952us; 1524us; 957us; 1524us; 971us; 1524us; 973us; 1524us; 976us; 1524us; 979us; 1524us; 996us; 1524us; 1001us; 1524us; 1007us; 1524us; 1010us; 1524us; 1013us; 1524us; 1019us; 1524us; 1023us; 1524us; 1027us; 1524us; 1031us; 1524us; 1033us; 1524us; 1038us; 1524us; 1040us; 1524us; 1042us; 1524us; 1044us; 1524us; 1046us; 1524us; 1048us; 1524us; 1059us; 1524us; 1067us; 1524us; 1074us; 1524us; 1080us; 1524us; 1082us; 1524us; 1087us; 1524us; 1091us; 1524us; 1094us; 1524us; 1098us; 1524us; 1101us; 1524us; 1104us; 1524us; 1106us; 1524us; 1111us; 1524us; 1113us; 1524us; 1157us; 1524us; 1159us; 1524us; 1163us; 1524us; 1164us; 1524us; 1165us; 1524us; 1166us; 1524us; 1167us; 1524us; 1168us; 1524us; 1169us; 1524us; 1170us; 1524us; 1171us; 1524us; 1172us; 1524us; 1173us; 1524us; 1175us; 1524us; 1176us; 1524us; 1177us; 1524us; 1178us; 1524us; 1179us; 1524us; 1180us; 1524us; 1181us; 1524us; 1182us; 1524us; 1183us; 1524us; 1205us; 1524us; 1227us; 1524us; 1228us; 1524us; 1232us; 1524us; 1234us; 1524us; 1238us; 1524us; 1240us; 1524us; 1244us; 1524us; 1247us; 1524us; 1249us; 1524us; 1251us; 1524us; 1252us; 1524us; 1254us; 1524us; 1255us; 1524us; 1257us; 1524us; 1258us; 1524us; 1260us; 1524us; 1261us; 1524us; 1263us; 1524us; 1264us; 1524us; 1266us; 1524us; 1267us; 1524us; 1273us; 1524us; 1274us; 1524us; 1279us; 1524us; 1281us; 1524us; 1283us; 1524us; 1284us; 1524us; 1285us; 1524us; 1288us; 1524us; 1295us; 1524us; 1296us; 1524us; 1299us; 1524us; 1300us; 1524us; 1313us; 1524us; 1319us; 1523us; 1320us; 1524us; 1327us; 1524us; 1334us; 1524us; 1344us; 1524us; 1347us; 1524us; 1349us; 1524us; 1352us; 1524us; 1364us; 1524us; 1371us; 1524us; 1372us; 1524us; 1378us; 1524us; 1384us; 1524us; 1385us; 1524us; 1386us; 1524us; 1402us; 1524us; 1412us; 1524us; 1425us; 1524us; 1426us; 1524us; 1428us; 1524us; 1430us; 1524us; 1434us; 1524us; 1435us; 1524us; 1442us; 1524us; 1457us; 1524us; 1462us; 1524us; 1467us; 1524us; 1492us; 1524us; 1522us; 1523us; 1525us; 1524us; 1534us; 1524us; 1539us; 1524us; 1670us; 1524us; 1829us; 1524us; 1833us; 1524us; 114us; 65535us; 6us; 1018us; 31us; 1018us; 105us; 1018us; 107us; 1018us; 226us; 1018us; 240us; 1018us; 262us; 1018us; 407us; 1018us; 412us; 1018us; 447us; 1018us; 463us; 1018us; 700us; 1018us; 706us; 1018us; 755us; 1018us; 759us; 1018us; 769us; 1018us; 952us; 1018us; 957us; 1018us; 971us; 1018us; 973us; 1018us; 976us; 1018us; 979us; 1018us; 996us; 1018us; 1001us; 1018us; 1007us; 1018us; 1010us; 1018us; 1013us; 1018us; 1019us; 1018us; 1023us; 1018us; 1027us; 1018us; 1031us; 1018us; 1033us; 1018us; 1038us; 1018us; 1040us; 1018us; 1042us; 1018us; 1044us; 1018us; 1046us; 1018us; 1048us; 1018us; 1059us; 1018us; 1067us; 1018us; 1074us; 1018us; 1080us; 1018us; 1082us; 1018us; 1087us; 1018us; 1091us; 1018us; 1094us; 1018us; 1098us; 1018us; 1101us; 1018us; 1104us; 1018us; 1106us; 1018us; 1111us; 1018us; 1113us; 1018us; 1157us; 1018us; 1159us; 1018us; 1163us; 1018us; 1164us; 1018us; 1165us; 1018us; 1166us; 1018us; 1167us; 1018us; 1168us; 1018us; 1169us; 1018us; 1170us; 1018us; 1171us; 1018us; 1172us; 1018us; 1173us; 1018us; 1175us; 1018us; 1176us; 1018us; 1177us; 1018us; 1178us; 1018us; 1179us; 1018us; 1180us; 1018us; 1181us; 1018us; 1182us; 1018us; 1183us; 1018us; 1205us; 1018us; 1227us; 1018us; 1228us; 1018us; 1232us; 1018us; 1234us; 1018us; 1238us; 1018us; 1240us; 1018us; 1244us; 1018us; 1247us; 1018us; 1249us; 1018us; 1313us; 1018us; 1320us; 1018us; 1327us; 1018us; 1334us; 1018us; 1344us; 1018us; 1347us; 1018us; 1349us; 1018us; 1352us; 1018us; 1364us; 1018us; 1371us; 1018us; 1372us; 1018us; 1378us; 1018us; 1384us; 1018us; 1385us; 1018us; 1386us; 1018us; 1402us; 1018us; 1412us; 1018us; 1425us; 1018us; 1426us; 1018us; 1428us; 1018us; 1430us; 1018us; 1434us; 1018us; 1435us; 1018us; 1462us; 1018us; 1467us; 1018us; 1492us; 1018us; 1534us; 1018us; 1539us; 1018us; 1829us; 1018us; 1833us; 1018us; 114us; 65535us; 6us; 1017us; 31us; 1017us; 105us; 1017us; 107us; 1017us; 226us; 1017us; 240us; 1017us; 262us; 1017us; 407us; 1017us; 412us; 1017us; 447us; 1017us; 463us; 1017us; 700us; 1017us; 706us; 1017us; 755us; 1017us; 759us; 1017us; 769us; 1017us; 952us; 1017us; 957us; 1017us; 971us; 1017us; 973us; 1017us; 976us; 1017us; 979us; 1017us; 996us; 1017us; 1001us; 1017us; 1007us; 1017us; 1010us; 1017us; 1013us; 1017us; 1019us; 1017us; 1023us; 1017us; 1027us; 1017us; 1031us; 1017us; 1033us; 1017us; 1038us; 1017us; 1040us; 1017us; 1042us; 1017us; 1044us; 1017us; 1046us; 1017us; 1048us; 1017us; 1059us; 1017us; 1067us; 1017us; 1074us; 1017us; 1080us; 1017us; 1082us; 1017us; 1087us; 1017us; 1091us; 1017us; 1094us; 1017us; 1098us; 1017us; 1101us; 1017us; 1104us; 1017us; 1106us; 1017us; 1111us; 1017us; 1113us; 1017us; 1157us; 1017us; 1159us; 1017us; 1163us; 1017us; 1164us; 1017us; 1165us; 1017us; 1166us; 1017us; 1167us; 1017us; 1168us; 1017us; 1169us; 1017us; 1170us; 1017us; 1171us; 1017us; 1172us; 1017us; 1173us; 1017us; 1175us; 1017us; 1176us; 1017us; 1177us; 1017us; 1178us; 1017us; 1179us; 1017us; 1180us; 1017us; 1181us; 1017us; 1182us; 1017us; 1183us; 1017us; 1205us; 1017us; 1227us; 1017us; 1228us; 1017us; 1232us; 1017us; 1234us; 1017us; 1238us; 1017us; 1240us; 1017us; 1244us; 1017us; 1247us; 1017us; 1249us; 1017us; 1313us; 1017us; 1320us; 1017us; 1327us; 1017us; 1334us; 1017us; 1344us; 1017us; 1347us; 1017us; 1349us; 1017us; 1352us; 1017us; 1364us; 1017us; 1371us; 1017us; 1372us; 1017us; 1378us; 1017us; 1384us; 1017us; 1385us; 1017us; 1386us; 1017us; 1402us; 1017us; 1412us; 1017us; 1425us; 1017us; 1426us; 1017us; 1428us; 1017us; 1430us; 1017us; 1434us; 1017us; 1435us; 1017us; 1462us; 1017us; 1467us; 1017us; 1492us; 1017us; 1534us; 1017us; 1539us; 1017us; 1829us; 1017us; 1833us; 1017us; 3us; 65535us; 819us; 820us; 934us; 935us; 964us; 965us; 5us; 65535us; 102us; 103us; 177us; 178us; 193us; 194us; 433us; 434us; 1559us; 1560us; 3us; 65535us; 405us; 406us; 410us; 411us; 753us; 754us; 9us; 65535us; 102us; 1557us; 142us; 143us; 177us; 1557us; 193us; 1557us; 370us; 371us; 433us; 1557us; 642us; 643us; 1559us; 1557us; 1562us; 1563us; 9us; 65535us; 102us; 1561us; 142us; 1561us; 177us; 1561us; 193us; 1561us; 370us; 1561us; 433us; 1561us; 642us; 1561us; 1559us; 1561us; 1562us; 1561us; 2us; 65535us; 1565us; 1566us; 1568us; 1569us; 11us; 65535us; 102us; 1564us; 142us; 1564us; 177us; 1564us; 193us; 1564us; 370us; 1564us; 433us; 1564us; 642us; 1564us; 1559us; 1564us; 1562us; 1564us; 1565us; 1567us; 1568us; 1567us; 31us; 65535us; 8us; 1588us; 171us; 532us; 420us; 532us; 456us; 457us; 466us; 467us; 527us; 532us; 535us; 1656us; 599us; 600us; 602us; 603us; 681us; 682us; 775us; 776us; 819us; 1555us; 934us; 1555us; 964us; 1555us; 1151us; 1152us; 1153us; 1154us; 1155us; 1156us; 1448us; 1449us; 1451us; 1452us; 1453us; 1656us; 1586us; 1587us; 1614us; 1656us; 1619us; 1620us; 1622us; 1623us; 1633us; 1696us; 1637us; 1696us; 1643us; 1656us; 1654us; 1655us; 1684us; 1696us; 1686us; 1696us; 1697us; 1698us; 1us; 65535us; 8us; 9us; 31us; 65535us; 8us; 1585us; 171us; 1585us; 420us; 1585us; 456us; 1585us; 466us; 1585us; 527us; 1585us; 535us; 1585us; 599us; 1585us; 602us; 1585us; 681us; 1585us; 775us; 1585us; 819us; 1585us; 934us; 1585us; 964us; 1585us; 1151us; 1585us; 1153us; 1585us; 1155us; 1585us; 1448us; 1585us; 1451us; 1585us; 1453us; 1585us; 1586us; 1585us; 1614us; 1585us; 1619us; 1585us; 1622us; 1585us; 1633us; 1585us; 1637us; 1585us; 1643us; 1585us; 1654us; 1585us; 1684us; 1585us; 1686us; 1585us; 1697us; 1585us; 6us; 65535us; 1591us; 1592us; 1593us; 1594us; 1595us; 1596us; 1598us; 1599us; 1600us; 1601us; 1661us; 1662us; 93us; 65535us; 8us; 1606us; 102us; 1606us; 142us; 1606us; 171us; 1606us; 177us; 1606us; 181us; 1606us; 182us; 1605us; 183us; 1606us; 184us; 1605us; 193us; 1606us; 276us; 1606us; 277us; 1605us; 370us; 1606us; 420us; 1606us; 426us; 1606us; 427us; 1605us; 433us; 1606us; 456us; 1606us; 466us; 1606us; 491us; 1606us; 527us; 1606us; 535us; 1606us; 553us; 1606us; 599us; 1606us; 602us; 1606us; 612us; 1606us; 622us; 1606us; 623us; 1605us; 624us; 1605us; 639us; 1606us; 642us; 1606us; 661us; 1606us; 664us; 1606us; 667us; 1606us; 668us; 1605us; 669us; 1605us; 681us; 1606us; 692us; 1606us; 775us; 1606us; 819us; 1606us; 868us; 1606us; 934us; 1606us; 964us; 1606us; 1151us; 1606us; 1153us; 1606us; 1155us; 1606us; 1269us; 1606us; 1270us; 1606us; 1448us; 1606us; 1451us; 1606us; 1453us; 1606us; 1455us; 1606us; 1517us; 1606us; 1518us; 1605us; 1559us; 1606us; 1562us; 1606us; 1565us; 1606us; 1568us; 1606us; 1570us; 1606us; 1571us; 1605us; 1572us; 1606us; 1573us; 1605us; 1576us; 1606us; 1577us; 1605us; 1578us; 1605us; 1579us; 1606us; 1580us; 1605us; 1583us; 1606us; 1584us; 1605us; 1586us; 1606us; 1590us; 1605us; 1591us; 1606us; 1593us; 1606us; 1595us; 1606us; 1597us; 1605us; 1598us; 1606us; 1600us; 1606us; 1609us; 1605us; 1614us; 1606us; 1616us; 1605us; 1619us; 1606us; 1622us; 1606us; 1633us; 1606us; 1637us; 1606us; 1643us; 1606us; 1645us; 1605us; 1650us; 1606us; 1654us; 1606us; 1660us; 1606us; 1661us; 1606us; 1684us; 1606us; 1686us; 1606us; 1697us; 1606us; 93us; 65535us; 8us; 1652us; 102us; 1652us; 142us; 1652us; 171us; 1652us; 177us; 1652us; 181us; 1652us; 182us; 1613us; 183us; 1652us; 184us; 1613us; 193us; 1652us; 276us; 1652us; 277us; 1613us; 370us; 1652us; 420us; 1652us; 426us; 1652us; 427us; 1613us; 433us; 1652us; 456us; 1652us; 466us; 1652us; 491us; 1652us; 527us; 1652us; 535us; 1652us; 553us; 1652us; 599us; 1652us; 602us; 1652us; 612us; 1652us; 622us; 1652us; 623us; 1613us; 624us; 1613us; 639us; 1652us; 642us; 1652us; 661us; 1652us; 664us; 1652us; 667us; 1652us; 668us; 1613us; 669us; 1613us; 681us; 1652us; 692us; 1652us; 775us; 1652us; 819us; 1652us; 868us; 1652us; 934us; 1652us; 964us; 1652us; 1151us; 1652us; 1153us; 1652us; 1155us; 1652us; 1269us; 1652us; 1270us; 1652us; 1448us; 1652us; 1451us; 1652us; 1453us; 1652us; 1455us; 1652us; 1517us; 1652us; 1518us; 1613us; 1559us; 1652us; 1562us; 1652us; 1565us; 1652us; 1568us; 1652us; 1570us; 1652us; 1571us; 1613us; 1572us; 1652us; 1573us; 1613us; 1576us; 1652us; 1577us; 1613us; 1578us; 1613us; 1579us; 1652us; 1580us; 1613us; 1583us; 1652us; 1584us; 1613us; 1586us; 1652us; 1590us; 1613us; 1591us; 1652us; 1593us; 1652us; 1595us; 1652us; 1597us; 1613us; 1598us; 1652us; 1600us; 1652us; 1609us; 1613us; 1614us; 1652us; 1616us; 1617us; 1619us; 1652us; 1622us; 1652us; 1633us; 1652us; 1637us; 1652us; 1643us; 1652us; 1645us; 1646us; 1650us; 1652us; 1654us; 1652us; 1660us; 1652us; 1661us; 1652us; 1684us; 1652us; 1686us; 1652us; 1697us; 1652us; 66us; 65535us; 8us; 1590us; 102us; 1578us; 142us; 1578us; 171us; 1590us; 177us; 1578us; 181us; 182us; 183us; 184us; 193us; 1578us; 276us; 277us; 370us; 1578us; 420us; 1590us; 426us; 427us; 433us; 1578us; 456us; 1590us; 466us; 1590us; 527us; 1590us; 535us; 1590us; 599us; 1590us; 602us; 1590us; 612us; 624us; 622us; 623us; 639us; 669us; 642us; 1578us; 661us; 669us; 664us; 669us; 667us; 668us; 681us; 1590us; 692us; 669us; 775us; 1590us; 819us; 1590us; 934us; 1590us; 964us; 1590us; 1151us; 1590us; 1153us; 1590us; 1155us; 1590us; 1448us; 1590us; 1451us; 1590us; 1453us; 1590us; 1517us; 1518us; 1559us; 1578us; 1562us; 1578us; 1565us; 1578us; 1568us; 1578us; 1570us; 1571us; 1572us; 1573us; 1576us; 1577us; 1579us; 1580us; 1583us; 1584us; 1586us; 1590us; 1591us; 1597us; 1593us; 1597us; 1595us; 1597us; 1598us; 1597us; 1600us; 1597us; 1614us; 1590us; 1619us; 1590us; 1622us; 1590us; 1633us; 1590us; 1637us; 1590us; 1643us; 1590us; 1654us; 1590us; 1660us; 1609us; 1661us; 1597us; 1684us; 1590us; 1686us; 1590us; 1697us; 1590us; 19us; 65535us; 182us; 1610us; 184us; 1610us; 277us; 1610us; 427us; 1610us; 623us; 1610us; 624us; 1610us; 668us; 1610us; 669us; 1610us; 1518us; 1610us; 1571us; 1610us; 1573us; 1610us; 1577us; 1610us; 1578us; 1610us; 1580us; 1610us; 1584us; 1610us; 1590us; 1610us; 1597us; 1610us; 1609us; 1610us; 1611us; 1612us; 4us; 65535us; 535us; 1615us; 1453us; 1615us; 1614us; 1615us; 1643us; 1644us; 2us; 65535us; 1634us; 1635us; 1687us; 1636us; 66us; 65535us; 8us; 1618us; 102us; 1618us; 142us; 1618us; 171us; 1618us; 177us; 1618us; 181us; 1618us; 183us; 1618us; 193us; 1618us; 276us; 1618us; 370us; 1618us; 420us; 1618us; 426us; 1618us; 433us; 1618us; 456us; 1618us; 466us; 1618us; 527us; 1618us; 535us; 1618us; 599us; 1618us; 602us; 1618us; 612us; 1618us; 622us; 1618us; 639us; 1618us; 642us; 1618us; 661us; 1618us; 664us; 1618us; 667us; 1618us; 681us; 1618us; 692us; 1618us; 775us; 1618us; 819us; 1618us; 934us; 1618us; 964us; 1618us; 1151us; 1618us; 1153us; 1618us; 1155us; 1618us; 1448us; 1618us; 1451us; 1618us; 1453us; 1618us; 1517us; 1618us; 1559us; 1618us; 1562us; 1618us; 1565us; 1618us; 1568us; 1618us; 1570us; 1618us; 1572us; 1618us; 1576us; 1618us; 1579us; 1618us; 1583us; 1618us; 1586us; 1618us; 1591us; 1618us; 1593us; 1618us; 1595us; 1618us; 1598us; 1618us; 1600us; 1618us; 1614us; 1618us; 1619us; 1618us; 1622us; 1618us; 1633us; 1618us; 1637us; 1618us; 1643us; 1618us; 1654us; 1618us; 1660us; 1618us; 1661us; 1618us; 1684us; 1618us; 1686us; 1618us; 1697us; 1618us; 4us; 65535us; 491us; 492us; 1269us; 1271us; 1270us; 1272us; 1455us; 1456us; 67us; 65535us; 8us; 1640us; 102us; 1640us; 142us; 1640us; 171us; 1640us; 177us; 1640us; 181us; 1640us; 183us; 1640us; 193us; 1640us; 276us; 1640us; 370us; 1640us; 420us; 1640us; 426us; 1640us; 433us; 1640us; 456us; 1640us; 466us; 1640us; 527us; 1640us; 535us; 1640us; 599us; 1640us; 602us; 1640us; 612us; 1640us; 622us; 1640us; 639us; 1640us; 642us; 1640us; 661us; 1640us; 664us; 1640us; 667us; 1640us; 681us; 1640us; 692us; 1640us; 775us; 1640us; 819us; 1640us; 868us; 869us; 934us; 1640us; 964us; 1640us; 1151us; 1640us; 1153us; 1640us; 1155us; 1640us; 1448us; 1640us; 1451us; 1640us; 1453us; 1640us; 1517us; 1640us; 1559us; 1640us; 1562us; 1640us; 1565us; 1640us; 1568us; 1640us; 1570us; 1640us; 1572us; 1640us; 1576us; 1640us; 1579us; 1640us; 1583us; 1640us; 1586us; 1640us; 1591us; 1640us; 1593us; 1640us; 1595us; 1640us; 1598us; 1640us; 1600us; 1640us; 1614us; 1640us; 1619us; 1640us; 1622us; 1640us; 1633us; 1640us; 1637us; 1640us; 1643us; 1640us; 1654us; 1640us; 1660us; 1640us; 1661us; 1640us; 1684us; 1640us; 1686us; 1640us; 1697us; 1640us; 73us; 65535us; 8us; 1648us; 102us; 1648us; 142us; 1648us; 171us; 1648us; 177us; 1648us; 181us; 1648us; 183us; 1648us; 193us; 1648us; 276us; 1648us; 370us; 1648us; 420us; 1648us; 426us; 1648us; 433us; 1648us; 456us; 1648us; 466us; 1648us; 491us; 1647us; 527us; 1648us; 535us; 1648us; 553us; 1651us; 599us; 1648us; 602us; 1648us; 612us; 1648us; 622us; 1648us; 639us; 1648us; 642us; 1648us; 661us; 1648us; 664us; 1648us; 667us; 1648us; 681us; 1648us; 692us; 1648us; 775us; 1648us; 819us; 1648us; 868us; 1648us; 934us; 1648us; 964us; 1648us; 1151us; 1648us; 1153us; 1648us; 1155us; 1648us; 1269us; 1647us; 1270us; 1647us; 1448us; 1648us; 1451us; 1648us; 1453us; 1648us; 1455us; 1647us; 1517us; 1648us; 1559us; 1648us; 1562us; 1648us; 1565us; 1648us; 1568us; 1648us; 1570us; 1648us; 1572us; 1648us; 1576us; 1648us; 1579us; 1648us; 1583us; 1648us; 1586us; 1648us; 1591us; 1648us; 1593us; 1648us; 1595us; 1648us; 1598us; 1648us; 1600us; 1648us; 1614us; 1648us; 1619us; 1648us; 1622us; 1648us; 1633us; 1648us; 1637us; 1648us; 1643us; 1648us; 1650us; 1651us; 1654us; 1648us; 1660us; 1648us; 1661us; 1648us; 1684us; 1648us; 1686us; 1648us; 1697us; 1648us; 4us; 65535us; 606us; 621us; 619us; 620us; 1606us; 1675us; 1677us; 1678us; 6us; 65535us; 606us; 1681us; 619us; 1681us; 1297us; 1298us; 1606us; 1681us; 1677us; 1681us; 1682us; 1683us; 8us; 65535us; 535us; 1632us; 1453us; 1632us; 1614us; 1632us; 1633us; 1634us; 1637us; 1638us; 1643us; 1632us; 1684us; 1691us; 1686us; 1699us; 2us; 65535us; 1684us; 1685us; 1686us; 1687us; 3us; 65535us; 1637us; 1639us; 1684us; 1700us; 1686us; 1700us; 1us; 65535us; 811us; 812us; 6us; 65535us; 1701us; 1711us; 1708us; 1711us; 1715us; 1711us; 1721us; 1711us; 1722us; 1711us; 1723us; 1711us; 6us; 65535us; 1701us; 1715us; 1708us; 1715us; 1715us; 1715us; 1721us; 1715us; 1722us; 1715us; 1723us; 1715us; 6us; 65535us; 1701us; 1717us; 1708us; 1717us; 1715us; 1716us; 1721us; 1717us; 1722us; 1717us; 1723us; 1717us; 5us; 65535us; 1701us; 1702us; 1708us; 1709us; 1721us; 1718us; 1722us; 1719us; 1723us; 1720us; 108us; 65535us; 8us; 1604us; 102us; 1604us; 142us; 1604us; 171us; 1604us; 177us; 1604us; 181us; 1604us; 182us; 1603us; 183us; 1604us; 184us; 1603us; 193us; 1604us; 276us; 1604us; 277us; 1603us; 370us; 1604us; 420us; 1604us; 426us; 1604us; 427us; 1603us; 433us; 1604us; 456us; 1604us; 466us; 1604us; 491us; 1603us; 527us; 1604us; 535us; 1604us; 553us; 1603us; 561us; 566us; 576us; 577us; 590us; 601us; 594us; 601us; 597us; 598us; 599us; 1604us; 602us; 1604us; 612us; 1604us; 622us; 1604us; 623us; 1603us; 624us; 1603us; 639us; 1604us; 642us; 1604us; 661us; 1604us; 664us; 1604us; 667us; 1604us; 668us; 1603us; 669us; 1603us; 681us; 1604us; 692us; 1604us; 767us; 774us; 771us; 774us; 775us; 1604us; 819us; 1604us; 868us; 1603us; 934us; 1604us; 964us; 1604us; 1151us; 1604us; 1153us; 1604us; 1155us; 1604us; 1269us; 1603us; 1270us; 1603us; 1448us; 1604us; 1451us; 1604us; 1453us; 1604us; 1455us; 1603us; 1517us; 1604us; 1518us; 1603us; 1556us; 601us; 1558us; 601us; 1559us; 1604us; 1562us; 1604us; 1565us; 1604us; 1568us; 1604us; 1570us; 1604us; 1571us; 1603us; 1572us; 1604us; 1573us; 1603us; 1576us; 1604us; 1577us; 1603us; 1578us; 1603us; 1579us; 1604us; 1580us; 1603us; 1583us; 1604us; 1584us; 1603us; 1586us; 1604us; 1590us; 1603us; 1591us; 1604us; 1593us; 1604us; 1595us; 1604us; 1597us; 1603us; 1598us; 1604us; 1600us; 1604us; 1609us; 1603us; 1614us; 1604us; 1616us; 1603us; 1619us; 1604us; 1622us; 1604us; 1633us; 1604us; 1637us; 1604us; 1643us; 1604us; 1645us; 1603us; 1650us; 1603us; 1654us; 1604us; 1660us; 1604us; 1661us; 1604us; 1684us; 1604us; 1686us; 1604us; 1697us; 1604us; 1701us; 1707us; 1708us; 1707us; 1715us; 1707us; 1721us; 1707us; 1722us; 1707us; 1723us; 1707us; 112us; 65535us; 8us; 1726us; 102us; 1726us; 142us; 1726us; 171us; 1726us; 177us; 1726us; 181us; 1726us; 182us; 1726us; 183us; 1726us; 184us; 1726us; 193us; 1726us; 276us; 1726us; 277us; 1726us; 370us; 1726us; 420us; 1726us; 426us; 1726us; 427us; 1726us; 433us; 1726us; 456us; 1726us; 466us; 1726us; 491us; 1726us; 527us; 1726us; 535us; 1726us; 553us; 1726us; 561us; 1726us; 576us; 1726us; 590us; 1726us; 594us; 1726us; 597us; 1726us; 599us; 1726us; 602us; 1726us; 612us; 1726us; 622us; 1726us; 623us; 1726us; 624us; 1726us; 639us; 1726us; 642us; 1726us; 661us; 1726us; 664us; 1726us; 667us; 1726us; 668us; 1726us; 669us; 1726us; 681us; 1726us; 692us; 1726us; 767us; 1726us; 771us; 1726us; 775us; 1726us; 819us; 1726us; 868us; 1726us; 934us; 1726us; 964us; 1726us; 1151us; 1726us; 1153us; 1726us; 1155us; 1726us; 1269us; 1726us; 1270us; 1726us; 1384us; 1406us; 1385us; 1407us; 1386us; 1406us; 1410us; 1411us; 1448us; 1726us; 1451us; 1726us; 1453us; 1726us; 1455us; 1726us; 1517us; 1726us; 1518us; 1726us; 1556us; 1726us; 1558us; 1726us; 1559us; 1726us; 1562us; 1726us; 1565us; 1726us; 1568us; 1726us; 1570us; 1726us; 1571us; 1726us; 1572us; 1726us; 1573us; 1726us; 1576us; 1726us; 1577us; 1726us; 1578us; 1726us; 1579us; 1726us; 1580us; 1726us; 1583us; 1726us; 1584us; 1726us; 1586us; 1726us; 1590us; 1726us; 1591us; 1726us; 1593us; 1726us; 1595us; 1726us; 1597us; 1726us; 1598us; 1726us; 1600us; 1726us; 1609us; 1726us; 1614us; 1726us; 1616us; 1726us; 1619us; 1726us; 1622us; 1726us; 1633us; 1726us; 1637us; 1726us; 1643us; 1726us; 1645us; 1726us; 1650us; 1726us; 1654us; 1726us; 1660us; 1726us; 1661us; 1726us; 1684us; 1726us; 1686us; 1726us; 1697us; 1726us; 1701us; 1726us; 1708us; 1726us; 1715us; 1726us; 1721us; 1726us; 1722us; 1726us; 1723us; 1726us; 343us; 65535us; 6us; 1787us; 8us; 1732us; 31us; 1787us; 51us; 1732us; 54us; 1732us; 89us; 1732us; 99us; 1779us; 102us; 1732us; 105us; 1787us; 107us; 1787us; 111us; 1732us; 142us; 1732us; 171us; 655us; 174us; 1779us; 177us; 1732us; 181us; 1732us; 182us; 1732us; 183us; 1732us; 184us; 1732us; 193us; 1732us; 195us; 1779us; 197us; 1779us; 202us; 1779us; 226us; 1787us; 240us; 1787us; 262us; 1787us; 269us; 1732us; 274us; 1732us; 276us; 1732us; 277us; 1732us; 302us; 331us; 313us; 331us; 318us; 1732us; 322us; 1732us; 370us; 1732us; 404us; 1781us; 407us; 1787us; 409us; 1781us; 412us; 1787us; 420us; 655us; 426us; 1732us; 427us; 1732us; 430us; 1779us; 433us; 1732us; 444us; 1781us; 447us; 1787us; 454us; 455us; 456us; 1732us; 460us; 461us; 463us; 1787us; 466us; 1732us; 469us; 1781us; 472us; 1781us; 475us; 1781us; 477us; 1781us; 491us; 1732us; 499us; 500us; 502us; 503us; 527us; 655us; 535us; 1732us; 553us; 1732us; 561us; 1732us; 563us; 1732us; 599us; 1732us; 602us; 1732us; 612us; 1732us; 622us; 1732us; 623us; 1732us; 624us; 1732us; 636us; 1779us; 639us; 666us; 642us; 1732us; 661us; 666us; 664us; 666us; 667us; 1732us; 668us; 1732us; 669us; 1732us; 679us; 680us; 681us; 1732us; 688us; 691us; 692us; 666us; 694us; 1732us; 700us; 1787us; 706us; 1787us; 717us; 718us; 729us; 1732us; 730us; 731us; 742us; 1732us; 752us; 1781us; 755us; 1787us; 759us; 1787us; 769us; 1787us; 775us; 1732us; 815us; 816us; 819us; 1732us; 821us; 814us; 822us; 814us; 824us; 814us; 842us; 843us; 844us; 1781us; 845us; 1781us; 849us; 1781us; 850us; 1781us; 851us; 1781us; 852us; 1781us; 855us; 857us; 859us; 1781us; 862us; 1781us; 864us; 1781us; 866us; 1781us; 868us; 1732us; 871us; 858us; 875us; 1781us; 877us; 1781us; 879us; 1781us; 884us; 1732us; 887us; 1781us; 890us; 1781us; 893us; 895us; 894us; 895us; 901us; 1781us; 909us; 1781us; 929us; 930us; 931us; 1781us; 934us; 1732us; 936us; 1781us; 937us; 1781us; 939us; 1781us; 940us; 1781us; 941us; 1781us; 942us; 1781us; 945us; 1732us; 948us; 1781us; 950us; 1781us; 952us; 1787us; 957us; 1787us; 964us; 1732us; 971us; 1787us; 973us; 1787us; 976us; 1787us; 979us; 1787us; 995us; 1781us; 996us; 1787us; 1000us; 1781us; 1001us; 1787us; 1007us; 1787us; 1010us; 1787us; 1013us; 1787us; 1019us; 1787us; 1023us; 1787us; 1027us; 1787us; 1031us; 1787us; 1033us; 1787us; 1038us; 1787us; 1040us; 1787us; 1042us; 1787us; 1044us; 1787us; 1046us; 1787us; 1048us; 1787us; 1057us; 1781us; 1059us; 1787us; 1067us; 1787us; 1074us; 1787us; 1080us; 1787us; 1082us; 1787us; 1086us; 1781us; 1087us; 1787us; 1091us; 1787us; 1093us; 1781us; 1094us; 1787us; 1098us; 1787us; 1101us; 1787us; 1104us; 1787us; 1106us; 1787us; 1111us; 1787us; 1113us; 1787us; 1151us; 1732us; 1153us; 1732us; 1155us; 1732us; 1157us; 1787us; 1159us; 1787us; 1163us; 1787us; 1164us; 1787us; 1165us; 1787us; 1166us; 1787us; 1167us; 1787us; 1168us; 1787us; 1169us; 1787us; 1170us; 1787us; 1171us; 1787us; 1172us; 1787us; 1173us; 1787us; 1175us; 1787us; 1176us; 1787us; 1177us; 1787us; 1178us; 1787us; 1179us; 1787us; 1180us; 1787us; 1181us; 1787us; 1182us; 1787us; 1183us; 1787us; 1205us; 1787us; 1208us; 1781us; 1210us; 1781us; 1215us; 1781us; 1222us; 1781us; 1227us; 1787us; 1228us; 1787us; 1232us; 1787us; 1234us; 1787us; 1238us; 1787us; 1240us; 1787us; 1244us; 1787us; 1247us; 1787us; 1249us; 1787us; 1251us; 1787us; 1252us; 1787us; 1254us; 1787us; 1255us; 1787us; 1257us; 1787us; 1258us; 1787us; 1260us; 1787us; 1261us; 1787us; 1263us; 1787us; 1264us; 1787us; 1266us; 1787us; 1267us; 1787us; 1269us; 1732us; 1270us; 1732us; 1279us; 1787us; 1281us; 1787us; 1283us; 1787us; 1284us; 1787us; 1285us; 1787us; 1288us; 1787us; 1295us; 1787us; 1296us; 1787us; 1299us; 1787us; 1300us; 1787us; 1301us; 1779us; 1304us; 1779us; 1306us; 1779us; 1307us; 1779us; 1313us; 1787us; 1320us; 1787us; 1327us; 1787us; 1334us; 1787us; 1344us; 1787us; 1347us; 1787us; 1349us; 1787us; 1352us; 1787us; 1364us; 1787us; 1371us; 1787us; 1372us; 1787us; 1378us; 1787us; 1384us; 1787us; 1385us; 1787us; 1386us; 1787us; 1402us; 1787us; 1412us; 1787us; 1425us; 1787us; 1426us; 1787us; 1428us; 1787us; 1430us; 1787us; 1434us; 1787us; 1435us; 1787us; 1442us; 1787us; 1448us; 1732us; 1451us; 1732us; 1453us; 1732us; 1455us; 1732us; 1462us; 1787us; 1467us; 1787us; 1471us; 1732us; 1475us; 1732us; 1483us; 1732us; 1492us; 1787us; 1517us; 1732us; 1518us; 1732us; 1525us; 1787us; 1532us; 1781us; 1534us; 1787us; 1537us; 1781us; 1539us; 1787us; 1550us; 1781us; 1552us; 1781us; 1559us; 1732us; 1562us; 1732us; 1565us; 1732us; 1568us; 1732us; 1570us; 1732us; 1571us; 1732us; 1572us; 1732us; 1573us; 1732us; 1574us; 1575us; 1576us; 1732us; 1577us; 1732us; 1578us; 1732us; 1579us; 1732us; 1580us; 1732us; 1581us; 1582us; 1583us; 1732us; 1584us; 1732us; 1586us; 1732us; 1590us; 1732us; 1591us; 1732us; 1593us; 1732us; 1595us; 1732us; 1597us; 1732us; 1598us; 1732us; 1600us; 1732us; 1609us; 1732us; 1614us; 1732us; 1616us; 1732us; 1619us; 1732us; 1622us; 1732us; 1633us; 1732us; 1637us; 1732us; 1643us; 1732us; 1645us; 1732us; 1650us; 1732us; 1654us; 1732us; 1660us; 1732us; 1661us; 1732us; 1670us; 1787us; 1676us; 1732us; 1684us; 1732us; 1686us; 1732us; 1697us; 1732us; 1701us; 1732us; 1708us; 1732us; 1715us; 1732us; 1721us; 1732us; 1722us; 1732us; 1723us; 1732us; 1724us; 1725us; 1727us; 1729us; 1728us; 1729us; 1733us; 1734us; 1783us; 1781us; 1826us; 1827us; 1829us; 1787us; 1833us; 1787us; 120us; 65535us; 8us; 1602us; 51us; 52us; 54us; 55us; 89us; 280us; 102us; 1602us; 111us; 278us; 142us; 1602us; 171us; 528us; 177us; 1602us; 181us; 1602us; 182us; 1602us; 183us; 1602us; 184us; 1602us; 193us; 1602us; 269us; 290us; 274us; 275us; 276us; 1602us; 277us; 1602us; 302us; 315us; 313us; 315us; 318us; 319us; 322us; 323us; 370us; 1602us; 420us; 528us; 426us; 1602us; 427us; 1602us; 433us; 1602us; 456us; 1602us; 466us; 1602us; 491us; 1602us; 527us; 528us; 535us; 1602us; 553us; 1602us; 561us; 562us; 563us; 564us; 599us; 1602us; 602us; 1602us; 612us; 1602us; 622us; 1602us; 623us; 1602us; 624us; 1602us; 639us; 1602us; 642us; 1602us; 661us; 1602us; 664us; 1602us; 667us; 1602us; 668us; 1602us; 669us; 1602us; 681us; 1602us; 692us; 1602us; 694us; 695us; 729us; 732us; 742us; 732us; 775us; 1602us; 819us; 1602us; 868us; 1602us; 884us; 947us; 934us; 1602us; 945us; 947us; 964us; 1602us; 1151us; 1602us; 1153us; 1602us; 1155us; 1602us; 1269us; 1602us; 1270us; 1602us; 1448us; 1602us; 1451us; 1602us; 1453us; 1602us; 1455us; 1602us; 1471us; 1488us; 1475us; 1488us; 1483us; 1488us; 1517us; 1602us; 1518us; 1602us; 1559us; 1602us; 1562us; 1602us; 1565us; 1602us; 1568us; 1602us; 1570us; 1602us; 1571us; 1602us; 1572us; 1602us; 1573us; 1602us; 1576us; 1602us; 1577us; 1602us; 1578us; 1602us; 1579us; 1602us; 1580us; 1602us; 1583us; 1602us; 1584us; 1602us; 1586us; 1602us; 1590us; 1602us; 1591us; 1602us; 1593us; 1602us; 1595us; 1602us; 1597us; 1602us; 1598us; 1602us; 1600us; 1602us; 1609us; 1602us; 1614us; 1602us; 1616us; 1602us; 1619us; 1602us; 1622us; 1602us; 1633us; 1602us; 1637us; 1602us; 1643us; 1602us; 1645us; 1602us; 1650us; 1602us; 1654us; 1602us; 1660us; 1602us; 1661us; 1602us; 1676us; 1677us; 1684us; 1602us; 1686us; 1602us; 1697us; 1602us; 1701us; 1706us; 1708us; 1706us; 1715us; 1706us; 1721us; 1706us; 1722us; 1706us; 1723us; 1706us; 199us; 65535us; 6us; 1788us; 31us; 1788us; 99us; 1780us; 105us; 1788us; 107us; 1788us; 174us; 1780us; 195us; 1780us; 197us; 1780us; 202us; 1780us; 226us; 1788us; 240us; 1788us; 262us; 1788us; 404us; 1782us; 407us; 1788us; 409us; 1782us; 412us; 1788us; 430us; 1780us; 444us; 1782us; 447us; 1788us; 463us; 1788us; 469us; 1782us; 472us; 1782us; 475us; 1782us; 477us; 1782us; 636us; 1780us; 700us; 1788us; 706us; 1788us; 752us; 1782us; 755us; 1788us; 759us; 1788us; 769us; 1788us; 844us; 1782us; 845us; 1782us; 849us; 1782us; 850us; 1782us; 851us; 1782us; 852us; 1782us; 859us; 1782us; 862us; 1782us; 864us; 1782us; 866us; 1782us; 871us; 1782us; 875us; 1782us; 877us; 1782us; 879us; 1782us; 887us; 1782us; 890us; 1782us; 901us; 1782us; 909us; 1782us; 931us; 1782us; 936us; 1782us; 937us; 1782us; 939us; 1782us; 940us; 1782us; 941us; 1782us; 942us; 1782us; 948us; 1782us; 950us; 1782us; 952us; 1788us; 957us; 1788us; 971us; 1788us; 973us; 1788us; 976us; 1788us; 979us; 1788us; 995us; 1782us; 996us; 1788us; 1000us; 1782us; 1001us; 1788us; 1007us; 1788us; 1010us; 1788us; 1013us; 1788us; 1019us; 1788us; 1023us; 1788us; 1027us; 1788us; 1031us; 1788us; 1033us; 1788us; 1038us; 1788us; 1040us; 1788us; 1042us; 1788us; 1044us; 1788us; 1046us; 1788us; 1048us; 1788us; 1057us; 1782us; 1059us; 1788us; 1067us; 1788us; 1074us; 1788us; 1080us; 1788us; 1082us; 1788us; 1086us; 1782us; 1087us; 1788us; 1091us; 1788us; 1093us; 1782us; 1094us; 1788us; 1098us; 1788us; 1101us; 1788us; 1104us; 1788us; 1106us; 1788us; 1111us; 1788us; 1113us; 1788us; 1157us; 1788us; 1159us; 1788us; 1163us; 1788us; 1164us; 1788us; 1165us; 1788us; 1166us; 1788us; 1167us; 1788us; 1168us; 1788us; 1169us; 1788us; 1170us; 1788us; 1171us; 1788us; 1172us; 1788us; 1173us; 1788us; 1175us; 1788us; 1176us; 1788us; 1177us; 1788us; 1178us; 1788us; 1179us; 1788us; 1180us; 1788us; 1181us; 1788us; 1182us; 1788us; 1183us; 1788us; 1205us; 1788us; 1208us; 1782us; 1210us; 1782us; 1215us; 1782us; 1222us; 1782us; 1227us; 1788us; 1228us; 1788us; 1232us; 1788us; 1234us; 1788us; 1238us; 1788us; 1240us; 1788us; 1244us; 1788us; 1247us; 1788us; 1249us; 1788us; 1251us; 1788us; 1252us; 1788us; 1254us; 1788us; 1255us; 1788us; 1257us; 1788us; 1258us; 1788us; 1260us; 1788us; 1261us; 1788us; 1263us; 1788us; 1264us; 1788us; 1266us; 1788us; 1267us; 1788us; 1279us; 1788us; 1281us; 1788us; 1283us; 1788us; 1284us; 1788us; 1285us; 1788us; 1288us; 1788us; 1295us; 1788us; 1296us; 1788us; 1299us; 1788us; 1300us; 1788us; 1301us; 1780us; 1304us; 1780us; 1306us; 1780us; 1307us; 1780us; 1313us; 1788us; 1320us; 1788us; 1327us; 1788us; 1334us; 1788us; 1344us; 1788us; 1347us; 1788us; 1349us; 1788us; 1352us; 1788us; 1364us; 1788us; 1371us; 1788us; 1372us; 1788us; 1378us; 1788us; 1384us; 1788us; 1385us; 1788us; 1386us; 1788us; 1402us; 1788us; 1412us; 1788us; 1425us; 1788us; 1426us; 1788us; 1428us; 1788us; 1430us; 1788us; 1434us; 1788us; 1435us; 1788us; 1442us; 1788us; 1462us; 1788us; 1467us; 1788us; 1492us; 1788us; 1525us; 1788us; 1532us; 1782us; 1534us; 1788us; 1537us; 1782us; 1539us; 1788us; 1550us; 1782us; 1552us; 1782us; 1670us; 1788us; 1783us; 1782us; 1829us; 1788us; 1833us; 1788us; 7us; 65535us; 649us; 1737us; 871us; 1737us; 901us; 1737us; 1327us; 1737us; 1385us; 1737us; 1386us; 1737us; 1736us; 1737us; 2us; 65535us; 1743us; 1778us; 1776us; 1777us; 7us; 65535us; 649us; 1742us; 871us; 1742us; 901us; 1742us; 1327us; 1742us; 1385us; 1742us; 1386us; 1742us; 1736us; 1742us; 11us; 65535us; 99us; 1786us; 174us; 1786us; 195us; 1786us; 197us; 1786us; 202us; 1786us; 430us; 1786us; 636us; 1786us; 1301us; 1324us; 1304us; 1324us; 1306us; 1786us; 1307us; 1786us; 49us; 65535us; 404us; 474us; 409us; 474us; 444us; 474us; 469us; 470us; 472us; 473us; 475us; 479us; 477us; 478us; 752us; 474us; 844us; 474us; 845us; 474us; 849us; 474us; 850us; 474us; 851us; 474us; 852us; 474us; 859us; 474us; 862us; 474us; 864us; 474us; 866us; 474us; 871us; 474us; 875us; 474us; 877us; 474us; 879us; 474us; 887us; 474us; 890us; 474us; 901us; 474us; 909us; 474us; 931us; 474us; 936us; 474us; 937us; 474us; 939us; 474us; 940us; 474us; 941us; 474us; 942us; 474us; 948us; 474us; 950us; 474us; 995us; 474us; 1000us; 474us; 1057us; 474us; 1086us; 474us; 1093us; 474us; 1208us; 474us; 1210us; 474us; 1215us; 474us; 1222us; 474us; 1532us; 474us; 1537us; 474us; 1550us; 474us; 1552us; 474us; 1783us; 1784us; 9us; 65535us; 99us; 100us; 174us; 175us; 195us; 201us; 197us; 201us; 202us; 203us; 430us; 431us; 636us; 648us; 1306us; 1308us; 1307us; 1308us; 139us; 65535us; 6us; 1312us; 31us; 1312us; 105us; 1312us; 107us; 1312us; 226us; 1312us; 240us; 1312us; 262us; 1312us; 407us; 1312us; 412us; 1312us; 447us; 1312us; 463us; 1312us; 700us; 1312us; 706us; 1312us; 755us; 1312us; 759us; 1312us; 769us; 1312us; 952us; 1312us; 957us; 1312us; 971us; 1312us; 973us; 1312us; 976us; 1312us; 979us; 1312us; 996us; 1312us; 1001us; 1312us; 1007us; 1312us; 1010us; 1312us; 1013us; 1312us; 1019us; 1312us; 1023us; 1312us; 1027us; 1312us; 1031us; 1312us; 1033us; 1312us; 1038us; 1312us; 1040us; 1312us; 1042us; 1312us; 1044us; 1312us; 1046us; 1312us; 1048us; 1312us; 1059us; 1312us; 1067us; 1312us; 1074us; 1312us; 1080us; 1312us; 1082us; 1312us; 1087us; 1312us; 1091us; 1312us; 1094us; 1312us; 1098us; 1312us; 1101us; 1312us; 1104us; 1312us; 1106us; 1312us; 1111us; 1312us; 1113us; 1312us; 1157us; 1312us; 1159us; 1312us; 1163us; 1312us; 1164us; 1312us; 1165us; 1312us; 1166us; 1312us; 1167us; 1312us; 1168us; 1312us; 1169us; 1312us; 1170us; 1312us; 1171us; 1312us; 1172us; 1312us; 1173us; 1312us; 1175us; 1312us; 1176us; 1312us; 1177us; 1312us; 1178us; 1312us; 1179us; 1312us; 1180us; 1312us; 1181us; 1312us; 1182us; 1312us; 1183us; 1312us; 1205us; 1312us; 1227us; 1312us; 1228us; 1312us; 1232us; 1312us; 1234us; 1312us; 1238us; 1312us; 1240us; 1312us; 1244us; 1312us; 1247us; 1312us; 1249us; 1312us; 1251us; 1312us; 1252us; 1312us; 1254us; 1312us; 1255us; 1312us; 1257us; 1312us; 1258us; 1312us; 1260us; 1312us; 1261us; 1312us; 1263us; 1312us; 1264us; 1312us; 1266us; 1312us; 1267us; 1312us; 1279us; 1312us; 1281us; 1312us; 1283us; 1312us; 1284us; 1312us; 1285us; 1312us; 1288us; 1312us; 1295us; 1312us; 1296us; 1312us; 1299us; 1312us; 1300us; 1312us; 1313us; 1312us; 1320us; 1312us; 1327us; 1312us; 1334us; 1312us; 1344us; 1312us; 1347us; 1312us; 1349us; 1312us; 1352us; 1312us; 1364us; 1312us; 1371us; 1312us; 1372us; 1312us; 1378us; 1312us; 1384us; 1312us; 1385us; 1312us; 1386us; 1312us; 1402us; 1312us; 1412us; 1312us; 1425us; 1312us; 1426us; 1312us; 1428us; 1312us; 1430us; 1312us; 1434us; 1312us; 1435us; 1312us; 1442us; 1312us; 1462us; 1312us; 1467us; 1312us; 1492us; 1312us; 1525us; 1312us; 1534us; 1312us; 1539us; 1312us; 1670us; 1312us; 1829us; 1312us; 1833us; 1312us; 14us; 65535us; 47us; 1792us; 74us; 1792us; 77us; 1792us; 78us; 1794us; 81us; 1792us; 216us; 1792us; 235us; 1792us; 241us; 1792us; 246us; 1792us; 250us; 1792us; 251us; 1792us; 252us; 1792us; 1792us; 1792us; 1794us; 1794us; 12us; 65535us; 47us; 82us; 74us; 82us; 77us; 82us; 81us; 82us; 216us; 253us; 235us; 253us; 241us; 242us; 246us; 248us; 250us; 253us; 251us; 253us; 252us; 253us; 1792us; 1793us; 2us; 65535us; 78us; 79us; 1794us; 1795us; 11us; 65535us; 165us; 1810us; 303us; 313us; 391us; 1810us; 510us; 1810us; 672us; 673us; 853us; 855us; 926us; 950us; 943us; 945us; 968us; 971us; 969us; 971us; 970us; 971us; 4us; 65535us; 210us; 211us; 297us; 298us; 486us; 487us; 489us; 490us; 2us; 65535us; 1509us; 1510us; 1519us; 1520us; 10us; 65535us; 109us; 110us; 424us; 425us; 435us; 436us; 438us; 439us; 440us; 441us; 442us; 443us; 448us; 449us; 516us; 517us; 518us; 519us; 522us; 523us; 2us; 65535us; 60us; 61us; 222us; 223us; 1us; 65535us; 346us; 347us; 21us; 65535us; 71us; 72us; 131us; 132us; 232us; 233us; 305us; 306us; 308us; 309us; 358us; 359us; 630us; 660us; 637us; 638us; 640us; 641us; 643us; 644us; 646us; 647us; 655us; 656us; 658us; 659us; 1003us; 1004us; 1058us; 1109us; 1089us; 1090us; 1096us; 1097us; 1103us; 1104us; 1496us; 1500us; 1497us; 1498us; 1520us; 1521us; 8us; 65535us; 165us; 166us; 303us; 304us; 391us; 392us; 510us; 511us; 672us; 675us; 853us; 854us; 926us; 949us; 943us; 944us; 4us; 65535us; 50us; 51us; 53us; 54us; 696us; 697us; 702us; 703us; 0us; 65535us; 11us; 65535us; 96us; 97us; 172us; 173us; 394us; 403us; 396us; 403us; 401us; 403us; 423us; 409us; 429us; 430us; 514us; 751us; 515us; 409us; 521us; 409us; 748us; 751us; 7us; 65535us; 97us; 98us; 185us; 678us; 188us; 678us; 452us; 453us; 458us; 459us; 676us; 678us; 751us; 752us; 4us; 65535us; 984us; 1074us; 1047us; 1048us; 1058us; 1059us; 1066us; 1067us; 9us; 65535us; 981us; 1056us; 982us; 1063us; 983us; 1071us; 985us; 1078us; 1049us; 1050us; 1052us; 1053us; 1060us; 1061us; 1068us; 1069us; 1075us; 1076us; 2us; 65535us; 269us; 291us; 281us; 291us; 2us; 65535us; 89us; 118us; 111us; 114us; 2us; 65535us; 65us; 89us; 88us; 89us; 267us; 65535us; 6us; 794us; 8us; 794us; 31us; 794us; 40us; 42us; 102us; 794us; 105us; 794us; 107us; 794us; 142us; 794us; 171us; 794us; 177us; 794us; 181us; 794us; 183us; 794us; 193us; 794us; 226us; 794us; 240us; 794us; 262us; 794us; 276us; 794us; 316us; 794us; 320us; 794us; 325us; 794us; 370us; 794us; 404us; 794us; 407us; 794us; 409us; 794us; 412us; 794us; 420us; 794us; 426us; 794us; 433us; 794us; 444us; 794us; 447us; 794us; 456us; 794us; 463us; 794us; 466us; 794us; 491us; 794us; 494us; 794us; 527us; 794us; 535us; 794us; 553us; 554us; 599us; 794us; 602us; 794us; 612us; 794us; 622us; 794us; 639us; 794us; 642us; 794us; 645us; 794us; 657us; 794us; 661us; 794us; 664us; 794us; 667us; 794us; 681us; 794us; 692us; 794us; 700us; 794us; 706us; 794us; 752us; 794us; 755us; 794us; 759us; 794us; 769us; 794us; 775us; 794us; 819us; 794us; 844us; 794us; 845us; 794us; 849us; 794us; 850us; 794us; 851us; 794us; 852us; 794us; 859us; 794us; 862us; 794us; 864us; 794us; 866us; 794us; 868us; 794us; 871us; 794us; 875us; 794us; 877us; 794us; 879us; 794us; 887us; 794us; 890us; 794us; 901us; 794us; 909us; 794us; 931us; 794us; 934us; 794us; 936us; 794us; 937us; 794us; 939us; 794us; 940us; 794us; 941us; 794us; 942us; 794us; 948us; 794us; 950us; 794us; 952us; 794us; 957us; 794us; 964us; 794us; 971us; 794us; 973us; 794us; 976us; 794us; 979us; 794us; 995us; 794us; 996us; 794us; 1000us; 794us; 1001us; 794us; 1007us; 794us; 1010us; 794us; 1013us; 794us; 1019us; 794us; 1023us; 794us; 1027us; 794us; 1031us; 794us; 1033us; 794us; 1038us; 794us; 1040us; 794us; 1042us; 794us; 1044us; 794us; 1046us; 794us; 1048us; 794us; 1057us; 794us; 1059us; 794us; 1067us; 794us; 1074us; 794us; 1080us; 794us; 1082us; 794us; 1086us; 794us; 1087us; 794us; 1091us; 794us; 1093us; 794us; 1094us; 794us; 1098us; 794us; 1101us; 794us; 1104us; 794us; 1106us; 794us; 1111us; 794us; 1113us; 794us; 1151us; 794us; 1153us; 794us; 1155us; 794us; 1157us; 794us; 1159us; 794us; 1163us; 794us; 1164us; 794us; 1165us; 794us; 1166us; 794us; 1167us; 794us; 1168us; 794us; 1169us; 794us; 1170us; 794us; 1171us; 794us; 1172us; 794us; 1173us; 794us; 1175us; 794us; 1176us; 794us; 1177us; 794us; 1178us; 794us; 1179us; 794us; 1180us; 794us; 1181us; 794us; 1182us; 794us; 1183us; 794us; 1205us; 794us; 1208us; 794us; 1210us; 794us; 1215us; 794us; 1222us; 794us; 1227us; 794us; 1228us; 794us; 1232us; 794us; 1234us; 794us; 1238us; 794us; 1240us; 794us; 1244us; 794us; 1247us; 794us; 1249us; 794us; 1251us; 794us; 1252us; 794us; 1254us; 794us; 1255us; 794us; 1257us; 794us; 1258us; 794us; 1260us; 794us; 1261us; 794us; 1263us; 794us; 1264us; 794us; 1266us; 794us; 1267us; 794us; 1269us; 794us; 1270us; 794us; 1273us; 794us; 1274us; 794us; 1279us; 794us; 1281us; 794us; 1283us; 794us; 1284us; 794us; 1285us; 794us; 1288us; 794us; 1295us; 794us; 1296us; 794us; 1299us; 794us; 1300us; 794us; 1313us; 794us; 1320us; 794us; 1327us; 794us; 1334us; 794us; 1344us; 794us; 1347us; 794us; 1349us; 794us; 1352us; 794us; 1364us; 794us; 1371us; 794us; 1372us; 794us; 1378us; 794us; 1384us; 794us; 1385us; 794us; 1386us; 794us; 1402us; 794us; 1412us; 794us; 1425us; 794us; 1426us; 794us; 1428us; 794us; 1430us; 794us; 1434us; 794us; 1435us; 794us; 1439us; 1440us; 1442us; 794us; 1448us; 794us; 1451us; 794us; 1453us; 794us; 1455us; 794us; 1457us; 794us; 1462us; 794us; 1467us; 794us; 1492us; 794us; 1517us; 794us; 1525us; 794us; 1532us; 794us; 1534us; 794us; 1537us; 794us; 1539us; 794us; 1550us; 794us; 1552us; 794us; 1559us; 794us; 1562us; 794us; 1565us; 794us; 1568us; 794us; 1570us; 794us; 1572us; 794us; 1576us; 794us; 1579us; 794us; 1583us; 794us; 1586us; 794us; 1591us; 794us; 1593us; 794us; 1595us; 794us; 1598us; 794us; 1600us; 794us; 1614us; 794us; 1619us; 794us; 1622us; 794us; 1633us; 794us; 1637us; 794us; 1643us; 794us; 1650us; 794us; 1654us; 794us; 1660us; 794us; 1661us; 794us; 1670us; 794us; 1684us; 794us; 1686us; 794us; 1697us; 794us; 1829us; 794us; 1833us; 794us; 2us; 65535us; 1829us; 1830us; 1833us; 1834us; 4us; 65535us; 1829us; 1832us; 1830us; 1831us; 1833us; 1837us; 1834us; 1835us; 146us; 65535us; 6us; 1357us; 31us; 1357us; 105us; 1357us; 107us; 1357us; 226us; 1357us; 240us; 1357us; 262us; 1357us; 316us; 1357us; 320us; 1357us; 325us; 1357us; 407us; 1357us; 412us; 1357us; 447us; 1357us; 463us; 1357us; 494us; 1357us; 700us; 1357us; 706us; 1357us; 755us; 1357us; 759us; 1357us; 769us; 1357us; 952us; 1357us; 957us; 1357us; 971us; 1357us; 973us; 1357us; 976us; 1357us; 979us; 1357us; 996us; 1357us; 1001us; 1357us; 1007us; 1357us; 1010us; 1357us; 1013us; 1357us; 1019us; 1357us; 1023us; 1357us; 1027us; 1357us; 1031us; 1357us; 1033us; 1357us; 1038us; 1357us; 1040us; 1357us; 1042us; 1357us; 1044us; 1357us; 1046us; 1357us; 1048us; 1357us; 1059us; 1357us; 1067us; 1357us; 1074us; 1357us; 1080us; 1357us; 1082us; 1357us; 1087us; 1357us; 1091us; 1357us; 1094us; 1357us; 1098us; 1357us; 1101us; 1357us; 1104us; 1357us; 1106us; 1357us; 1111us; 1357us; 1113us; 1357us; 1157us; 1357us; 1159us; 1357us; 1163us; 1357us; 1164us; 1357us; 1165us; 1357us; 1166us; 1357us; 1167us; 1357us; 1168us; 1357us; 1169us; 1357us; 1170us; 1357us; 1171us; 1357us; 1172us; 1357us; 1173us; 1357us; 1175us; 1357us; 1176us; 1357us; 1177us; 1357us; 1178us; 1357us; 1179us; 1357us; 1180us; 1357us; 1181us; 1357us; 1182us; 1357us; 1183us; 1357us; 1205us; 1357us; 1227us; 1357us; 1228us; 1357us; 1232us; 1357us; 1234us; 1357us; 1238us; 1357us; 1240us; 1357us; 1244us; 1357us; 1247us; 1357us; 1249us; 1357us; 1251us; 1357us; 1252us; 1357us; 1254us; 1357us; 1255us; 1357us; 1257us; 1357us; 1258us; 1357us; 1260us; 1357us; 1261us; 1357us; 1263us; 1357us; 1264us; 1357us; 1266us; 1357us; 1267us; 1357us; 1273us; 1357us; 1274us; 1357us; 1279us; 1357us; 1281us; 1357us; 1283us; 1357us; 1284us; 1357us; 1285us; 1357us; 1288us; 1357us; 1295us; 1357us; 1296us; 1357us; 1299us; 1357us; 1300us; 1357us; 1313us; 1357us; 1320us; 1357us; 1327us; 1357us; 1334us; 1357us; 1344us; 1357us; 1347us; 1357us; 1349us; 1357us; 1352us; 1357us; 1364us; 1357us; 1371us; 1357us; 1372us; 1357us; 1378us; 1357us; 1384us; 1357us; 1385us; 1357us; 1386us; 1357us; 1402us; 1357us; 1412us; 1357us; 1425us; 1357us; 1426us; 1357us; 1428us; 1357us; 1430us; 1357us; 1434us; 1357us; 1435us; 1357us; 1442us; 1357us; 1457us; 1357us; 1462us; 1357us; 1467us; 1357us; 1492us; 1357us; 1525us; 1357us; 1534us; 1357us; 1539us; 1357us; 1670us; 1357us; 1829us; 1357us; 1833us; 1357us; 11us; 65535us; 315us; 316us; 319us; 320us; 324us; 325us; 351us; 352us; 492us; 494us; 718us; 719us; 730us; 734us; 733us; 734us; 1271us; 1273us; 1272us; 1274us; 1456us; 1457us; 5us; 65535us; 100us; 583us; 175us; 583us; 431us; 583us; 562us; 578us; 861us; 583us; 14us; 65535us; 31us; 264us; 64us; 121us; 87us; 121us; 187us; 190us; 226us; 264us; 240us; 264us; 258us; 264us; 274us; 276us; 302us; 329us; 313us; 329us; 335us; 450us; 1440us; 1447us; 1841us; 1843us; 1842us; 1843us; 10us; 65535us; 31us; 49us; 64us; 49us; 87us; 49us; 226us; 49us; 240us; 49us; 258us; 49us; 302us; 327us; 313us; 327us; 1846us; 1848us; 1847us; 1848us; 7us; 65535us; 539us; 540us; 542us; 543us; 885us; 886us; 992us; 1416us; 1412us; 1418us; 1413us; 1414us; 1851us; 1852us; 5us; 65535us; 548us; 549us; 551us; 552us; 993us; 1529us; 1525us; 1531us; 1526us; 1527us; 43us; 65535us; 536us; 537us; 568us; 569us; 610us; 611us; 613us; 614us; 617us; 618us; 650us; 651us; 653us; 654us; 721us; 722us; 805us; 806us; 824us; 827us; 825us; 826us; 829us; 830us; 872us; 873us; 902us; 903us; 905us; 906us; 910us; 911us; 913us; 914us; 990us; 1391us; 991us; 1392us; 1162us; 1321us; 1206us; 1207us; 1328us; 1329us; 1332us; 1333us; 1384us; 1387us; 1385us; 1387us; 1386us; 1387us; 1388us; 1389us; 1401us; 1402us; 1408us; 1409us; 1449us; 1450us; 1453us; 1454us; 1615us; 1616us; 1644us; 1645us; 1655us; 1657us; 1656us; 1657us; 1662us; 1663us; 1673us; 1674us; 1709us; 1710us; 1737us; 1738us; 1739us; 1740us; 1743us; 1744us; 1746us; 1747us; 1856us; 1857us; 26us; 65535us; 70us; 71us; 74us; 75us; 108us; 109us; 112us; 113us; 116us; 117us; 134us; 135us; 152us; 153us; 160us; 161us; 231us; 232us; 235us; 236us; 251us; 288us; 278us; 279us; 282us; 283us; 285us; 286us; 323us; 324us; 361us; 362us; 380us; 382us; 384us; 386us; 506us; 507us; 760us; 761us; 953us; 954us; 958us; 959us; 977us; 978us; 1235us; 1236us; 1241us; 1242us; 1860us; 1861us; 1us; 65535us; 1388us; 1390us; 17us; 65535us; 302us; 311us; 304us; 310us; 491us; 497us; 927us; 1433us; 1057us; 1077us; 1058us; 1065us; 1059us; 1064us; 1060us; 1062us; 1247us; 1248us; 1249us; 1250us; 1430us; 1432us; 1491us; 1495us; 1492us; 1494us; 1679us; 1680us; 1686us; 1690us; 1691us; 1693us; 1733us; 1735us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 2us; 3us; 4us; 5us; 7us; 15us; 20us; 26us; 31us; 36us; 41us; 46us; 70us; 72us; 74us; 76us; 83us; 88us; 90us; 93us; 96us; 99us; 103us; 110us; 120us; 130us; 140us; 143us; 145us; 148us; 151us; 155us; 157us; 160us; 163us; 166us; 170us; 179us; 188us; 200us; 204us; 207us; 210us; 213us; 219us; 221us; 223us; 226us; 229us; 232us; 236us; 242us; 252us; 263us; 274us; 290us; 315us; 317us; 319us; 322us; 324us; 406us; 525us; 644us; 646us; 649us; 652us; 657us; 664us; 667us; 671us; 674us; 678us; 682us; 686us; 690us; 701us; 712us; 714us; 717us; 721us; 725us; 728us; 739us; 743us; 746us; 748us; 793us; 804us; 871us; 884us; 886us; 891us; 894us; 897us; 900us; 903us; 907us; 910us; 915us; 920us; 923us; 929us; 936us; 1004us; 1073us; 1075us; 1081us; 1091us; 1093us; 1095us; 1099us; 1105us; 1107us; 1109us; 1114us; 1118us; 1120us; 1124us; 1128us; 1133us; 1135us; 1139us; 1145us; 1149us; 1153us; 1155us; 1159us; 1163us; 1168us; 1173us; 1177us; 1181us; 1185us; 1189us; 1194us; 1201us; 1208us; 1210us; 1212us; 1331us; 1339us; 1458us; 1576us; 1580us; 1586us; 1705us; 1707us; 1709us; 1713us; 1716us; 1718us; 1723us; 1726us; 1732us; 1735us; 1737us; 1740us; 1742us; 1744us; 1746us; 1749us; 2015us; 2017us; 2022us; 2026us; 2219us; 2223us; 2227us; 2230us; 2232us; 2246us; 2260us; 2274us; 2277us; 2280us; 2316us; 2320us; 2329us; 2374us; 2377us; 2400us; 2423us; 2446us; 2449us; 2452us; 2456us; 2482us; 2489us; 2495us; 2548us; 2550us; 2608us; 2710us; 2715us; 2830us; 2832us; 2836us; 2841us; 2848us; 2855us; 2857us; 2859us; 2862us; 2865us; 2867us; 2982us; 3111us; 3241us; 3246us; 3386us; 3389us; 3392us; 3395us; 3400us; 3547us; 3694us; 3885us; 4032us; 4179us; 4183us; 4187us; 4189us; 4336us; 4338us; 4341us; 4345us; 4351us; 4353us; 4355us; 4357us; 4359us; 4363us; 4365us; 4370us; 4372us; 4374us; 4376us; 4379us; 4386us; 4393us; 4397us; 4403us; 4407us; 4409us; 4411us; 4413us; 4416us; 4418us; 4423us; 4429us; 4576us; 4725us; 4840us; 4955us; 4959us; 4965us; 4969us; 4979us; 4989us; 4992us; 5004us; 5036us; 5038us; 5070us; 5077us; 5171us; 5265us; 5332us; 5352us; 5357us; 5360us; 5427us; 5432us; 5500us; 5574us; 5579us; 5586us; 5595us; 5598us; 5602us; 5604us; 5611us; 5618us; 5625us; 5631us; 5740us; 5853us; 6197us; 6318us; 6518us; 6526us; 6529us; 6537us; 6549us; 6599us; 6609us; 6749us; 6764us; 6777us; 6780us; 6792us; 6797us; 6800us; 6811us; 6814us; 6816us; 6838us; 6847us; 6852us; 6853us; 6865us; 6873us; 6878us; 6888us; 6891us; 6894us; 6897us; 7165us; 7168us; 7173us; 7320us; 7332us; 7338us; 7353us; 7364us; 7372us; 7378us; 7422us; 7449us; 7451us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 7us; 1us; 8us; 1us; 9us; 1us; 10us; 2us; 11us; 14us; 1us; 11us; 2us; 12us; 15us; 1us; 12us; 2us; 13us; 16us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 16us; 1us; 16us; 2us; 17us; 18us; 1us; 18us; 7us; 19us; 136us; 137us; 138us; 139us; 140us; 141us; 7us; 19us; 136us; 137us; 138us; 139us; 140us; 141us; 48us; 19us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 1us; 20us; 2us; 21us; 22us; 1us; 22us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 25us; 2us; 25us; 27us; 1us; 27us; 1us; 28us; 2us; 29us; 30us; 1us; 29us; 1us; 30us; 1us; 30us; 3us; 31us; 46us; 49us; 1us; 31us; 1us; 32us; 1us; 32us; 1us; 32us; 3us; 32us; 954us; 955us; 1us; 33us; 1us; 33us; 3us; 33us; 954us; 955us; 2us; 34us; 35us; 1us; 35us; 2us; 36us; 37us; 1us; 36us; 1us; 38us; 1us; 38us; 1us; 38us; 6us; 39us; 53us; 54us; 55us; 56us; 58us; 6us; 39us; 53us; 54us; 55us; 56us; 58us; 3us; 39us; 53us; 54us; 1us; 39us; 1us; 40us; 1us; 41us; 3us; 42us; 43us; 44us; 2us; 42us; 43us; 1us; 42us; 1us; 42us; 1us; 43us; 3us; 44us; 46us; 49us; 1us; 44us; 1us; 45us; 2us; 46us; 49us; 2us; 48us; 50us; 2us; 48us; 50us; 1us; 48us; 1us; 49us; 1us; 49us; 1us; 49us; 1us; 51us; 1us; 52us; 5us; 53us; 54us; 55us; 56us; 58us; 5us; 53us; 54us; 55us; 56us; 58us; 2us; 53us; 54us; 2us; 53us; 54us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 2us; 60us; 61us; 48us; 60us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 1us; 61us; 48us; 61us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 1us; 61us; 1us; 61us; 3us; 62us; 63us; 146us; 1us; 62us; 1us; 62us; 1us; 63us; 1us; 63us; 1us; 63us; 1us; 63us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 65us; 1us; 65us; 2us; 66us; 67us; 1us; 66us; 1us; 66us; 2us; 68us; 69us; 1us; 68us; 1us; 68us; 1us; 69us; 3us; 70us; 79us; 80us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 71us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 74us; 1us; 74us; 1us; 74us; 1us; 75us; 3us; 76us; 77us; 78us; 2us; 76us; 77us; 1us; 76us; 1us; 77us; 1us; 78us; 1us; 78us; 2us; 79us; 80us; 2us; 79us; 80us; 1us; 79us; 1us; 80us; 2us; 81us; 82us; 2us; 81us; 82us; 1us; 81us; 1us; 82us; 2us; 83us; 84us; 2us; 83us; 84us; 1us; 83us; 1us; 84us; 1us; 85us; 1us; 86us; 1us; 88us; 1us; 88us; 1us; 88us; 7us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 12us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 268us; 269us; 270us; 271us; 272us; 7us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 12us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 268us; 269us; 270us; 271us; 272us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 90us; 4us; 90us; 878us; 879us; 880us; 1us; 91us; 4us; 91us; 878us; 879us; 880us; 1us; 92us; 1us; 92us; 3us; 93us; 94us; 176us; 1us; 93us; 1us; 93us; 1us; 94us; 1us; 94us; 1us; 95us; 1us; 95us; 1us; 95us; 1us; 97us; 1us; 97us; 2us; 98us; 99us; 2us; 98us; 99us; 1us; 98us; 1us; 99us; 2us; 100us; 101us; 1us; 101us; 1us; 101us; 1us; 102us; 2us; 103us; 104us; 1us; 104us; 1us; 105us; 1us; 105us; 1us; 106us; 1us; 106us; 1us; 106us; 2us; 108us; 109us; 1us; 108us; 1us; 109us; 1us; 109us; 2us; 110us; 133us; 1us; 110us; 2us; 111us; 112us; 1us; 112us; 2us; 113us; 114us; 1us; 113us; 1us; 115us; 1us; 115us; 1us; 115us; 11us; 116us; 124us; 125us; 126us; 128us; 136us; 137us; 138us; 139us; 140us; 141us; 10us; 116us; 124us; 125us; 126us; 136us; 137us; 138us; 139us; 140us; 141us; 2us; 116us; 141us; 1us; 116us; 1us; 117us; 3us; 118us; 119us; 120us; 2us; 118us; 119us; 1us; 118us; 1us; 118us; 1us; 119us; 2us; 120us; 133us; 1us; 120us; 1us; 121us; 1us; 122us; 10us; 124us; 125us; 126us; 128us; 136us; 137us; 138us; 139us; 140us; 141us; 9us; 124us; 125us; 126us; 136us; 137us; 138us; 139us; 140us; 141us; 50us; 124us; 125us; 126us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 2us; 124us; 125us; 1us; 124us; 1us; 127us; 1us; 128us; 4us; 129us; 130us; 131us; 132us; 1us; 129us; 2us; 130us; 132us; 1us; 130us; 1us; 133us; 2us; 133us; 152us; 2us; 133us; 157us; 1us; 133us; 1us; 133us; 1us; 134us; 1us; 135us; 6us; 136us; 137us; 138us; 139us; 140us; 141us; 6us; 136us; 137us; 138us; 139us; 140us; 141us; 1us; 136us; 3us; 136us; 525us; 526us; 1us; 137us; 5us; 137us; 527us; 528us; 529us; 530us; 1us; 138us; 1us; 139us; 1us; 139us; 1us; 139us; 1us; 140us; 1us; 141us; 1us; 141us; 1us; 141us; 2us; 142us; 159us; 1us; 142us; 1us; 143us; 2us; 144us; 145us; 3us; 144us; 954us; 955us; 1us; 145us; 4us; 145us; 878us; 879us; 880us; 3us; 146us; 954us; 955us; 1us; 146us; 3us; 147us; 954us; 955us; 5us; 148us; 149us; 150us; 151us; 152us; 2us; 148us; 149us; 1us; 148us; 1us; 149us; 2us; 150us; 151us; 1us; 150us; 1us; 151us; 1us; 152us; 1us; 153us; 3us; 154us; 954us; 955us; 3us; 155us; 156us; 157us; 2us; 155us; 156us; 1us; 155us; 1us; 156us; 1us; 157us; 1us; 158us; 1us; 158us; 1us; 158us; 1us; 159us; 2us; 161us; 162us; 1us; 162us; 4us; 163us; 164us; 165us; 166us; 3us; 163us; 165us; 168us; 2us; 163us; 165us; 1us; 163us; 1us; 163us; 2us; 164us; 520us; 1us; 164us; 1us; 164us; 1us; 165us; 1us; 166us; 1us; 167us; 2us; 168us; 1025us; 1us; 168us; 3us; 169us; 954us; 955us; 1us; 169us; 1us; 169us; 2us; 170us; 171us; 3us; 170us; 954us; 955us; 1us; 170us; 1us; 170us; 1us; 171us; 3us; 171us; 954us; 955us; 1us; 171us; 1us; 171us; 1us; 171us; 1us; 172us; 1us; 172us; 1us; 173us; 1us; 173us; 2us; 174us; 953us; 1us; 174us; 1us; 175us; 1us; 175us; 4us; 176us; 217us; 223us; 226us; 1us; 176us; 1us; 177us; 1us; 178us; 1us; 179us; 1us; 180us; 1us; 180us; 1us; 180us; 1us; 181us; 1us; 181us; 1us; 181us; 4us; 183us; 184us; 185us; 186us; 1us; 184us; 1us; 184us; 1us; 185us; 1us; 186us; 1us; 186us; 1us; 186us; 1us; 186us; 1us; 186us; 1us; 186us; 1us; 186us; 4us; 187us; 188us; 197us; 198us; 2us; 187us; 188us; 2us; 187us; 188us; 2us; 187us; 188us; 2us; 187us; 188us; 1us; 187us; 1us; 187us; 1us; 188us; 1us; 189us; 1us; 189us; 1us; 190us; 1us; 191us; 1us; 192us; 1us; 192us; 1us; 192us; 1us; 193us; 3us; 194us; 195us; 196us; 2us; 194us; 195us; 1us; 194us; 1us; 195us; 2us; 196us; 203us; 1us; 196us; 2us; 197us; 198us; 2us; 197us; 198us; 1us; 197us; 1us; 198us; 2us; 199us; 200us; 2us; 199us; 200us; 1us; 199us; 1us; 200us; 1us; 201us; 1us; 202us; 1us; 203us; 1us; 203us; 1us; 205us; 1us; 205us; 1us; 205us; 1us; 206us; 1us; 206us; 2us; 207us; 208us; 2us; 207us; 208us; 1us; 207us; 1us; 208us; 2us; 209us; 210us; 1us; 210us; 1us; 210us; 1us; 211us; 1us; 211us; 1us; 211us; 1us; 211us; 1us; 211us; 1us; 211us; 2us; 212us; 213us; 2us; 212us; 213us; 2us; 212us; 213us; 1us; 212us; 1us; 212us; 1us; 213us; 2us; 214us; 215us; 1us; 215us; 11us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 223us; 224us; 225us; 226us; 16us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 223us; 224us; 225us; 226us; 268us; 269us; 270us; 271us; 272us; 11us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 223us; 224us; 225us; 226us; 16us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 223us; 224us; 225us; 226us; 268us; 269us; 270us; 271us; 272us; 1us; 216us; 1us; 217us; 2us; 218us; 224us; 1us; 218us; 1us; 218us; 1us; 219us; 4us; 219us; 878us; 879us; 880us; 1us; 219us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 221us; 1us; 222us; 1us; 222us; 1us; 223us; 1us; 223us; 1us; 224us; 1us; 224us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 226us; 1us; 226us; 1us; 227us; 1us; 227us; 1us; 227us; 1us; 227us; 1us; 227us; 1us; 227us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 230us; 1us; 230us; 2us; 231us; 469us; 1us; 231us; 1us; 231us; 1us; 232us; 1us; 232us; 1us; 232us; 1us; 233us; 2us; 234us; 235us; 1us; 234us; 1us; 234us; 1us; 234us; 1us; 235us; 1us; 237us; 1us; 238us; 1us; 239us; 1us; 240us; 1us; 241us; 1us; 243us; 1us; 243us; 1us; 243us; 1us; 245us; 1us; 245us; 1us; 245us; 3us; 247us; 248us; 249us; 2us; 247us; 248us; 1us; 247us; 1us; 248us; 1us; 248us; 1us; 248us; 1us; 249us; 1us; 250us; 1us; 252us; 1us; 252us; 1us; 253us; 2us; 255us; 256us; 1us; 255us; 1us; 256us; 2us; 257us; 258us; 2us; 257us; 258us; 1us; 257us; 1us; 258us; 1us; 259us; 2us; 260us; 261us; 2us; 260us; 261us; 1us; 260us; 4us; 262us; 263us; 264us; 265us; 5us; 262us; 263us; 264us; 265us; 384us; 3us; 262us; 263us; 264us; 1us; 262us; 1us; 262us; 1us; 263us; 1us; 263us; 1us; 264us; 1us; 265us; 1us; 265us; 1us; 265us; 1us; 266us; 1us; 267us; 5us; 268us; 269us; 270us; 271us; 272us; 5us; 268us; 269us; 270us; 271us; 272us; 4us; 268us; 874us; 954us; 955us; 1us; 268us; 1us; 268us; 1us; 268us; 1us; 269us; 1us; 270us; 1us; 271us; 5us; 272us; 881us; 902us; 903us; 914us; 1us; 272us; 1us; 272us; 3us; 273us; 274us; 275us; 2us; 273us; 274us; 1us; 273us; 1us; 274us; 1us; 275us; 1us; 275us; 6us; 276us; 904us; 905us; 906us; 907us; 908us; 1us; 276us; 1us; 277us; 3us; 278us; 279us; 280us; 2us; 278us; 279us; 1us; 278us; 1us; 279us; 1us; 280us; 1us; 280us; 2us; 281us; 899us; 2us; 281us; 415us; 1us; 281us; 1us; 282us; 1us; 283us; 1us; 284us; 1us; 285us; 1us; 286us; 3us; 287us; 288us; 289us; 4us; 287us; 289us; 954us; 955us; 1us; 288us; 3us; 288us; 954us; 955us; 1us; 289us; 1us; 290us; 1us; 291us; 2us; 291us; 292us; 1us; 291us; 2us; 292us; 295us; 3us; 292us; 296us; 297us; 1us; 292us; 2us; 292us; 296us; 1us; 292us; 1us; 293us; 1us; 294us; 1us; 294us; 1us; 295us; 1us; 295us; 1us; 295us; 1us; 295us; 1us; 296us; 1us; 299us; 1us; 299us; 1us; 299us; 1us; 299us; 1us; 299us; 1us; 300us; 2us; 302us; 452us; 1us; 305us; 2us; 305us; 306us; 2us; 306us; 847us; 2us; 306us; 849us; 1us; 306us; 1us; 306us; 1us; 307us; 1us; 308us; 1us; 308us; 1us; 308us; 1us; 308us; 8us; 309us; 310us; 311us; 312us; 313us; 315us; 316us; 317us; 1us; 309us; 1us; 309us; 7us; 310us; 311us; 312us; 313us; 315us; 316us; 317us; 1us; 310us; 3us; 311us; 316us; 317us; 1us; 311us; 1us; 312us; 1us; 313us; 1us; 313us; 1us; 313us; 1us; 314us; 2us; 314us; 318us; 1us; 314us; 1us; 314us; 1us; 314us; 1us; 314us; 1us; 314us; 1us; 315us; 1us; 315us; 1us; 316us; 1us; 318us; 4us; 318us; 878us; 879us; 880us; 4us; 319us; 878us; 879us; 880us; 1us; 320us; 1us; 320us; 1us; 321us; 1us; 321us; 1us; 321us; 2us; 322us; 335us; 1us; 323us; 2us; 324us; 325us; 1us; 324us; 1us; 324us; 4us; 326us; 327us; 328us; 329us; 4us; 326us; 327us; 328us; 329us; 4us; 326us; 327us; 328us; 329us; 1us; 326us; 1us; 327us; 1us; 327us; 1us; 327us; 1us; 328us; 1us; 328us; 1us; 328us; 1us; 329us; 1us; 329us; 1us; 329us; 1us; 330us; 6us; 331us; 332us; 956us; 957us; 959us; 960us; 1us; 331us; 1us; 331us; 1us; 332us; 1us; 332us; 1us; 332us; 5us; 333us; 334us; 336us; 337us; 953us; 1us; 333us; 2us; 334us; 337us; 2us; 334us; 337us; 2us; 334us; 337us; 1us; 335us; 1us; 336us; 1us; 336us; 2us; 338us; 339us; 1us; 338us; 1us; 338us; 2us; 340us; 953us; 1us; 340us; 4us; 340us; 878us; 879us; 880us; 4us; 341us; 878us; 879us; 880us; 1us; 342us; 1us; 343us; 2us; 344us; 345us; 2us; 344us; 1025us; 1us; 344us; 1us; 345us; 1us; 346us; 1us; 346us; 1us; 347us; 1us; 347us; 1us; 347us; 1us; 347us; 1us; 347us; 1us; 348us; 1us; 348us; 1us; 349us; 1us; 350us; 1us; 350us; 1us; 350us; 1us; 350us; 1us; 350us; 2us; 351us; 352us; 1us; 352us; 1us; 352us; 1us; 354us; 3us; 354us; 954us; 955us; 1us; 355us; 1us; 355us; 1us; 355us; 1us; 356us; 1us; 357us; 1us; 357us; 1us; 358us; 1us; 358us; 1us; 358us; 1us; 358us; 1us; 359us; 1us; 359us; 1us; 359us; 1us; 360us; 1us; 361us; 1us; 362us; 1us; 363us; 1us; 364us; 1us; 365us; 1us; 366us; 1us; 366us; 1us; 366us; 1us; 366us; 1us; 366us; 1us; 366us; 1us; 366us; 1us; 366us; 2us; 367us; 370us; 2us; 368us; 371us; 1us; 370us; 1us; 370us; 1us; 371us; 1us; 371us; 2us; 372us; 373us; 5us; 372us; 373us; 375us; 376us; 377us; 1us; 373us; 3us; 374us; 954us; 955us; 4us; 375us; 376us; 377us; 379us; 1us; 375us; 1us; 375us; 1us; 375us; 1us; 376us; 1us; 377us; 1us; 378us; 2us; 378us; 380us; 1us; 378us; 2us; 379us; 380us; 1us; 381us; 1us; 381us; 1us; 382us; 1us; 382us; 1us; 382us; 1us; 384us; 1us; 384us; 1us; 385us; 3us; 386us; 387us; 388us; 3us; 386us; 387us; 388us; 3us; 386us; 387us; 388us; 3us; 386us; 387us; 388us; 2us; 386us; 387us; 1us; 386us; 1us; 387us; 1us; 388us; 2us; 389us; 390us; 2us; 389us; 390us; 1us; 389us; 1us; 390us; 1us; 391us; 1us; 392us; 2us; 392us; 393us; 1us; 393us; 1us; 395us; 2us; 395us; 396us; 1us; 395us; 1us; 395us; 1us; 396us; 1us; 396us; 1us; 397us; 2us; 398us; 399us; 1us; 398us; 1us; 398us; 1us; 399us; 1us; 400us; 1us; 401us; 1us; 402us; 1us; 403us; 1us; 404us; 1us; 405us; 1us; 406us; 1us; 407us; 1us; 408us; 1us; 409us; 1us; 410us; 1us; 411us; 1us; 412us; 2us; 412us; 465us; 1us; 413us; 1us; 414us; 1us; 415us; 1us; 416us; 2us; 417us; 419us; 1us; 417us; 1us; 417us; 2us; 418us; 420us; 2us; 418us; 420us; 1us; 418us; 1us; 418us; 1us; 421us; 1us; 422us; 1us; 422us; 1us; 422us; 1us; 423us; 1us; 424us; 1us; 424us; 2us; 425us; 426us; 1us; 426us; 1us; 426us; 6us; 427us; 439us; 440us; 441us; 446us; 448us; 1us; 428us; 1us; 429us; 1us; 429us; 2us; 430us; 431us; 3us; 430us; 432us; 433us; 1us; 430us; 1us; 430us; 1us; 431us; 1us; 433us; 1us; 433us; 5us; 434us; 435us; 436us; 437us; 438us; 2us; 434us; 436us; 1us; 434us; 1us; 435us; 1us; 436us; 2us; 437us; 520us; 1us; 437us; 1us; 438us; 6us; 439us; 440us; 440us; 441us; 446us; 448us; 6us; 439us; 440us; 441us; 441us; 446us; 448us; 6us; 439us; 440us; 441us; 445us; 446us; 448us; 6us; 439us; 440us; 441us; 446us; 446us; 448us; 6us; 439us; 440us; 441us; 446us; 447us; 448us; 6us; 439us; 440us; 441us; 446us; 448us; 448us; 6us; 439us; 440us; 441us; 446us; 448us; 522us; 6us; 439us; 440us; 441us; 446us; 448us; 523us; 6us; 439us; 440us; 441us; 446us; 448us; 574us; 7us; 439us; 440us; 441us; 446us; 448us; 575us; 576us; 1us; 439us; 1us; 439us; 1us; 440us; 1us; 441us; 2us; 442us; 445us; 2us; 443us; 447us; 1us; 444us; 1us; 445us; 1us; 446us; 1us; 447us; 1us; 448us; 2us; 449us; 450us; 1us; 449us; 2us; 450us; 1025us; 1us; 450us; 1us; 451us; 4us; 451us; 992us; 994us; 995us; 1us; 451us; 7us; 451us; 486us; 487us; 490us; 492us; 495us; 497us; 5us; 452us; 453us; 454us; 455us; 471us; 3us; 453us; 454us; 455us; 1us; 453us; 1us; 454us; 1us; 454us; 1us; 455us; 1us; 455us; 1us; 456us; 1us; 456us; 1us; 457us; 9us; 458us; 476us; 477us; 478us; 479us; 956us; 957us; 959us; 960us; 1us; 458us; 1us; 458us; 1us; 459us; 4us; 460us; 461us; 462us; 463us; 1us; 460us; 1us; 461us; 1us; 461us; 1us; 462us; 1us; 462us; 1us; 464us; 1us; 465us; 1us; 465us; 1us; 466us; 1us; 466us; 1us; 466us; 1us; 467us; 1us; 467us; 1us; 467us; 1us; 468us; 1us; 468us; 1us; 468us; 1us; 470us; 2us; 470us; 977us; 1us; 470us; 1us; 471us; 1us; 472us; 1us; 473us; 1us; 474us; 1us; 475us; 8us; 476us; 477us; 478us; 479us; 956us; 957us; 959us; 960us; 2us; 476us; 477us; 1us; 476us; 1us; 477us; 3us; 478us; 520us; 957us; 2us; 478us; 957us; 1us; 479us; 4us; 480us; 481us; 482us; 483us; 4us; 480us; 481us; 482us; 483us; 4us; 480us; 481us; 488us; 494us; 1us; 480us; 1us; 481us; 2us; 482us; 520us; 1us; 482us; 1us; 483us; 7us; 484us; 486us; 487us; 490us; 492us; 495us; 497us; 7us; 486us; 487us; 487us; 490us; 492us; 495us; 497us; 7us; 486us; 487us; 490us; 491us; 492us; 495us; 497us; 7us; 486us; 487us; 490us; 492us; 492us; 495us; 497us; 7us; 486us; 487us; 490us; 492us; 494us; 495us; 497us; 7us; 486us; 487us; 490us; 492us; 495us; 495us; 497us; 7us; 486us; 487us; 490us; 492us; 495us; 496us; 497us; 6us; 486us; 487us; 490us; 492us; 495us; 497us; 7us; 486us; 487us; 490us; 492us; 495us; 497us; 497us; 7us; 486us; 487us; 490us; 492us; 495us; 497us; 500us; 8us; 486us; 487us; 490us; 492us; 495us; 497us; 502us; 503us; 14us; 486us; 487us; 490us; 492us; 495us; 497us; 568us; 569us; 771us; 772us; 773us; 774us; 775us; 776us; 7us; 486us; 487us; 490us; 492us; 495us; 497us; 639us; 1us; 486us; 1us; 486us; 1us; 487us; 2us; 488us; 494us; 2us; 489us; 496us; 1us; 490us; 1us; 490us; 1us; 491us; 1us; 492us; 1us; 493us; 1us; 494us; 1us; 495us; 1us; 496us; 1us; 497us; 2us; 498us; 499us; 1us; 498us; 2us; 499us; 1025us; 1us; 499us; 3us; 500us; 954us; 955us; 1us; 500us; 1us; 502us; 2us; 503us; 1025us; 1us; 503us; 2us; 504us; 505us; 2us; 504us; 505us; 1us; 504us; 1us; 505us; 1us; 506us; 1us; 507us; 1us; 507us; 1us; 507us; 48us; 508us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 2us; 509us; 510us; 1us; 509us; 2us; 511us; 512us; 1us; 511us; 1us; 511us; 1us; 513us; 1us; 513us; 52us; 514us; 515us; 516us; 517us; 518us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 53us; 514us; 515us; 516us; 517us; 518us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 714us; 55us; 514us; 515us; 516us; 517us; 518us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 767us; 768us; 769us; 2us; 514us; 515us; 1us; 514us; 1us; 517us; 1us; 517us; 1us; 518us; 1us; 518us; 1us; 518us; 1us; 518us; 5us; 519us; 527us; 528us; 529us; 530us; 1us; 520us; 2us; 520us; 555us; 2us; 520us; 558us; 2us; 520us; 563us; 2us; 520us; 566us; 2us; 520us; 568us; 2us; 520us; 690us; 2us; 520us; 705us; 2us; 520us; 733us; 2us; 520us; 737us; 2us; 520us; 742us; 3us; 520us; 742us; 957us; 2us; 520us; 757us; 2us; 520us; 833us; 1us; 521us; 1us; 522us; 1us; 522us; 1us; 522us; 1us; 522us; 1us; 522us; 1us; 523us; 1us; 523us; 1us; 523us; 1us; 523us; 1us; 523us; 1us; 523us; 2us; 525us; 526us; 2us; 525us; 526us; 1us; 525us; 1us; 526us; 4us; 527us; 528us; 529us; 530us; 1us; 527us; 1us; 528us; 2us; 529us; 530us; 1us; 529us; 1us; 530us; 1us; 531us; 1us; 532us; 1us; 533us; 2us; 534us; 535us; 2us; 534us; 535us; 1us; 534us; 1us; 535us; 2us; 536us; 537us; 2us; 536us; 537us; 1us; 536us; 1us; 537us; 3us; 538us; 539us; 540us; 3us; 538us; 539us; 540us; 1us; 538us; 1us; 539us; 1us; 540us; 1us; 540us; 3us; 541us; 542us; 543us; 49us; 541us; 542us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 1us; 541us; 1us; 542us; 1us; 543us; 1us; 544us; 48us; 544us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 2us; 545us; 546us; 48us; 545us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 1us; 547us; 1us; 547us; 2us; 548us; 549us; 1us; 548us; 6us; 550us; 551us; 552us; 553us; 554us; 555us; 51us; 550us; 551us; 552us; 553us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 3us; 550us; 551us; 552us; 2us; 550us; 551us; 1us; 550us; 1us; 551us; 1us; 552us; 1us; 552us; 1us; 553us; 1us; 554us; 1us; 555us; 15us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 579us; 6us; 556us; 557us; 558us; 559us; 560us; 579us; 4us; 556us; 557us; 558us; 559us; 2us; 556us; 557us; 1us; 556us; 1us; 557us; 1us; 558us; 1us; 559us; 1us; 560us; 5us; 561us; 562us; 563us; 564us; 565us; 4us; 561us; 562us; 563us; 564us; 2us; 561us; 562us; 1us; 561us; 1us; 562us; 1us; 563us; 1us; 564us; 1us; 565us; 1us; 566us; 1us; 566us; 1us; 566us; 1us; 567us; 1us; 568us; 2us; 569us; 1086us; 2us; 570us; 572us; 48us; 570us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 2us; 571us; 573us; 48us; 571us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 1us; 572us; 1us; 573us; 1us; 574us; 1us; 574us; 1us; 574us; 1us; 574us; 1us; 574us; 1us; 574us; 1us; 574us; 2us; 575us; 576us; 2us; 575us; 576us; 2us; 575us; 576us; 2us; 575us; 576us; 2us; 575us; 576us; 1us; 575us; 1us; 575us; 1us; 576us; 1us; 577us; 1us; 577us; 1us; 577us; 1us; 577us; 1us; 577us; 1us; 578us; 1us; 578us; 1us; 578us; 1us; 579us; 1us; 579us; 1us; 580us; 48us; 580us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 1us; 581us; 1us; 581us; 48us; 582us; 583us; 584us; 585us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 645us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 649us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 653us; 660us; 661us; 49us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 656us; 657us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 658us; 660us; 661us; 47us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 661us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 714us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 715us; 51us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 767us; 768us; 769us; 771us; 51us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 767us; 768us; 769us; 775us; 49us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 767us; 768us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 768us; 48us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 775us; 49us; 582us; 583us; 584us; 585us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 660us; 661us; 1047us; 1048us; 1us; 582us; 1us; 582us; 1us; 583us; 1us; 583us; 1us; 584us; 1us; 584us; 1us; 585us; 2us; 586us; 629us; 1us; 586us; 1us; 586us; 3us; 587us; 658us; 659us; 5us; 587us; 658us; 659us; 692us; 693us; 2us; 588us; 609us; 2us; 589us; 610us; 2us; 590us; 611us; 2us; 591us; 612us; 2us; 592us; 613us; 2us; 593us; 614us; 2us; 594us; 615us; 2us; 595us; 616us; 2us; 596us; 617us; 2us; 597us; 618us; 3us; 598us; 599us; 619us; 1us; 599us; 2us; 600us; 620us; 2us; 601us; 621us; 2us; 602us; 622us; 2us; 603us; 623us; 2us; 604us; 624us; 2us; 605us; 625us; 2us; 606us; 626us; 2us; 607us; 627us; 2us; 608us; 628us; 1us; 609us; 1us; 610us; 1us; 611us; 1us; 612us; 1us; 613us; 1us; 614us; 1us; 615us; 1us; 616us; 1us; 617us; 1us; 618us; 1us; 619us; 1us; 620us; 1us; 621us; 1us; 622us; 1us; 623us; 1us; 624us; 1us; 625us; 1us; 626us; 1us; 627us; 1us; 628us; 1us; 630us; 1us; 631us; 1us; 631us; 1us; 631us; 1us; 632us; 1us; 632us; 2us; 633us; 634us; 2us; 633us; 634us; 1us; 633us; 1us; 634us; 1us; 635us; 2us; 636us; 637us; 1us; 636us; 1us; 637us; 1us; 638us; 1us; 639us; 5us; 640us; 641us; 642us; 643us; 644us; 4us; 640us; 641us; 642us; 643us; 2us; 641us; 642us; 1us; 641us; 1us; 642us; 1us; 643us; 1us; 644us; 1us; 645us; 1us; 647us; 1us; 647us; 1us; 648us; 1us; 648us; 1us; 649us; 2us; 650us; 651us; 2us; 650us; 651us; 2us; 650us; 651us; 1us; 650us; 1us; 651us; 1us; 653us; 2us; 654us; 655us; 2us; 654us; 655us; 2us; 654us; 655us; 1us; 654us; 1us; 655us; 2us; 656us; 657us; 1us; 656us; 1us; 657us; 2us; 658us; 659us; 1us; 659us; 2us; 660us; 661us; 1us; 660us; 1us; 662us; 2us; 662us; 971us; 1us; 662us; 1us; 663us; 2us; 663us; 967us; 1us; 663us; 1us; 664us; 2us; 664us; 970us; 1us; 664us; 1us; 665us; 2us; 665us; 983us; 1us; 665us; 1us; 666us; 2us; 666us; 978us; 1us; 666us; 1us; 667us; 2us; 667us; 979us; 1us; 667us; 3us; 668us; 669us; 670us; 7us; 668us; 669us; 670us; 815us; 816us; 817us; 818us; 2us; 668us; 669us; 6us; 668us; 669us; 815us; 816us; 817us; 818us; 2us; 668us; 669us; 4us; 668us; 669us; 816us; 817us; 1us; 668us; 3us; 668us; 816us; 817us; 1us; 669us; 1us; 670us; 1us; 671us; 1us; 671us; 1us; 672us; 1us; 672us; 2us; 673us; 674us; 6us; 673us; 674us; 791us; 795us; 796us; 797us; 5us; 674us; 791us; 795us; 796us; 797us; 1us; 674us; 6us; 675us; 678us; 679us; 680us; 682us; 685us; 1us; 676us; 6us; 676us; 678us; 679us; 680us; 682us; 685us; 6us; 677us; 678us; 679us; 680us; 682us; 685us; 6us; 678us; 678us; 679us; 680us; 682us; 685us; 6us; 678us; 679us; 679us; 680us; 682us; 685us; 6us; 678us; 679us; 680us; 681us; 682us; 685us; 6us; 678us; 679us; 680us; 682us; 685us; 911us; 1us; 678us; 1us; 679us; 1us; 680us; 1us; 680us; 1us; 681us; 2us; 681us; 961us; 1us; 682us; 1us; 682us; 1us; 683us; 1us; 683us; 1us; 683us; 1us; 684us; 2us; 684us; 977us; 1us; 684us; 1us; 685us; 1us; 685us; 1us; 686us; 1us; 687us; 4us; 688us; 689us; 690us; 691us; 2us; 688us; 689us; 1us; 688us; 1us; 689us; 1us; 690us; 1us; 691us; 3us; 692us; 693us; 829us; 2us; 692us; 693us; 1us; 692us; 1us; 693us; 1us; 694us; 1us; 695us; 1us; 696us; 1us; 698us; 6us; 699us; 700us; 956us; 957us; 959us; 960us; 1us; 699us; 1us; 699us; 1us; 699us; 1us; 699us; 1us; 700us; 1us; 700us; 6us; 701us; 702us; 703us; 704us; 705us; 706us; 2us; 701us; 702us; 1us; 701us; 1us; 702us; 2us; 703us; 704us; 1us; 703us; 1us; 704us; 1us; 705us; 1us; 706us; 2us; 707us; 708us; 1us; 707us; 1us; 707us; 3us; 709us; 710us; 713us; 2us; 709us; 710us; 1us; 709us; 1us; 711us; 1us; 711us; 1us; 712us; 1us; 715us; 1us; 716us; 1us; 717us; 1us; 718us; 1us; 719us; 1us; 720us; 1us; 721us; 1us; 722us; 1us; 723us; 1us; 724us; 1us; 725us; 1us; 726us; 4us; 727us; 728us; 729us; 730us; 2us; 727us; 728us; 1us; 727us; 1us; 728us; 1us; 729us; 1us; 729us; 1us; 730us; 4us; 731us; 732us; 733us; 734us; 5us; 731us; 732us; 733us; 734us; 986us; 2us; 731us; 732us; 1us; 731us; 1us; 732us; 1us; 733us; 1us; 734us; 4us; 735us; 736us; 737us; 738us; 2us; 735us; 736us; 1us; 735us; 1us; 736us; 1us; 737us; 1us; 738us; 9us; 739us; 740us; 741us; 742us; 743us; 744us; 745us; 746us; 747us; 14us; 739us; 740us; 741us; 742us; 743us; 744us; 745us; 746us; 747us; 752us; 956us; 957us; 959us; 960us; 13us; 739us; 740us; 741us; 742us; 743us; 744us; 745us; 746us; 747us; 956us; 957us; 959us; 960us; 1us; 739us; 2us; 740us; 741us; 1us; 740us; 1us; 741us; 1us; 742us; 2us; 742us; 957us; 1us; 743us; 1us; 744us; 1us; 745us; 1us; 746us; 1us; 747us; 1us; 748us; 1us; 748us; 1us; 748us; 1us; 748us; 1us; 748us; 1us; 748us; 1us; 749us; 1us; 750us; 1us; 751us; 2us; 751us; 754us; 2us; 752us; 753us; 1us; 752us; 1us; 753us; 1us; 753us; 5us; 755us; 756us; 757us; 758us; 759us; 2us; 755us; 756us; 1us; 755us; 1us; 756us; 1us; 757us; 1us; 758us; 1us; 759us; 1us; 760us; 1us; 761us; 1us; 762us; 1us; 763us; 1us; 765us; 1us; 766us; 3us; 767us; 768us; 769us; 1us; 768us; 1us; 769us; 1us; 770us; 1us; 770us; 3us; 771us; 772us; 773us; 1us; 772us; 1us; 773us; 1us; 774us; 2us; 775us; 776us; 1us; 775us; 1us; 776us; 1us; 777us; 1us; 778us; 1us; 779us; 1us; 779us; 1us; 779us; 2us; 779us; 780us; 1us; 779us; 1us; 779us; 1us; 780us; 1us; 783us; 1us; 785us; 1us; 785us; 1us; 785us; 1us; 785us; 2us; 787us; 788us; 1us; 787us; 5us; 788us; 881us; 902us; 903us; 914us; 1us; 788us; 1us; 789us; 1us; 789us; 1us; 789us; 1us; 789us; 2us; 789us; 806us; 1us; 789us; 1us; 790us; 1us; 791us; 1us; 791us; 2us; 791us; 806us; 1us; 791us; 3us; 792us; 793us; 794us; 2us; 793us; 794us; 1us; 794us; 2us; 794us; 806us; 1us; 794us; 1us; 795us; 1us; 795us; 2us; 795us; 806us; 1us; 795us; 2us; 796us; 797us; 1us; 796us; 1us; 796us; 1us; 797us; 2us; 797us; 806us; 1us; 797us; 1us; 797us; 1us; 798us; 2us; 798us; 806us; 2us; 800us; 803us; 2us; 801us; 802us; 1us; 802us; 1us; 803us; 3us; 804us; 954us; 955us; 1us; 805us; 1us; 806us; 5us; 808us; 809us; 810us; 811us; 812us; 3us; 808us; 809us; 810us; 1us; 808us; 1us; 810us; 1us; 812us; 2us; 813us; 814us; 1us; 813us; 1us; 813us; 1us; 813us; 1us; 814us; 1us; 814us; 1us; 816us; 1us; 819us; 2us; 821us; 823us; 1us; 821us; 1us; 822us; 1us; 822us; 1us; 822us; 1us; 823us; 1us; 823us; 1us; 824us; 1us; 824us; 1us; 826us; 1us; 826us; 1us; 827us; 1us; 827us; 1us; 828us; 4us; 828us; 878us; 879us; 880us; 1us; 828us; 1us; 828us; 1us; 828us; 1us; 829us; 1us; 829us; 1us; 830us; 5us; 831us; 832us; 833us; 834us; 835us; 2us; 831us; 832us; 1us; 831us; 1us; 832us; 1us; 833us; 1us; 834us; 1us; 835us; 2us; 836us; 837us; 2us; 836us; 837us; 2us; 836us; 837us; 1us; 836us; 1us; 837us; 6us; 838us; 839us; 840us; 841us; 842us; 843us; 5us; 838us; 839us; 840us; 841us; 842us; 4us; 838us; 839us; 840us; 841us; 2us; 838us; 839us; 1us; 838us; 1us; 839us; 1us; 840us; 1us; 840us; 1us; 841us; 1us; 842us; 1us; 842us; 1us; 843us; 1us; 843us; 1us; 844us; 1us; 844us; 1us; 845us; 1us; 845us; 1us; 845us; 2us; 846us; 847us; 1us; 847us; 2us; 848us; 849us; 1us; 849us; 1us; 851us; 1us; 851us; 2us; 852us; 853us; 1us; 852us; 1us; 852us; 2us; 854us; 855us; 1us; 854us; 1us; 854us; 2us; 856us; 857us; 1us; 856us; 1us; 856us; 3us; 858us; 859us; 860us; 5us; 858us; 860us; 878us; 879us; 880us; 1us; 858us; 4us; 858us; 878us; 879us; 880us; 1us; 859us; 1us; 859us; 1us; 859us; 4us; 859us; 878us; 879us; 880us; 5us; 861us; 863us; 878us; 879us; 880us; 1us; 861us; 4us; 861us; 878us; 879us; 880us; 1us; 862us; 1us; 862us; 1us; 862us; 4us; 862us; 878us; 879us; 880us; 2us; 864us; 865us; 1us; 864us; 1us; 864us; 1us; 866us; 1us; 866us; 6us; 867us; 869us; 870us; 878us; 879us; 880us; 1us; 867us; 1us; 867us; 1us; 868us; 1us; 868us; 1us; 869us; 1us; 869us; 6us; 871us; 872us; 873us; 878us; 879us; 880us; 1us; 871us; 1us; 871us; 1us; 872us; 1us; 872us; 3us; 874us; 954us; 955us; 1us; 875us; 2us; 875us; 883us; 2us; 876us; 877us; 4us; 876us; 877us; 915us; 918us; 1us; 876us; 1us; 876us; 7us; 878us; 879us; 880us; 904us; 905us; 906us; 907us; 1us; 878us; 1us; 879us; 1us; 879us; 1us; 880us; 4us; 881us; 902us; 903us; 914us; 1us; 881us; 1us; 881us; 1us; 881us; 1us; 882us; 1us; 883us; 1us; 883us; 2us; 884us; 901us; 1us; 884us; 1us; 884us; 4us; 885us; 886us; 887us; 888us; 1us; 885us; 3us; 886us; 887us; 888us; 1us; 886us; 2us; 887us; 888us; 1us; 887us; 1us; 888us; 1us; 888us; 1us; 889us; 1us; 889us; 1us; 889us; 3us; 889us; 890us; 891us; 4us; 890us; 891us; 921us; 922us; 2us; 890us; 891us; 1us; 890us; 1us; 891us; 2us; 893us; 894us; 1us; 894us; 1us; 894us; 4us; 895us; 902us; 903us; 914us; 1us; 895us; 1us; 895us; 1us; 895us; 3us; 896us; 916us; 917us; 3us; 897us; 916us; 917us; 1us; 898us; 1us; 899us; 3us; 899us; 916us; 917us; 1us; 900us; 1us; 901us; 3us; 902us; 903us; 914us; 2us; 902us; 903us; 5us; 902us; 903us; 928us; 929us; 930us; 1us; 902us; 1us; 903us; 5us; 904us; 905us; 906us; 907us; 908us; 5us; 904us; 905us; 906us; 907us; 908us; 3us; 904us; 905us; 906us; 2us; 904us; 905us; 1us; 904us; 1us; 905us; 1us; 906us; 1us; 907us; 1us; 908us; 1us; 909us; 1us; 910us; 1us; 911us; 1us; 912us; 1us; 913us; 1us; 914us; 1us; 914us; 1us; 915us; 2us; 916us; 917us; 4us; 916us; 917us; 954us; 955us; 1us; 917us; 1us; 918us; 1us; 918us; 1us; 919us; 1us; 920us; 1us; 920us; 7us; 921us; 922us; 923us; 924us; 925us; 926us; 927us; 3us; 921us; 922us; 923us; 3us; 921us; 922us; 923us; 2us; 921us; 922us; 1us; 921us; 1us; 922us; 1us; 923us; 3us; 924us; 925us; 931us; 1us; 924us; 1us; 925us; 1us; 926us; 1us; 927us; 3us; 928us; 929us; 930us; 2us; 929us; 930us; 1us; 929us; 1us; 931us; 1us; 932us; 2us; 934us; 935us; 3us; 934us; 945us; 946us; 1us; 934us; 1us; 935us; 1us; 935us; 3us; 936us; 954us; 955us; 1us; 937us; 1us; 938us; 3us; 938us; 945us; 946us; 1us; 938us; 2us; 939us; 940us; 1us; 940us; 1us; 940us; 1us; 941us; 2us; 942us; 943us; 1us; 943us; 1us; 944us; 3us; 945us; 945us; 946us; 3us; 945us; 946us; 946us; 3us; 945us; 946us; 947us; 1us; 945us; 1us; 946us; 1us; 947us; 1us; 948us; 1us; 948us; 1us; 949us; 1us; 950us; 2us; 950us; 964us; 1us; 950us; 1us; 951us; 1us; 952us; 1us; 953us; 2us; 954us; 955us; 1us; 954us; 1us; 955us; 4us; 956us; 957us; 959us; 960us; 1us; 956us; 1us; 956us; 1us; 957us; 1us; 957us; 1us; 958us; 3us; 959us; 960us; 989us; 3us; 959us; 960us; 989us; 1us; 959us; 1us; 960us; 1us; 960us; 1us; 960us; 1us; 961us; 1us; 962us; 1us; 963us; 1us; 964us; 1us; 965us; 1us; 966us; 1us; 967us; 1us; 968us; 1us; 969us; 1us; 970us; 1us; 971us; 1us; 972us; 1us; 973us; 1us; 974us; 1us; 975us; 1us; 976us; 1us; 977us; 1us; 978us; 1us; 979us; 1us; 980us; 1us; 981us; 1us; 982us; 1us; 983us; 2us; 984us; 985us; 1us; 985us; 1us; 986us; 1us; 986us; 1us; 987us; 1us; 988us; 1us; 988us; 1us; 989us; 1us; 990us; 1us; 991us; 3us; 992us; 994us; 995us; 1us; 993us; 2us; 994us; 995us; 1us; 994us; 1us; 995us; 1us; 996us; 1us; 997us; 1us; 998us; 1us; 999us; 1us; 1000us; 1us; 1001us; 2us; 1002us; 1003us; 1us; 1003us; 1us; 1004us; 1us; 1004us; 2us; 1006us; 1008us; 2us; 1007us; 1009us; 1us; 1008us; 1us; 1009us; 1us; 1010us; 1us; 1011us; 1us; 1012us; 1us; 1013us; 1us; 1014us; 1us; 1015us; 1us; 1017us; 1us; 1019us; 1us; 1021us; 1us; 1023us; 1us; 1025us; 1us; 1027us; 1us; 1031us; 1us; 1033us; 1us; 1035us; 1us; 1036us; 1us; 1037us; 1us; 1038us; 1us; 1039us; 1us; 1040us; 1us; 1041us; 1us; 1042us; 1us; 1043us; 1us; 1044us; 1us; 1045us; 1us; 1046us; 1us; 1048us; 1us; 1048us; 1us; 1049us; 2us; 1050us; 1051us; 1us; 1050us; 1us; 1050us; 1us; 1051us; 2us; 1052us; 1054us; 1us; 1052us; 1us; 1052us; 1us; 1053us; 1us; 1054us; 1us; 1055us; 1us; 1056us; 1us; 1058us; 1us; 1060us; 2us; 1060us; 1081us; 1us; 1060us; 1us; 1061us; 1us; 1062us; 1us; 1063us; 2us; 1063us; 1082us; 1us; 1063us; 1us; 1064us; 1us; 1065us; 1us; 1066us; 1us; 1066us; 1us; 1067us; 1us; 1068us; 1us; 1069us; 1us; 1070us; 1us; 1070us; 1us; 1071us; 1us; 1072us; 1us; 1073us; 1us; 1073us; 1us; 1074us; 1us; 1075us; 1us; 1076us; 1us; 1077us; 1us; 1078us; 1us; 1079us; 1us; 1080us; 1us; 1081us; 1us; 1082us; 1us; 1083us; 1us; 1084us; 1us; 1085us; 1us; 1086us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 26us; 28us; 30us; 32us; 35us; 37us; 40us; 42us; 45us; 47us; 49us; 51us; 53us; 55us; 57us; 59us; 62us; 64us; 72us; 80us; 129us; 131us; 134us; 136us; 138us; 140us; 142us; 144us; 147us; 149us; 151us; 154us; 156us; 158us; 160us; 164us; 166us; 168us; 170us; 172us; 176us; 178us; 180us; 184us; 187us; 189us; 192us; 194us; 196us; 198us; 200us; 207us; 214us; 218us; 220us; 222us; 224us; 228us; 231us; 233us; 235us; 237us; 241us; 243us; 245us; 248us; 251us; 254us; 256us; 258us; 260us; 262us; 264us; 266us; 272us; 278us; 281us; 284us; 286us; 288us; 290us; 292us; 294us; 296us; 298us; 300us; 302us; 304us; 306us; 308us; 310us; 312us; 314us; 317us; 366us; 368us; 417us; 419us; 421us; 425us; 427us; 429us; 431us; 433us; 435us; 437us; 439us; 441us; 443us; 445us; 447us; 450us; 452us; 454us; 457us; 459us; 461us; 463us; 467us; 469us; 471us; 473us; 475us; 477us; 479us; 481us; 483us; 485us; 487us; 489us; 491us; 493us; 495us; 499us; 502us; 504us; 506us; 508us; 510us; 513us; 516us; 518us; 520us; 523us; 526us; 528us; 530us; 533us; 536us; 538us; 540us; 542us; 544us; 546us; 548us; 550us; 558us; 571us; 579us; 592us; 594us; 596us; 598us; 600us; 602us; 604us; 606us; 608us; 610us; 612us; 617us; 619us; 624us; 626us; 628us; 632us; 634us; 636us; 638us; 640us; 642us; 644us; 646us; 648us; 650us; 653us; 656us; 658us; 660us; 663us; 665us; 667us; 669us; 672us; 674us; 676us; 678us; 680us; 682us; 684us; 687us; 689us; 691us; 693us; 696us; 698us; 701us; 703us; 706us; 708us; 710us; 712us; 714us; 726us; 737us; 740us; 742us; 744us; 748us; 751us; 753us; 755us; 757us; 760us; 762us; 764us; 766us; 777us; 787us; 838us; 841us; 843us; 845us; 847us; 852us; 854us; 857us; 859us; 861us; 864us; 867us; 869us; 871us; 873us; 875us; 882us; 889us; 891us; 895us; 897us; 903us; 905us; 907us; 909us; 911us; 913us; 915us; 917us; 919us; 922us; 924us; 926us; 929us; 933us; 935us; 940us; 944us; 946us; 950us; 956us; 959us; 961us; 963us; 966us; 968us; 970us; 972us; 974us; 978us; 982us; 985us; 987us; 989us; 991us; 993us; 995us; 997us; 999us; 1002us; 1004us; 1009us; 1013us; 1016us; 1018us; 1020us; 1023us; 1025us; 1027us; 1029us; 1031us; 1033us; 1036us; 1038us; 1042us; 1044us; 1046us; 1049us; 1053us; 1055us; 1057us; 1059us; 1063us; 1065us; 1067us; 1069us; 1071us; 1073us; 1075us; 1077us; 1080us; 1082us; 1084us; 1086us; 1091us; 1093us; 1095us; 1097us; 1099us; 1101us; 1103us; 1105us; 1107us; 1109us; 1111us; 1116us; 1118us; 1120us; 1122us; 1124us; 1126us; 1128us; 1130us; 1132us; 1134us; 1136us; 1141us; 1144us; 1147us; 1150us; 1153us; 1155us; 1157us; 1159us; 1161us; 1163us; 1165us; 1167us; 1169us; 1171us; 1173us; 1175us; 1179us; 1182us; 1184us; 1186us; 1189us; 1191us; 1194us; 1197us; 1199us; 1201us; 1204us; 1207us; 1209us; 1211us; 1213us; 1215us; 1217us; 1219us; 1221us; 1223us; 1225us; 1227us; 1229us; 1232us; 1235us; 1237us; 1239us; 1242us; 1244us; 1246us; 1248us; 1250us; 1252us; 1254us; 1256us; 1258us; 1261us; 1264us; 1267us; 1269us; 1271us; 1273us; 1276us; 1278us; 1290us; 1307us; 1319us; 1336us; 1338us; 1340us; 1343us; 1345us; 1347us; 1349us; 1354us; 1356us; 1358us; 1360us; 1362us; 1364us; 1366us; 1368us; 1370us; 1372us; 1374us; 1376us; 1378us; 1380us; 1382us; 1384us; 1386us; 1388us; 1390us; 1392us; 1394us; 1396us; 1398us; 1400us; 1402us; 1404us; 1406us; 1408us; 1410us; 1412us; 1414us; 1416us; 1418us; 1420us; 1422us; 1424us; 1426us; 1428us; 1430us; 1432us; 1434us; 1437us; 1439us; 1441us; 1443us; 1445us; 1447us; 1449us; 1452us; 1454us; 1456us; 1458us; 1460us; 1462us; 1464us; 1466us; 1468us; 1470us; 1472us; 1474us; 1476us; 1478us; 1480us; 1482us; 1486us; 1489us; 1491us; 1493us; 1495us; 1497us; 1499us; 1501us; 1503us; 1505us; 1507us; 1510us; 1512us; 1514us; 1517us; 1520us; 1522us; 1524us; 1526us; 1529us; 1532us; 1534us; 1539us; 1545us; 1549us; 1551us; 1553us; 1555us; 1557us; 1559us; 1561us; 1563us; 1565us; 1567us; 1569us; 1575us; 1581us; 1586us; 1588us; 1590us; 1592us; 1594us; 1596us; 1598us; 1604us; 1606us; 1608us; 1612us; 1615us; 1617us; 1619us; 1621us; 1623us; 1630us; 1632us; 1634us; 1638us; 1641us; 1643us; 1645us; 1647us; 1649us; 1652us; 1655us; 1657us; 1659us; 1661us; 1663us; 1665us; 1667us; 1671us; 1676us; 1678us; 1682us; 1684us; 1686us; 1688us; 1691us; 1693us; 1696us; 1700us; 1702us; 1705us; 1707us; 1709us; 1711us; 1713us; 1715us; 1717us; 1719us; 1721us; 1723us; 1725us; 1727us; 1729us; 1731us; 1733us; 1735us; 1738us; 1740us; 1743us; 1746us; 1749us; 1751us; 1753us; 1755us; 1757us; 1759us; 1761us; 1763us; 1772us; 1774us; 1776us; 1784us; 1786us; 1790us; 1792us; 1794us; 1796us; 1798us; 1800us; 1802us; 1805us; 1807us; 1809us; 1811us; 1813us; 1815us; 1817us; 1819us; 1821us; 1823us; 1828us; 1833us; 1835us; 1837us; 1839us; 1841us; 1843us; 1846us; 1848us; 1851us; 1853us; 1855us; 1860us; 1865us; 1870us; 1872us; 1874us; 1876us; 1878us; 1880us; 1882us; 1884us; 1886us; 1888us; 1890us; 1892us; 1899us; 1901us; 1903us; 1905us; 1907us; 1909us; 1915us; 1917us; 1920us; 1923us; 1926us; 1928us; 1930us; 1932us; 1935us; 1937us; 1939us; 1942us; 1944us; 1949us; 1954us; 1956us; 1958us; 1961us; 1964us; 1966us; 1968us; 1970us; 1972us; 1974us; 1976us; 1978us; 1980us; 1982us; 1984us; 1986us; 1988us; 1990us; 1992us; 1994us; 1996us; 1998us; 2001us; 2003us; 2005us; 2007us; 2011us; 2013us; 2015us; 2017us; 2019us; 2021us; 2023us; 2025us; 2027us; 2029us; 2031us; 2033us; 2035us; 2037us; 2039us; 2041us; 2043us; 2045us; 2047us; 2049us; 2051us; 2053us; 2055us; 2057us; 2059us; 2061us; 2063us; 2065us; 2068us; 2071us; 2073us; 2075us; 2077us; 2079us; 2082us; 2088us; 2090us; 2094us; 2099us; 2101us; 2103us; 2105us; 2107us; 2109us; 2111us; 2114us; 2116us; 2119us; 2121us; 2123us; 2125us; 2127us; 2129us; 2131us; 2133us; 2135us; 2139us; 2143us; 2147us; 2151us; 2154us; 2156us; 2158us; 2160us; 2163us; 2166us; 2168us; 2170us; 2172us; 2174us; 2177us; 2179us; 2181us; 2184us; 2186us; 2188us; 2190us; 2192us; 2194us; 2197us; 2199us; 2201us; 2203us; 2205us; 2207us; 2209us; 2211us; 2213us; 2215us; 2217us; 2219us; 2221us; 2223us; 2225us; 2227us; 2229us; 2232us; 2234us; 2236us; 2238us; 2240us; 2243us; 2245us; 2247us; 2250us; 2253us; 2255us; 2257us; 2259us; 2261us; 2263us; 2265us; 2267us; 2269us; 2271us; 2274us; 2276us; 2278us; 2285us; 2287us; 2289us; 2291us; 2294us; 2298us; 2300us; 2302us; 2304us; 2306us; 2308us; 2314us; 2317us; 2319us; 2321us; 2323us; 2326us; 2328us; 2330us; 2337us; 2344us; 2351us; 2358us; 2365us; 2372us; 2379us; 2386us; 2393us; 2401us; 2403us; 2405us; 2407us; 2409us; 2412us; 2415us; 2417us; 2419us; 2421us; 2423us; 2425us; 2428us; 2430us; 2433us; 2435us; 2437us; 2442us; 2444us; 2452us; 2458us; 2462us; 2464us; 2466us; 2468us; 2470us; 2472us; 2474us; 2476us; 2478us; 2488us; 2490us; 2492us; 2494us; 2499us; 2501us; 2503us; 2505us; 2507us; 2509us; 2511us; 2513us; 2515us; 2517us; 2519us; 2521us; 2523us; 2525us; 2527us; 2529us; 2531us; 2533us; 2535us; 2538us; 2540us; 2542us; 2544us; 2546us; 2548us; 2550us; 2559us; 2562us; 2564us; 2566us; 2570us; 2573us; 2575us; 2580us; 2585us; 2590us; 2592us; 2594us; 2597us; 2599us; 2601us; 2609us; 2617us; 2625us; 2633us; 2641us; 2649us; 2657us; 2664us; 2672us; 2680us; 2689us; 2704us; 2712us; 2714us; 2716us; 2718us; 2721us; 2724us; 2726us; 2728us; 2730us; 2732us; 2734us; 2736us; 2738us; 2740us; 2742us; 2745us; 2747us; 2750us; 2752us; 2756us; 2758us; 2760us; 2763us; 2765us; 2768us; 2771us; 2773us; 2775us; 2777us; 2779us; 2781us; 2783us; 2832us; 2835us; 2837us; 2840us; 2842us; 2844us; 2846us; 2848us; 2901us; 2955us; 3011us; 3014us; 3016us; 3018us; 3020us; 3022us; 3024us; 3026us; 3028us; 3034us; 3036us; 3039us; 3042us; 3045us; 3048us; 3051us; 3054us; 3057us; 3060us; 3063us; 3066us; 3070us; 3073us; 3076us; 3078us; 3080us; 3082us; 3084us; 3086us; 3088us; 3090us; 3092us; 3094us; 3096us; 3098us; 3100us; 3103us; 3106us; 3108us; 3110us; 3115us; 3117us; 3119us; 3122us; 3124us; 3126us; 3128us; 3130us; 3132us; 3135us; 3138us; 3140us; 3142us; 3145us; 3148us; 3150us; 3152us; 3156us; 3160us; 3162us; 3164us; 3166us; 3168us; 3172us; 3222us; 3224us; 3226us; 3228us; 3230us; 3279us; 3282us; 3331us; 3333us; 3335us; 3338us; 3340us; 3347us; 3399us; 3403us; 3406us; 3408us; 3410us; 3412us; 3414us; 3416us; 3418us; 3420us; 3436us; 3443us; 3448us; 3451us; 3453us; 3455us; 3457us; 3459us; 3461us; 3467us; 3472us; 3475us; 3477us; 3479us; 3481us; 3483us; 3485us; 3487us; 3489us; 3491us; 3493us; 3495us; 3498us; 3501us; 3550us; 3553us; 3602us; 3604us; 3606us; 3608us; 3610us; 3612us; 3614us; 3616us; 3618us; 3620us; 3623us; 3626us; 3629us; 3632us; 3635us; 3637us; 3639us; 3641us; 3643us; 3645us; 3647us; 3649us; 3651us; 3653us; 3655us; 3657us; 3659us; 3661us; 3663us; 3712us; 3714us; 3716us; 3765us; 3814us; 3863us; 3912us; 3961us; 4010us; 4059us; 4108us; 4157us; 4206us; 4255us; 4304us; 4353us; 4402us; 4451us; 4500us; 4549us; 4598us; 4647us; 4696us; 4745us; 4794us; 4843us; 4892us; 4942us; 4991us; 5039us; 5088us; 5137us; 5186us; 5238us; 5290us; 5340us; 5389us; 5438us; 5488us; 5490us; 5492us; 5494us; 5496us; 5498us; 5500us; 5502us; 5505us; 5507us; 5509us; 5513us; 5519us; 5522us; 5525us; 5528us; 5531us; 5534us; 5537us; 5540us; 5543us; 5546us; 5549us; 5553us; 5555us; 5558us; 5561us; 5564us; 5567us; 5570us; 5573us; 5576us; 5579us; 5582us; 5584us; 5586us; 5588us; 5590us; 5592us; 5594us; 5596us; 5598us; 5600us; 5602us; 5604us; 5606us; 5608us; 5610us; 5612us; 5614us; 5616us; 5618us; 5620us; 5622us; 5624us; 5626us; 5628us; 5630us; 5632us; 5634us; 5637us; 5640us; 5642us; 5644us; 5646us; 5649us; 5651us; 5653us; 5655us; 5657us; 5663us; 5668us; 5671us; 5673us; 5675us; 5677us; 5679us; 5681us; 5683us; 5685us; 5687us; 5689us; 5691us; 5694us; 5697us; 5700us; 5702us; 5704us; 5706us; 5709us; 5712us; 5715us; 5717us; 5719us; 5722us; 5724us; 5726us; 5729us; 5731us; 5734us; 5736us; 5738us; 5741us; 5743us; 5745us; 5748us; 5750us; 5752us; 5755us; 5757us; 5759us; 5762us; 5764us; 5766us; 5769us; 5771us; 5773us; 5776us; 5778us; 5782us; 5790us; 5793us; 5800us; 5803us; 5808us; 5810us; 5814us; 5816us; 5818us; 5820us; 5822us; 5824us; 5826us; 5829us; 5836us; 5842us; 5844us; 5851us; 5853us; 5860us; 5867us; 5874us; 5881us; 5888us; 5895us; 5897us; 5899us; 5901us; 5903us; 5905us; 5908us; 5910us; 5912us; 5914us; 5916us; 5918us; 5920us; 5923us; 5925us; 5927us; 5929us; 5931us; 5933us; 5938us; 5941us; 5943us; 5945us; 5947us; 5949us; 5953us; 5956us; 5958us; 5960us; 5962us; 5964us; 5966us; 5968us; 5975us; 5977us; 5979us; 5981us; 5983us; 5985us; 5987us; 5994us; 5997us; 5999us; 6001us; 6004us; 6006us; 6008us; 6010us; 6012us; 6015us; 6017us; 6019us; 6023us; 6026us; 6028us; 6030us; 6032us; 6034us; 6036us; 6038us; 6040us; 6042us; 6044us; 6046us; 6048us; 6050us; 6052us; 6054us; 6056us; 6058us; 6063us; 6066us; 6068us; 6070us; 6072us; 6074us; 6076us; 6081us; 6087us; 6090us; 6092us; 6094us; 6096us; 6098us; 6103us; 6106us; 6108us; 6110us; 6112us; 6114us; 6124us; 6139us; 6153us; 6155us; 6158us; 6160us; 6162us; 6164us; 6167us; 6169us; 6171us; 6173us; 6175us; 6177us; 6179us; 6181us; 6183us; 6185us; 6187us; 6189us; 6191us; 6193us; 6195us; 6198us; 6201us; 6203us; 6205us; 6207us; 6213us; 6216us; 6218us; 6220us; 6222us; 6224us; 6226us; 6228us; 6230us; 6232us; 6234us; 6236us; 6238us; 6242us; 6244us; 6246us; 6248us; 6250us; 6254us; 6256us; 6258us; 6260us; 6263us; 6265us; 6267us; 6269us; 6271us; 6273us; 6275us; 6277us; 6280us; 6282us; 6284us; 6286us; 6288us; 6290us; 6292us; 6294us; 6296us; 6299us; 6301us; 6307us; 6309us; 6311us; 6313us; 6315us; 6317us; 6320us; 6322us; 6324us; 6326us; 6328us; 6331us; 6333us; 6337us; 6340us; 6342us; 6345us; 6347us; 6349us; 6351us; 6354us; 6356us; 6359us; 6361us; 6363us; 6365us; 6368us; 6370us; 6372us; 6374us; 6377us; 6380us; 6383us; 6385us; 6387us; 6391us; 6393us; 6395us; 6401us; 6405us; 6407us; 6409us; 6411us; 6414us; 6416us; 6418us; 6420us; 6422us; 6424us; 6426us; 6428us; 6431us; 6433us; 6435us; 6437us; 6439us; 6441us; 6443us; 6445us; 6447us; 6449us; 6451us; 6453us; 6455us; 6457us; 6462us; 6464us; 6466us; 6468us; 6470us; 6472us; 6474us; 6480us; 6483us; 6485us; 6487us; 6489us; 6491us; 6493us; 6496us; 6499us; 6502us; 6504us; 6506us; 6513us; 6519us; 6524us; 6527us; 6529us; 6531us; 6533us; 6535us; 6537us; 6539us; 6541us; 6543us; 6545us; 6547us; 6549us; 6551us; 6553us; 6555us; 6558us; 6560us; 6563us; 6565us; 6567us; 6569us; 6572us; 6574us; 6576us; 6579us; 6581us; 6583us; 6586us; 6588us; 6590us; 6594us; 6600us; 6602us; 6607us; 6609us; 6611us; 6613us; 6618us; 6624us; 6626us; 6631us; 6633us; 6635us; 6637us; 6642us; 6645us; 6647us; 6649us; 6651us; 6653us; 6660us; 6662us; 6664us; 6666us; 6668us; 6670us; 6672us; 6679us; 6681us; 6683us; 6685us; 6687us; 6691us; 6693us; 6696us; 6699us; 6704us; 6706us; 6708us; 6716us; 6718us; 6720us; 6722us; 6724us; 6729us; 6731us; 6733us; 6735us; 6737us; 6739us; 6741us; 6744us; 6746us; 6748us; 6753us; 6755us; 6759us; 6761us; 6764us; 6766us; 6768us; 6770us; 6772us; 6774us; 6776us; 6780us; 6785us; 6788us; 6790us; 6792us; 6795us; 6797us; 6799us; 6804us; 6806us; 6808us; 6810us; 6814us; 6818us; 6820us; 6822us; 6826us; 6828us; 6830us; 6834us; 6837us; 6843us; 6845us; 6847us; 6853us; 6859us; 6863us; 6866us; 6868us; 6870us; 6872us; 6874us; 6876us; 6878us; 6880us; 6882us; 6884us; 6886us; 6888us; 6890us; 6892us; 6895us; 6900us; 6902us; 6904us; 6906us; 6908us; 6910us; 6912us; 6920us; 6924us; 6928us; 6931us; 6933us; 6935us; 6937us; 6941us; 6943us; 6945us; 6947us; 6949us; 6953us; 6956us; 6958us; 6960us; 6962us; 6965us; 6969us; 6971us; 6973us; 6975us; 6979us; 6981us; 6983us; 6987us; 6989us; 6992us; 6994us; 6996us; 6998us; 7001us; 7003us; 7005us; 7009us; 7013us; 7017us; 7019us; 7021us; 7023us; 7025us; 7027us; 7029us; 7031us; 7034us; 7036us; 7038us; 7040us; 7042us; 7045us; 7047us; 7049us; 7054us; 7056us; 7058us; 7060us; 7062us; 7064us; 7068us; 7072us; 7074us; 7076us; 7078us; 7080us; 7082us; 7084us; 7086us; 7088us; 7090us; 7092us; 7094us; 7096us; 7098us; 7100us; 7102us; 7104us; 7106us; 7108us; 7110us; 7112us; 7114us; 7116us; 7118us; 7120us; 7122us; 7124us; 7126us; 7129us; 7131us; 7133us; 7135us; 7137us; 7139us; 7141us; 7143us; 7145us; 7147us; 7151us; 7153us; 7156us; 7158us; 7160us; 7162us; 7164us; 7166us; 7168us; 7170us; 7172us; 7175us; 7177us; 7179us; 7181us; 7184us; 7187us; 7189us; 7191us; 7193us; 7195us; 7197us; 7199us; 7201us; 7203us; 7205us; 7207us; 7209us; 7211us; 7213us; 7215us; 7217us; 7219us; 7221us; 7223us; 7225us; 7227us; 7229us; 7231us; 7233us; 7235us; 7237us; 7239us; 7241us; 7243us; 7245us; 7247us; 7249us; 7252us; 7254us; 7256us; 7258us; 7261us; 7263us; 7265us; 7267us; 7269us; 7271us; 7273us; 7275us; 7277us; 7280us; 7282us; 7284us; 7286us; 7288us; 7291us; 7293us; 7295us; 7297us; 7299us; 7301us; 7303us; 7305us; 7307us; 7309us; 7311us; 7313us; 7315us; 7317us; 7319us; 7321us; 7323us; 7325us; 7327us; 7329us; 7331us; 7333us; 7335us; 7337us; 7339us; 7341us; 7343us; |]
let _fsyacc_action_rows = 1875
let _fsyacc_actionTableElements = [|16us; 16431us; 22us; 69us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 73us; 302us; 87us; 38us; 100us; 274us; 107us; 16544us; 108us; 16544us; 120us; 16544us; 149us; 16544us; 201us; 47us; 0us; 49152us; 88us; 16507us; 13us; 16544us; 22us; 230us; 24us; 16544us; 25us; 16544us; 29us; 16544us; 30us; 16544us; 32us; 16544us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 46us; 16544us; 56us; 16544us; 62us; 16544us; 70us; 16544us; 71us; 16544us; 72us; 16544us; 73us; 302us; 74us; 16544us; 85us; 16544us; 87us; 38us; 88us; 16544us; 89us; 16544us; 91us; 16544us; 97us; 16544us; 99us; 16544us; 100us; 274us; 105us; 16544us; 106us; 16544us; 107us; 16544us; 113us; 16544us; 114us; 16544us; 115us; 16544us; 116us; 16544us; 118us; 16544us; 120us; 16544us; 121us; 16544us; 122us; 16544us; 123us; 16544us; 124us; 16544us; 125us; 16544us; 129us; 16544us; 132us; 16544us; 133us; 16544us; 135us; 16544us; 136us; 16544us; 145us; 16544us; 146us; 16544us; 147us; 16544us; 149us; 16544us; 153us; 16544us; 154us; 16544us; 157us; 16544us; 158us; 16544us; 161us; 16544us; 162us; 16544us; 163us; 16544us; 165us; 16544us; 166us; 16544us; 167us; 16544us; 168us; 16544us; 169us; 16544us; 170us; 16544us; 171us; 16544us; 172us; 16544us; 173us; 16544us; 174us; 16544us; 175us; 16544us; 176us; 16544us; 177us; 16544us; 179us; 16544us; 180us; 16544us; 182us; 16544us; 183us; 16544us; 186us; 16544us; 191us; 16544us; 192us; 16544us; 193us; 16544us; 197us; 16544us; 198us; 16544us; 199us; 16544us; 200us; 16544us; 201us; 216us; 0us; 49152us; 7us; 16544us; 10us; 14us; 21us; 12us; 67us; 13us; 73us; 302us; 83us; 11us; 87us; 38us; 100us; 274us; 0us; 49152us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 49152us; 32us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 49152us; 0us; 16389us; 0us; 16390us; 0us; 16391us; 0us; 16392us; 0us; 16393us; 0us; 16394us; 4us; 32768us; 10us; 14us; 21us; 37us; 67us; 13us; 83us; 36us; 0us; 16395us; 4us; 32768us; 10us; 14us; 21us; 37us; 67us; 13us; 83us; 36us; 0us; 16396us; 4us; 32768us; 10us; 14us; 21us; 37us; 67us; 13us; 83us; 36us; 0us; 16397us; 5us; 16544us; 10us; 14us; 67us; 13us; 73us; 302us; 87us; 38us; 100us; 274us; 0us; 16398us; 5us; 16544us; 10us; 14us; 67us; 13us; 73us; 302us; 87us; 38us; 100us; 274us; 0us; 16399us; 5us; 16544us; 10us; 14us; 67us; 13us; 73us; 302us; 87us; 38us; 100us; 274us; 0us; 16400us; 16us; 16401us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 73us; 302us; 100us; 274us; 107us; 16544us; 120us; 16544us; 136us; 16544us; 149us; 16544us; 161us; 16544us; 0us; 16402us; 3us; 16626us; 43us; 482us; 44us; 481us; 45us; 483us; 80us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 37us; 1841us; 38us; 1844us; 39us; 1846us; 40us; 1849us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 107us; 1845us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 120us; 685us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 136us; 700us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 149us; 1850us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 25us; 16403us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1249us; 101us; 1166us; 127us; 1163us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 0us; 16404us; 2us; 16405us; 21us; 37us; 83us; 36us; 0us; 16406us; 0us; 16407us; 0us; 16408us; 1us; 32768us; 191us; 39us; 0us; 16410us; 2us; 16409us; 192us; 1825us; 199us; 1824us; 0us; 16411us; 0us; 16412us; 2us; 32768us; 10us; 44us; 201us; 45us; 0us; 16413us; 1us; 32768us; 10us; 46us; 0us; 16414us; 4us; 16430us; 10us; 48us; 21us; 1791us; 67us; 1790us; 83us; 1789us; 0us; 16415us; 3us; 16620us; 43us; 482us; 44us; 481us; 45us; 483us; 1us; 17412us; 102us; 1811us; 2us; 32768us; 46us; 1731us; 191us; 1730us; 1us; 16416us; 76us; 1733us; 1us; 17412us; 102us; 1811us; 2us; 32768us; 46us; 1731us; 191us; 1730us; 1us; 16417us; 76us; 1733us; 1us; 16418us; 150us; 53us; 0us; 16419us; 1us; 16421us; 150us; 53us; 0us; 16420us; 1us; 17404us; 69us; 1807us; 16us; 16431us; 22us; 69us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 73us; 302us; 87us; 38us; 100us; 274us; 107us; 16544us; 108us; 16544us; 120us; 16544us; 149us; 16544us; 201us; 77us; 0us; 16422us; 3us; 16626us; 43us; 482us; 44us; 481us; 45us; 483us; 8us; 32768us; 37us; 1841us; 38us; 1844us; 39us; 1846us; 40us; 1849us; 107us; 1845us; 108us; 95us; 120us; 685us; 149us; 1850us; 18us; 16431us; 22us; 69us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 69us; 1823us; 73us; 302us; 77us; 1822us; 87us; 38us; 100us; 274us; 107us; 16544us; 108us; 16544us; 120us; 16544us; 149us; 16544us; 201us; 77us; 0us; 16423us; 0us; 16424us; 0us; 16425us; 15us; 16431us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 73us; 302us; 87us; 38us; 100us; 274us; 107us; 16544us; 108us; 16544us; 120us; 16544us; 149us; 16544us; 201us; 74us; 5us; 32768us; 10us; 994us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 201us; 980us; 1us; 17408us; 21us; 1809us; 0us; 16426us; 0us; 16427us; 6us; 16430us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 21us; 1791us; 67us; 1790us; 83us; 1789us; 0us; 16428us; 0us; 16429us; 3us; 16430us; 21us; 1791us; 67us; 1790us; 83us; 1789us; 3us; 17389us; 21us; 1791us; 67us; 1790us; 83us; 1789us; 15us; 16434us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 73us; 302us; 87us; 38us; 100us; 274us; 107us; 16544us; 108us; 16544us; 120us; 16544us; 149us; 16544us; 201us; 81us; 0us; 16432us; 3us; 32768us; 21us; 1791us; 67us; 1790us; 83us; 1789us; 4us; 16544us; 73us; 302us; 87us; 38us; 100us; 274us; 201us; 81us; 0us; 16433us; 0us; 16435us; 0us; 16436us; 3us; 16626us; 43us; 482us; 44us; 481us; 45us; 483us; 8us; 32768us; 37us; 1841us; 38us; 1844us; 39us; 1846us; 40us; 1849us; 107us; 1845us; 108us; 95us; 120us; 685us; 149us; 1850us; 2us; 32768us; 69us; 1823us; 77us; 1822us; 5us; 32768us; 22us; 111us; 46us; 1731us; 57us; 1820us; 135us; 1821us; 191us; 1730us; 0us; 16437us; 0us; 16438us; 0us; 16439us; 0us; 16440us; 0us; 16441us; 1us; 16544us; 73us; 302us; 1us; 17416us; 109us; 1812us; 1us; 17418us; 117us; 1813us; 3us; 16620us; 43us; 482us; 44us; 481us; 45us; 483us; 3us; 32768us; 91us; 1736us; 99us; 1741us; 191us; 1730us; 2us; 16685us; 34us; 1840us; 159us; 17443us; 1us; 32768us; 77us; 102us; 33us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 73us; 302us; 74us; 1581us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 1us; 16443us; 69us; 105us; 0us; 16442us; 73us; 32768us; 13us; 1111us; 22us; 107us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 25us; 16444us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1249us; 101us; 1166us; 127us; 1163us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 28us; 32768us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1249us; 101us; 1166us; 127us; 1163us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 1us; 17402us; 19us; 1806us; 0us; 16445us; 8us; 16544us; 46us; 1731us; 57us; 1820us; 73us; 302us; 87us; 38us; 100us; 274us; 135us; 1821us; 191us; 1730us; 201us; 81us; 3us; 32768us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 0us; 16446us; 15us; 16431us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 73us; 302us; 87us; 38us; 100us; 274us; 107us; 16544us; 108us; 16544us; 120us; 16544us; 149us; 16544us; 201us; 77us; 1us; 32768us; 141us; 116us; 3us; 32768us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 0us; 16447us; 15us; 16431us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 73us; 302us; 87us; 38us; 100us; 274us; 107us; 16544us; 108us; 16544us; 120us; 16544us; 149us; 16544us; 201us; 77us; 1us; 32768us; 141us; 120us; 0us; 16448us; 1us; 16544us; 73us; 302us; 0us; 16449us; 1us; 16451us; 130us; 124us; 1us; 16544us; 73us; 302us; 0us; 16450us; 2us; 16491us; 69us; 127us; 86us; 209us; 7us; 16544us; 22us; 130us; 49us; 556us; 56us; 558us; 73us; 302us; 110us; 557us; 135us; 155us; 151us; 141us; 0us; 16452us; 0us; 16453us; 52us; 16471us; 14us; 16544us; 22us; 151us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 46us; 16544us; 47us; 16544us; 48us; 16544us; 49us; 556us; 50us; 16544us; 51us; 16544us; 52us; 16544us; 54us; 16544us; 56us; 558us; 58us; 16544us; 66us; 16544us; 72us; 16544us; 73us; 302us; 87us; 16544us; 90us; 16544us; 91us; 16544us; 105us; 16544us; 108us; 16544us; 110us; 557us; 112us; 16544us; 118us; 16544us; 121us; 16544us; 135us; 155us; 147us; 16544us; 151us; 141us; 165us; 16544us; 166us; 16544us; 167us; 16544us; 168us; 16544us; 169us; 16544us; 170us; 16544us; 171us; 16544us; 172us; 16544us; 173us; 16544us; 174us; 16544us; 175us; 16544us; 176us; 16544us; 177us; 16544us; 179us; 16544us; 180us; 16544us; 185us; 16544us; 188us; 16544us; 191us; 16544us; 192us; 16544us; 193us; 16544us; 199us; 16544us; 200us; 16544us; 1us; 17408us; 21us; 1809us; 14us; 16471us; 14us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 47us; 16544us; 48us; 16544us; 50us; 16544us; 51us; 16544us; 52us; 16544us; 54us; 16544us; 73us; 302us; 108us; 16544us; 110us; 16544us; 118us; 16544us; 1us; 16491us; 86us; 209us; 3us; 32768us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 1us; 16491us; 86us; 209us; 0us; 16454us; 1us; 16491us; 86us; 209us; 0us; 16455us; 0us; 16456us; 0us; 16457us; 1us; 32768us; 119us; 142us; 33us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 73us; 302us; 74us; 1581us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 16458us; 0us; 16459us; 16us; 16471us; 14us; 16544us; 22us; 159us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 47us; 16544us; 48us; 16544us; 50us; 16544us; 51us; 16544us; 52us; 16544us; 54us; 16544us; 73us; 302us; 108us; 16544us; 110us; 16544us; 118us; 16544us; 201us; 149us; 3us; 32768us; 10us; 994us; 141us; 147us; 201us; 980us; 0us; 16460us; 0us; 16461us; 1us; 32768us; 141us; 150us; 0us; 16462us; 14us; 16471us; 14us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 47us; 16544us; 48us; 16544us; 50us; 16544us; 51us; 16544us; 52us; 16544us; 54us; 16544us; 73us; 302us; 108us; 16544us; 110us; 16544us; 118us; 16544us; 5us; 32768us; 10us; 994us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 201us; 980us; 0us; 16463us; 0us; 16464us; 15us; 16471us; 14us; 16544us; 22us; 159us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 47us; 16544us; 48us; 16544us; 50us; 16544us; 51us; 16544us; 52us; 16544us; 54us; 16544us; 73us; 302us; 108us; 16544us; 110us; 16544us; 118us; 16544us; 3us; 32768us; 10us; 994us; 141us; 157us; 201us; 980us; 0us; 16465us; 0us; 16466us; 14us; 16471us; 14us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 47us; 16544us; 48us; 16544us; 50us; 16544us; 51us; 16544us; 52us; 16544us; 54us; 16544us; 73us; 302us; 108us; 16544us; 110us; 16544us; 118us; 16544us; 5us; 32768us; 10us; 994us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 201us; 980us; 0us; 16467us; 0us; 16468us; 0us; 16469us; 0us; 16470us; 2us; 17410us; 21us; 1796us; 83us; 1797us; 14us; 16471us; 14us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 47us; 16544us; 48us; 16544us; 50us; 16544us; 51us; 16544us; 52us; 16544us; 54us; 16544us; 73us; 302us; 108us; 16544us; 110us; 16544us; 118us; 16544us; 0us; 16472us; 3us; 16626us; 43us; 482us; 44us; 481us; 45us; 483us; 3us; 16626us; 43us; 482us; 44us; 481us; 45us; 483us; 10us; 32768us; 14us; 560us; 47us; 187us; 48us; 337us; 50us; 205us; 51us; 338us; 52us; 339us; 54us; 183us; 108us; 185us; 110us; 559us; 118us; 192us; 44us; 32768us; 14us; 560us; 46us; 1731us; 47us; 187us; 48us; 337us; 50us; 205us; 51us; 338us; 52us; 339us; 54us; 183us; 56us; 544us; 58us; 631us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 535us; 105us; 1672us; 108us; 185us; 110us; 559us; 112us; 1670us; 118us; 192us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 193us; 538us; 199us; 1824us; 200us; 795us; 1us; 17416us; 109us; 1812us; 3us; 16620us; 43us; 482us; 44us; 481us; 45us; 483us; 3us; 32768us; 91us; 1736us; 99us; 1741us; 191us; 1730us; 2us; 16685us; 34us; 1840us; 159us; 17443us; 1us; 32768us; 77us; 177us; 33us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 73us; 302us; 74us; 1581us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 2us; 16480us; 26us; 197us; 86us; 195us; 1us; 16443us; 69us; 105us; 0us; 16473us; 31us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 6us; 16474us; 36us; 1611us; 46us; 1731us; 70us; 1624us; 90us; 1724us; 188us; 1727us; 191us; 1730us; 31us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 6us; 16475us; 36us; 1611us; 46us; 1731us; 70us; 1624us; 90us; 1724us; 188us; 1727us; 191us; 1730us; 1us; 17418us; 117us; 1813us; 0us; 16476us; 5us; 32768us; 37us; 1841us; 38us; 1844us; 48us; 336us; 107us; 1845us; 108us; 188us; 1us; 17418us; 117us; 1813us; 0us; 16477us; 1us; 16544us; 73us; 302us; 0us; 16478us; 1us; 32768us; 77us; 193us; 33us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 73us; 302us; 74us; 1581us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 16479us; 3us; 32768us; 91us; 1736us; 99us; 1741us; 191us; 1730us; 0us; 16481us; 3us; 32768us; 91us; 1736us; 99us; 1741us; 191us; 1730us; 2us; 32768us; 20us; 199us; 201us; 200us; 0us; 16482us; 0us; 16483us; 1us; 16484us; 96us; 202us; 3us; 32768us; 91us; 1736us; 99us; 1741us; 191us; 1730us; 0us; 16485us; 0us; 16486us; 1us; 16487us; 48us; 206us; 0us; 16488us; 1us; 16491us; 86us; 209us; 0us; 16489us; 15us; 16471us; 14us; 16544us; 22us; 159us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 47us; 16544us; 48us; 16544us; 50us; 16544us; 51us; 16544us; 52us; 16544us; 54us; 16544us; 73us; 302us; 108us; 16544us; 110us; 16544us; 118us; 16544us; 3us; 32768us; 19us; 1800us; 20us; 1801us; 141us; 1802us; 0us; 16490us; 2us; 32768us; 10us; 213us; 201us; 214us; 0us; 16492us; 1us; 32768us; 10us; 215us; 0us; 16493us; 4us; 32768us; 10us; 217us; 21us; 1791us; 67us; 1790us; 83us; 1789us; 0us; 16494us; 1us; 16495us; 150us; 53us; 0us; 16496us; 1us; 16498us; 150us; 53us; 0us; 16497us; 1us; 17404us; 69us; 1807us; 88us; 16507us; 13us; 16544us; 22us; 230us; 24us; 16544us; 25us; 16544us; 29us; 16544us; 30us; 16544us; 32us; 16544us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 46us; 16544us; 56us; 16544us; 62us; 16544us; 70us; 16544us; 71us; 16544us; 72us; 16544us; 73us; 302us; 74us; 16544us; 85us; 16544us; 87us; 38us; 88us; 16544us; 89us; 16544us; 91us; 16544us; 97us; 16544us; 99us; 16544us; 100us; 274us; 105us; 16544us; 106us; 16544us; 107us; 16544us; 113us; 16544us; 114us; 16544us; 115us; 16544us; 116us; 16544us; 118us; 16544us; 120us; 16544us; 121us; 16544us; 122us; 16544us; 123us; 16544us; 124us; 16544us; 125us; 16544us; 129us; 16544us; 132us; 16544us; 133us; 16544us; 135us; 16544us; 136us; 16544us; 145us; 16544us; 146us; 16544us; 147us; 16544us; 149us; 16544us; 153us; 16544us; 154us; 16544us; 157us; 16544us; 158us; 16544us; 161us; 16544us; 162us; 16544us; 163us; 16544us; 165us; 16544us; 166us; 16544us; 167us; 16544us; 168us; 16544us; 169us; 16544us; 170us; 16544us; 171us; 16544us; 172us; 16544us; 173us; 16544us; 174us; 16544us; 175us; 16544us; 176us; 16544us; 177us; 16544us; 179us; 16544us; 180us; 16544us; 182us; 16544us; 183us; 16544us; 186us; 16544us; 191us; 16544us; 192us; 16544us; 193us; 16544us; 197us; 16544us; 198us; 16544us; 199us; 16544us; 200us; 16544us; 201us; 250us; 0us; 16499us; 4us; 16626us; 43us; 482us; 44us; 481us; 45us; 483us; 201us; 245us; 80us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 37us; 1841us; 38us; 1844us; 39us; 1846us; 40us; 1849us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 107us; 1845us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 120us; 685us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 136us; 700us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 149us; 1850us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 89us; 16507us; 13us; 16544us; 22us; 230us; 24us; 16544us; 25us; 16544us; 29us; 16544us; 30us; 16544us; 32us; 16544us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 46us; 16544us; 56us; 16544us; 62us; 16544us; 69us; 269us; 70us; 16544us; 71us; 16544us; 72us; 16544us; 73us; 302us; 74us; 16544us; 85us; 16544us; 87us; 38us; 88us; 16544us; 89us; 16544us; 91us; 16544us; 97us; 16544us; 99us; 16544us; 100us; 274us; 105us; 16544us; 106us; 16544us; 107us; 16544us; 113us; 16544us; 114us; 16544us; 115us; 16544us; 116us; 16544us; 118us; 16544us; 120us; 16544us; 121us; 16544us; 122us; 16544us; 123us; 16544us; 124us; 16544us; 125us; 16544us; 129us; 16544us; 132us; 16544us; 133us; 16544us; 135us; 16544us; 136us; 16544us; 145us; 16544us; 146us; 16544us; 147us; 16544us; 149us; 16544us; 153us; 16544us; 154us; 16544us; 157us; 16544us; 158us; 16544us; 161us; 16544us; 162us; 16544us; 163us; 16544us; 165us; 16544us; 166us; 16544us; 167us; 16544us; 168us; 16544us; 169us; 16544us; 170us; 16544us; 171us; 16544us; 172us; 16544us; 173us; 16544us; 174us; 16544us; 175us; 16544us; 176us; 16544us; 177us; 16544us; 179us; 16544us; 180us; 16544us; 182us; 16544us; 183us; 16544us; 186us; 16544us; 191us; 16544us; 192us; 16544us; 193us; 16544us; 197us; 16544us; 198us; 16544us; 199us; 16544us; 200us; 16544us; 201us; 250us; 0us; 16500us; 0us; 16501us; 87us; 16507us; 13us; 16544us; 24us; 16544us; 25us; 16544us; 29us; 16544us; 30us; 16544us; 32us; 16544us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 46us; 16544us; 56us; 16544us; 62us; 16544us; 70us; 16544us; 71us; 16544us; 72us; 16544us; 73us; 302us; 74us; 16544us; 85us; 16544us; 87us; 38us; 88us; 16544us; 89us; 16544us; 91us; 16544us; 97us; 16544us; 99us; 16544us; 100us; 274us; 105us; 16544us; 106us; 16544us; 107us; 16544us; 113us; 16544us; 114us; 16544us; 115us; 16544us; 116us; 16544us; 118us; 16544us; 120us; 16544us; 121us; 16544us; 122us; 16544us; 123us; 16544us; 124us; 16544us; 125us; 16544us; 129us; 16544us; 132us; 16544us; 133us; 16544us; 135us; 16544us; 136us; 16544us; 145us; 16544us; 146us; 16544us; 147us; 16544us; 149us; 16544us; 153us; 16544us; 154us; 16544us; 157us; 16544us; 158us; 16544us; 161us; 16544us; 162us; 16544us; 163us; 16544us; 165us; 16544us; 166us; 16544us; 167us; 16544us; 168us; 16544us; 169us; 16544us; 170us; 16544us; 171us; 16544us; 172us; 16544us; 173us; 16544us; 174us; 16544us; 175us; 16544us; 176us; 16544us; 177us; 16544us; 179us; 16544us; 180us; 16544us; 182us; 16544us; 183us; 16544us; 186us; 16544us; 191us; 16544us; 192us; 16544us; 193us; 16544us; 197us; 16544us; 198us; 16544us; 199us; 16544us; 200us; 16544us; 201us; 235us; 5us; 32768us; 10us; 994us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 201us; 980us; 1us; 17408us; 21us; 1809us; 0us; 16502us; 0us; 16503us; 6us; 32768us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 21us; 1791us; 67us; 1790us; 83us; 1789us; 0us; 16504us; 0us; 16505us; 0us; 16506us; 4us; 16626us; 43us; 482us; 44us; 481us; 45us; 483us; 201us; 245us; 80us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 37us; 1841us; 38us; 1844us; 39us; 1846us; 40us; 1849us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 107us; 1845us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 120us; 685us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 136us; 700us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 149us; 1850us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 28us; 16510us; 21us; 1791us; 62us; 1180us; 63us; 1172us; 67us; 1790us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 83us; 1789us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1249us; 101us; 1166us; 127us; 1163us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 87us; 16509us; 13us; 16544us; 24us; 16544us; 25us; 16544us; 29us; 16544us; 30us; 16544us; 32us; 16544us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 46us; 16544us; 56us; 16544us; 62us; 16544us; 70us; 16544us; 71us; 16544us; 72us; 16544us; 73us; 302us; 74us; 16544us; 85us; 16544us; 87us; 38us; 88us; 16544us; 89us; 16544us; 91us; 16544us; 97us; 16544us; 99us; 16544us; 100us; 274us; 105us; 16544us; 106us; 16544us; 107us; 16544us; 113us; 16544us; 114us; 16544us; 115us; 16544us; 116us; 16544us; 118us; 16544us; 120us; 16544us; 121us; 16544us; 122us; 16544us; 123us; 16544us; 124us; 16544us; 125us; 16544us; 129us; 16544us; 132us; 16544us; 133us; 16544us; 135us; 16544us; 136us; 16544us; 145us; 16544us; 146us; 16544us; 147us; 16544us; 149us; 16544us; 153us; 16544us; 154us; 16544us; 157us; 16544us; 158us; 16544us; 161us; 16544us; 162us; 16544us; 163us; 16544us; 165us; 16544us; 166us; 16544us; 167us; 16544us; 168us; 16544us; 169us; 16544us; 170us; 16544us; 171us; 16544us; 172us; 16544us; 173us; 16544us; 174us; 16544us; 175us; 16544us; 176us; 16544us; 177us; 16544us; 179us; 16544us; 180us; 16544us; 182us; 16544us; 183us; 16544us; 186us; 16544us; 191us; 16544us; 192us; 16544us; 193us; 16544us; 197us; 16544us; 198us; 16544us; 199us; 16544us; 200us; 16544us; 201us; 250us; 0us; 16508us; 0us; 16511us; 0us; 16512us; 21us; 16515us; 21us; 1791us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 67us; 1790us; 73us; 302us; 83us; 1789us; 87us; 38us; 100us; 274us; 107us; 16544us; 120us; 16544us; 136us; 16544us; 149us; 16544us; 161us; 16544us; 201us; 250us; 0us; 16513us; 87us; 16516us; 13us; 16544us; 24us; 16544us; 25us; 16544us; 29us; 16544us; 30us; 16544us; 32us; 16544us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 46us; 16544us; 56us; 16544us; 62us; 16544us; 70us; 16544us; 71us; 16544us; 72us; 16544us; 73us; 302us; 74us; 16544us; 85us; 16544us; 87us; 38us; 88us; 16544us; 89us; 16544us; 91us; 16544us; 97us; 16544us; 99us; 16544us; 100us; 274us; 105us; 16544us; 106us; 16544us; 107us; 16544us; 113us; 16544us; 114us; 16544us; 115us; 16544us; 116us; 16544us; 118us; 16544us; 120us; 16544us; 121us; 16544us; 122us; 16544us; 123us; 16544us; 124us; 16544us; 125us; 16544us; 129us; 16544us; 132us; 16544us; 133us; 16544us; 135us; 16544us; 136us; 16544us; 145us; 16544us; 146us; 16544us; 147us; 16544us; 149us; 16544us; 153us; 16544us; 154us; 16544us; 157us; 16544us; 158us; 16544us; 161us; 16544us; 162us; 16544us; 163us; 16544us; 165us; 16544us; 166us; 16544us; 167us; 16544us; 168us; 16544us; 169us; 16544us; 170us; 16544us; 171us; 16544us; 172us; 16544us; 173us; 16544us; 174us; 16544us; 175us; 16544us; 176us; 16544us; 177us; 16544us; 179us; 16544us; 180us; 16544us; 182us; 16544us; 183us; 16544us; 186us; 16544us; 191us; 16544us; 192us; 16544us; 193us; 16544us; 197us; 16544us; 198us; 16544us; 199us; 16544us; 200us; 16544us; 201us; 250us; 0us; 16514us; 3us; 32768us; 21us; 1791us; 67us; 1790us; 83us; 1789us; 6us; 32768us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 21us; 1791us; 67us; 1790us; 83us; 1789us; 4us; 32768us; 21us; 1791us; 67us; 1790us; 83us; 1789us; 141us; 295us; 4us; 16544us; 73us; 302us; 87us; 38us; 100us; 274us; 201us; 250us; 0us; 16517us; 0us; 16518us; 0us; 16519us; 3us; 16626us; 43us; 482us; 44us; 481us; 45us; 483us; 11us; 32768us; 33us; 702us; 37us; 1841us; 38us; 1844us; 39us; 1846us; 40us; 1849us; 41us; 715us; 107us; 1845us; 120us; 685us; 136us; 700us; 149us; 1850us; 161us; 696us; 0us; 16520us; 1us; 16520us; 126us; 1007us; 0us; 16521us; 73us; 16521us; 13us; 1111us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 1012us; 0us; 16522us; 1us; 16544us; 73us; 302us; 1us; 16566us; 130us; 343us; 0us; 16523us; 0us; 16524us; 1us; 32768us; 69us; 269us; 5us; 32768us; 22us; 281us; 46us; 1731us; 56us; 1818us; 135us; 1819us; 191us; 1730us; 0us; 16525us; 2us; 16543us; 10us; 994us; 201us; 980us; 0us; 16526us; 0us; 16527us; 5us; 32768us; 37us; 1841us; 38us; 1844us; 46us; 1731us; 107us; 1845us; 191us; 1730us; 1us; 16528us; 76us; 1733us; 31us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 6us; 16529us; 36us; 1611us; 46us; 1731us; 70us; 1624us; 90us; 1724us; 188us; 1727us; 191us; 1730us; 4us; 32768us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 76us; 1733us; 0us; 16530us; 1us; 16531us; 76us; 1733us; 6us; 16544us; 56us; 1818us; 73us; 302us; 87us; 38us; 100us; 274us; 135us; 1819us; 201us; 251us; 5us; 32768us; 10us; 994us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 201us; 980us; 0us; 16532us; 0us; 16533us; 5us; 32768us; 10us; 994us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 201us; 980us; 0us; 16534us; 0us; 16535us; 0us; 16536us; 0us; 16537us; 1us; 16538us; 76us; 1733us; 87us; 16507us; 13us; 16544us; 24us; 16544us; 25us; 16544us; 29us; 16544us; 30us; 16544us; 32us; 16544us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 46us; 16544us; 56us; 16544us; 62us; 16544us; 70us; 16544us; 71us; 16544us; 72us; 16544us; 73us; 302us; 74us; 16544us; 85us; 16544us; 87us; 38us; 88us; 16544us; 89us; 16544us; 91us; 16544us; 97us; 16544us; 99us; 16544us; 100us; 274us; 105us; 16544us; 106us; 16544us; 107us; 16544us; 113us; 16544us; 114us; 16544us; 115us; 16544us; 116us; 16544us; 118us; 16544us; 120us; 16544us; 121us; 16544us; 122us; 16544us; 123us; 16544us; 124us; 16544us; 125us; 16544us; 129us; 16544us; 132us; 16544us; 133us; 16544us; 135us; 16544us; 136us; 16544us; 145us; 16544us; 146us; 16544us; 147us; 16544us; 149us; 16544us; 153us; 16544us; 154us; 16544us; 157us; 16544us; 158us; 16544us; 161us; 16544us; 162us; 16544us; 163us; 16544us; 165us; 16544us; 166us; 16544us; 167us; 16544us; 168us; 16544us; 169us; 16544us; 170us; 16544us; 171us; 16544us; 172us; 16544us; 173us; 16544us; 174us; 16544us; 175us; 16544us; 176us; 16544us; 177us; 16544us; 179us; 16544us; 180us; 16544us; 182us; 16544us; 183us; 16544us; 186us; 16544us; 191us; 16544us; 192us; 16544us; 193us; 16544us; 197us; 16544us; 198us; 16544us; 199us; 16544us; 200us; 16544us; 201us; 252us; 3us; 32768us; 10us; 994us; 141us; 293us; 201us; 980us; 0us; 16539us; 0us; 16540us; 0us; 16541us; 6us; 16544us; 19us; 16588us; 20us; 16588us; 22us; 383us; 73us; 302us; 141us; 16588us; 201us; 389us; 3us; 32768us; 19us; 1800us; 20us; 1801us; 141us; 1802us; 0us; 16542us; 0us; 16543us; 1us; 16545us; 73us; 302us; 0us; 16546us; 14us; 32768us; 10us; 994us; 16us; 1873us; 37us; 1842us; 38us; 1844us; 39us; 1847us; 40us; 1849us; 46us; 1731us; 60us; 1871us; 93us; 1872us; 107us; 1845us; 149us; 1850us; 162us; 333us; 191us; 1730us; 201us; 307us; 2us; 17410us; 21us; 1796us; 83us; 1797us; 8us; 32768us; 10us; 994us; 16us; 1873us; 37us; 1869us; 39us; 1870us; 55us; 305us; 60us; 1871us; 93us; 1872us; 201us; 980us; 1us; 17408us; 21us; 1809us; 0us; 16547us; 1us; 16904us; 55us; 308us; 1us; 17408us; 21us; 1809us; 0us; 16548us; 0us; 16549us; 0us; 16550us; 0us; 16551us; 9us; 17409us; 37us; 1841us; 38us; 1844us; 39us; 1846us; 40us; 1849us; 46us; 1731us; 107us; 1845us; 149us; 1850us; 162us; 333us; 191us; 1730us; 0us; 16552us; 3us; 17441us; 35us; 1839us; 36us; 1838us; 76us; 1733us; 30us; 17166us; 56us; 1522us; 71us; 1378us; 72us; 1525us; 91us; 1384us; 105us; 1360us; 121us; 1359us; 135us; 1364us; 147us; 1358us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 16553us; 3us; 32768us; 22us; 322us; 46us; 1731us; 191us; 1730us; 3us; 17441us; 35us; 1839us; 36us; 1838us; 76us; 1733us; 30us; 17166us; 56us; 1522us; 71us; 1378us; 72us; 1525us; 91us; 1384us; 105us; 1360us; 121us; 1359us; 135us; 1364us; 147us; 1358us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 16554us; 2us; 32768us; 46us; 1731us; 191us; 1730us; 4us; 32768us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 76us; 1733us; 2us; 17441us; 35us; 1839us; 36us; 1838us; 30us; 17166us; 56us; 1522us; 71us; 1378us; 72us; 1525us; 91us; 1384us; 105us; 1360us; 121us; 1359us; 135us; 1364us; 147us; 1358us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 16555us; 1us; 32768us; 77us; 328us; 0us; 16556us; 1us; 32768us; 77us; 330us; 0us; 16557us; 1us; 17337us; 77us; 332us; 0us; 16558us; 1us; 32768us; 77us; 334us; 0us; 16559us; 10us; 32768us; 30us; 706us; 33us; 702us; 37us; 1841us; 38us; 1844us; 41us; 715us; 48us; 336us; 107us; 1845us; 108us; 452us; 136us; 700us; 161us; 696us; 0us; 16560us; 0us; 16561us; 0us; 16562us; 0us; 16563us; 3us; 16620us; 43us; 482us; 44us; 481us; 45us; 483us; 1us; 16688us; 84us; 590us; 0us; 16564us; 1us; 16544us; 73us; 302us; 1us; 16566us; 130us; 343us; 0us; 16565us; 75us; 16544us; 10us; 16567us; 14us; 16567us; 15us; 16567us; 16us; 16567us; 17us; 16567us; 19us; 16567us; 20us; 16567us; 21us; 16567us; 22us; 17406us; 30us; 16567us; 33us; 16567us; 37us; 16567us; 38us; 16567us; 39us; 16567us; 40us; 16567us; 41us; 16567us; 46us; 17406us; 47us; 16567us; 48us; 16567us; 49us; 17406us; 50us; 16567us; 51us; 16567us; 52us; 16567us; 54us; 16567us; 56us; 17406us; 58us; 17406us; 66us; 17406us; 67us; 16567us; 69us; 1808us; 72us; 17406us; 73us; 302us; 83us; 16567us; 86us; 296us; 87us; 16567us; 90us; 17406us; 100us; 16567us; 105us; 17406us; 107us; 16567us; 108us; 16567us; 110us; 16567us; 112us; 17406us; 118us; 16567us; 120us; 16567us; 121us; 17406us; 130us; 16567us; 136us; 16567us; 141us; 16567us; 147us; 17406us; 149us; 16567us; 150us; 16567us; 151us; 17406us; 161us; 16567us; 165us; 17406us; 166us; 17406us; 167us; 17406us; 168us; 17406us; 169us; 17406us; 170us; 17406us; 171us; 17406us; 172us; 17406us; 173us; 17406us; 174us; 17406us; 175us; 17406us; 176us; 17406us; 177us; 17406us; 179us; 17406us; 180us; 17406us; 185us; 17406us; 188us; 17406us; 191us; 17406us; 192us; 17406us; 193us; 17406us; 199us; 17406us; 200us; 17406us; 201us; 16567us; 6us; 16544us; 22us; 357us; 49us; 556us; 56us; 558us; 73us; 302us; 110us; 557us; 151us; 369us; 0us; 16568us; 0us; 16569us; 3us; 16626us; 43us; 482us; 44us; 481us; 45us; 483us; 2us; 17441us; 35us; 1839us; 36us; 1838us; 1us; 32768us; 91us; 824us; 1us; 16635us; 131us; 499us; 1us; 32768us; 69us; 355us; 6us; 16544us; 22us; 357us; 49us; 556us; 56us; 558us; 73us; 302us; 110us; 557us; 151us; 369us; 0us; 16570us; 11us; 16544us; 10us; 16588us; 15us; 16588us; 16us; 16588us; 17us; 16588us; 22us; 379us; 49us; 556us; 56us; 558us; 73us; 302us; 110us; 557us; 151us; 369us; 201us; 389us; 1us; 17408us; 21us; 1809us; 7us; 16544us; 10us; 16588us; 15us; 16588us; 16us; 16588us; 17us; 16588us; 73us; 302us; 86us; 16588us; 201us; 389us; 1us; 16630us; 86us; 488us; 5us; 32768us; 10us; 994us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 201us; 980us; 1us; 16630us; 86us; 488us; 0us; 16571us; 0us; 16572us; 1us; 16630us; 86us; 488us; 0us; 16573us; 0us; 16574us; 0us; 16575us; 1us; 32768us; 119us; 370us; 33us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 73us; 302us; 74us; 1581us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 16576us; 0us; 16577us; 5us; 16544us; 10us; 16588us; 22us; 383us; 73us; 302us; 141us; 16588us; 201us; 377us; 3us; 32768us; 10us; 994us; 141us; 375us; 201us; 980us; 0us; 16578us; 0us; 16579us; 4us; 16544us; 10us; 16588us; 73us; 302us; 141us; 378us; 201us; 389us; 0us; 16580us; 6us; 16544us; 10us; 16588us; 15us; 16588us; 16us; 16588us; 17us; 16588us; 73us; 302us; 201us; 389us; 5us; 32768us; 10us; 994us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 201us; 980us; 0us; 16581us; 0us; 16582us; 6us; 16544us; 10us; 16588us; 15us; 16588us; 16us; 16588us; 17us; 16588us; 73us; 302us; 201us; 389us; 5us; 32768us; 10us; 994us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 201us; 980us; 0us; 16583us; 0us; 16584us; 0us; 16585us; 0us; 16586us; 10us; 16544us; 10us; 16588us; 15us; 16588us; 16us; 16588us; 17us; 16588us; 19us; 16588us; 20us; 16588us; 73us; 302us; 86us; 16588us; 141us; 16588us; 201us; 389us; 0us; 16587us; 2us; 17410us; 21us; 1796us; 83us; 1797us; 10us; 16544us; 10us; 16588us; 15us; 16588us; 16us; 16588us; 17us; 16588us; 19us; 16588us; 20us; 16588us; 73us; 302us; 86us; 16588us; 141us; 16588us; 201us; 389us; 0us; 16589us; 1us; 17416us; 109us; 1812us; 0us; 16590us; 1us; 17416us; 109us; 1812us; 2us; 32768us; 20us; 398us; 201us; 399us; 0us; 16591us; 0us; 16592us; 1us; 16593us; 130us; 401us; 1us; 17416us; 109us; 1812us; 0us; 16594us; 1us; 16544us; 73us; 302us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 1us; 17234us; 77us; 1559us; 1us; 32768us; 69us; 407us; 73us; 32768us; 13us; 1111us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 16595us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 1us; 17234us; 77us; 1559us; 3us; 32768us; 26us; 396us; 69us; 412us; 86us; 394us; 73us; 32768us; 13us; 1111us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 16596us; 0us; 16597us; 1us; 16598us; 48us; 416us; 0us; 16599us; 3us; 16626us; 43us; 482us; 44us; 481us; 45us; 483us; 3us; 16626us; 43us; 482us; 44us; 481us; 45us; 483us; 15us; 32768us; 14us; 560us; 30us; 706us; 33us; 702us; 41us; 715us; 47us; 335us; 48us; 337us; 50us; 415us; 51us; 338us; 52us; 339us; 54us; 491us; 108us; 452us; 110us; 559us; 118us; 444us; 136us; 700us; 161us; 696us; 49us; 32768us; 14us; 560us; 30us; 706us; 33us; 702us; 41us; 715us; 46us; 1731us; 47us; 335us; 48us; 337us; 50us; 415us; 51us; 338us; 52us; 339us; 54us; 491us; 56us; 544us; 58us; 631us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 535us; 105us; 1672us; 108us; 452us; 110us; 559us; 112us; 1670us; 118us; 444us; 121us; 1671us; 136us; 700us; 147us; 1669us; 161us; 696us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 193us; 538us; 199us; 1824us; 200us; 795us; 0us; 16600us; 0us; 16601us; 2us; 17416us; 108us; 458us; 109us; 1812us; 1us; 17402us; 19us; 1806us; 0us; 16602us; 31us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 7us; 16628us; 36us; 1611us; 46us; 1731us; 70us; 1624us; 86us; 485us; 90us; 1724us; 188us; 1727us; 191us; 1730us; 0us; 16603us; 1us; 17416us; 109us; 1812us; 3us; 32768us; 91us; 1736us; 99us; 1741us; 191us; 1730us; 2us; 16685us; 34us; 1840us; 159us; 17443us; 1us; 32768us; 77us; 433us; 33us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 73us; 302us; 74us; 1581us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 2us; 16480us; 26us; 197us; 86us; 195us; 1us; 17402us; 19us; 1806us; 0us; 16604us; 0us; 16605us; 1us; 17402us; 19us; 1806us; 0us; 16606us; 1us; 17402us; 19us; 1806us; 0us; 16607us; 1us; 17402us; 19us; 1806us; 0us; 16608us; 35us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 74us; 893us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 1us; 16635us; 131us; 499us; 1us; 32768us; 69us; 447us; 73us; 32768us; 13us; 1111us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 1us; 17402us; 19us; 1806us; 0us; 16609us; 1us; 16544us; 73us; 302us; 0us; 16610us; 1us; 17418us; 117us; 1813us; 3us; 16620us; 43us; 482us; 44us; 481us; 45us; 483us; 1us; 32768us; 191us; 1730us; 1us; 32768us; 77us; 456us; 32us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 16611us; 1us; 17418us; 117us; 1813us; 3us; 16620us; 43us; 482us; 44us; 481us; 45us; 483us; 1us; 32768us; 191us; 1730us; 1us; 16613us; 77us; 466us; 1us; 32768us; 69us; 463us; 73us; 32768us; 13us; 1111us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 2us; 16480us; 26us; 197us; 86us; 195us; 0us; 16612us; 32us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 16614us; 1us; 16853us; 76us; 469us; 3us; 32768us; 91us; 1736us; 99us; 1741us; 191us; 1730us; 0us; 16615us; 1us; 32768us; 76us; 472us; 3us; 32768us; 91us; 1736us; 99us; 1741us; 191us; 1730us; 0us; 16616us; 0us; 16617us; 4us; 32768us; 66us; 476us; 91us; 1736us; 99us; 1741us; 191us; 1730us; 1us; 32768us; 76us; 477us; 3us; 32768us; 91us; 1736us; 99us; 1741us; 191us; 1730us; 0us; 16618us; 0us; 16619us; 0us; 16621us; 0us; 16622us; 0us; 16623us; 0us; 16624us; 0us; 16625us; 2us; 16544us; 22us; 505us; 73us; 302us; 3us; 32768us; 19us; 1800us; 20us; 1801us; 141us; 1802us; 0us; 16627us; 6us; 16544us; 19us; 16588us; 20us; 16588us; 22us; 383us; 73us; 302us; 141us; 16588us; 201us; 389us; 3us; 32768us; 19us; 1800us; 20us; 1801us; 141us; 1802us; 0us; 16629us; 37us; 32768us; 10us; 994us; 16us; 1873us; 37us; 1869us; 39us; 1870us; 46us; 1731us; 56us; 1659us; 60us; 1871us; 66us; 1653us; 87us; 1650us; 90us; 1724us; 91us; 1643us; 93us; 1872us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 201us; 980us; 33us; 16638us; 35us; 1839us; 36us; 1838us; 56us; 17441us; 71us; 17441us; 72us; 17441us; 91us; 17441us; 105us; 17441us; 121us; 17441us; 131us; 502us; 135us; 17441us; 147us; 17441us; 154us; 17441us; 165us; 17441us; 166us; 17441us; 167us; 17441us; 168us; 17441us; 169us; 17441us; 170us; 17441us; 171us; 17441us; 172us; 17441us; 173us; 17441us; 174us; 17441us; 175us; 17441us; 176us; 17441us; 177us; 17441us; 179us; 17441us; 180us; 17441us; 192us; 17441us; 193us; 17441us; 197us; 17441us; 198us; 17441us; 199us; 17441us; 200us; 17441us; 0us; 16631us; 30us; 32768us; 56us; 1522us; 71us; 1378us; 72us; 1525us; 91us; 1384us; 105us; 1360us; 121us; 1359us; 135us; 1364us; 147us; 1358us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 1us; 16638us; 131us; 502us; 0us; 16632us; 0us; 16633us; 0us; 16634us; 1us; 32768us; 191us; 1730us; 0us; 16636us; 0us; 16637us; 2us; 32768us; 153us; 504us; 191us; 1730us; 0us; 16639us; 0us; 16640us; 1us; 16544us; 73us; 302us; 5us; 32768us; 10us; 994us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 201us; 980us; 0us; 16641us; 0us; 16642us; 0us; 16643us; 2us; 17410us; 21us; 1796us; 83us; 1797us; 14us; 16544us; 10us; 16645us; 14us; 16645us; 15us; 16645us; 16us; 16645us; 17us; 16645us; 19us; 16645us; 20us; 16645us; 21us; 16645us; 60us; 16645us; 61us; 16645us; 73us; 302us; 110us; 16645us; 141us; 16645us; 194us; 16645us; 0us; 16644us; 3us; 32768us; 48us; 524us; 51us; 525us; 201us; 521us; 4us; 17416us; 48us; 524us; 51us; 525us; 109us; 1812us; 201us; 521us; 3us; 17416us; 108us; 458us; 109us; 1812us; 201us; 520us; 1us; 17402us; 19us; 1806us; 0us; 16646us; 1us; 17402us; 19us; 1806us; 0us; 16647us; 0us; 16648us; 1us; 17416us; 109us; 1812us; 1us; 17402us; 19us; 1806us; 0us; 16649us; 0us; 16650us; 0us; 16651us; 3us; 16626us; 43us; 482us; 44us; 481us; 45us; 483us; 34us; 32768us; 46us; 1731us; 56us; 544us; 58us; 631us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 535us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 193us; 538us; 199us; 1824us; 200us; 795us; 2us; 17258us; 76us; 1733us; 154us; 529us; 1us; 32768us; 199us; 530us; 2us; 32768us; 10us; 994us; 201us; 980us; 0us; 16652us; 0us; 16653us; 0us; 16654us; 0us; 16655us; 33us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 553us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 201us; 1673us; 3us; 32768us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 0us; 16656us; 2us; 16544us; 73us; 302us; 201us; 542us; 5us; 32768us; 10us; 994us; 60us; 1851us; 61us; 1853us; 194us; 1854us; 201us; 980us; 0us; 16657us; 0us; 16658us; 3us; 32768us; 60us; 1851us; 61us; 1853us; 194us; 1854us; 0us; 16659us; 2us; 32768us; 72us; 547us; 91us; 1660us; 0us; 16660us; 0us; 16661us; 2us; 16544us; 73us; 302us; 201us; 551us; 3us; 32768us; 10us; 994us; 65us; 1855us; 201us; 980us; 0us; 16662us; 0us; 16663us; 1us; 32768us; 65us; 1855us; 0us; 16664us; 30us; 32768us; 46us; 1731us; 56us; 1659us; 66us; 1653us; 87us; 1650us; 90us; 1724us; 91us; 1654us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 1us; 16799us; 87us; 555us; 0us; 16665us; 0us; 16666us; 0us; 16667us; 0us; 16668us; 0us; 16669us; 0us; 16670us; 5us; 32768us; 46us; 1731us; 90us; 1724us; 91us; 567us; 188us; 1727us; 191us; 1730us; 3us; 16671us; 34us; 1840us; 76us; 1733us; 159us; 17443us; 2us; 32768us; 46us; 1731us; 191us; 1730us; 1us; 16672us; 76us; 1733us; 0us; 16673us; 0us; 16674us; 1us; 16544us; 73us; 302us; 4us; 32768us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 96us; 572us; 0us; 16675us; 2us; 16688us; 84us; 590us; 96us; 572us; 1us; 16681us; 96us; 573us; 1us; 16544us; 73us; 302us; 2us; 16544us; 73us; 302us; 142us; 582us; 0us; 16676us; 0us; 16677us; 2us; 32768us; 90us; 1724us; 188us; 1727us; 0us; 16678us; 1us; 32768us; 159us; 579us; 1us; 16544us; 73us; 302us; 1us; 32768us; 160us; 581us; 0us; 16679us; 0us; 16680us; 1us; 32768us; 159us; 584us; 3us; 16544us; 73us; 302us; 84us; 16682us; 160us; 16682us; 1us; 16688us; 84us; 590us; 1us; 32768us; 160us; 587us; 0us; 16683us; 0us; 16684us; 27us; 16686us; 10us; 16836us; 16us; 16836us; 21us; 16836us; 26us; 16836us; 37us; 16836us; 39us; 16836us; 58us; 16836us; 59us; 16836us; 60us; 16836us; 61us; 16836us; 64us; 16836us; 69us; 16836us; 77us; 16836us; 78us; 16836us; 83us; 16836us; 84us; 16836us; 86us; 16836us; 88us; 16836us; 92us; 16836us; 93us; 16836us; 94us; 16836us; 96us; 16836us; 97us; 16836us; 126us; 16836us; 131us; 16836us; 194us; 16836us; 201us; 16836us; 4us; 32768us; 52us; 597us; 90us; 1724us; 91us; 612us; 188us; 1727us; 1us; 16689us; 130us; 594us; 1us; 17231us; 130us; 594us; 1us; 17233us; 130us; 594us; 4us; 32768us; 52us; 597us; 90us; 1724us; 91us; 612us; 188us; 1727us; 0us; 16690us; 0us; 16691us; 2us; 32768us; 90us; 1724us; 188us; 1727us; 1us; 32768us; 77us; 599us; 32us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 16692us; 2us; 32768us; 77us; 604us; 79us; 602us; 32us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 16693us; 5us; 32768us; 56us; 605us; 91us; 609us; 147us; 608us; 151us; 619us; 191us; 606us; 0us; 16694us; 3us; 16701us; 34us; 1682us; 56us; 607us; 159us; 1684us; 0us; 16695us; 0us; 16696us; 1us; 16544us; 73us; 302us; 3us; 32768us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 0us; 16697us; 31us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 4us; 32768us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 101us; 622us; 1us; 32768us; 77us; 615us; 1us; 32768us; 91us; 616us; 1us; 16544us; 73us; 302us; 3us; 32768us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 0us; 16698us; 2us; 32768us; 34us; 1682us; 159us; 1684us; 0us; 16699us; 0us; 16700us; 31us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 6us; 16702us; 36us; 1611us; 46us; 1731us; 70us; 1624us; 90us; 1724us; 188us; 1727us; 191us; 1730us; 6us; 16703us; 36us; 1611us; 46us; 1731us; 70us; 1624us; 90us; 1724us; 188us; 1727us; 191us; 1730us; 1us; 16544us; 73us; 302us; 0us; 16704us; 1us; 32768us; 58us; 631us; 1us; 16544us; 73us; 302us; 0us; 16705us; 2us; 16706us; 21us; 1809us; 58us; 17408us; 0us; 16707us; 1us; 16709us; 58us; 631us; 1us; 16544us; 73us; 302us; 0us; 16708us; 3us; 16620us; 43us; 482us; 44us; 481us; 45us; 483us; 3us; 32768us; 91us; 649us; 99us; 1741us; 191us; 1730us; 4us; 17408us; 21us; 1809us; 69us; 645us; 77us; 642us; 119us; 639us; 0us; 16710us; 32us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 193us; 538us; 199us; 1824us; 200us; 795us; 1us; 17408us; 21us; 1809us; 0us; 16711us; 33us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 73us; 302us; 74us; 1581us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 1us; 17408us; 21us; 1809us; 0us; 16712us; 18us; 32768us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 192us; 1825us; 199us; 1824us; 200us; 795us; 1us; 17408us; 21us; 1809us; 0us; 16713us; 0us; 16714us; 29us; 32768us; 58us; 1776us; 62us; 1758us; 63us; 1756us; 69us; 1760us; 70us; 652us; 74us; 1764us; 78us; 650us; 82us; 1768us; 88us; 1765us; 89us; 1766us; 95us; 1759us; 101us; 1761us; 142us; 1771us; 144us; 1767us; 154us; 1773us; 157us; 1770us; 159us; 1762us; 160us; 1763us; 181us; 1769us; 182us; 1757us; 183us; 1754us; 184us; 1753us; 185us; 1755us; 186us; 1748us; 187us; 1752us; 188us; 1751us; 189us; 1750us; 190us; 1749us; 201us; 1739us; 3us; 32768us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 0us; 16715us; 1us; 32768us; 59us; 653us; 3us; 32768us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 0us; 16716us; 4us; 17337us; 21us; 1809us; 58us; 17408us; 69us; 657us; 119us; 661us; 0us; 16717us; 18us; 32768us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 192us; 1825us; 199us; 1824us; 200us; 795us; 1us; 17408us; 21us; 1809us; 45us; 16718us; 10us; 16721us; 14us; 16721us; 15us; 16721us; 16us; 16721us; 17us; 16721us; 19us; 16721us; 20us; 16721us; 21us; 16721us; 30us; 16721us; 33us; 16721us; 37us; 16721us; 38us; 16721us; 39us; 16721us; 40us; 16721us; 41us; 16721us; 43us; 16721us; 44us; 16721us; 45us; 16721us; 47us; 16721us; 48us; 16721us; 50us; 16721us; 51us; 16721us; 52us; 16721us; 54us; 16721us; 67us; 16721us; 73us; 16721us; 83us; 16721us; 86us; 16721us; 87us; 16721us; 92us; 16721us; 93us; 16721us; 94us; 16721us; 100us; 16721us; 107us; 16721us; 108us; 16721us; 110us; 16721us; 118us; 16721us; 120us; 16721us; 130us; 16721us; 136us; 16721us; 141us; 16721us; 149us; 16721us; 150us; 16721us; 161us; 16721us; 201us; 16721us; 0us; 16719us; 32us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 193us; 538us; 199us; 1824us; 200us; 795us; 0us; 16720us; 1us; 16723us; 95us; 664us; 31us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 16722us; 1us; 17337us; 77us; 667us; 31us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 6us; 16724us; 36us; 1611us; 46us; 1731us; 70us; 1624us; 90us; 1724us; 188us; 1727us; 191us; 1730us; 6us; 16725us; 36us; 1611us; 46us; 1731us; 70us; 1624us; 90us; 1724us; 188us; 1727us; 191us; 1730us; 0us; 16726us; 0us; 16727us; 2us; 17410us; 21us; 1796us; 83us; 1797us; 7us; 16544us; 10us; 17409us; 60us; 17409us; 61us; 17409us; 65us; 17409us; 73us; 302us; 194us; 17409us; 201us; 17409us; 0us; 16728us; 0us; 16729us; 1us; 17418us; 117us; 1813us; 0us; 16730us; 3us; 16620us; 43us; 482us; 44us; 481us; 45us; 483us; 1us; 32768us; 191us; 1730us; 1us; 32768us; 77us; 681us; 32us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 16731us; 1us; 16630us; 86us; 488us; 0us; 16732us; 0us; 16733us; 1us; 16544us; 73us; 302us; 3us; 16620us; 43us; 482us; 44us; 481us; 45us; 483us; 1us; 32768us; 191us; 1730us; 1us; 16737us; 69us; 694us; 0us; 16734us; 1us; 16735us; 119us; 692us; 32us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 193us; 538us; 199us; 1824us; 200us; 795us; 0us; 16736us; 2us; 32768us; 46us; 1731us; 191us; 1730us; 1us; 16738us; 76us; 1733us; 1us; 17412us; 102us; 1811us; 2us; 16544us; 73us; 302us; 201us; 750us; 0us; 16739us; 0us; 16740us; 73us; 32768us; 13us; 1111us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 16741us; 1us; 17412us; 102us; 1811us; 2us; 16544us; 73us; 302us; 201us; 750us; 3us; 32768us; 10us; 994us; 19us; 713us; 201us; 980us; 0us; 16742us; 73us; 32768us; 13us; 1111us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 3us; 32768us; 10us; 994us; 19us; 713us; 201us; 980us; 0us; 16743us; 0us; 16744us; 0us; 16745us; 0us; 16746us; 0us; 16747us; 0us; 16748us; 0us; 16749us; 1us; 16544us; 73us; 302us; 3us; 16620us; 43us; 482us; 44us; 481us; 45us; 483us; 1us; 32768us; 191us; 1730us; 2us; 17441us; 35us; 1839us; 36us; 1838us; 1us; 32768us; 91us; 720us; 4us; 16544us; 73us; 302us; 92us; 16753us; 93us; 16753us; 94us; 16753us; 3us; 32768us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 0us; 16750us; 1us; 16751us; 96us; 725us; 1us; 16752us; 96us; 727us; 1us; 16544us; 73us; 302us; 0us; 16754us; 1us; 16544us; 73us; 302us; 0us; 16755us; 3us; 32768us; 42us; 739us; 46us; 1731us; 191us; 1730us; 6us; 16756us; 35us; 1839us; 36us; 1838us; 70us; 17441us; 88us; 738us; 95us; 737us; 191us; 1730us; 0us; 16757us; 1us; 16758us; 76us; 1733us; 5us; 16763us; 35us; 1839us; 36us; 1838us; 70us; 17441us; 88us; 738us; 95us; 737us; 1us; 32768us; 70us; 735us; 1us; 32768us; 59us; 736us; 0us; 16759us; 0us; 16760us; 0us; 16761us; 1us; 32768us; 95us; 741us; 1us; 16764us; 95us; 741us; 0us; 16762us; 3us; 32768us; 42us; 740us; 46us; 1731us; 191us; 1730us; 1us; 16767us; 130us; 745us; 0us; 16765us; 2us; 16544us; 73us; 302us; 201us; 750us; 1us; 16767us; 130us; 745us; 0us; 16766us; 1us; 17416us; 109us; 1812us; 0us; 16768us; 0us; 16769us; 1us; 17418us; 117us; 1813us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 1us; 17234us; 77us; 1559us; 3us; 32768us; 10us; 994us; 69us; 755us; 201us; 980us; 74us; 32768us; 13us; 1111us; 22us; 759us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 757us; 0us; 16770us; 0us; 16771us; 0us; 16772us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 5us; 32768us; 10us; 994us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 201us; 980us; 0us; 16773us; 0us; 16774us; 0us; 16775us; 0us; 16778us; 1us; 16776us; 84us; 767us; 0us; 16777us; 2us; 32768us; 90us; 1724us; 188us; 1727us; 2us; 32768us; 69us; 769us; 130us; 771us; 73us; 32768us; 13us; 1111us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 16779us; 2us; 32768us; 90us; 1724us; 188us; 1727us; 0us; 16780us; 0us; 16781us; 2us; 32768us; 56us; 777us; 77us; 775us; 32us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 16782us; 0us; 16783us; 0us; 16784us; 0us; 16785us; 0us; 16786us; 0us; 16787us; 0us; 16788us; 0us; 16789us; 0us; 16790us; 0us; 16791us; 0us; 16792us; 0us; 16793us; 0us; 16794us; 0us; 16795us; 0us; 16796us; 1us; 16796us; 142us; 882us; 0us; 16797us; 0us; 16798us; 0us; 16799us; 0us; 16800us; 1us; 16803us; 185us; 797us; 1us; 32768us; 177us; 798us; 0us; 16801us; 1us; 32768us; 177us; 800us; 1us; 16804us; 185us; 801us; 1us; 32768us; 177us; 802us; 0us; 16802us; 0us; 16805us; 2us; 32768us; 62us; 799us; 177us; 796us; 3us; 32768us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 0us; 16806us; 0us; 16807us; 2us; 32768us; 91us; 804us; 177us; 803us; 0us; 16808us; 1us; 16809us; 34us; 811us; 1us; 32768us; 159us; 1701us; 0us; 16810us; 5us; 16811us; 58us; 844us; 78us; 845us; 88us; 852us; 96us; 850us; 131us; 842us; 0us; 16812us; 1us; 32768us; 191us; 1730us; 0us; 16813us; 1us; 16815us; 77us; 819us; 2us; 16816us; 77us; 819us; 96us; 822us; 32us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 16814us; 3us; 32768us; 73us; 302us; 74us; 815us; 191us; 1730us; 3us; 32768us; 73us; 302us; 74us; 815us; 191us; 1730us; 0us; 16817us; 8us; 32768us; 10us; 994us; 73us; 302us; 74us; 815us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 191us; 1730us; 201us; 829us; 5us; 32768us; 10us; 994us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 201us; 980us; 0us; 16818us; 0us; 16819us; 0us; 16820us; 3us; 16904us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 0us; 16821us; 0us; 16822us; 3us; 16824us; 78us; 845us; 88us; 852us; 96us; 850us; 1us; 16825us; 78us; 845us; 2us; 16829us; 78us; 845us; 88us; 852us; 2us; 16830us; 78us; 845us; 88us; 852us; 1us; 16831us; 78us; 845us; 1us; 16832us; 78us; 845us; 6us; 32768us; 58us; 844us; 69us; 996us; 78us; 845us; 88us; 852us; 96us; 850us; 131us; 842us; 6us; 32768us; 58us; 844us; 69us; 1001us; 78us; 845us; 88us; 852us; 96us; 850us; 131us; 842us; 6us; 32768us; 58us; 844us; 69us; 1087us; 78us; 845us; 88us; 852us; 96us; 850us; 131us; 842us; 6us; 32768us; 58us; 844us; 69us; 1094us; 78us; 845us; 88us; 852us; 96us; 850us; 131us; 842us; 1us; 32768us; 191us; 1730us; 0us; 16823us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 1us; 16826us; 96us; 849us; 0us; 16827us; 0us; 16828us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 2us; 17410us; 21us; 1796us; 83us; 1797us; 0us; 16833us; 1us; 17409us; 191us; 1730us; 0us; 16834us; 1us; 32768us; 69us; 859us; 2us; 17376us; 69us; 859us; 76us; 1783us; 37us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 73us; 302us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 6us; 16835us; 58us; 931us; 77us; 934us; 78us; 937us; 88us; 942us; 96us; 940us; 131us; 929us; 29us; 16687us; 10us; 16855us; 16us; 16855us; 21us; 16855us; 26us; 16855us; 34us; 1840us; 37us; 16855us; 39us; 16855us; 58us; 16855us; 59us; 16855us; 60us; 16855us; 61us; 16855us; 64us; 16855us; 69us; 16855us; 77us; 16855us; 78us; 16855us; 83us; 16855us; 84us; 16855us; 86us; 16855us; 88us; 16855us; 92us; 16855us; 93us; 16855us; 94us; 16855us; 96us; 16855us; 97us; 16855us; 126us; 16855us; 131us; 16855us; 159us; 17443us; 194us; 16855us; 201us; 16855us; 37us; 32768us; 35us; 864us; 36us; 866us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 74us; 893us; 91us; 871us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 0us; 16837us; 35us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 74us; 893us; 91us; 871us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 0us; 16838us; 35us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 74us; 893us; 91us; 871us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 0us; 16839us; 31us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1653us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1654us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 16840us; 0us; 16841us; 63us; 16869us; 10us; 994us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 58us; 1776us; 62us; 1758us; 63us; 1756us; 66us; 468us; 69us; 1760us; 70us; 887us; 71us; 890us; 73us; 302us; 74us; 894us; 81us; 868us; 82us; 1768us; 88us; 1765us; 89us; 1766us; 91us; 901us; 95us; 1759us; 99us; 1741us; 101us; 1761us; 105us; 899us; 121us; 898us; 142us; 1771us; 144us; 1767us; 147us; 900us; 154us; 1372us; 157us; 1770us; 159us; 1762us; 160us; 1763us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 181us; 1769us; 182us; 1757us; 183us; 1754us; 184us; 1753us; 185us; 1755us; 186us; 1748us; 187us; 1752us; 188us; 1751us; 189us; 1750us; 190us; 1749us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 201us; 905us; 3us; 32768us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 0us; 16842us; 0us; 16843us; 37us; 16847us; 35us; 879us; 36us; 877us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 74us; 893us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 0us; 16844us; 35us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 74us; 893us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 0us; 16845us; 35us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 74us; 893us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 0us; 16846us; 0us; 16848us; 1us; 32768us; 167us; 883us; 0us; 16849us; 2us; 32768us; 46us; 1731us; 191us; 1730us; 3us; 32768us; 60us; 1851us; 61us; 1853us; 194us; 1854us; 0us; 16850us; 37us; 16885us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 73us; 302us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 1us; 32768us; 59us; 889us; 0us; 16851us; 37us; 16885us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 73us; 302us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 1us; 32768us; 64us; 892us; 0us; 16852us; 1us; 32768us; 191us; 1730us; 1us; 17361us; 191us; 1730us; 0us; 16854us; 0us; 16855us; 0us; 16856us; 0us; 16857us; 0us; 16858us; 0us; 16859us; 63us; 16869us; 10us; 994us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 58us; 1776us; 62us; 1758us; 63us; 1756us; 66us; 468us; 69us; 1760us; 70us; 887us; 71us; 890us; 73us; 302us; 74us; 894us; 81us; 868us; 82us; 1768us; 88us; 1765us; 89us; 1766us; 91us; 901us; 95us; 1759us; 99us; 1741us; 101us; 1761us; 105us; 899us; 121us; 898us; 142us; 1771us; 144us; 1767us; 147us; 900us; 154us; 1372us; 157us; 1770us; 159us; 1762us; 160us; 1763us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 181us; 1769us; 182us; 1757us; 183us; 1754us; 184us; 1753us; 185us; 1755us; 186us; 1748us; 187us; 1752us; 188us; 1751us; 189us; 1750us; 190us; 1749us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 201us; 905us; 5us; 32768us; 10us; 994us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 201us; 980us; 0us; 16860us; 0us; 16861us; 3us; 16904us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 2us; 16862us; 34us; 17341us; 159us; 17341us; 0us; 16863us; 1us; 32768us; 91us; 909us; 39us; 32768us; 10us; 994us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 73us; 302us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 201us; 913us; 6us; 16872us; 10us; 994us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 96us; 939us; 201us; 980us; 0us; 16864us; 0us; 16865us; 3us; 16904us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 0us; 16866us; 0us; 16867us; 6us; 16868us; 58us; 931us; 77us; 934us; 78us; 937us; 88us; 942us; 96us; 940us; 131us; 929us; 4us; 16871us; 77us; 934us; 78us; 937us; 88us; 942us; 96us; 940us; 3us; 16875us; 77us; 934us; 78us; 937us; 88us; 942us; 2us; 16876us; 77us; 934us; 78us; 937us; 3us; 16878us; 77us; 934us; 78us; 937us; 88us; 942us; 3us; 16879us; 77us; 934us; 78us; 937us; 88us; 942us; 2us; 16880us; 77us; 934us; 78us; 937us; 6us; 32768us; 58us; 931us; 77us; 934us; 78us; 937us; 88us; 942us; 96us; 940us; 131us; 929us; 2us; 16881us; 77us; 934us; 78us; 937us; 6us; 16884us; 58us; 931us; 77us; 934us; 78us; 937us; 88us; 942us; 96us; 940us; 131us; 929us; 8us; 17410us; 21us; 1796us; 58us; 931us; 77us; 934us; 78us; 937us; 83us; 1797us; 88us; 942us; 96us; 940us; 131us; 929us; 15us; 32768us; 10us; 994us; 16us; 1873us; 37us; 1869us; 39us; 1870us; 58us; 931us; 60us; 1871us; 69us; 1434us; 77us; 934us; 78us; 937us; 88us; 942us; 93us; 1872us; 96us; 940us; 126us; 1430us; 131us; 929us; 201us; 985us; 7us; 17030us; 58us; 931us; 77us; 934us; 78us; 937us; 84us; 1227us; 88us; 942us; 96us; 940us; 131us; 929us; 1us; 32768us; 191us; 1730us; 0us; 16870us; 37us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 73us; 302us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 1us; 16872us; 96us; 939us; 1us; 16873us; 88us; 941us; 32us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 16874us; 37us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 73us; 302us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 37us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 73us; 302us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 0us; 16877us; 37us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 73us; 302us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 37us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 73us; 302us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 37us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 73us; 302us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 37us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 73us; 302us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 2us; 17410us; 21us; 1796us; 83us; 1797us; 0us; 16882us; 2us; 17409us; 46us; 1731us; 191us; 1730us; 0us; 16883us; 2us; 32768us; 69us; 948us; 76us; 1733us; 37us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 73us; 302us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 0us; 16886us; 37us; 16885us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 73us; 302us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 0us; 16887us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 5us; 32768us; 10us; 994us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 201us; 980us; 0us; 16888us; 0us; 16889us; 0us; 16890us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 3us; 32768us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 0us; 16891us; 25us; 16892us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1249us; 101us; 1166us; 127us; 1163us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 1us; 16894us; 18us; 962us; 0us; 16893us; 1us; 16896us; 77us; 964us; 32us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 16895us; 1us; 32768us; 10us; 967us; 0us; 16897us; 29us; 16900us; 21us; 1796us; 28us; 975us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 83us; 1797us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1249us; 101us; 1166us; 103us; 973us; 127us; 1163us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 30us; 16900us; 21us; 1796us; 28us; 975us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 83us; 1797us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 17098us; 101us; 1166us; 103us; 973us; 127us; 1163us; 142us; 17098us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 30us; 16900us; 21us; 1796us; 28us; 975us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 83us; 1797us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1249us; 101us; 1166us; 103us; 973us; 127us; 1163us; 142us; 1425us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 72us; 16899us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 16898us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 16901us; 1us; 32768us; 22us; 976us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 3us; 32768us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 0us; 16902us; 75us; 16903us; 13us; 1111us; 21us; 1013us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 1012us; 0us; 16904us; 2us; 16904us; 19us; 1817us; 137us; 1816us; 2us; 16904us; 19us; 1817us; 137us; 1816us; 2us; 16904us; 19us; 1817us; 137us; 1816us; 2us; 16904us; 30us; 1815us; 136us; 1814us; 2us; 16904us; 19us; 1817us; 137us; 1816us; 1us; 16904us; 59us; 1317us; 1us; 16904us; 59us; 1341us; 1us; 16904us; 155us; 1376us; 1us; 16904us; 64us; 1382us; 3us; 16904us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 3us; 16904us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 3us; 16904us; 60us; 1851us; 61us; 1853us; 194us; 1854us; 1us; 16904us; 65us; 1855us; 0us; 16905us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 73us; 32768us; 13us; 1111us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 1us; 32768us; 126us; 998us; 2us; 16908us; 31us; 1000us; 164us; 995us; 0us; 16906us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 73us; 32768us; 13us; 1111us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 3us; 32768us; 10us; 994us; 19us; 713us; 201us; 980us; 1us; 17408us; 21us; 1809us; 2us; 16908us; 31us; 1000us; 164us; 995us; 0us; 16907us; 1us; 32768us; 126us; 1007us; 73us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 1009us; 0us; 16909us; 0us; 16910us; 75us; 32768us; 13us; 1111us; 21us; 1013us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 1012us; 0us; 16911us; 0us; 16912us; 74us; 32768us; 13us; 1111us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 1015us; 0us; 16913us; 0us; 16914us; 0us; 16915us; 0us; 16916us; 0us; 16917us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 4us; 32768us; 10us; 994us; 26us; 1210us; 86us; 1208us; 201us; 980us; 0us; 16918us; 0us; 16919us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 4us; 32768us; 10us; 994us; 26us; 1210us; 86us; 1208us; 201us; 980us; 0us; 16920us; 0us; 16921us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 5us; 32768us; 10us; 994us; 26us; 1210us; 86us; 1208us; 128us; 1031us; 201us; 980us; 0us; 16922us; 0us; 16923us; 73us; 32768us; 13us; 1111us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 16924us; 74us; 32768us; 10us; 994us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 980us; 29us; 32768us; 10us; 994us; 28us; 1233us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1249us; 101us; 1166us; 103us; 1232us; 127us; 1163us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 201us; 980us; 0us; 16925us; 0us; 16926us; 0us; 16927us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 16928us; 64us; 16930us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 158us; 1086us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 16929us; 73us; 32768us; 13us; 1111us; 22us; 957us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 16931us; 65us; 16933us; 13us; 1111us; 22us; 957us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 158us; 1086us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 16932us; 74us; 32768us; 10us; 994us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 981us; 29us; 32768us; 10us; 994us; 30us; 1815us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1249us; 101us; 1166us; 127us; 1163us; 136us; 1814us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 201us; 980us; 74us; 32768us; 13us; 1111us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 1052us; 4us; 32768us; 10us; 994us; 19us; 1817us; 137us; 1816us; 201us; 980us; 0us; 16934us; 0us; 16935us; 2us; 32768us; 19us; 1817us; 137us; 1816us; 0us; 16936us; 0us; 16937us; 0us; 16938us; 0us; 16939us; 44us; 32768us; 10us; 994us; 16us; 1873us; 37us; 1869us; 39us; 1870us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 60us; 1871us; 66us; 468us; 70us; 887us; 71us; 890us; 73us; 302us; 74us; 893us; 81us; 868us; 91us; 901us; 93us; 1872us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 201us; 984us; 10us; 17408us; 10us; 994us; 16us; 1873us; 21us; 1809us; 30us; 1815us; 37us; 1869us; 39us; 1870us; 60us; 1871us; 93us; 1872us; 136us; 1814us; 201us; 980us; 80us; 32768us; 10us; 994us; 13us; 1111us; 16us; 1873us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 37us; 1869us; 39us; 1870us; 41us; 715us; 46us; 1311us; 56us; 1319us; 60us; 1871us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 93us; 1872us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 982us; 9us; 32768us; 10us; 994us; 16us; 1873us; 19us; 1817us; 37us; 1869us; 39us; 1870us; 60us; 1871us; 93us; 1872us; 137us; 1816us; 201us; 980us; 0us; 16940us; 0us; 16941us; 0us; 16942us; 0us; 16943us; 0us; 16944us; 4us; 32768us; 10us; 994us; 30us; 1815us; 136us; 1814us; 201us; 980us; 75us; 32768us; 10us; 994us; 13us; 1111us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 983us; 4us; 32768us; 10us; 994us; 19us; 1817us; 137us; 1816us; 201us; 980us; 0us; 16945us; 0us; 16946us; 0us; 16947us; 0us; 16948us; 0us; 16949us; 73us; 32768us; 13us; 1111us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 2us; 32768us; 19us; 1817us; 137us; 1816us; 0us; 16950us; 0us; 16951us; 0us; 16952us; 0us; 16953us; 74us; 32768us; 10us; 994us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 980us; 25us; 16954us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1249us; 101us; 1166us; 127us; 1163us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 74us; 32768us; 10us; 994us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 980us; 25us; 16955us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1249us; 101us; 1166us; 127us; 1163us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 0us; 16956us; 0us; 16957us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 73us; 32768us; 13us; 1111us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 1us; 32768us; 126us; 1089us; 1us; 17408us; 21us; 1809us; 2us; 16908us; 31us; 1000us; 164us; 995us; 73us; 32768us; 13us; 1111us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 16958us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 73us; 32768us; 13us; 1111us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 3us; 32768us; 10us; 994us; 19us; 713us; 201us; 980us; 1us; 17408us; 21us; 1809us; 3us; 16908us; 31us; 1000us; 164us; 995us; 201us; 1100us; 73us; 32768us; 13us; 1111us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 16959us; 0us; 16960us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 1us; 32768us; 126us; 1103us; 1us; 17408us; 21us; 1809us; 73us; 32768us; 13us; 1111us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 16961us; 73us; 32768us; 13us; 1111us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 3us; 32768us; 10us; 994us; 19us; 713us; 201us; 980us; 0us; 16962us; 1us; 32768us; 97us; 1428us; 0us; 16963us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 25us; 16964us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1249us; 101us; 1166us; 127us; 1163us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 16965us; 25us; 16969us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1249us; 101us; 1166us; 127us; 1163us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 20us; 16972us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 20us; 16973us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 9us; 16974us; 62us; 1180us; 78us; 1178us; 81us; 1151us; 95us; 1181us; 157us; 1177us; 183us; 1179us; 185us; 1182us; 188us; 1176us; 190us; 1183us; 20us; 16975us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 18us; 16976us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 95us; 1181us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 18us; 16977us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 95us; 1181us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 9us; 16978us; 62us; 1180us; 78us; 1178us; 81us; 1151us; 95us; 1181us; 157us; 1177us; 183us; 1179us; 185us; 1182us; 188us; 1176us; 190us; 1183us; 9us; 16979us; 62us; 1180us; 78us; 1178us; 81us; 1151us; 95us; 1181us; 157us; 1177us; 183us; 1179us; 185us; 1182us; 188us; 1176us; 190us; 1183us; 9us; 16980us; 62us; 1180us; 78us; 1178us; 81us; 1151us; 95us; 1181us; 157us; 1177us; 183us; 1179us; 185us; 1182us; 188us; 1176us; 190us; 1183us; 9us; 16981us; 62us; 1180us; 78us; 1178us; 81us; 1151us; 95us; 1181us; 157us; 1177us; 183us; 1179us; 185us; 1182us; 188us; 1176us; 190us; 1183us; 9us; 16982us; 62us; 1180us; 78us; 1178us; 81us; 1151us; 95us; 1181us; 157us; 1177us; 183us; 1179us; 185us; 1182us; 188us; 1176us; 190us; 1183us; 9us; 16984us; 62us; 1180us; 78us; 1178us; 81us; 1151us; 95us; 1181us; 157us; 1177us; 183us; 1179us; 185us; 1182us; 188us; 1176us; 190us; 1183us; 9us; 16985us; 62us; 1180us; 78us; 1178us; 81us; 1151us; 95us; 1181us; 157us; 1177us; 183us; 1179us; 185us; 1182us; 188us; 1176us; 190us; 1183us; 1us; 16986us; 190us; 1183us; 8us; 16987us; 62us; 1180us; 78us; 1178us; 81us; 1151us; 95us; 1181us; 157us; 1177us; 183us; 1179us; 185us; 1182us; 190us; 1183us; 4us; 16988us; 95us; 1181us; 157us; 1177us; 185us; 1182us; 190us; 1183us; 4us; 16989us; 95us; 1181us; 157us; 1177us; 185us; 1182us; 190us; 1183us; 1us; 16990us; 190us; 1183us; 1us; 16991us; 190us; 1183us; 1us; 16992us; 190us; 1183us; 25us; 17029us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1249us; 101us; 1166us; 127us; 1163us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 25us; 17033us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1249us; 101us; 1166us; 127us; 1163us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 25us; 17037us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1249us; 101us; 1166us; 127us; 1163us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 29us; 32768us; 10us; 994us; 28us; 1233us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1249us; 101us; 1166us; 103us; 1232us; 127us; 1163us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 201us; 980us; 23us; 17042us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 101us; 1166us; 127us; 1163us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 25us; 32768us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1249us; 101us; 1166us; 127us; 1163us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 23us; 17045us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 101us; 1166us; 127us; 1163us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 24us; 17098us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 101us; 1166us; 127us; 1163us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 24us; 17099us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 101us; 1166us; 127us; 1163us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 26us; 17155us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1249us; 101us; 1166us; 127us; 1163us; 142us; 1425us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 28us; 32768us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1249us; 101us; 1166us; 104us; 1437us; 127us; 1163us; 138us; 1438us; 142us; 1425us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 26us; 17151us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1249us; 101us; 1166us; 127us; 1163us; 142us; 1426us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 25us; 17152us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1249us; 101us; 1166us; 127us; 1163us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 25us; 17159us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1249us; 101us; 1166us; 127us; 1163us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 26us; 17431us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 77us; 1826us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1249us; 101us; 1166us; 127us; 1163us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 32us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 16966us; 32us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 16967us; 32us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 16968us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 1us; 17013us; 68us; 1159us; 73us; 32768us; 13us; 1111us; 22us; 957us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 16970us; 1us; 16971us; 96us; 1247us; 6us; 16971us; 10us; 994us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 96us; 1247us; 201us; 980us; 73us; 32768us; 13us; 1111us; 16us; 1184us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 73us; 32768us; 13us; 1111us; 16us; 1185us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 73us; 32768us; 13us; 1111us; 16us; 1186us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 73us; 32768us; 13us; 1111us; 16us; 1187us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 73us; 32768us; 13us; 1111us; 16us; 1188us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 73us; 32768us; 13us; 1111us; 16us; 1189us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 73us; 32768us; 13us; 1111us; 16us; 1190us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 73us; 32768us; 13us; 1111us; 16us; 1191us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 73us; 32768us; 13us; 1111us; 16us; 1192us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 73us; 32768us; 13us; 1111us; 16us; 1193us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 75us; 32768us; 10us; 994us; 13us; 1111us; 16us; 1194us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 980us; 0us; 16983us; 73us; 32768us; 13us; 1111us; 16us; 1195us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 73us; 32768us; 13us; 1111us; 16us; 1196us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 73us; 32768us; 13us; 1111us; 16us; 1197us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 73us; 32768us; 13us; 1111us; 16us; 1198us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 73us; 32768us; 13us; 1111us; 16us; 1199us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 73us; 32768us; 13us; 1111us; 16us; 1200us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 73us; 32768us; 13us; 1111us; 16us; 1201us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 73us; 32768us; 13us; 1111us; 16us; 1202us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 73us; 32768us; 13us; 1111us; 16us; 1203us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 16993us; 0us; 16994us; 0us; 16995us; 0us; 16996us; 0us; 16997us; 0us; 16998us; 0us; 16999us; 0us; 17000us; 0us; 17001us; 0us; 17002us; 0us; 17003us; 0us; 17004us; 0us; 17005us; 0us; 17006us; 0us; 17007us; 0us; 17008us; 0us; 17009us; 0us; 17010us; 0us; 17011us; 0us; 17012us; 0us; 17014us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 3us; 32768us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 0us; 17015us; 39us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 58us; 1215us; 66us; 468us; 70us; 887us; 71us; 890us; 73us; 302us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 201us; 1218us; 0us; 17016us; 39us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 58us; 1215us; 66us; 468us; 70us; 887us; 71us; 890us; 73us; 302us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 201us; 1218us; 3us; 32768us; 10us; 994us; 20us; 1212us; 201us; 980us; 0us; 17017us; 0us; 17018us; 0us; 17019us; 38us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 73us; 302us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 201us; 1217us; 0us; 17020us; 0us; 17021us; 0us; 17022us; 0us; 17023us; 2us; 32768us; 97us; 1228us; 201us; 1226us; 2us; 17024us; 58us; 1222us; 201us; 1225us; 38us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 73us; 302us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 201us; 1224us; 0us; 17025us; 0us; 17026us; 0us; 17027us; 0us; 17028us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 17031us; 3us; 17036us; 27us; 1239us; 139us; 1238us; 140us; 1244us; 0us; 17032us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 1us; 32768us; 22us; 1234us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 5us; 32768us; 10us; 994us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 201us; 980us; 0us; 17034us; 0us; 17035us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 1us; 32768us; 22us; 1240us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 5us; 32768us; 10us; 994us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 201us; 980us; 0us; 17038us; 0us; 17039us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 17040us; 0us; 17041us; 79us; 32768us; 10us; 994us; 13us; 1111us; 16us; 1873us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 37us; 1869us; 39us; 1870us; 41us; 715us; 46us; 1311us; 56us; 1319us; 60us; 1871us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 93us; 1872us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 980us; 0us; 17043us; 79us; 32768us; 10us; 994us; 13us; 1111us; 16us; 1873us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 37us; 1869us; 39us; 1870us; 41us; 715us; 46us; 1311us; 56us; 1319us; 60us; 1871us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 93us; 1872us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 980us; 0us; 17044us; 46us; 32768us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 118us; 1269us; 121us; 1359us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 46us; 17355us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 118us; 1269us; 121us; 1359us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 17046us; 46us; 32768us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 118us; 1269us; 121us; 1359us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 46us; 17351us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 118us; 1269us; 121us; 1359us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 17047us; 46us; 32768us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 118us; 1269us; 121us; 1359us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 46us; 17354us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 118us; 1269us; 121us; 1359us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 17048us; 46us; 32768us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 118us; 1269us; 121us; 1359us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 46us; 17367us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 118us; 1269us; 121us; 1359us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 17049us; 46us; 32768us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 118us; 1269us; 121us; 1359us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 46us; 17362us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 118us; 1269us; 121us; 1359us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 17050us; 46us; 32768us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 118us; 1269us; 121us; 1359us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 46us; 17363us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 118us; 1269us; 121us; 1359us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 17051us; 31us; 32768us; 46us; 1731us; 56us; 1659us; 66us; 1653us; 87us; 1650us; 90us; 1724us; 91us; 1643us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 201us; 1278us; 31us; 32768us; 46us; 1731us; 56us; 1659us; 66us; 1653us; 87us; 1650us; 90us; 1724us; 91us; 1643us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 201us; 1278us; 2us; 17441us; 35us; 1839us; 36us; 1838us; 37us; 17199us; 14us; 17202us; 21us; 17202us; 26us; 17202us; 35us; 1839us; 36us; 1838us; 56us; 17441us; 71us; 17441us; 72us; 17441us; 86us; 17202us; 91us; 17441us; 105us; 17441us; 110us; 17202us; 121us; 17441us; 135us; 17441us; 147us; 17441us; 154us; 17441us; 165us; 17441us; 166us; 17441us; 167us; 17441us; 168us; 17441us; 169us; 17441us; 170us; 17441us; 171us; 17441us; 172us; 17441us; 173us; 17441us; 174us; 17441us; 175us; 17441us; 176us; 17441us; 177us; 17441us; 179us; 17441us; 180us; 17441us; 192us; 17441us; 193us; 17441us; 197us; 17441us; 198us; 17441us; 199us; 17441us; 200us; 17441us; 31us; 32768us; 56us; 1522us; 71us; 1378us; 72us; 1525us; 91us; 1384us; 105us; 1360us; 121us; 1359us; 135us; 1364us; 147us; 1358us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 1277us; 31us; 32768us; 56us; 1522us; 71us; 1378us; 72us; 1525us; 91us; 1384us; 105us; 1360us; 121us; 1359us; 135us; 1364us; 147us; 1358us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 1277us; 0us; 17052us; 5us; 17052us; 14us; 17201us; 26us; 17201us; 86us; 17201us; 110us; 17201us; 131us; 502us; 0us; 17053us; 0us; 17054us; 46us; 32768us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 118us; 1269us; 121us; 1359us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 17055us; 46us; 32768us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 118us; 1269us; 121us; 1359us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 17056us; 38us; 17057us; 46us; 1311us; 56us; 1319us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 121us; 1359us; 135us; 1364us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1288us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 41us; 17057us; 26us; 1475us; 46us; 1311us; 56us; 1319us; 69us; 1462us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 86us; 1471us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 121us; 1359us; 135us; 1364us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1288us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 41us; 32768us; 26us; 1475us; 46us; 1311us; 56us; 1319us; 69us; 1462us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 86us; 1471us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 121us; 1359us; 135us; 1364us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1288us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 17058us; 5us; 17059us; 34us; 1297us; 35us; 1296us; 36us; 1295us; 74us; 1309us; 76us; 1301us; 37us; 32768us; 46us; 1311us; 56us; 1319us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 121us; 1359us; 135us; 1364us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 5us; 17060us; 34us; 1297us; 35us; 1296us; 36us; 1295us; 74us; 1309us; 76us; 1301us; 5us; 17061us; 34us; 1297us; 35us; 1296us; 36us; 1295us; 74us; 1309us; 76us; 1301us; 2us; 17062us; 34us; 1297us; 35us; 1296us; 1us; 17063us; 34us; 1297us; 5us; 17065us; 34us; 1297us; 35us; 1296us; 36us; 1295us; 74us; 1309us; 76us; 1301us; 5us; 17295us; 34us; 1297us; 35us; 1296us; 36us; 1295us; 74us; 1309us; 76us; 1301us; 37us; 32768us; 46us; 1311us; 56us; 1319us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 121us; 1359us; 135us; 1364us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 37us; 32768us; 46us; 1311us; 56us; 1319us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 121us; 1359us; 135us; 1364us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 1us; 32768us; 159us; 1684us; 0us; 17064us; 37us; 32768us; 46us; 1311us; 56us; 1319us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 121us; 1359us; 135us; 1364us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 37us; 17345us; 46us; 1311us; 56us; 1319us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 121us; 1359us; 135us; 1364us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 7us; 17081us; 10us; 994us; 46us; 1325us; 70us; 1334us; 91us; 1327us; 99us; 1741us; 191us; 1730us; 201us; 980us; 0us; 17066us; 1us; 32768us; 76us; 1304us; 7us; 17081us; 10us; 994us; 46us; 1325us; 70us; 1334us; 91us; 1327us; 99us; 1741us; 191us; 1730us; 201us; 980us; 0us; 17067us; 3us; 32768us; 91us; 1736us; 99us; 1741us; 191us; 1730us; 3us; 17361us; 91us; 1736us; 99us; 1741us; 191us; 1730us; 0us; 17068us; 2us; 32768us; 91us; 1205us; 191us; 1204us; 0us; 17069us; 0us; 17070us; 0us; 17071us; 74us; 17148us; 10us; 994us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 986us; 3us; 32768us; 10us; 994us; 59us; 1315us; 201us; 980us; 0us; 17072us; 0us; 17073us; 0us; 17074us; 0us; 17075us; 2us; 32768us; 72us; 1525us; 91us; 1320us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 17076us; 0us; 17077us; 0us; 17078us; 0us; 17079us; 0us; 17080us; 0us; 17082us; 91us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 58us; 1776us; 62us; 1252us; 63us; 1756us; 69us; 1760us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1307us; 78us; 1328us; 82us; 1768us; 85us; 1046us; 88us; 1264us; 89us; 1267us; 91us; 1386us; 95us; 1759us; 97us; 1113us; 99us; 1741us; 101us; 1761us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 142us; 1771us; 144us; 1767us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1372us; 157us; 1261us; 158us; 1086us; 159us; 1762us; 160us; 1763us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 181us; 1769us; 182us; 1258us; 183us; 1255us; 184us; 1753us; 185us; 1755us; 186us; 1300us; 187us; 1752us; 188us; 1751us; 189us; 1750us; 190us; 1749us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 1739us; 3us; 32768us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 1us; 32768us; 76us; 1330us; 1us; 32768us; 177us; 1331us; 0us; 17083us; 3us; 32768us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 0us; 17084us; 77us; 32768us; 10us; 994us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 95us; 1351us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 142us; 1349us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 188us; 1352us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 987us; 3us; 32768us; 10us; 994us; 59us; 1336us; 201us; 980us; 0us; 17085us; 0us; 17086us; 3us; 32768us; 10us; 994us; 59us; 1339us; 201us; 980us; 0us; 17087us; 0us; 17088us; 0us; 17089us; 0us; 17090us; 1us; 17092us; 96us; 1344us; 75us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 95us; 1351us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 142us; 1349us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 188us; 1352us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 17091us; 1us; 17097us; 142us; 1347us; 73us; 17094us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 188us; 1352us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 17093us; 73us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 188us; 1352us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 17095us; 0us; 17096us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 17100us; 0us; 17101us; 0us; 17102us; 0us; 17103us; 0us; 17104us; 0us; 17105us; 0us; 17106us; 0us; 17107us; 0us; 17108us; 0us; 17109us; 0us; 17110us; 74us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 141us; 1370us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 1368us; 3us; 32768us; 10us; 994us; 141us; 1366us; 201us; 980us; 0us; 17111us; 0us; 17112us; 1us; 32768us; 141us; 1369us; 0us; 17113us; 0us; 17114us; 74us; 32768us; 10us; 994us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 988us; 75us; 32768us; 10us; 994us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 155us; 1774us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 988us; 3us; 32768us; 10us; 994us; 155us; 1374us; 201us; 980us; 0us; 17115us; 0us; 17116us; 0us; 17117us; 0us; 17118us; 74us; 17148us; 10us; 994us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 989us; 3us; 32768us; 10us; 994us; 64us; 1380us; 201us; 980us; 0us; 17119us; 0us; 17120us; 0us; 17121us; 0us; 17122us; 83us; 32768us; 10us; 994us; 13us; 1111us; 16us; 1396us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 37us; 1393us; 39us; 1394us; 41us; 715us; 46us; 1311us; 56us; 1319us; 60us; 1395us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 87us; 1439us; 88us; 1263us; 89us; 1266us; 91us; 1385us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 990us; 99us; 32768us; 10us; 994us; 13us; 1111us; 16us; 1396us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 37us; 1393us; 39us; 1394us; 41us; 715us; 46us; 1311us; 56us; 1319us; 58us; 1776us; 60us; 1395us; 62us; 1252us; 63us; 1756us; 69us; 1760us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1307us; 82us; 1768us; 85us; 1046us; 87us; 1439us; 88us; 1264us; 89us; 1267us; 91us; 1385us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 95us; 1759us; 97us; 1113us; 99us; 1741us; 101us; 1761us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 142us; 1771us; 144us; 1767us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1372us; 157us; 1261us; 158us; 1086us; 159us; 1762us; 160us; 1763us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 181us; 1769us; 182us; 1258us; 183us; 1255us; 184us; 1753us; 185us; 1755us; 186us; 1300us; 187us; 1752us; 188us; 1728us; 189us; 1750us; 190us; 1749us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 991us; 99us; 32768us; 10us; 994us; 13us; 1111us; 16us; 1396us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 37us; 1393us; 39us; 1394us; 41us; 715us; 46us; 1311us; 56us; 1319us; 58us; 1776us; 60us; 1395us; 62us; 1252us; 63us; 1756us; 69us; 1760us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1307us; 82us; 1768us; 85us; 1046us; 87us; 1439us; 88us; 1264us; 89us; 1267us; 91us; 1385us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 95us; 1759us; 97us; 1113us; 99us; 1741us; 101us; 1761us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 142us; 1771us; 144us; 1767us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1372us; 157us; 1261us; 158us; 1086us; 159us; 1762us; 160us; 1763us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 181us; 1769us; 182us; 1258us; 183us; 1255us; 184us; 1753us; 185us; 1755us; 186us; 1300us; 187us; 1752us; 188us; 1728us; 189us; 1750us; 190us; 1749us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 991us; 0us; 17123us; 9us; 32768us; 10us; 994us; 16us; 1867us; 37us; 1864us; 39us; 1865us; 60us; 1866us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 201us; 980us; 0us; 17124us; 0us; 17125us; 0us; 17126us; 0us; 17126us; 0us; 17127us; 0us; 17128us; 0us; 17129us; 0us; 17130us; 0us; 17131us; 1us; 32768us; 77us; 1399us; 1us; 32768us; 91us; 1400us; 1us; 16544us; 73us; 302us; 3us; 32768us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 17132us; 0us; 17133us; 0us; 17134us; 0us; 17135us; 4us; 17135us; 92us; 17138us; 93us; 17138us; 94us; 17138us; 101us; 17138us; 4us; 32768us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 101us; 1410us; 0us; 17136us; 1us; 32768us; 188us; 1727us; 0us; 17137us; 79us; 32768us; 10us; 994us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 54us; 1455us; 56us; 1319us; 60us; 1851us; 61us; 1853us; 62us; 1251us; 66us; 1466us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1270us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 194us; 1854us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 992us; 5us; 32768us; 10us; 994us; 60us; 1851us; 61us; 1853us; 194us; 1854us; 201us; 980us; 0us; 17139us; 0us; 17140us; 0us; 17141us; 0us; 17142us; 0us; 17143us; 0us; 17144us; 0us; 17145us; 0us; 17146us; 0us; 17147us; 0us; 17149us; 0us; 17150us; 74us; 32768us; 10us; 994us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 980us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 17153us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 17154us; 79us; 32768us; 10us; 994us; 13us; 1111us; 16us; 1873us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 37us; 1869us; 39us; 1870us; 41us; 715us; 46us; 1311us; 56us; 1319us; 60us; 1871us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 93us; 1872us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 980us; 0us; 17156us; 0us; 17157us; 0us; 17158us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 72us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 17160us; 0us; 17161us; 0us; 17162us; 2us; 32768us; 192us; 1825us; 199us; 1824us; 3us; 17168us; 37us; 1841us; 38us; 1844us; 107us; 1845us; 0us; 17165us; 39us; 17170us; 46us; 1311us; 56us; 1319us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 77us; 1451us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 121us; 1359us; 135us; 1364us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1288us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 1us; 32768us; 87us; 1444us; 0us; 17163us; 0us; 17164us; 0us; 17167us; 1us; 32768us; 91us; 1448us; 32us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 3us; 32768us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 0us; 17169us; 32us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1453us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 17171us; 36us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 201us; 1673us; 0us; 17172us; 30us; 32768us; 46us; 1731us; 56us; 1659us; 66us; 1653us; 87us; 1650us; 90us; 1724us; 91us; 1643us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 2us; 17441us; 35us; 1839us; 36us; 1838us; 30us; 17166us; 56us; 1522us; 71us; 1378us; 72us; 1525us; 91us; 1384us; 105us; 1360us; 121us; 1359us; 135us; 1364us; 147us; 1358us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 17191us; 2us; 17183us; 21us; 1484us; 83us; 1485us; 0us; 17173us; 0us; 17174us; 73us; 32768us; 13us; 1111us; 22us; 957us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 17191us; 2us; 17183us; 21us; 1484us; 83us; 1485us; 0us; 17175us; 1us; 17176us; 69us; 1467us; 73us; 17177us; 13us; 1111us; 22us; 957us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 17191us; 2us; 17183us; 21us; 1484us; 83us; 1485us; 0us; 17178us; 3us; 32768us; 46us; 1731us; 66us; 1489us; 191us; 1730us; 0us; 17191us; 2us; 17183us; 21us; 1484us; 83us; 1485us; 0us; 17179us; 5us; 17183us; 21us; 1484us; 46us; 1731us; 66us; 1489us; 83us; 1485us; 191us; 1730us; 1us; 32768us; 20us; 1477us; 0us; 17180us; 0us; 17191us; 2us; 17183us; 21us; 1484us; 83us; 1485us; 1us; 32768us; 20us; 1481us; 0us; 17181us; 0us; 17182us; 3us; 17182us; 46us; 1731us; 66us; 1489us; 191us; 1730us; 1us; 17184us; 83us; 1487us; 1us; 17185us; 21us; 1486us; 0us; 17186us; 0us; 17187us; 1us; 17188us; 76us; 1733us; 0us; 17189us; 0us; 17190us; 8us; 17195us; 10us; 994us; 16us; 1873us; 37us; 1869us; 39us; 1870us; 60us; 1871us; 69us; 1492us; 93us; 1872us; 201us; 980us; 80us; 17193us; 10us; 994us; 13us; 1111us; 16us; 1873us; 22us; 957us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 37us; 1869us; 39us; 1870us; 41us; 715us; 46us; 1311us; 56us; 1319us; 60us; 1871us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 93us; 1872us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 980us; 0us; 17192us; 0us; 17194us; 0us; 17196us; 3us; 17408us; 21us; 1809us; 26us; 1506us; 86us; 1504us; 1us; 17408us; 21us; 1809us; 3us; 17209us; 14us; 560us; 110us; 559us; 201us; 1515us; 0us; 17197us; 2us; 32768us; 14us; 560us; 110us; 559us; 0us; 17198us; 0us; 17200us; 0us; 17203us; 3us; 16544us; 22us; 505us; 73us; 302us; 201us; 750us; 0us; 17205us; 2us; 16544us; 73us; 302us; 201us; 750us; 1us; 32768us; 20us; 1508us; 0us; 17206us; 3us; 17400us; 19us; 1803us; 20us; 1804us; 141us; 1805us; 0us; 17207us; 3us; 17209us; 14us; 560us; 110us; 559us; 201us; 1515us; 0us; 17208us; 3us; 17209us; 14us; 560us; 110us; 559us; 201us; 1515us; 0us; 17210us; 3us; 17209us; 14us; 560us; 110us; 559us; 201us; 1515us; 0us; 17211us; 31us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 8us; 17204us; 26us; 1506us; 36us; 1611us; 46us; 1731us; 70us; 1624us; 86us; 1504us; 90us; 1724us; 188us; 1727us; 191us; 1730us; 3us; 17400us; 19us; 1803us; 20us; 1804us; 141us; 1805us; 1us; 17408us; 21us; 1809us; 0us; 17212us; 1us; 32768us; 72us; 1525us; 0us; 17213us; 0us; 17214us; 41us; 32768us; 10us; 994us; 46us; 1311us; 56us; 1319us; 65us; 1855us; 66us; 1466us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 121us; 1359us; 135us; 1364us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 993us; 3us; 32768us; 10us; 994us; 65us; 1855us; 201us; 980us; 0us; 17215us; 0us; 17216us; 0us; 17217us; 0us; 17218us; 0us; 17219us; 35us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 74us; 893us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 1us; 32768us; 97us; 1534us; 74us; 32768us; 13us; 1111us; 22us; 952us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 1536us; 0us; 17220us; 0us; 17221us; 36us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 66us; 468us; 70us; 887us; 71us; 890us; 74us; 893us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 201us; 1548us; 2us; 32768us; 97us; 1539us; 201us; 1546us; 75us; 32768us; 10us; 994us; 13us; 1111us; 18us; 1543us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 201us; 980us; 3us; 32768us; 10us; 994us; 20us; 1541us; 201us; 980us; 0us; 17222us; 0us; 17223us; 1us; 32768us; 20us; 1544us; 0us; 17224us; 0us; 17225us; 1us; 32768us; 20us; 1547us; 0us; 17226us; 1us; 32768us; 20us; 1549us; 0us; 17227us; 39us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 58us; 1215us; 66us; 468us; 70us; 887us; 71us; 890us; 73us; 302us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 201us; 1218us; 0us; 17228us; 39us; 32768us; 43us; 482us; 44us; 481us; 45us; 483us; 46us; 471us; 56us; 908us; 58us; 1215us; 66us; 468us; 70us; 887us; 71us; 890us; 73us; 302us; 74us; 893us; 81us; 868us; 91us; 901us; 99us; 1741us; 105us; 899us; 121us; 898us; 147us; 900us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 791us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 191us; 1730us; 192us; 1825us; 193us; 884us; 199us; 1824us; 200us; 795us; 201us; 1218us; 1us; 32768us; 20us; 1554us; 0us; 17229us; 1us; 17230us; 84us; 1556us; 4us; 32768us; 52us; 597us; 90us; 1724us; 91us; 612us; 188us; 1727us; 1us; 17232us; 84us; 1558us; 4us; 32768us; 52us; 597us; 90us; 1724us; 91us; 612us; 188us; 1727us; 33us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 73us; 302us; 74us; 1581us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 17235us; 1us; 17237us; 97us; 1562us; 33us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 73us; 302us; 74us; 1581us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 17236us; 1us; 17239us; 95us; 1565us; 33us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 73us; 302us; 74us; 1581us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 17238us; 1us; 17241us; 95us; 1568us; 33us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 73us; 302us; 74us; 1581us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 17240us; 32us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 74us; 1574us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 7us; 17244us; 36us; 1611us; 46us; 1731us; 70us; 1624us; 77us; 1572us; 90us; 1724us; 188us; 1727us; 191us; 1730us; 31us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 6us; 17242us; 36us; 1611us; 46us; 1731us; 70us; 1624us; 90us; 1724us; 188us; 1727us; 191us; 1730us; 1us; 32768us; 191us; 1730us; 1us; 32768us; 77us; 1576us; 31us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 6us; 17243us; 36us; 1611us; 46us; 1731us; 70us; 1624us; 90us; 1724us; 188us; 1727us; 191us; 1730us; 7us; 17247us; 36us; 1611us; 46us; 1731us; 70us; 1624us; 77us; 1579us; 90us; 1724us; 188us; 1727us; 191us; 1730us; 31us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 6us; 17245us; 36us; 1611us; 46us; 1731us; 70us; 1624us; 90us; 1724us; 188us; 1727us; 191us; 1730us; 1us; 32768us; 191us; 1730us; 1us; 32768us; 77us; 1583us; 31us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 6us; 17246us; 36us; 1611us; 46us; 1731us; 70us; 1624us; 90us; 1724us; 188us; 1727us; 191us; 1730us; 1us; 17249us; 97us; 1586us; 32us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 17248us; 1us; 32768us; 10us; 1589us; 0us; 17250us; 8us; 17254us; 36us; 1611us; 46us; 1731us; 70us; 1624us; 90us; 1724us; 95us; 1591us; 185us; 1595us; 188us; 1727us; 191us; 1730us; 31us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 17251us; 31us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 17252us; 31us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 17253us; 8us; 17257us; 36us; 1611us; 46us; 1731us; 70us; 1624us; 90us; 1724us; 95us; 1598us; 185us; 1600us; 188us; 1727us; 191us; 1730us; 31us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 17255us; 31us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 17256us; 1us; 17258us; 76us; 1733us; 0us; 17259us; 1us; 17259us; 79us; 1619us; 1us; 17261us; 188us; 1607us; 4us; 17261us; 34us; 1682us; 76us; 1679us; 159us; 1684us; 188us; 1607us; 3us; 32768us; 62us; 808us; 91us; 804us; 177us; 803us; 0us; 17260us; 9us; 32768us; 10us; 994us; 36us; 1611us; 46us; 1731us; 70us; 1624us; 90us; 1724us; 95us; 1661us; 188us; 1727us; 191us; 1730us; 201us; 980us; 0us; 17262us; 1us; 32768us; 70us; 1624us; 0us; 17263us; 0us; 17264us; 33us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 201us; 1673us; 3us; 32768us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 4us; 32768us; 46us; 1731us; 90us; 1724us; 188us; 1727us; 191us; 1730us; 0us; 17265us; 0us; 17266us; 32us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 17267us; 1us; 17285us; 79us; 1622us; 32us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 17268us; 2us; 32768us; 59us; 1625us; 96us; 1626us; 0us; 17269us; 2us; 32768us; 59us; 1627us; 96us; 1628us; 0us; 17270us; 2us; 32768us; 59us; 1629us; 96us; 1630us; 0us; 17271us; 1us; 32768us; 59us; 1631us; 0us; 17272us; 1us; 32768us; 96us; 1633us; 32us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 17276us; 1us; 17273us; 96us; 1637us; 4us; 32768us; 10us; 994us; 96us; 1637us; 160us; 1688us; 201us; 980us; 32us; 17317us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 17274us; 0us; 17275us; 1us; 17277us; 188us; 1641us; 3us; 32768us; 62us; 808us; 91us; 804us; 177us; 803us; 0us; 17278us; 33us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 201us; 1673us; 3us; 32768us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 4us; 32768us; 46us; 1731us; 90us; 1724us; 188us; 1727us; 191us; 1730us; 0us; 17279us; 1us; 17280us; 76us; 1676us; 1us; 17281us; 76us; 1676us; 0us; 17282us; 30us; 32768us; 46us; 1731us; 56us; 1659us; 66us; 1653us; 87us; 1650us; 90us; 1724us; 91us; 1654us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 1us; 17283us; 76us; 1676us; 0us; 17284us; 0us; 17285us; 33us; 32768us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 201us; 1673us; 5us; 32768us; 10us; 994us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 201us; 980us; 6us; 17312us; 10us; 994us; 69us; 1697us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 201us; 980us; 0us; 17286us; 0us; 17287us; 1us; 32768us; 91us; 1660us; 33us; 32768us; 10us; 994us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 201us; 980us; 33us; 32768us; 10us; 994us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 201us; 980us; 5us; 32768us; 10us; 994us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 201us; 980us; 0us; 17288us; 0us; 17289us; 0us; 17290us; 0us; 17291us; 0us; 17292us; 0us; 17293us; 0us; 17294us; 37us; 32768us; 46us; 1311us; 56us; 1319us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 91us; 1386us; 99us; 1741us; 105us; 1360us; 121us; 1359us; 135us; 1364us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 0us; 17296us; 0us; 17297us; 3us; 32768us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 0us; 17298us; 0us; 17299us; 2us; 32768us; 46us; 1731us; 191us; 1730us; 3us; 17300us; 34us; 1682us; 76us; 1733us; 159us; 1684us; 0us; 17301us; 7us; 32768us; 10us; 994us; 16us; 1873us; 37us; 1869us; 39us; 1870us; 60us; 1871us; 93us; 1872us; 201us; 980us; 0us; 17302us; 0us; 17303us; 1us; 32768us; 159us; 1684us; 0us; 17304us; 35us; 17317us; 10us; 994us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 160us; 1694us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 201us; 980us; 1us; 32768us; 96us; 1686us; 39us; 17317us; 10us; 994us; 16us; 1873us; 37us; 1869us; 39us; 1870us; 46us; 1731us; 56us; 544us; 60us; 1871us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 93us; 1872us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 201us; 980us; 0us; 17276us; 0us; 17305us; 0us; 17306us; 0us; 17307us; 8us; 17315us; 10us; 994us; 16us; 1873us; 37us; 1869us; 39us; 1870us; 60us; 1871us; 93us; 1872us; 160us; 1692us; 201us; 980us; 0us; 17308us; 0us; 17309us; 0us; 17310us; 0us; 17311us; 1us; 17312us; 69us; 1697us; 32us; 17314us; 46us; 1731us; 56us; 544us; 66us; 1621us; 72us; 547us; 87us; 1650us; 90us; 1724us; 91us; 1614us; 105us; 1672us; 112us; 1670us; 121us; 1671us; 147us; 1669us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 185us; 1593us; 188us; 1727us; 191us; 1730us; 192us; 1825us; 199us; 1824us; 200us; 795us; 0us; 17313us; 0us; 17315us; 0us; 17316us; 8us; 32768us; 46us; 1731us; 66us; 1704us; 90us; 1724us; 91us; 1708us; 177us; 1714us; 185us; 1723us; 188us; 1727us; 191us; 1730us; 3us; 32768us; 95us; 1721us; 160us; 1703us; 185us; 1722us; 0us; 17318us; 1us; 32768us; 160us; 1705us; 0us; 17319us; 1us; 17320us; 76us; 1733us; 0us; 17321us; 7us; 32768us; 46us; 1731us; 90us; 1724us; 91us; 1708us; 177us; 1714us; 185us; 1723us; 188us; 1727us; 191us; 1730us; 5us; 32768us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 95us; 1721us; 185us; 1722us; 0us; 17322us; 1us; 17323us; 188us; 1712us; 3us; 32768us; 62us; 808us; 91us; 804us; 177us; 803us; 0us; 17324us; 0us; 17325us; 6us; 17326us; 46us; 1731us; 90us; 1724us; 91us; 1708us; 177us; 1714us; 188us; 1727us; 191us; 1730us; 0us; 17327us; 0us; 17328us; 0us; 17329us; 0us; 17330us; 0us; 17331us; 7us; 32768us; 46us; 1731us; 90us; 1724us; 91us; 1708us; 177us; 1714us; 185us; 1723us; 188us; 1727us; 191us; 1730us; 7us; 32768us; 46us; 1731us; 90us; 1724us; 91us; 1708us; 177us; 1714us; 185us; 1723us; 188us; 1727us; 191us; 1730us; 7us; 32768us; 46us; 1731us; 90us; 1724us; 91us; 1708us; 177us; 1714us; 185us; 1723us; 188us; 1727us; 191us; 1730us; 1us; 32768us; 191us; 1730us; 0us; 17332us; 0us; 17333us; 1us; 32768us; 191us; 1730us; 1us; 17348us; 191us; 1730us; 0us; 17334us; 0us; 17335us; 0us; 17336us; 0us; 17337us; 8us; 32768us; 10us; 994us; 16us; 1873us; 37us; 1869us; 39us; 1870us; 60us; 1871us; 93us; 1872us; 191us; 1730us; 201us; 980us; 0us; 17338us; 0us; 17339us; 27us; 32768us; 58us; 1776us; 62us; 1758us; 63us; 1756us; 69us; 1760us; 74us; 1764us; 82us; 1768us; 88us; 1765us; 89us; 1766us; 95us; 1759us; 101us; 1761us; 142us; 1771us; 144us; 1767us; 154us; 1773us; 157us; 1770us; 159us; 1762us; 160us; 1763us; 181us; 1769us; 182us; 1757us; 183us; 1754us; 184us; 1753us; 185us; 1755us; 186us; 1748us; 187us; 1752us; 188us; 1751us; 189us; 1750us; 190us; 1749us; 201us; 1739us; 3us; 32768us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 0us; 17340us; 3us; 32768us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 0us; 17341us; 0us; 17342us; 1us; 32768us; 58us; 1743us; 5us; 32768us; 66us; 1745us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 191us; 1775us; 0us; 17343us; 1us; 32768us; 58us; 1746us; 3us; 32768us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 0us; 17344us; 0us; 17345us; 0us; 17346us; 0us; 17347us; 0us; 17348us; 0us; 17349us; 0us; 17350us; 0us; 17351us; 0us; 17352us; 0us; 17353us; 0us; 17354us; 0us; 17355us; 0us; 17356us; 0us; 17357us; 0us; 17358us; 0us; 17359us; 0us; 17360us; 0us; 17361us; 0us; 17362us; 0us; 17363us; 0us; 17364us; 0us; 17365us; 0us; 17366us; 0us; 17367us; 1us; 17368us; 142us; 1772us; 0us; 17369us; 1us; 32768us; 155us; 1774us; 0us; 17370us; 0us; 17371us; 1us; 32768us; 191us; 1775us; 0us; 17372us; 0us; 17373us; 0us; 17374us; 0us; 17375us; 1us; 17376us; 76us; 1783us; 0us; 17377us; 4us; 32768us; 91us; 1736us; 99us; 1741us; 191us; 1730us; 201us; 1785us; 0us; 17378us; 0us; 17379us; 0us; 17380us; 0us; 17381us; 0us; 17382us; 0us; 17383us; 0us; 17384us; 0us; 17385us; 3us; 17386us; 21us; 1791us; 67us; 1790us; 83us; 1789us; 0us; 17387us; 3us; 17389us; 21us; 1791us; 67us; 1790us; 83us; 1789us; 0us; 17388us; 1us; 17390us; 83us; 1798us; 1us; 17391us; 21us; 1799us; 0us; 17392us; 0us; 17393us; 0us; 17394us; 0us; 17395us; 0us; 17396us; 0us; 17397us; 0us; 17398us; 0us; 17399us; 0us; 17401us; 0us; 17403us; 0us; 17405us; 0us; 17407us; 0us; 17409us; 0us; 17411us; 0us; 17415us; 0us; 17417us; 0us; 17419us; 0us; 17420us; 0us; 17421us; 0us; 17422us; 0us; 17423us; 0us; 17424us; 0us; 17425us; 0us; 17426us; 0us; 17427us; 0us; 17428us; 0us; 17429us; 0us; 17430us; 1us; 32768us; 191us; 1730us; 0us; 17432us; 0us; 17433us; 74us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 195us; 1828us; 196us; 1829us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 2us; 32768us; 195us; 1828us; 196us; 1829us; 0us; 17434us; 0us; 17435us; 74us; 32768us; 13us; 1111us; 24us; 1537us; 25us; 1552us; 29us; 1106us; 30us; 706us; 32us; 1093us; 33us; 702us; 41us; 715us; 46us; 1311us; 56us; 1319us; 62us; 1251us; 70us; 1313us; 71us; 1378us; 72us; 1525us; 74us; 1306us; 85us; 1046us; 88us; 1263us; 89us; 1266us; 91us; 1386us; 97us; 1113us; 99us; 1741us; 105us; 1360us; 106us; 1027us; 113us; 1038us; 114us; 1042us; 115us; 1019us; 116us; 1023us; 118us; 1269us; 121us; 1359us; 122us; 1057us; 123us; 1532us; 124us; 1550us; 125us; 1033us; 129us; 1101us; 132us; 1040us; 133us; 1044us; 135us; 1364us; 145us; 1279us; 146us; 1281us; 147us; 1358us; 153us; 1303us; 154us; 1371us; 157us; 1260us; 158us; 1086us; 161us; 696us; 162us; 1080us; 163us; 1082us; 165us; 793us; 166us; 792us; 167us; 790us; 168us; 789us; 169us; 788us; 170us; 787us; 171us; 785us; 172us; 783us; 173us; 781us; 174us; 779us; 175us; 786us; 176us; 784us; 177us; 782us; 179us; 780us; 180us; 778us; 182us; 1257us; 183us; 1254us; 186us; 1299us; 191us; 1730us; 192us; 1825us; 193us; 1412us; 195us; 1828us; 196us; 1829us; 197us; 1833us; 198us; 1836us; 199us; 1824us; 200us; 795us; 2us; 32768us; 195us; 1828us; 196us; 1829us; 0us; 17436us; 0us; 17437us; 0us; 17438us; 0us; 17439us; 0us; 17440us; 0us; 17442us; 3us; 32768us; 37us; 1841us; 38us; 1844us; 107us; 1845us; 3us; 17465us; 37us; 1841us; 38us; 1844us; 107us; 1845us; 0us; 17444us; 0us; 17445us; 0us; 17446us; 3us; 32768us; 39us; 1846us; 40us; 1849us; 149us; 1850us; 3us; 17466us; 39us; 1846us; 40us; 1849us; 149us; 1850us; 0us; 17447us; 0us; 17448us; 0us; 17449us; 3us; 32768us; 60us; 1851us; 61us; 1853us; 194us; 1854us; 0us; 17450us; 0us; 17451us; 0us; 17452us; 0us; 17453us; 3us; 32768us; 92us; 1859us; 93us; 1856us; 94us; 1858us; 0us; 17454us; 0us; 17455us; 0us; 17456us; 3us; 32768us; 15us; 1863us; 16us; 1860us; 17us; 1862us; 0us; 17457us; 0us; 17458us; 0us; 17459us; 0us; 17460us; 0us; 17461us; 0us; 17462us; 0us; 17463us; 0us; 17464us; 0us; 17465us; 0us; 17466us; 0us; 17467us; 0us; 17468us; 0us; 17469us; 0us; 17470us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 17us; 18us; 107us; 108us; 116us; 117us; 190us; 191us; 224us; 225us; 226us; 227us; 228us; 229us; 230us; 231us; 236us; 237us; 242us; 243us; 248us; 249us; 255us; 256us; 262us; 263us; 269us; 270us; 287us; 288us; 292us; 373us; 399us; 400us; 403us; 404us; 405us; 406us; 408us; 409us; 412us; 413us; 414us; 417us; 418us; 420us; 421us; 426us; 427us; 431us; 433us; 436us; 438us; 440us; 443us; 445us; 447us; 448us; 450us; 451us; 453us; 470us; 471us; 475us; 484us; 503us; 504us; 505us; 506us; 522us; 528us; 530us; 531us; 532us; 539us; 540us; 541us; 545us; 549us; 565us; 566us; 570us; 575us; 576us; 577us; 578us; 582us; 591us; 594us; 600us; 601us; 602us; 603us; 604us; 605us; 607us; 609us; 611us; 615us; 619us; 622us; 624us; 658us; 660us; 661us; 735us; 761us; 834us; 863us; 865us; 866us; 875us; 879us; 880us; 896us; 898us; 902us; 903us; 919us; 921us; 922us; 924us; 925us; 927us; 929us; 930us; 933us; 941us; 942us; 943us; 996us; 998us; 1013us; 1015us; 1019us; 1021us; 1022us; 1024us; 1025us; 1026us; 1027us; 1029us; 1063us; 1064us; 1065us; 1082us; 1086us; 1087us; 1088us; 1090us; 1091us; 1106us; 1112us; 1113us; 1114us; 1130us; 1134us; 1135us; 1136us; 1151us; 1157us; 1158us; 1159us; 1160us; 1161us; 1164us; 1179us; 1180us; 1184us; 1188us; 1199us; 1244us; 1246us; 1250us; 1254us; 1257us; 1259us; 1293us; 1296us; 1298us; 1299us; 1331us; 1338us; 1370us; 1377us; 1379us; 1380us; 1386us; 1388us; 1389us; 1391us; 1392us; 1394us; 1428us; 1429us; 1433us; 1434us; 1438us; 1441us; 1442us; 1443us; 1445us; 1449us; 1450us; 1451us; 1453us; 1454us; 1456us; 1457us; 1473us; 1477us; 1478us; 1481us; 1482us; 1484us; 1485us; 1490us; 1491us; 1493us; 1494us; 1496us; 1497us; 1499us; 1588us; 1589us; 1594us; 1675us; 1765us; 1766us; 1767us; 1855us; 1861us; 1863us; 1864us; 1865us; 1872us; 1873us; 1874us; 1875us; 1880us; 1961us; 1990us; 2078us; 2079us; 2080us; 2081us; 2103us; 2104us; 2192us; 2193us; 2197us; 2204us; 2209us; 2214us; 2215us; 2216us; 2217us; 2221us; 2233us; 2234us; 2236us; 2237us; 2311us; 2312us; 2314us; 2316us; 2317us; 2318us; 2320us; 2326us; 2327us; 2330us; 2331us; 2332us; 2338us; 2340us; 2372us; 2379us; 2384us; 2385us; 2387us; 2394us; 2400us; 2401us; 2402us; 2408us; 2409us; 2410us; 2411us; 2412us; 2414us; 2502us; 2506us; 2507us; 2508us; 2509us; 2516us; 2520us; 2521us; 2522us; 2524us; 2525us; 2540us; 2543us; 2552us; 2554us; 2555us; 2557us; 2559us; 2560us; 2561us; 2562us; 2563us; 2573us; 2574us; 2578us; 2609us; 2610us; 2614us; 2618us; 2649us; 2650us; 2653us; 2658us; 2661us; 2692us; 2693us; 2695us; 2696us; 2698us; 2699us; 2701us; 2702us; 2704us; 2705us; 2716us; 2717us; 2718us; 2719us; 2720us; 2724us; 2726us; 2727us; 2729us; 2731us; 2732us; 2808us; 2815us; 2816us; 2817us; 2821us; 2824us; 2826us; 2828us; 2830us; 2837us; 2838us; 2850us; 2852us; 2860us; 2862us; 2868us; 2870us; 2871us; 2872us; 2874us; 2875us; 2876us; 2877us; 2879us; 2913us; 2914us; 2915us; 2921us; 2925us; 2926us; 2927us; 2932us; 2933us; 2940us; 2946us; 2947us; 2948us; 2955us; 2961us; 2962us; 2963us; 2964us; 2965us; 2976us; 2977us; 2980us; 2991us; 2992us; 2994us; 2995us; 2997us; 3000us; 3001us; 3002us; 3004us; 3006us; 3007us; 3009us; 3046us; 3048us; 3050us; 3124us; 3125us; 3162us; 3164us; 3168us; 3242us; 3243us; 3244us; 3246us; 3247us; 3251us; 3255us; 3271us; 3321us; 3322us; 3323us; 3326us; 3328us; 3329us; 3361us; 3369us; 3370us; 3372us; 3376us; 3379us; 3381us; 3415us; 3418us; 3420us; 3421us; 3422us; 3424us; 3425us; 3427us; 3428us; 3430us; 3431us; 3467us; 3469us; 3471us; 3545us; 3547us; 3548us; 3550us; 3551us; 3553us; 3557us; 3559us; 3561us; 3594us; 3595us; 3597us; 3601us; 3603us; 3605us; 3607us; 3681us; 3684us; 3685us; 3718us; 3719us; 3721us; 3725us; 3726us; 3728us; 3732us; 3733us; 3734us; 3739us; 3741us; 3745us; 3746us; 3747us; 3748us; 3749us; 3750us; 3751us; 3752us; 3755us; 3759us; 3760us; 3767us; 3771us; 3772us; 3810us; 3844us; 3845us; 3876us; 3878us; 3879us; 3880us; 3881us; 3883us; 3884us; 3885us; 3888us; 3889us; 3890us; 3892us; 3898us; 3899us; 3900us; 3901us; 3904us; 3919us; 3920us; 3924us; 3929us; 3933us; 3935us; 3936us; 3938us; 3939us; 3940us; 3942us; 3944us; 3945us; 3946us; 3947us; 3951us; 3986us; 3989us; 3991us; 3994us; 3995us; 3996us; 3997us; 3998us; 4032us; 4036us; 4037us; 4040us; 4046us; 4047us; 4048us; 4052us; 4053us; 4056us; 4057us; 4058us; 4061us; 4065us; 4066us; 4067us; 4069us; 4070us; 4101us; 4103us; 4104us; 4105us; 4106us; 4107us; 4108us; 4109us; 4115us; 4119us; 4122us; 4124us; 4125us; 4126us; 4128us; 4133us; 4134us; 4137us; 4139us; 4141us; 4144us; 4145us; 4146us; 4149us; 4150us; 4152us; 4154us; 4156us; 4157us; 4158us; 4160us; 4164us; 4166us; 4168us; 4169us; 4170us; 4198us; 4203us; 4205us; 4207us; 4209us; 4214us; 4215us; 4216us; 4219us; 4221us; 4254us; 4255us; 4258us; 4291us; 4292us; 4298us; 4299us; 4303us; 4304us; 4305us; 4307us; 4311us; 4312us; 4344us; 4349us; 4351us; 4353us; 4355us; 4359us; 4360us; 4363us; 4364us; 4365us; 4397us; 4404us; 4411us; 4413us; 4414us; 4416us; 4418us; 4419us; 4422us; 4423us; 4425us; 4427us; 4428us; 4432us; 4436us; 4441us; 4442us; 4475us; 4477us; 4478us; 4512us; 4514us; 4515us; 4534us; 4536us; 4537us; 4538us; 4568us; 4572us; 4573us; 4575us; 4579us; 4580us; 4585us; 4586us; 4605us; 4607us; 4653us; 4654us; 4687us; 4688us; 4690us; 4722us; 4723us; 4725us; 4757us; 4764us; 4771us; 4772us; 4773us; 4776us; 4784us; 4785us; 4786us; 4788us; 4789us; 4793us; 4795us; 4797us; 4830us; 4831us; 4833us; 4834us; 4835us; 4837us; 4841us; 4843us; 4845us; 4846us; 4848us; 4881us; 4882us; 4885us; 4887us; 4889us; 4892us; 4893us; 4894us; 4968us; 4969us; 4971us; 4974us; 4978us; 4979us; 5053us; 5057us; 5058us; 5059us; 5060us; 5061us; 5062us; 5063us; 5064us; 5066us; 5070us; 5072us; 5075us; 5077us; 5082us; 5086us; 5087us; 5089us; 5091us; 5093us; 5094us; 5096us; 5097us; 5101us; 5108us; 5109us; 5111us; 5117us; 5119us; 5121us; 5122us; 5123us; 5124us; 5126us; 5128us; 5129us; 5133us; 5135us; 5136us; 5139us; 5141us; 5142us; 5144us; 5145us; 5146us; 5148us; 5185us; 5187us; 5191us; 5266us; 5267us; 5268us; 5269us; 5342us; 5348us; 5349us; 5350us; 5351us; 5352us; 5354us; 5355us; 5358us; 5361us; 5435us; 5436us; 5439us; 5440us; 5441us; 5444us; 5477us; 5478us; 5479us; 5480us; 5481us; 5482us; 5483us; 5484us; 5485us; 5486us; 5487us; 5488us; 5489us; 5490us; 5491us; 5492us; 5494us; 5495us; 5496us; 5497us; 5498us; 5500us; 5502us; 5503us; 5505us; 5507us; 5509us; 5510us; 5511us; 5514us; 5518us; 5519us; 5520us; 5523us; 5524us; 5526us; 5528us; 5529us; 5535us; 5536us; 5538us; 5539us; 5541us; 5544us; 5577us; 5578us; 5582us; 5586us; 5587us; 5596us; 5602us; 5603us; 5604us; 5605us; 5609us; 5610us; 5611us; 5615us; 5617us; 5620us; 5623us; 5625us; 5627us; 5634us; 5641us; 5648us; 5655us; 5657us; 5658us; 5695us; 5732us; 5734us; 5735us; 5736us; 5773us; 5810us; 5847us; 5884us; 5887us; 5888us; 5890us; 5891us; 5893us; 5896us; 5934us; 5941us; 5971us; 6009us; 6010us; 6046us; 6047us; 6083us; 6084us; 6116us; 6117us; 6118us; 6182us; 6186us; 6187us; 6188us; 6226us; 6227us; 6263us; 6264us; 6300us; 6301us; 6302us; 6304us; 6305us; 6308us; 6312us; 6313us; 6351us; 6353us; 6354us; 6392us; 6394us; 6395us; 6397us; 6399us; 6400us; 6401us; 6402us; 6403us; 6404us; 6405us; 6469us; 6475us; 6476us; 6477us; 6481us; 6484us; 6485us; 6487us; 6527us; 6534us; 6535us; 6536us; 6540us; 6541us; 6542us; 6549us; 6554us; 6558us; 6561us; 6565us; 6569us; 6572us; 6579us; 6582us; 6589us; 6598us; 6614us; 6622us; 6624us; 6625us; 6663us; 6665us; 6667us; 6700us; 6701us; 6739us; 6777us; 6778us; 6816us; 6854us; 6892us; 6930us; 6933us; 6934us; 6937us; 6938us; 6941us; 6979us; 6980us; 7018us; 7019us; 7092us; 7098us; 7099us; 7100us; 7101us; 7174us; 7178us; 7179us; 7205us; 7207us; 7208us; 7210us; 7243us; 7244us; 7246us; 7247us; 7277us; 7308us; 7339us; 7412us; 7413us; 7486us; 7487us; 7489us; 7562us; 7566us; 7567us; 7643us; 7644us; 7647us; 7650us; 7653us; 7656us; 7659us; 7661us; 7663us; 7665us; 7667us; 7671us; 7675us; 7679us; 7681us; 7682us; 7719us; 7793us; 7795us; 7798us; 7799us; 7836us; 7910us; 7914us; 7916us; 7919us; 7920us; 7922us; 7996us; 7997us; 7998us; 8074us; 8075us; 8076us; 8151us; 8152us; 8153us; 8154us; 8155us; 8156us; 8229us; 8234us; 8235us; 8236us; 8309us; 8314us; 8315us; 8316us; 8389us; 8395us; 8396us; 8397us; 8471us; 8472us; 8547us; 8577us; 8578us; 8579us; 8580us; 8653us; 8654us; 8719us; 8720us; 8794us; 8795us; 8861us; 8862us; 8937us; 8967us; 9042us; 9047us; 9048us; 9049us; 9052us; 9053us; 9054us; 9055us; 9056us; 9101us; 9112us; 9193us; 9203us; 9204us; 9205us; 9206us; 9207us; 9208us; 9213us; 9289us; 9294us; 9295us; 9296us; 9297us; 9298us; 9299us; 9373us; 9376us; 9377us; 9378us; 9379us; 9380us; 9455us; 9481us; 9556us; 9582us; 9583us; 9584us; 9621us; 9695us; 9697us; 9699us; 9702us; 9776us; 9777us; 9814us; 9888us; 9892us; 9894us; 9898us; 9972us; 9973us; 9974us; 10047us; 10049us; 10051us; 10125us; 10126us; 10200us; 10204us; 10205us; 10207us; 10208us; 10281us; 10307us; 10380us; 10381us; 10407us; 10428us; 10449us; 10459us; 10480us; 10499us; 10518us; 10528us; 10538us; 10548us; 10558us; 10568us; 10578us; 10588us; 10590us; 10599us; 10604us; 10609us; 10611us; 10613us; 10615us; 10641us; 10667us; 10693us; 10723us; 10747us; 10773us; 10797us; 10822us; 10847us; 10874us; 10903us; 10930us; 10956us; 10982us; 11009us; 11042us; 11043us; 11076us; 11077us; 11110us; 11111us; 11184us; 11186us; 11260us; 11261us; 11263us; 11270us; 11344us; 11418us; 11492us; 11566us; 11640us; 11714us; 11788us; 11862us; 11936us; 12010us; 12086us; 12087us; 12161us; 12235us; 12309us; 12383us; 12457us; 12531us; 12605us; 12679us; 12753us; 12754us; 12755us; 12756us; 12757us; 12758us; 12759us; 12760us; 12761us; 12762us; 12763us; 12764us; 12765us; 12766us; 12767us; 12768us; 12769us; 12770us; 12771us; 12772us; 12773us; 12774us; 12847us; 12851us; 12852us; 12892us; 12893us; 12933us; 12937us; 12938us; 12939us; 12940us; 12979us; 12980us; 12981us; 12982us; 12983us; 12986us; 12989us; 13028us; 13029us; 13030us; 13031us; 13032us; 13105us; 13178us; 13179us; 13183us; 13184us; 13257us; 13259us; 13332us; 13338us; 13339us; 13340us; 13413us; 13415us; 13488us; 13494us; 13495us; 13496us; 13569us; 13570us; 13571us; 13651us; 13652us; 13732us; 13733us; 13780us; 13827us; 13828us; 13875us; 13922us; 13923us; 13970us; 14017us; 14018us; 14065us; 14112us; 14113us; 14160us; 14207us; 14208us; 14255us; 14302us; 14303us; 14335us; 14367us; 14370us; 14408us; 14440us; 14472us; 14473us; 14479us; 14480us; 14481us; 14528us; 14529us; 14576us; 14577us; 14616us; 14658us; 14700us; 14701us; 14707us; 14745us; 14751us; 14757us; 14760us; 14762us; 14768us; 14774us; 14812us; 14850us; 14852us; 14853us; 14891us; 14929us; 14937us; 14938us; 14940us; 14948us; 14949us; 14953us; 14957us; 14958us; 14961us; 14962us; 14963us; 14964us; 15039us; 15043us; 15044us; 15045us; 15046us; 15047us; 15050us; 15123us; 15124us; 15125us; 15126us; 15127us; 15128us; 15129us; 15221us; 15225us; 15227us; 15229us; 15230us; 15234us; 15235us; 15313us; 15317us; 15318us; 15319us; 15323us; 15324us; 15325us; 15326us; 15327us; 15329us; 15405us; 15406us; 15408us; 15482us; 15483us; 15557us; 15558us; 15559us; 15632us; 15633us; 15634us; 15635us; 15636us; 15637us; 15638us; 15639us; 15640us; 15641us; 15642us; 15643us; 15718us; 15722us; 15723us; 15724us; 15726us; 15727us; 15728us; 15803us; 15879us; 15883us; 15884us; 15885us; 15886us; 15887us; 15962us; 15966us; 15967us; 15968us; 15969us; 15970us; 16054us; 16154us; 16254us; 16255us; 16265us; 16266us; 16267us; 16268us; 16269us; 16270us; 16271us; 16272us; 16273us; 16274us; 16276us; 16278us; 16280us; 16284us; 16357us; 16358us; 16359us; 16360us; 16361us; 16366us; 16371us; 16372us; 16374us; 16375us; 16455us; 16461us; 16462us; 16463us; 16464us; 16465us; 16466us; 16467us; 16468us; 16469us; 16470us; 16471us; 16472us; 16547us; 16620us; 16621us; 16694us; 16695us; 16775us; 16776us; 16777us; 16778us; 16851us; 16924us; 16925us; 16926us; 16927us; 16930us; 16934us; 16935us; 16975us; 16977us; 16978us; 16979us; 16980us; 16982us; 17015us; 17019us; 17020us; 17053us; 17054us; 17091us; 17092us; 17123us; 17126us; 17157us; 17158us; 17161us; 17162us; 17163us; 17237us; 17238us; 17241us; 17242us; 17244us; 17318us; 17319us; 17322us; 17323us; 17327us; 17328us; 17331us; 17332us; 17338us; 17340us; 17341us; 17342us; 17345us; 17347us; 17348us; 17349us; 17353us; 17355us; 17357us; 17358us; 17359us; 17361us; 17362us; 17363us; 17372us; 17453us; 17454us; 17455us; 17456us; 17460us; 17462us; 17466us; 17467us; 17470us; 17471us; 17472us; 17473us; 17477us; 17478us; 17481us; 17483us; 17484us; 17488us; 17489us; 17493us; 17494us; 17498us; 17499us; 17503us; 17504us; 17536us; 17545us; 17549us; 17551us; 17552us; 17554us; 17555us; 17556us; 17598us; 17602us; 17603us; 17604us; 17605us; 17606us; 17607us; 17643us; 17645us; 17720us; 17721us; 17722us; 17759us; 17762us; 17838us; 17842us; 17843us; 17844us; 17846us; 17847us; 17848us; 17850us; 17851us; 17853us; 17854us; 17894us; 17895us; 17935us; 17937us; 17938us; 17940us; 17945us; 17947us; 17952us; 17986us; 17987us; 17989us; 18023us; 18024us; 18026us; 18060us; 18061us; 18063us; 18097us; 18098us; 18131us; 18139us; 18171us; 18178us; 18180us; 18182us; 18214us; 18221us; 18229us; 18261us; 18268us; 18270us; 18272us; 18304us; 18311us; 18313us; 18346us; 18347us; 18349us; 18350us; 18359us; 18391us; 18392us; 18424us; 18425us; 18457us; 18458us; 18467us; 18499us; 18500us; 18532us; 18533us; 18535us; 18536us; 18538us; 18540us; 18545us; 18549us; 18550us; 18560us; 18561us; 18563us; 18564us; 18565us; 18599us; 18603us; 18608us; 18609us; 18610us; 18643us; 18644us; 18646us; 18679us; 18680us; 18683us; 18684us; 18687us; 18688us; 18691us; 18692us; 18694us; 18695us; 18697us; 18730us; 18731us; 18733us; 18738us; 18771us; 18772us; 18773us; 18775us; 18779us; 18780us; 18814us; 18818us; 18823us; 18824us; 18826us; 18828us; 18829us; 18860us; 18862us; 18863us; 18864us; 18898us; 18904us; 18911us; 18912us; 18913us; 18915us; 18949us; 18983us; 18989us; 18990us; 18991us; 18992us; 18993us; 18994us; 18995us; 18996us; 19034us; 19035us; 19036us; 19040us; 19041us; 19042us; 19045us; 19049us; 19050us; 19058us; 19059us; 19060us; 19062us; 19063us; 19099us; 19101us; 19141us; 19142us; 19143us; 19144us; 19145us; 19154us; 19155us; 19156us; 19157us; 19158us; 19160us; 19193us; 19194us; 19195us; 19196us; 19205us; 19209us; 19210us; 19212us; 19213us; 19215us; 19216us; 19224us; 19230us; 19231us; 19233us; 19237us; 19238us; 19239us; 19246us; 19247us; 19248us; 19249us; 19250us; 19251us; 19259us; 19267us; 19275us; 19277us; 19278us; 19279us; 19281us; 19283us; 19284us; 19285us; 19286us; 19287us; 19296us; 19297us; 19298us; 19326us; 19330us; 19331us; 19335us; 19336us; 19337us; 19339us; 19345us; 19346us; 19348us; 19352us; 19353us; 19354us; 19355us; 19356us; 19357us; 19358us; 19359us; 19360us; 19361us; 19362us; 19363us; 19364us; 19365us; 19366us; 19367us; 19368us; 19369us; 19370us; 19371us; 19372us; 19373us; 19374us; 19375us; 19376us; 19378us; 19379us; 19381us; 19382us; 19383us; 19385us; 19386us; 19387us; 19388us; 19389us; 19391us; 19392us; 19397us; 19398us; 19399us; 19400us; 19401us; 19402us; 19403us; 19404us; 19405us; 19409us; 19410us; 19414us; 19415us; 19417us; 19419us; 19420us; 19421us; 19422us; 19423us; 19424us; 19425us; 19426us; 19427us; 19428us; 19429us; 19430us; 19431us; 19432us; 19433us; 19434us; 19435us; 19436us; 19437us; 19438us; 19439us; 19440us; 19441us; 19442us; 19443us; 19444us; 19445us; 19446us; 19447us; 19449us; 19450us; 19451us; 19526us; 19529us; 19530us; 19531us; 19606us; 19609us; 19610us; 19611us; 19612us; 19613us; 19614us; 19615us; 19619us; 19623us; 19624us; 19625us; 19626us; 19630us; 19634us; 19635us; 19636us; 19637us; 19641us; 19642us; 19643us; 19644us; 19645us; 19649us; 19650us; 19651us; 19652us; 19656us; 19657us; 19658us; 19659us; 19660us; 19661us; 19662us; 19663us; 19664us; 19665us; 19666us; 19667us; 19668us; 19669us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 3us; 3us; 3us; 1us; 2us; 3us; 1us; 1us; 2us; 1us; 1us; 3us; 0us; 2us; 1us; 2us; 3us; 2us; 4us; 3us; 1us; 2us; 2us; 1us; 3us; 4us; 1us; 1us; 4us; 3us; 3us; 1us; 1us; 0us; 3us; 3us; 2us; 1us; 1us; 5us; 5us; 3us; 3us; 1us; 12us; 0us; 2us; 5us; 3us; 5us; 3us; 2us; 3us; 1us; 3us; 2us; 7us; 2us; 1us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 0us; 3us; 11us; 4us; 4us; 4us; 5us; 5us; 5us; 0us; 2us; 3us; 3us; 1us; 3us; 1us; 1us; 2us; 2us; 3us; 0us; 2us; 3us; 2us; 1us; 2us; 2us; 1us; 3us; 4us; 1us; 4us; 3us; 3us; 1us; 1us; 0us; 5us; 4us; 3us; 1us; 2us; 2us; 3us; 1us; 2us; 3us; 1us; 1us; 3us; 3us; 3us; 5us; 3us; 5us; 2us; 1us; 2us; 3us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 0us; 1us; 2us; 5us; 4us; 4us; 2us; 1us; 3us; 3us; 4us; 6us; 2us; 2us; 2us; 2us; 2us; 1us; 1us; 1us; 3us; 3us; 0us; 1us; 3us; 2us; 8us; 7us; 6us; 2us; 1us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 2us; 0us; 3us; 2us; 3us; 3us; 1us; 3us; 6us; 5us; 4us; 1us; 2us; 3us; 4us; 5us; 5us; 10us; 3us; 4us; 5us; 5us; 8us; 5us; 6us; 8us; 0us; 2us; 3us; 3us; 1us; 4us; 2us; 0us; 1us; 1us; 1us; 1us; 1us; 0us; 3us; 0us; 3us; 0us; 3us; 5us; 2us; 1us; 0us; 2us; 1us; 0us; 2us; 2us; 3us; 3us; 1us; 3us; 2us; 4us; 4us; 3us; 4us; 1us; 1us; 6us; 3us; 3us; 3us; 5us; 3us; 3us; 3us; 2us; 1us; 3us; 3us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 2us; 3us; 3us; 1us; 3us; 3us; 1us; 2us; 5us; 3us; 1us; 0us; 5us; 1us; 0us; 1us; 0us; 0us; 2us; 3us; 1us; 4us; 3us; 3us; 4us; 3us; 5us; 7us; 4us; 4us; 3us; 3us; 1us; 2us; 3us; 1us; 1us; 3us; 1us; 4us; 6us; 6us; 6us; 1us; 3us; 4us; 2us; 4us; 2us; 3us; 4us; 3us; 1us; 3us; 1us; 1us; 1us; 3us; 2us; 2us; 5us; 2us; 1us; 5us; 1us; 3us; 0us; 2us; 3us; 1us; 2us; 4us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 8us; 1us; 1us; 0us; 3us; 3us; 2us; 3us; 1us; 4us; 2us; 2us; 2us; 2us; 2us; 2us; 3us; 0us; 2us; 1us; 6us; 6us; 5us; 3us; 3us; 1us; 2us; 2us; 0us; 4us; 3us; 1us; 3us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 4us; 1us; 2us; 1us; 3us; 1us; 2us; 1us; 3us; 1us; 1us; 2us; 3us; 2us; 1us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 3us; 3us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 4us; 4us; 2us; 1us; 3us; 1us; 2us; 3us; 3us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 4us; 4us; 4us; 3us; 1us; 0us; 3us; 3us; 1us; 1us; 3us; 2us; 3us; 1us; 3us; 3us; 3us; 3us; 2us; 3us; 3us; 0us; 2us; 3us; 3us; 3us; 1us; 3us; 1us; 2us; 1us; 3us; 1us; 2us; 3us; 2us; 1us; 3us; 5us; 1us; 1us; 1us; 6us; 7us; 0us; 3us; 3us; 2us; 2us; 3us; 3us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 4us; 3us; 3us; 2us; 2us; 2us; 1us; 2us; 2us; 1us; 5us; 5us; 5us; 3us; 2us; 3us; 5us; 5us; 5us; 4us; 3us; 5us; 5us; 5us; 4us; 3us; 5us; 2us; 4us; 3us; 2us; 2us; 2us; 2us; 8us; 8us; 7us; 5us; 3us; 4us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 2us; 3us; 3us; 1us; 2us; 2us; 1us; 2us; 2us; 4us; 4us; 3us; 2us; 2us; 0us; 2us; 2us; 2us; 4us; 4us; 0us; 2us; 4us; 4us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 2us; 2us; 4us; 4us; 2us; 2us; 2us; 1us; 2us; 1us; 2us; 1us; 3us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 1us; 1us; 3us; 3us; 3us; 2us; 4us; 4us; 1us; 1us; 1us; 0us; 1us; 5us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 3us; 1us; 3us; 2us; 2us; 1us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 2us; 2us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 2us; 6us; 1us; 1us; 1us; 3us; 3us; 1us; 3us; 3us; 3us; 2us; 2us; 1us; 1us; 1us; 1us; 0us; 1us; 1us; 3us; 5us; 3us; 2us; 3us; 3us; 3us; 2us; 5us; 3us; 1us; 1us; 6us; 2us; 0us; 0us; 1us; 0us; 4us; 0us; 2us; 3us; 6us; 1us; 5us; 1us; 2us; 5us; 5us; 4us; 6us; 1us; 0us; 1us; 1us; 2us; 2us; 1us; 1us; 3us; 0us; 3us; 2us; 3us; 1us; 2us; 4us; 3us; 2us; 5us; 4us; 2us; 1us; 0us; 2us; 3us; 3us; 2us; 0us; 2us; 2us; 5us; 2us; 1us; 3us; 3us; 3us; 2us; 2us; 4us; 4us; 5us; 5us; 5us; 4us; 4us; 3us; 2us; 3us; 1us; 3us; 1us; 3us; 0us; 2us; 3us; 1us; 3us; 1us; 3us; 1us; 4us; 5us; 2us; 3us; 4us; 1us; 3us; 1us; 2us; 3us; 2us; 3us; 1us; 3us; 3us; 1us; 1us; 1us; 3us; 1us; 2us; 3us; 2us; 4us; 1us; 3us; 3us; 2us; 3us; 4us; 5us; 4us; 3us; 3us; 0us; 1us; 3us; 4us; 1us; 1us; 1us; 2us; 1us; 1us; 3us; 3us; 6us; 6us; 5us; 4us; 3us; 1us; 1us; 2us; 1us; 1us; 3us; 2us; 3us; 4us; 3us; 1us; 2us; 6us; 6us; 4us; 3us; 3us; 2us; 2us; 1us; 3us; 2us; 1us; 1us; 0us; 3us; 3us; 1us; 1us; 3us; 1us; 3us; 1us; 1us; 2us; 1us; 3us; 3us; 2us; 2us; 1us; 2us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 4us; 6us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 1us; 2us; 3us; 1us; 1us; 1us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 0us; 1us; 1us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 2us; 3us; 1us; 2us; 1us; 1us; 0us; 1us; 0us; 2us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 3us; 4us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 7us; 7us; 7us; 7us; 7us; 8us; 8us; 9us; 10us; 11us; 11us; 12us; 12us; 13us; 14us; 14us; 15us; 16us; 16us; 16us; 17us; 18us; 19us; 19us; 20us; 20us; 21us; 22us; 22us; 23us; 23us; 23us; 23us; 24us; 24us; 24us; 25us; 25us; 25us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 27us; 28us; 28us; 28us; 29us; 29us; 29us; 30us; 31us; 31us; 32us; 32us; 33us; 33us; 34us; 34us; 34us; 35us; 35us; 35us; 35us; 36us; 36us; 36us; 36us; 37us; 37us; 37us; 38us; 38us; 39us; 40us; 40us; 40us; 40us; 40us; 40us; 40us; 41us; 41us; 41us; 41us; 42us; 42us; 43us; 43us; 43us; 44us; 45us; 45us; 46us; 46us; 46us; 47us; 47us; 48us; 48us; 49us; 50us; 50us; 51us; 51us; 51us; 51us; 52us; 52us; 53us; 53us; 53us; 53us; 53us; 54us; 54us; 54us; 54us; 54us; 55us; 55us; 56us; 56us; 56us; 56us; 56us; 56us; 56us; 56us; 57us; 57us; 58us; 58us; 59us; 59us; 59us; 59us; 59us; 59us; 59us; 60us; 60us; 60us; 61us; 62us; 62us; 63us; 63us; 64us; 64us; 64us; 64us; 65us; 65us; 66us; 66us; 66us; 67us; 67us; 67us; 67us; 68us; 68us; 68us; 68us; 69us; 70us; 70us; 71us; 71us; 71us; 71us; 72us; 72us; 72us; 73us; 73us; 73us; 74us; 74us; 74us; 74us; 75us; 75us; 76us; 76us; 76us; 77us; 77us; 77us; 78us; 79us; 79us; 79us; 80us; 80us; 81us; 82us; 82us; 83us; 83us; 84us; 84us; 84us; 84us; 84us; 84us; 84us; 84us; 84us; 84us; 84us; 85us; 86us; 87us; 87us; 88us; 88us; 88us; 88us; 88us; 89us; 89us; 90us; 90us; 90us; 91us; 91us; 92us; 92us; 93us; 93us; 94us; 94us; 94us; 95us; 95us; 96us; 97us; 97us; 98us; 98us; 99us; 99us; 99us; 100us; 100us; 101us; 101us; 101us; 101us; 102us; 102us; 103us; 103us; 103us; 103us; 103us; 104us; 104us; 104us; 105us; 105us; 106us; 106us; 106us; 107us; 108us; 108us; 108us; 109us; 109us; 110us; 110us; 110us; 111us; 111us; 112us; 112us; 113us; 114us; 115us; 115us; 115us; 116us; 117us; 117us; 118us; 118us; 119us; 119us; 120us; 120us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 122us; 122us; 123us; 123us; 123us; 124us; 125us; 125us; 126us; 126us; 126us; 126us; 127us; 127us; 127us; 128us; 128us; 128us; 129us; 129us; 130us; 130us; 131us; 131us; 132us; 132us; 133us; 133us; 134us; 135us; 136us; 137us; 138us; 139us; 139us; 140us; 140us; 141us; 141us; 142us; 143us; 144us; 145us; 145us; 145us; 145us; 146us; 146us; 147us; 148us; 148us; 148us; 149us; 149us; 150us; 150us; 151us; 151us; 151us; 151us; 151us; 152us; 152us; 153us; 154us; 154us; 155us; 155us; 156us; 156us; 156us; 157us; 157us; 157us; 158us; 159us; 159us; 160us; 161us; 161us; 162us; 162us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 164us; 164us; 164us; 164us; 165us; 165us; 166us; 166us; 167us; 167us; 168us; 169us; 169us; 169us; 169us; 170us; 170us; 171us; 171us; 171us; 171us; 171us; 172us; 172us; 172us; 172us; 172us; 172us; 173us; 173us; 174us; 174us; 175us; 175us; 176us; 177us; 177us; 177us; 177us; 177us; 177us; 178us; 178us; 179us; 179us; 179us; 179us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 181us; 181us; 182us; 182us; 182us; 182us; 182us; 182us; 182us; 182us; 183us; 183us; 184us; 184us; 185us; 185us; 186us; 187us; 187us; 187us; 188us; 188us; 188us; 189us; 189us; 190us; 190us; 191us; 191us; 192us; 193us; 193us; 193us; 193us; 193us; 193us; 194us; 194us; 195us; 195us; 195us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 197us; 197us; 198us; 198us; 198us; 199us; 199us; 199us; 199us; 200us; 201us; 201us; 201us; 201us; 201us; 202us; 202us; 203us; 204us; 205us; 205us; 205us; 206us; 206us; 206us; 206us; 206us; 206us; 207us; 207us; 207us; 207us; 208us; 208us; 208us; 208us; 208us; 208us; 208us; 208us; 208us; 208us; 208us; 208us; 209us; 209us; 210us; 210us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 212us; 212us; 212us; 212us; 212us; 212us; 212us; 212us; 212us; 212us; 212us; 212us; 213us; 213us; 214us; 214us; 214us; 214us; 214us; 215us; 215us; 216us; 216us; 216us; 216us; 216us; 216us; 216us; 216us; 216us; 216us; 216us; 217us; 217us; 217us; 217us; 218us; 218us; 218us; 218us; 219us; 219us; 219us; 219us; 220us; 220us; 220us; 220us; 220us; 220us; 220us; 220us; 220us; 221us; 221us; 221us; 222us; 222us; 223us; 223us; 224us; 224us; 224us; 224us; 224us; 225us; 225us; 225us; 226us; 226us; 227us; 227us; 228us; 228us; 228us; 229us; 230us; 230us; 230us; 230us; 231us; 231us; 232us; 232us; 233us; 234us; 234us; 235us; 235us; 236us; 236us; 237us; 237us; 237us; 238us; 238us; 239us; 239us; 239us; 239us; 239us; 239us; 239us; 240us; 240us; 241us; 241us; 241us; 241us; 242us; 242us; 243us; 243us; 244us; 244us; 244us; 244us; 244us; 245us; 245us; 245us; 246us; 246us; 246us; 247us; 247us; 248us; 248us; 248us; 249us; 250us; 250us; 250us; 251us; 252us; 252us; 253us; 253us; 253us; 253us; 253us; 254us; 254us; 254us; 254us; 254us; 254us; 254us; 254us; 255us; 255us; 256us; 256us; 257us; 257us; 258us; 258us; 259us; 259us; 260us; 260us; 261us; 261us; 262us; 262us; 262us; 262us; 262us; 262us; 263us; 263us; 264us; 265us; 265us; 265us; 265us; 266us; 266us; 266us; 267us; 267us; 268us; 268us; 269us; 269us; 269us; 269us; 269us; 269us; 269us; 270us; 270us; 270us; 270us; 271us; 272us; 272us; 272us; 273us; 273us; 274us; 274us; 275us; 275us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 277us; 277us; 278us; 278us; 278us; 278us; 278us; 278us; 278us; 279us; 279us; 279us; 280us; 280us; 281us; 282us; 282us; 283us; 283us; 283us; 284us; 284us; 284us; 285us; 285us; 286us; 286us; 286us; 286us; 287us; 287us; 288us; 289us; 290us; 290us; 290us; 290us; 291us; 291us; 291us; 291us; 291us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 293us; 294us; 294us; 295us; 295us; 296us; 296us; 296us; 296us; 297us; 298us; 298us; 299us; 299us; 299us; 300us; 300us; 301us; 301us; 302us; 302us; 302us; 302us; 303us; 303us; 303us; 304us; 304us; 304us; 304us; 305us; 305us; 306us; 306us; 307us; 307us; 308us; 308us; 309us; 309us; 310us; 310us; 311us; 311us; 312us; 312us; 313us; 313us; 314us; 314us; 315us; 315us; 316us; 316us; 317us; 317us; 318us; 318us; 319us; 319us; 320us; 320us; 321us; 321us; 321us; 322us; 322us; 322us; 323us; 323us; 323us; 324us; 324us; 325us; 325us; 325us; 326us; 326us; 326us; 327us; 327us; 327us; 328us; 329us; 329us; 329us; 330us; 330us; 330us; 331us; 331us; 331us; 331us; 331us; 332us; 332us; 332us; 332us; 332us; 332us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 49152us; 65535us; 49152us; 65535us; 49152us; 65535us; 49152us; 16389us; 16390us; 16391us; 16392us; 16393us; 16394us; 65535us; 16395us; 65535us; 16396us; 65535us; 16397us; 65535us; 16398us; 65535us; 16399us; 65535us; 16400us; 65535us; 16402us; 65535us; 65535us; 65535us; 16404us; 65535us; 16406us; 16407us; 16408us; 65535us; 65535us; 65535us; 16411us; 16412us; 65535us; 16413us; 65535us; 16414us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16419us; 65535us; 16420us; 65535us; 65535us; 16422us; 65535us; 65535us; 65535us; 16423us; 16424us; 16425us; 65535us; 65535us; 65535us; 16426us; 16427us; 65535us; 16428us; 16429us; 65535us; 65535us; 65535us; 16432us; 65535us; 65535us; 16433us; 16435us; 16436us; 65535us; 65535us; 65535us; 65535us; 16437us; 16438us; 16439us; 16440us; 16441us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16442us; 65535us; 65535us; 65535us; 65535us; 65535us; 16445us; 65535us; 65535us; 16446us; 65535us; 65535us; 65535us; 16447us; 65535us; 65535us; 16448us; 65535us; 16449us; 65535us; 65535us; 16450us; 65535us; 65535us; 16452us; 16453us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16454us; 65535us; 16455us; 16456us; 16457us; 65535us; 65535us; 16458us; 16459us; 65535us; 65535us; 16460us; 16461us; 65535us; 16462us; 65535us; 65535us; 16463us; 16464us; 65535us; 65535us; 16465us; 16466us; 65535us; 65535us; 16467us; 16468us; 16469us; 16470us; 65535us; 65535us; 16472us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16473us; 65535us; 65535us; 65535us; 65535us; 65535us; 16476us; 65535us; 65535us; 16477us; 65535us; 16478us; 65535us; 65535us; 16479us; 65535us; 16481us; 65535us; 65535us; 16482us; 16483us; 65535us; 65535us; 16485us; 16486us; 65535us; 16488us; 65535us; 16489us; 65535us; 65535us; 16490us; 65535us; 16492us; 65535us; 16493us; 65535us; 16494us; 65535us; 16496us; 65535us; 16497us; 65535us; 65535us; 16499us; 65535us; 65535us; 65535us; 16500us; 16501us; 65535us; 65535us; 65535us; 16502us; 16503us; 65535us; 16504us; 16505us; 16506us; 65535us; 65535us; 65535us; 65535us; 16508us; 16511us; 16512us; 65535us; 16513us; 65535us; 16514us; 65535us; 65535us; 65535us; 65535us; 16517us; 16518us; 16519us; 65535us; 65535us; 16520us; 65535us; 16521us; 65535us; 16522us; 65535us; 65535us; 16523us; 16524us; 65535us; 65535us; 16525us; 65535us; 16526us; 16527us; 65535us; 65535us; 65535us; 65535us; 65535us; 16530us; 65535us; 65535us; 65535us; 16532us; 16533us; 65535us; 16534us; 16535us; 16536us; 16537us; 65535us; 65535us; 65535us; 16539us; 16540us; 16541us; 65535us; 65535us; 16542us; 16543us; 65535us; 16546us; 65535us; 65535us; 65535us; 65535us; 16547us; 65535us; 65535us; 16548us; 16549us; 16550us; 16551us; 65535us; 16552us; 65535us; 65535us; 16553us; 65535us; 65535us; 65535us; 16554us; 65535us; 65535us; 65535us; 65535us; 16555us; 65535us; 16556us; 65535us; 16557us; 65535us; 16558us; 65535us; 16559us; 65535us; 16560us; 16561us; 16562us; 16563us; 65535us; 65535us; 16564us; 65535us; 65535us; 16565us; 65535us; 65535us; 16568us; 16569us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16570us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16571us; 16572us; 65535us; 16573us; 16574us; 16575us; 65535us; 65535us; 16576us; 16577us; 65535us; 65535us; 16578us; 16579us; 65535us; 16580us; 65535us; 65535us; 16581us; 16582us; 65535us; 65535us; 16583us; 16584us; 16585us; 16586us; 65535us; 16587us; 65535us; 65535us; 16589us; 65535us; 16590us; 65535us; 65535us; 16591us; 16592us; 65535us; 65535us; 16594us; 65535us; 65535us; 65535us; 65535us; 65535us; 16595us; 65535us; 65535us; 65535us; 65535us; 16596us; 16597us; 65535us; 16599us; 65535us; 65535us; 65535us; 65535us; 16600us; 16601us; 65535us; 65535us; 16602us; 65535us; 65535us; 16603us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16604us; 16605us; 65535us; 16606us; 65535us; 16607us; 65535us; 16608us; 65535us; 65535us; 65535us; 65535us; 65535us; 16609us; 65535us; 16610us; 65535us; 65535us; 65535us; 65535us; 65535us; 16611us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16612us; 65535us; 16614us; 65535us; 65535us; 16615us; 65535us; 65535us; 16616us; 16617us; 65535us; 65535us; 65535us; 16618us; 16619us; 16621us; 16622us; 16623us; 16624us; 16625us; 65535us; 65535us; 16627us; 65535us; 65535us; 16629us; 65535us; 65535us; 16631us; 65535us; 65535us; 16632us; 16633us; 16634us; 65535us; 16636us; 16637us; 65535us; 16639us; 16640us; 65535us; 65535us; 16641us; 16642us; 16643us; 65535us; 65535us; 16644us; 65535us; 65535us; 65535us; 65535us; 16646us; 65535us; 16647us; 16648us; 65535us; 65535us; 16649us; 16650us; 16651us; 65535us; 65535us; 65535us; 65535us; 65535us; 16652us; 16653us; 16654us; 16655us; 65535us; 65535us; 16656us; 65535us; 65535us; 16657us; 16658us; 65535us; 16659us; 65535us; 16660us; 16661us; 65535us; 65535us; 16662us; 16663us; 65535us; 16664us; 65535us; 65535us; 16665us; 16666us; 16667us; 16668us; 16669us; 16670us; 65535us; 65535us; 65535us; 65535us; 16673us; 16674us; 65535us; 65535us; 16675us; 65535us; 65535us; 65535us; 65535us; 16676us; 16677us; 65535us; 16678us; 65535us; 65535us; 65535us; 16679us; 16680us; 65535us; 65535us; 65535us; 65535us; 16683us; 16684us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16690us; 16691us; 65535us; 65535us; 65535us; 16692us; 65535us; 65535us; 16693us; 65535us; 16694us; 65535us; 16695us; 16696us; 65535us; 65535us; 16697us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16698us; 65535us; 16699us; 16700us; 65535us; 65535us; 65535us; 65535us; 16704us; 65535us; 65535us; 16705us; 65535us; 16707us; 65535us; 65535us; 16708us; 65535us; 65535us; 65535us; 16710us; 65535us; 65535us; 16711us; 65535us; 65535us; 16712us; 65535us; 65535us; 16713us; 16714us; 65535us; 65535us; 16715us; 65535us; 65535us; 16716us; 65535us; 16717us; 65535us; 65535us; 65535us; 16719us; 65535us; 16720us; 65535us; 65535us; 16722us; 65535us; 65535us; 65535us; 65535us; 16726us; 16727us; 65535us; 65535us; 16728us; 16729us; 65535us; 16730us; 65535us; 65535us; 65535us; 65535us; 16731us; 65535us; 16732us; 16733us; 65535us; 65535us; 65535us; 65535us; 16734us; 65535us; 65535us; 16736us; 65535us; 65535us; 65535us; 65535us; 16739us; 16740us; 65535us; 16741us; 65535us; 65535us; 65535us; 16742us; 65535us; 65535us; 16743us; 16744us; 16745us; 16746us; 16747us; 16748us; 16749us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16750us; 65535us; 65535us; 65535us; 16754us; 65535us; 16755us; 65535us; 65535us; 16757us; 65535us; 65535us; 65535us; 65535us; 16759us; 16760us; 16761us; 65535us; 65535us; 16762us; 65535us; 65535us; 16765us; 65535us; 65535us; 16766us; 65535us; 16768us; 16769us; 65535us; 65535us; 65535us; 65535us; 65535us; 16770us; 16771us; 16772us; 65535us; 65535us; 16773us; 16774us; 16775us; 65535us; 65535us; 16777us; 65535us; 65535us; 65535us; 16779us; 65535us; 16780us; 16781us; 65535us; 65535us; 16782us; 16783us; 16784us; 16785us; 16786us; 16787us; 16788us; 16789us; 16790us; 16791us; 16792us; 16793us; 16794us; 16795us; 16796us; 65535us; 16797us; 16798us; 16799us; 16800us; 65535us; 65535us; 16801us; 65535us; 65535us; 65535us; 16802us; 16805us; 65535us; 65535us; 16806us; 16807us; 65535us; 16808us; 65535us; 65535us; 16810us; 65535us; 16812us; 65535us; 16813us; 65535us; 65535us; 65535us; 16814us; 65535us; 65535us; 16817us; 65535us; 65535us; 16818us; 16819us; 16820us; 65535us; 16821us; 16822us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16823us; 65535us; 65535us; 65535us; 65535us; 16828us; 65535us; 65535us; 65535us; 65535us; 65535us; 16833us; 65535us; 16834us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16837us; 65535us; 16838us; 65535us; 16839us; 65535us; 16840us; 16841us; 65535us; 65535us; 16842us; 16843us; 65535us; 16844us; 65535us; 16845us; 65535us; 16846us; 16848us; 65535us; 16849us; 65535us; 65535us; 16850us; 65535us; 65535us; 16851us; 65535us; 65535us; 16852us; 65535us; 65535us; 16854us; 16855us; 16856us; 16857us; 16858us; 16859us; 65535us; 65535us; 16860us; 16861us; 65535us; 65535us; 16863us; 65535us; 65535us; 65535us; 16864us; 16865us; 65535us; 16866us; 16867us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16870us; 65535us; 65535us; 65535us; 65535us; 16874us; 65535us; 65535us; 16877us; 65535us; 65535us; 65535us; 65535us; 65535us; 16882us; 65535us; 16883us; 65535us; 65535us; 16886us; 65535us; 16887us; 65535us; 65535us; 16888us; 16889us; 16890us; 65535us; 65535us; 16891us; 65535us; 65535us; 16893us; 65535us; 65535us; 16895us; 65535us; 16897us; 65535us; 65535us; 65535us; 65535us; 16898us; 65535us; 16901us; 65535us; 65535us; 65535us; 16902us; 65535us; 16904us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16905us; 65535us; 65535us; 65535us; 65535us; 16906us; 65535us; 65535us; 65535us; 65535us; 65535us; 16907us; 65535us; 65535us; 16909us; 16910us; 65535us; 16911us; 16912us; 65535us; 16913us; 16914us; 16915us; 16916us; 16917us; 65535us; 65535us; 16918us; 16919us; 65535us; 65535us; 16920us; 16921us; 65535us; 65535us; 16922us; 16923us; 65535us; 16924us; 65535us; 65535us; 16925us; 16926us; 16927us; 65535us; 65535us; 65535us; 65535us; 65535us; 16931us; 65535us; 16932us; 65535us; 65535us; 65535us; 65535us; 16934us; 16935us; 65535us; 16936us; 16937us; 16938us; 16939us; 65535us; 65535us; 65535us; 65535us; 16940us; 16941us; 16942us; 16943us; 16944us; 65535us; 65535us; 65535us; 16945us; 16946us; 16947us; 16948us; 16949us; 65535us; 65535us; 16950us; 16951us; 16952us; 65535us; 65535us; 65535us; 65535us; 65535us; 16956us; 16957us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16958us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16959us; 16960us; 65535us; 65535us; 65535us; 65535us; 16961us; 65535us; 65535us; 16962us; 65535us; 16963us; 65535us; 65535us; 65535us; 16965us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16966us; 65535us; 16967us; 65535us; 16968us; 65535us; 65535us; 65535us; 16970us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16983us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16993us; 16994us; 16995us; 16996us; 16997us; 16998us; 16999us; 17000us; 17001us; 17002us; 17003us; 17004us; 17005us; 17006us; 17007us; 17008us; 17009us; 17010us; 17011us; 17012us; 17014us; 65535us; 65535us; 17015us; 65535us; 17016us; 65535us; 65535us; 17017us; 17018us; 17019us; 65535us; 17020us; 17021us; 17022us; 17023us; 65535us; 65535us; 65535us; 17025us; 17026us; 17027us; 17028us; 65535us; 65535us; 17031us; 65535us; 17032us; 65535us; 65535us; 65535us; 65535us; 17034us; 17035us; 65535us; 65535us; 65535us; 65535us; 17038us; 17039us; 65535us; 17040us; 17041us; 65535us; 17043us; 65535us; 17044us; 65535us; 65535us; 17046us; 65535us; 65535us; 17047us; 65535us; 65535us; 17048us; 65535us; 65535us; 17049us; 65535us; 65535us; 17050us; 65535us; 65535us; 17051us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17052us; 65535us; 17053us; 17054us; 65535us; 17055us; 65535us; 17056us; 65535us; 65535us; 65535us; 17058us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17064us; 65535us; 65535us; 65535us; 17066us; 65535us; 65535us; 17067us; 65535us; 65535us; 17068us; 65535us; 17069us; 17070us; 17071us; 65535us; 65535us; 17072us; 17073us; 17074us; 17075us; 65535us; 65535us; 17076us; 17077us; 17078us; 17079us; 17080us; 17082us; 65535us; 65535us; 65535us; 65535us; 17083us; 65535us; 17084us; 65535us; 65535us; 17085us; 17086us; 65535us; 17087us; 17088us; 17089us; 17090us; 65535us; 65535us; 17091us; 65535us; 65535us; 17093us; 65535us; 17095us; 17096us; 65535us; 17100us; 17101us; 17102us; 17103us; 17104us; 17105us; 17106us; 17107us; 17108us; 17109us; 17110us; 65535us; 65535us; 17111us; 17112us; 65535us; 17113us; 17114us; 65535us; 65535us; 65535us; 17115us; 17116us; 17117us; 17118us; 65535us; 65535us; 17119us; 17120us; 17121us; 17122us; 65535us; 65535us; 65535us; 17123us; 65535us; 17124us; 17125us; 17126us; 65535us; 17127us; 17128us; 17129us; 17130us; 17131us; 65535us; 65535us; 65535us; 65535us; 65535us; 17132us; 17133us; 17134us; 17135us; 65535us; 65535us; 17136us; 65535us; 17137us; 65535us; 65535us; 17139us; 17140us; 17141us; 17142us; 17143us; 17144us; 17145us; 17146us; 17147us; 17149us; 17150us; 65535us; 65535us; 17153us; 65535us; 17154us; 65535us; 17156us; 17157us; 17158us; 65535us; 65535us; 17160us; 17161us; 17162us; 65535us; 65535us; 65535us; 65535us; 65535us; 17163us; 17164us; 17167us; 65535us; 65535us; 65535us; 17169us; 65535us; 17171us; 65535us; 17172us; 65535us; 65535us; 65535us; 65535us; 65535us; 17173us; 17174us; 65535us; 65535us; 65535us; 17175us; 65535us; 65535us; 65535us; 65535us; 17178us; 65535us; 65535us; 65535us; 17179us; 65535us; 65535us; 17180us; 65535us; 65535us; 65535us; 17181us; 17182us; 65535us; 65535us; 65535us; 17186us; 17187us; 65535us; 17189us; 17190us; 65535us; 65535us; 17192us; 17194us; 17196us; 65535us; 65535us; 65535us; 17197us; 65535us; 17198us; 17200us; 17203us; 65535us; 17205us; 65535us; 65535us; 17206us; 65535us; 17207us; 65535us; 17208us; 65535us; 17210us; 65535us; 17211us; 65535us; 65535us; 65535us; 65535us; 17212us; 65535us; 17213us; 17214us; 65535us; 65535us; 17215us; 17216us; 17217us; 17218us; 17219us; 65535us; 65535us; 65535us; 17220us; 17221us; 65535us; 65535us; 65535us; 65535us; 17222us; 17223us; 65535us; 17224us; 17225us; 65535us; 17226us; 65535us; 17227us; 65535us; 17228us; 65535us; 65535us; 17229us; 65535us; 65535us; 65535us; 65535us; 65535us; 17235us; 65535us; 65535us; 17236us; 65535us; 65535us; 17238us; 65535us; 65535us; 17240us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17248us; 65535us; 17250us; 65535us; 65535us; 17251us; 65535us; 17252us; 65535us; 17253us; 65535us; 65535us; 17255us; 65535us; 17256us; 65535us; 17259us; 65535us; 65535us; 65535us; 65535us; 17260us; 65535us; 17262us; 65535us; 17263us; 17264us; 65535us; 65535us; 65535us; 17265us; 17266us; 65535us; 17267us; 65535us; 65535us; 17268us; 65535us; 17269us; 65535us; 17270us; 65535us; 17271us; 65535us; 17272us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17274us; 17275us; 65535us; 65535us; 17278us; 65535us; 65535us; 65535us; 17279us; 65535us; 65535us; 17282us; 65535us; 65535us; 17284us; 17285us; 65535us; 65535us; 65535us; 17286us; 17287us; 65535us; 65535us; 65535us; 65535us; 17288us; 17289us; 17290us; 17291us; 17292us; 17293us; 17294us; 65535us; 17296us; 17297us; 65535us; 17298us; 17299us; 65535us; 65535us; 17301us; 65535us; 17302us; 17303us; 65535us; 17304us; 65535us; 65535us; 65535us; 65535us; 17305us; 17306us; 17307us; 65535us; 17308us; 17309us; 17310us; 17311us; 65535us; 65535us; 17313us; 17315us; 17316us; 65535us; 65535us; 17318us; 65535us; 17319us; 65535us; 17321us; 65535us; 65535us; 17322us; 65535us; 65535us; 17324us; 17325us; 65535us; 17327us; 17328us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17332us; 17333us; 65535us; 65535us; 17334us; 17335us; 17336us; 17337us; 65535us; 17338us; 17339us; 65535us; 65535us; 17340us; 65535us; 17341us; 17342us; 65535us; 65535us; 17343us; 65535us; 65535us; 17344us; 17345us; 17346us; 17347us; 17348us; 17349us; 17350us; 17351us; 17352us; 17353us; 17354us; 17355us; 17356us; 17357us; 17358us; 17359us; 17360us; 17361us; 17362us; 17363us; 17364us; 17365us; 17366us; 17367us; 65535us; 17369us; 65535us; 17370us; 17371us; 65535us; 17372us; 17373us; 17374us; 17375us; 65535us; 17377us; 65535us; 17378us; 17379us; 17380us; 17381us; 17382us; 17383us; 17384us; 17385us; 65535us; 17387us; 65535us; 17388us; 65535us; 65535us; 17392us; 17393us; 17394us; 17395us; 17396us; 17397us; 17398us; 17399us; 17401us; 17403us; 17405us; 17407us; 17409us; 17411us; 17415us; 17417us; 17419us; 17420us; 17421us; 17422us; 17423us; 17424us; 17425us; 17426us; 17427us; 17428us; 17429us; 17430us; 65535us; 17432us; 17433us; 65535us; 65535us; 17434us; 17435us; 65535us; 65535us; 17436us; 17437us; 17438us; 17439us; 17440us; 17442us; 65535us; 65535us; 17444us; 17445us; 17446us; 65535us; 65535us; 17447us; 17448us; 17449us; 65535us; 17450us; 17451us; 17452us; 17453us; 65535us; 17454us; 17455us; 17456us; 65535us; 17457us; 17458us; 17459us; 17460us; 17461us; 17462us; 17463us; 17464us; 17465us; 17466us; 17467us; 17468us; 17469us; 17470us; |]
let _fsyacc_reductions ()  =    [| 
//# 2870 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.ParsedSigFile)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startsignatureFile));
//# 2879 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.ParsedImplFile)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startimplementationFile));
//# 2888 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.ParsedFsiInteraction)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startinteraction));
//# 2897 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_starttypedSeqExprEOF));
//# 2906 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_starttypEOF));
//# 2915 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 540 "../../../src/fsharp/pars.fsy"
                            IDefns (_1, lhs parseState) 
                   )
//# 540 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.ParsedFsiInteraction));
//# 2926 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 543 "../../../src/fsharp/pars.fsy"
                            warning(Error(FSComp.SR.parsUnexpectedSemicolon(), rhs parseState 1))
                            IDefns ([], lhs parseState) 
                   )
//# 543 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.ParsedFsiInteraction));
//# 2937 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 547 "../../../src/fsharp/pars.fsy"
                            IDefns ([], lhs parseState) 
                   )
//# 547 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.ParsedFsiInteraction));
//# 2947 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 551 "../../../src/fsharp/pars.fsy"
                                              
                   )
//# 551 "../../../src/fsharp/pars.fsy"
                 : 'interactiveTerminator));
//# 2957 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 552 "../../../src/fsharp/pars.fsy"
                                   checkEndOfFileError _1 
                   )
//# 552 "../../../src/fsharp/pars.fsy"
                 : 'interactiveTerminator));
//# 2968 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 566 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 566 "../../../src/fsharp/pars.fsy"
                 : 'interactiveItemsTerminator));
//# 2979 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveDefns)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 569 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 569 "../../../src/fsharp/pars.fsy"
                 : 'interactiveItemsTerminator));
//# 2991 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 572 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 572 "../../../src/fsharp/pars.fsy"
                 : 'interactiveItemsTerminator));
//# 3003 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveHash)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 575 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 575 "../../../src/fsharp/pars.fsy"
                 : 'interactiveItemsTerminator));
//# 3015 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveDefns)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 578 "../../../src/fsharp/pars.fsy"
                            _1 @ _3 
                   )
//# 578 "../../../src/fsharp/pars.fsy"
                 : 'interactiveItemsTerminator));
//# 3028 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 581 "../../../src/fsharp/pars.fsy"
                            _1 @ _3 
                   )
//# 581 "../../../src/fsharp/pars.fsy"
                 : 'interactiveItemsTerminator));
//# 3041 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveHash)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 584 "../../../src/fsharp/pars.fsy"
                            _1 @ _3 
                   )
//# 584 "../../../src/fsharp/pars.fsy"
                 : 'interactiveItemsTerminator));
//# 3054 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 590 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 590 "../../../src/fsharp/pars.fsy"
                 : 'interactiveDefns));
//# 3065 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 593 "../../../src/fsharp/pars.fsy"
                             _1 @ _2 
                   )
//# 593 "../../../src/fsharp/pars.fsy"
                 : 'interactiveDefns));
//# 3077 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 599 "../../../src/fsharp/pars.fsy"
                             match _2 with
                             | Some vis -> errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(vis.ToString()), rhs parseState 3))
                             | _ -> ()
                             let attrDecls = if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] in 
                             attrDecls @ [ mkSynDoDecl(_3)] 
                   )
//# 599 "../../../src/fsharp/pars.fsy"
                 : 'interactiveExpr));
//# 3094 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 609 "../../../src/fsharp/pars.fsy"
                             [SynModuleDecl.HashDirective(_1, rhs parseState 1)] 
                   )
//# 609 "../../../src/fsharp/pars.fsy"
                 : 'interactiveHash));
//# 3105 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 614 "../../../src/fsharp/pars.fsy"
                                                
                   )
//# 614 "../../../src/fsharp/pars.fsy"
                 : 'interactiveSeparators));
//# 3116 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 616 "../../../src/fsharp/pars.fsy"
                                                                      
                   )
//# 616 "../../../src/fsharp/pars.fsy"
                 : 'interactiveSeparators));
//# 3128 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 620 "../../../src/fsharp/pars.fsy"
                                     
                   )
//# 620 "../../../src/fsharp/pars.fsy"
                 : 'interactiveSeparator));
//# 3138 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 621 "../../../src/fsharp/pars.fsy"
                                     
                   )
//# 621 "../../../src/fsharp/pars.fsy"
                 : 'interactiveSeparator));
//# 3148 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArgs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 630 "../../../src/fsharp/pars.fsy"
                            ParsedHashDirective (_2, _3, lhs parseState) 
                   )
//# 630 "../../../src/fsharp/pars.fsy"
                 : 'hashDirective));
//# 3160 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 636 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 636 "../../../src/fsharp/pars.fsy"
                 : 'hashDirectiveArgs));
//# 3170 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArgs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 639 "../../../src/fsharp/pars.fsy"
                            _1 @ [_2] 
                   )
//# 639 "../../../src/fsharp/pars.fsy"
                 : 'hashDirectiveArgs));
//# 3182 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 645 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 645 "../../../src/fsharp/pars.fsy"
                 : 'hashDirectiveArg));
//# 3193 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 654 "../../../src/fsharp/pars.fsy"
                            checkEndOfFileError _2; _1 
                   )
//# 654 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.ParsedSigFile));
//# 3205 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 657 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 657 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.ParsedSigFile));
//# 3217 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 663 "../../../src/fsharp/pars.fsy"
                            let emptySigFileFrag = ParsedSigFileFragment.AnonModule([], rhs parseState 1) in 
                            ParsedSigFile ([], [emptySigFileFrag]) 
                   )
//# 663 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.ParsedSigFile));
//# 3229 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleKeyword)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 671 "../../../src/fsharp/pars.fsy"
                             _3, _4.Lid, grabXmlDoc(parseState, 1), _2 
                   )
//# 671 "../../../src/fsharp/pars.fsy"
                 : 'moduleIntro));
//# 3243 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 677 "../../../src/fsharp/pars.fsy"
                             _2, _3.Lid, grabXmlDoc(parseState, 1)  
                   )
//# 677 "../../../src/fsharp/pars.fsy"
                 : 'namespaceIntro));
//# 3255 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 683 "../../../src/fsharp/pars.fsy"
                             ParsedSigFile ([], [ (_1 (false, [], PreXmlDoc.Empty)) ]) 
                   )
//# 683 "../../../src/fsharp/pars.fsy"
                 : 'fileNamespaceSpecs));
//# 3266 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 686 "../../../src/fsharp/pars.fsy"
                             // If there are namespaces, the first fileModuleImpl may only contain # directives 
                             let decls = 
                                 match (_1 (false, [], PreXmlDoc.Empty)) with 
                                 | ParsedSigFileFragment.AnonModule(decls, m) -> decls  
                                 | ParsedSigFileFragment.NamespaceFragment(_, _, _, decls, _, _, _) -> decls 
                                 | ParsedSigFileFragment.NamedModule(SynModuleOrNamespaceSig(_, _, _, _, _, _, _, m)) ->
                                     raiseParseErrorAt m (FSComp.SR.parsOnlyHashDirectivesAllowed())
                             let decls = 
                                 decls |> List.collect (function 
                                     | (SynModuleSigDecl.HashDirective (hd, _)) -> [hd]
                                     | d ->  
                                          reportParseErrorAt d.Range (FSComp.SR.parsOnlyHashDirectivesAllowed())
                                          [])
                             ParsedSigFile (decls, _2) 
                   )
//# 686 "../../../src/fsharp/pars.fsy"
                 : 'fileNamespaceSpecs));
//# 3291 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpec)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 704 "../../../src/fsharp/pars.fsy"
                            _1 :: _2 
                   )
//# 704 "../../../src/fsharp/pars.fsy"
                 : 'fileNamespaceSpecList));
//# 3303 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 707 "../../../src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 707 "../../../src/fsharp/pars.fsy"
                 : 'fileNamespaceSpecList));
//# 3314 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namespaceIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'deprecated_opt_equals)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 711 "../../../src/fsharp/pars.fsy"
                            let isRec, path, xml = _1 in (_3 (isRec, path, xml)) 
                   )
//# 711 "../../../src/fsharp/pars.fsy"
                 : 'fileNamespaceSpec));
//# 3327 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmptyBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 717 "../../../src/fsharp/pars.fsy"
                           if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                           let m2 = rhs parseState 3
                           let m = (rhs2 parseState 1 4)
                           let isRec, path2, xml, vis = _3 
                           (fun (isRec2, path, _) -> 
                             if not (isNil path) then errorR(Error(FSComp.SR.parsNamespaceOrModuleNotBoth(), m2))
                             let lid = path@path2 
                             ParsedSigFileFragment.NamedModule(SynModuleOrNamespaceSig(lid, (isRec || isRec2), NamedModule, _4, xml, _1, vis, m)))  
                   )
//# 717 "../../../src/fsharp/pars.fsy"
                 : 'fileModuleSpec));
//# 3348 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmptyBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 727 "../../../src/fsharp/pars.fsy"
                           let m = (rhs parseState 1) 
                           (fun (isRec, path, xml) -> 
                             match path with 
                             | [] -> ParsedSigFileFragment.AnonModule(_1, m)  
                             | _ -> ParsedSigFileFragment.NamespaceFragment(path, isRec, DeclaredNamespace, _1, xml, [], m))  
                   )
//# 727 "../../../src/fsharp/pars.fsy"
                 : 'fileModuleSpec));
//# 3363 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 736 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 736 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
//# 3374 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 739 "../../../src/fsharp/pars.fsy"
                             _2 
                   )
//# 739 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
//# 3387 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 742 "../../../src/fsharp/pars.fsy"
                              // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                              // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight())   
                              _2 
                            
                   )
//# 742 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
//# 3402 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 748 "../../../src/fsharp/pars.fsy"
                              [] 
                   )
//# 748 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
//# 3413 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 753 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 753 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
//# 3424 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 756 "../../../src/fsharp/pars.fsy"
                             [] 
                   )
//# 756 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
//# 3434 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 759 "../../../src/fsharp/pars.fsy"
                             [] 
                   )
//# 759 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
//# 3444 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 764 "../../../src/fsharp/pars.fsy"
                            _1 :: _3 
                   )
//# 764 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfns));
//# 3457 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 767 "../../../src/fsharp/pars.fsy"
                            (* silent recovery *) _3 
                   )
//# 767 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfns));
//# 3469 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 770 "../../../src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 770 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfns));
//# 3481 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 775 "../../../src/fsharp/pars.fsy"
                             SynModuleSigDecl.HashDirective (_1, rhs2 parseState 1 1)  
                   )
//# 775 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfn));
//# 3492 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'valSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 778 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 778 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfn));
//# 3503 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'colonOrEquals)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'namedModuleAbbrevBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 781 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let isRec, path, xml, vis = _3 
                             if isRec then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsInvalidUseOfRec())
                             if not (isSingleton path) then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName())
                             if not (isNil _1) then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviation())
                             match vis with
                             | Some vis -> raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreVisibilityOnModuleAbbreviationAlwaysPrivate(vis.ToString()))
                             | _ -> SynModuleSigDecl.ModuleAbbrev(List.head path, _5, rhs2 parseState 1 5) 
                   )
//# 781 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfn));
//# 3525 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'colonOrEquals)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpecBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 791 "../../../src/fsharp/pars.fsy"
                             let isRec, path, xml, vis = _3 
                             if not (isSingleton path) then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleDefnMustBeSimpleName())
                             if isRec then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsInvalidUseOfRec())
                             let info = ComponentInfo(_1, [], [], path, xml, false, vis, rhs parseState 3)
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             SynModuleSigDecl.NestedModule(info, isRec, _5, rhs2 parseState 1 5) 
                   )
//# 791 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfn));
//# 3545 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypeDefnSig list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 799 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let (TypeDefnSig(ComponentInfo(cas, a, cs, b, c, d, d2, d3), e, f, g)), rest = 
                                match _3 with
                                | [] -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEmptyModuleDefn()) 
                                | h :: t -> h, t 
                             let tc = (TypeDefnSig(ComponentInfo(_1@cas, a, cs, b, c, d, d2, d3), e, f, g))in 
                             SynModuleSigDecl.Types (tc :: rest, rhs parseState 3) 
                   )
//# 799 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfn));
//# 3564 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 808 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let (SynExceptionSig(SynExceptionDefnRepr(cas, a, b, c, d, d2), e, f)) = _3 
                             let ec = (SynExceptionSig(SynExceptionDefnRepr(_1@cas, a, b, c, d, d2), e, f)) 
                             SynModuleSigDecl.Exception(ec, rhs parseState 3) 
                   )
//# 808 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfn));
//# 3580 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'openDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 814 "../../../src/fsharp/pars.fsy"
                             SynModuleSigDecl.Open(_1, (rhs parseState 1)) 
                   )
//# 814 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpfn));
//# 3591 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _12 = (let data = parseState.GetInput(12) in (Microsoft.FSharp.Core.Operators.unbox data : 'optLiteralValueSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 818 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let attr1, attr2, isInline, isMutable, vis2, id, doc, explicitValTyparDecls, (ty, arity), konst = (_1), (_4), (_5), (_6), (_7), (_8), grabXmlDoc(parseState, 3), (_9), (_11), (_12) 
                             if not (isNil attr2) then errorR(Deprecated(FSComp.SR.parsAttributesMustComeBeforeVal(), rhs parseState 4))
                             let m = rhs2 parseState 1 11 
                             let valSpfn = ValSpfn((attr1@attr2), id, explicitValTyparDecls, ty, arity, isInline, isMutable, doc, vis2, konst, m) 
                             SynModuleSigDecl.Val(valSpfn, m)
                           
                   )
//# 818 "../../../src/fsharp/pars.fsy"
                 : 'valSpfn));
//# 3617 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 829 "../../../src/fsharp/pars.fsy"
                             None 
                   )
//# 829 "../../../src/fsharp/pars.fsy"
                 : 'optLiteralValueSpfn));
//# 3627 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 832 "../../../src/fsharp/pars.fsy"
                             Some(_2) 
                   )
//# 832 "../../../src/fsharp/pars.fsy"
                 : 'optLiteralValueSpfn));
//# 3638 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 835 "../../../src/fsharp/pars.fsy"
                             Some(_3) 
                   )
//# 835 "../../../src/fsharp/pars.fsy"
                 : 'optLiteralValueSpfn));
//# 3651 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 843 "../../../src/fsharp/pars.fsy"
                             _2 
                   )
//# 843 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpecBlock));
//# 3663 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'sigOrBegin)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 847 "../../../src/fsharp/pars.fsy"
                             _3 
                   )
//# 847 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpecBlock));
//# 3676 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'sigOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 851 "../../../src/fsharp/pars.fsy"
                             _2 
                   )
//# 851 "../../../src/fsharp/pars.fsy"
                 : 'moduleSpecBlock));
//# 3688 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 857 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 857 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynTypeDefnSig list));
//# 3700 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 862 "../../../src/fsharp/pars.fsy"
                            _1 :: _3 
                   )
//# 862 "../../../src/fsharp/pars.fsy"
                 : 'tyconSpfnList));
//# 3712 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 865 "../../../src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 865 "../../../src/fsharp/pars.fsy"
                 : 'tyconSpfnList));
//# 3723 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 871 "../../../src/fsharp/pars.fsy"
                             let lhsm = rhs parseState 1 
                             _3 lhsm _1 
                   )
//# 871 "../../../src/fsharp/pars.fsy"
                 : 'tyconSpfn));
//# 3736 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 874 "../../../src/fsharp/pars.fsy"
                             TypeDefnSig(_1, SynTypeDefnSigRepr.Simple (SynTypeDefnSimpleRepr.None (lhs parseState), lhs parseState), _2, lhs parseState) 
                   )
//# 874 "../../../src/fsharp/pars.fsy"
                 : 'tyconSpfn));
//# 3748 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 888 "../../../src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            (fun lhsm nameInfo -> 
                                _2 lhsm nameInfo (checkForMultipleAugmentations m (_4 @ _5) _7)) 
                   )
//# 888 "../../../src/fsharp/pars.fsy"
                 : 'tyconSpfnRhsBlock));
//# 3766 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 893 "../../../src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            (fun lhsm nameInfo -> 
                                _1 lhsm nameInfo _2) 
                   )
//# 893 "../../../src/fsharp/pars.fsy"
                 : 'tyconSpfnRhsBlock));
//# 3780 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypeDefnSimpleRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 901 "../../../src/fsharp/pars.fsy"
                            let m = _1.Range 
                            (fun lhsm nameInfo augmentation -> 
                                TypeDefnSig(nameInfo, SynTypeDefnSigRepr.Simple (_1, m), augmentation, m)) 
                   )
//# 901 "../../../src/fsharp/pars.fsy"
                 : 'tyconSpfnRhs));
//# 3793 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconClassSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 906 "../../../src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            let needsCheck, (kind, decls) = _1
                            (fun nameRange nameInfo augmentation -> 
                                if needsCheck && isNil decls then
                                   reportParseErrorAt nameRange (FSComp.SR.parsEmptyTypeDefinition())
                                TypeDefnSig(nameInfo, SynTypeDefnSigRepr.ObjectModel (kind, decls, m), augmentation, m)) 
                   )
//# 906 "../../../src/fsharp/pars.fsy"
                 : 'tyconSpfnRhs));
//# 3809 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 914 "../../../src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            let ty, arity = _3
                            let invoke = SynMemberSig.Member(ValSpfn([], mkSynId m "Invoke", inferredTyparDecls, ty, arity, false, false, PreXmlDoc.Empty, None, None, m), AbstractMemberFlags MemberKind.Member, m) 
                            (fun nameRange nameInfo augmentation -> 
                                if not (isNil augmentation) then raiseParseErrorAt m (FSComp.SR.parsAugmentationsIllegalOnDelegateType())
                                TypeDefnSig(nameInfo, SynTypeDefnSigRepr.ObjectModel (TyconDelegate (ty, arity), [invoke], m), [], m)) 
                   )
//# 914 "../../../src/fsharp/pars.fsy"
                 : 'tyconSpfnRhs));
//# 3825 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlockKindUnspecified)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 925 "../../../src/fsharp/pars.fsy"
                            let needsCheck, decls = _1 
                            needsCheck, (TyconUnspecified, decls) 
                   )
//# 925 "../../../src/fsharp/pars.fsy"
                 : 'tyconClassSpfn));
//# 3837 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 929 "../../../src/fsharp/pars.fsy"
                            false, (_1, _2) 
                   )
//# 929 "../../../src/fsharp/pars.fsy"
                 : 'tyconClassSpfn));
//# 3849 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 932 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedClassInterfaceOrStruct())
                            false, (_1, _2) 
                   )
//# 932 "../../../src/fsharp/pars.fsy"
                 : 'tyconClassSpfn));
//# 3863 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 936 "../../../src/fsharp/pars.fsy"
                            // silent recovery 
                            false, (_1, []) 
                   )
//# 936 "../../../src/fsharp/pars.fsy"
                 : 'tyconClassSpfn));
//# 3875 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 943 "../../../src/fsharp/pars.fsy"
                            true, _2 
                   )
//# 943 "../../../src/fsharp/pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
//# 3887 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 946 "../../../src/fsharp/pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeSignature())
                            false, _2 
                   )
//# 946 "../../../src/fsharp/pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
//# 3900 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 951 "../../../src/fsharp/pars.fsy"
                            false, _2 
                   )
//# 951 "../../../src/fsharp/pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
//# 3911 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 954 "../../../src/fsharp/pars.fsy"
                            false, _2 
                   )
//# 954 "../../../src/fsharp/pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
//# 3923 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 960 "../../../src/fsharp/pars.fsy"
                             _2 
                   )
//# 960 "../../../src/fsharp/pars.fsy"
                 : 'classSpfnBlock));
//# 3935 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 963 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeSignature())
                             _2 
                   )
//# 963 "../../../src/fsharp/pars.fsy"
                 : 'classSpfnBlock));
//# 3948 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 966 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 966 "../../../src/fsharp/pars.fsy"
                 : 'classSpfnBlock));
//# 3959 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembersAtLeastOne)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 971 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 971 "../../../src/fsharp/pars.fsy"
                 : 'classSpfnMembers));
//# 3970 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 974 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 974 "../../../src/fsharp/pars.fsy"
                 : 'classSpfnMembers));
//# 3980 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 980 "../../../src/fsharp/pars.fsy"
                            _1 :: _3 
                   )
//# 980 "../../../src/fsharp/pars.fsy"
                 : 'classSpfnMembersAtLeastOne));
//# 3993 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberSpecFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : 'optLiteralValueSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 986 "../../../src/fsharp/pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            let isInline, doc, vis2, id, explicitValTyparDecls, (ty, arity), optLiteralValue = _4, grabXmlDoc(parseState, 3), _5, _6, _7, _9, _11
                            let getSetRangeOpt, getSet = _10 
                            let getSetAdjuster arity = match arity, getSet with SynValInfo([], _), MemberKind.Member -> MemberKind.PropertyGet | _ -> getSet
                            let wholeRange = 
                                let m = rhs parseState 3 
                                match getSetRangeOpt with 
                                | None -> unionRanges m ty.Range
                                | Some m2 -> unionRanges m m2
                            let valSpfn = ValSpfn(_1, id, explicitValTyparDecls, ty, arity, isInline, false, doc, vis2, optLiteralValue, wholeRange)
                            let _, flags = _3 
                            SynMemberSig.Member(valSpfn, flags (getSetAdjuster arity), wholeRange) 
                   )
//# 986 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfn));
//# 4024 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1000 "../../../src/fsharp/pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            SynMemberSig.Interface (_4, unionRanges (rhs parseState 3) (_4).Range) 
                   )
//# 1000 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfn));
//# 4039 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1004 "../../../src/fsharp/pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            SynMemberSig.Inherit (_4, unionRanges (rhs parseState 3) (_4).Range) 
                   )
//# 1004 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfn));
//# 4053 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1008 "../../../src/fsharp/pars.fsy"
                            let wholeRange = rhs2 parseState 1 4
                            if Option.isSome _2 then errorR (Error (FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier (), rhs parseState 2))
                            let fld = _4 _1 false wholeRange 
                            SynMemberSig.ValField (fld, wholeRange) 
                   )
//# 1008 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfn));
//# 4069 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1014 "../../../src/fsharp/pars.fsy"
                            let wholeRange = rhs2 parseState 1 5
                            if Option.isSome _2 then errorR (Error (FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier (), rhs parseState 2))
                            SynMemberSig.ValField(_5 _1 true wholeRange, wholeRange) 
                   )
//# 1014 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfn));
//# 4084 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1019 "../../../src/fsharp/pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            SynMemberSig.NestedType(_5, rhs2 parseState 1 5) 
                   )
//# 1019 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfn));
//# 4099 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1023 "../../../src/fsharp/pars.fsy"
                            let vis, doc, (ty, valSynInfo) = _2, grabXmlDoc(parseState, 3), _5 
                            let m = unionRanges (rhs parseState 1) ty.Range 
                            let isInline = false 
                            let valSpfn = ValSpfn (_1, mkSynId (rhs parseState 3) "new", noInferredTypars, ty, valSynInfo, isInline, false, doc, vis, None, m)
                            SynMemberSig.Member(valSpfn, CtorMemberFlags, m) 
                   )
//# 1023 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfn));
//# 4116 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1033 "../../../src/fsharp/pars.fsy"
                           None, MemberKind.Member 
                   )
//# 1033 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfnGetSet));
//# 4126 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1036 "../../../src/fsharp/pars.fsy"
                           Some (rhs2 parseState 1 2), _2 
                   )
//# 1036 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfnGetSet));
//# 4137 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1039 "../../../src/fsharp/pars.fsy"
                           Some (rhs2 parseState 1 2), _2 
                   )
//# 1039 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfnGetSet));
//# 4148 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1042 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedWith())
                            Some (rhs2 parseState 1 2), _2 
                   )
//# 1042 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfnGetSet));
//# 4160 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1049 "../../../src/fsharp/pars.fsy"
                           (let (id:Ident) = _1 
                            if id.idText = "get" then MemberKind.PropertyGet 
                            else if id.idText = "set" then MemberKind.PropertySet 
                            else raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsGetOrSetRequired())) 
                   )
//# 1049 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfnGetSetElements));
//# 4174 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1055 "../../../src/fsharp/pars.fsy"
                           let (id:Ident) = _1 
                           if not ((id.idText = "get" && _3.idText = "set") ||
                                   (id.idText = "set" && _3.idText = "get")) then 
                              raiseParseErrorAt (rhs2 parseState 1 3) (FSComp.SR.parsGetOrSetRequired())
                           MemberKind.PropertyGetSet 
                   )
//# 1055 "../../../src/fsharp/pars.fsy"
                 : 'classMemberSpfnGetSetElements));
//# 4190 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1062 "../../../src/fsharp/pars.fsy"
                                       _1 
                   )
//# 1062 "../../../src/fsharp/pars.fsy"
                 : 'memberSpecFlags));
//# 4201 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1063 "../../../src/fsharp/pars.fsy"
                                           (false, AbstractMemberFlags) 
                   )
//# 1063 "../../../src/fsharp/pars.fsy"
                 : 'memberSpecFlags));
//# 4211 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1064 "../../../src/fsharp/pars.fsy"
                                           (false, AbstractMemberFlags) 
                   )
//# 1064 "../../../src/fsharp/pars.fsy"
                 : 'memberSpecFlags));
//# 4221 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExceptionDefnRepr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1070 "../../../src/fsharp/pars.fsy"
                            SynExceptionSig(_1, _2, lhs parseState) 
                   )
//# 1070 "../../../src/fsharp/pars.fsy"
                 : 'exconSpfn));
//# 4233 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1076 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 1076 "../../../src/fsharp/pars.fsy"
                 : 'opt_classSpfn));
//# 4245 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1079 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 1079 "../../../src/fsharp/pars.fsy"
                 : 'opt_classSpfn));
//# 4255 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpls)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1088 "../../../src/fsharp/pars.fsy"
                            checkEndOfFileError _2; _1 
                   )
//# 1088 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.ParsedImplFile));
//# 4267 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1091 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 1091 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.ParsedImplFile));
//# 4279 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1097 "../../../src/fsharp/pars.fsy"
                            let emptyImplFileFrag = ParsedImplFileFragment.AnonModule([], rhs parseState 1) in 
                            ParsedImplFile ([], [emptyImplFileFrag]) 
                   )
//# 1097 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.ParsedImplFile));
//# 4291 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1104 "../../../src/fsharp/pars.fsy"
                             ParsedImplFile ([], [ (_1 (false, [], PreXmlDoc.Empty)) ]) 
                   )
//# 1104 "../../../src/fsharp/pars.fsy"
                 : 'fileNamespaceImpls));
//# 4302 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImplList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1107 "../../../src/fsharp/pars.fsy"
                             // If there are namespaces, the first fileModuleImpl may only contain # directives 
                             let decls = 
                                 match (_1 (false, [], PreXmlDoc.Empty)) with 
                                 | ParsedImplFileFragment.AnonModule(decls, m) -> decls  
                                 | ParsedImplFileFragment.NamespaceFragment(_, _, _, decls, _, _, _) -> decls 
                                 | ParsedImplFileFragment.NamedModule(SynModuleOrNamespace(_, _, _, _, _, _, _, m)) ->
                                     raiseParseErrorAt m (FSComp.SR.parsOnlyHashDirectivesAllowed())
                             let decls = 
                                 decls |> List.collect (function 
                                     | (SynModuleDecl.HashDirective (hd, _)) -> [hd]
                                     | d ->  
                                          reportParseErrorAt d.Range (FSComp.SR.parsOnlyHashDirectivesAllowed())
                                          [])
                             ParsedImplFile (decls, _2) 
                   )
//# 1107 "../../../src/fsharp/pars.fsy"
                 : 'fileNamespaceImpls));
//# 4327 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImplList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1126 "../../../src/fsharp/pars.fsy"
                            _1 :: _2 
                   )
//# 1126 "../../../src/fsharp/pars.fsy"
                 : 'fileNamespaceImplList));
//# 4339 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1129 "../../../src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 1129 "../../../src/fsharp/pars.fsy"
                 : 'fileNamespaceImplList));
//# 4350 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namespaceIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'deprecated_opt_equals)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1135 "../../../src/fsharp/pars.fsy"
                            let isRec, path, xml = _1 in (_3 (isRec, path, xml)) 
                   )
//# 1135 "../../../src/fsharp/pars.fsy"
                 : 'fileNamespaceImpl));
//# 4363 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynModuleDecl list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1141 "../../../src/fsharp/pars.fsy"
                           if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                           let m2 = rhs parseState 3
                           let m = (m2, _4) ||> unionRangeWithListBy (fun modu -> modu.Range)
                           let isRec2, path2, xml, vis = _3 
                           (fun (isRec, path, _) -> 
                             if not (isNil path) then errorR(Error(FSComp.SR.parsNamespaceOrModuleNotBoth(), m2))
                             let lid = path@path2 
                             ParsedImplFileFragment.NamedModule(SynModuleOrNamespace(lid, (isRec || isRec2), NamedModule, _4, xml, _1, vis, m))) 
                   )
//# 1141 "../../../src/fsharp/pars.fsy"
                 : 'fileModuleImpl));
//# 4384 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynModuleDecl list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1151 "../../../src/fsharp/pars.fsy"
                           let m = (rhs parseState 1) 
                           (fun (isRec, path, xml) -> 
                             match path with 
                             | [] -> ParsedImplFileFragment.AnonModule(_1, m)  
                             | _ -> ParsedImplFileFragment.NamespaceFragment(path, isRec, DeclaredNamespace, _1, xml, [], m)) 
                   )
//# 1151 "../../../src/fsharp/pars.fsy"
                 : 'fileModuleImpl));
//# 4399 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1161 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 1161 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynModuleDecl list));
//# 4412 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1164 "../../../src/fsharp/pars.fsy"
                            // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                            // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight())   
                            _2 
                   )
//# 1164 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynModuleDecl list));
//# 4426 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1169 "../../../src/fsharp/pars.fsy"
                            []  
                   )
//# 1169 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynModuleDecl list));
//# 4437 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1172 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 1172 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynModuleDecl list));
//# 4448 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1178 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 1178 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefnsOrExprPossiblyEmpty));
//# 4459 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1181 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 1181 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefnsOrExprPossiblyEmpty));
//# 4469 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1188 "../../../src/fsharp/pars.fsy"
                             match _2 with
                             | Some vis -> errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(vis.ToString()), rhs parseState 3))
                             | _ -> ()
                             let attrDecls = if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                             attrDecls @ mkSynDoDecl (_3) :: _5 
                   )
//# 1188 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefnsOrExpr));
//# 4488 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1195 "../../../src/fsharp/pars.fsy"
                             match _2 with
                             | Some vis -> errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(vis.ToString()), rhs parseState 3))
                             | _ -> ()
                             let attrDecls = if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                             attrDecls @ [ mkSynDoDecl(_3) ] 
                   )
//# 1195 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefnsOrExpr));
//# 4506 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1202 "../../../src/fsharp/pars.fsy"
                             match _2 with
                             | Some vis -> errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(vis.ToString()), rhs parseState 3))
                             | _ -> ()
                             let attrDecls = if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                             attrDecls @ [ mkSynDoDecl(_3) ] 
                   )
//# 1202 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefnsOrExpr));
//# 4523 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1209 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 1209 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefnsOrExpr));
//# 4534 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1212 "../../../src/fsharp/pars.fsy"
                            if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                   )
//# 1212 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefnsOrExpr));
//# 4545 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1218 "../../../src/fsharp/pars.fsy"
                             _1 @ _2 
                   )
//# 1218 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefns));
//# 4557 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1221 "../../../src/fsharp/pars.fsy"
                             _1 @ _3 
                   )
//# 1221 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefns));
//# 4570 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1224 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 1224 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefns));
//# 4581 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1227 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 1227 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefns));
//# 4593 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1230 "../../../src/fsharp/pars.fsy"
                             _3 
                   )
//# 1230 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefns));
//# 4605 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1236 "../../../src/fsharp/pars.fsy"
                             _1  
                   )
//# 1236 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefnOrDirective));
//# 4616 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1239 "../../../src/fsharp/pars.fsy"
                             [ SynModuleDecl.HashDirective (_1, rhs2 parseState 1 1) ] 
                   )
//# 1239 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefnOrDirective));
//# 4627 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1248 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             parseState.ResetSynArgNameGenerator()
                             let (BindingSetPreAttrs(_, _, _, _, mWhole)) = _3 
                             mkDefnBindings (mWhole, _3, _1, _2, mWhole)  
                   )
//# 1248 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefn));
//# 4643 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1255 "../../../src/fsharp/pars.fsy"
                             let hwlb, m = _3
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             parseState.ResetSynArgNameGenerator()
                             mkDefnBindings (m, hwlb, _1, _2, m)  
                   )
//# 1255 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefn));
//# 4659 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1262 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let mWhole = rhs parseState 3 
                             mkDefnBindings (mWhole, _3, _1, _2, mWhole) 
                   )
//# 1262 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefn));
//# 4674 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1268 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let      (TypeDefn(ComponentInfo(cas, a, cs, b, c, d, d2, d3), e, f, g)) = _4
                             let tc = (TypeDefn(ComponentInfo(_1@cas, a, cs, b, c, d, d2, d3), e, f, g))
                             let types = tc :: _5
                             [ SynModuleDecl.Types(types, (rhs parseState 3, types) ||> unionRangeWithListBy (fun t -> t.Range) ) ] 
                   )
//# 1268 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefn));
//# 4693 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExceptionDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1276 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let (SynExceptionDefn(SynExceptionDefnRepr(cas, a, b, c, d, d2), e, f)) = _3 
                             let f = (f, _1) ||> unionRangeWithListBy (fun a -> a.Range)
                             let ec = (SynExceptionDefn(SynExceptionDefnRepr(_1@cas, a, b, c, d, d2), e, f)) 
                             [ SynModuleDecl.Exception(ec, f) ] 
                   )
//# 1276 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefn));
//# 4710 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'namedModuleDefnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1284 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let attribs, (isRec, path, xml, vis) = _1, _3 
                             match _5 with 
                             | Choice1Of2 eqn -> 
                                 if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                                 if isRec then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsInvalidUseOfRec())
                                 if not (isSingleton path) then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName())
                                 if not (isNil _1) then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviation())
                                 match vis with
                                 | Some vis -> raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviationAlwaysPrivate(vis.ToString()))
                                 | _ -> ()
                                 [ SynModuleDecl.ModuleAbbrev(List.head path, eqn, (rhs parseState 3, eqn) ||> unionRangeWithListBy (fun id -> id.idRange) ) ]
                             | Choice2Of2 def -> 
                                 if not (isSingleton path) then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName())
                                 let info = ComponentInfo(attribs, [], [], path, xml, false, vis, rhs parseState 3)
                                 [ SynModuleDecl.NestedModule(info, isRec, def, false, (rhs2 parseState 1 4, def) ||> unionRangeWithListBy (fun d -> d.Range) ) ] 
                   )
//# 1284 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefn));
//# 4739 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1303 "../../../src/fsharp/pars.fsy"
                             errorR(Error(FSComp.SR.parsAttributeOnIncompleteCode(), rhs parseState 1))
                             [] 
                   )
//# 1303 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefn));
//# 4752 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'openDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1308 "../../../src/fsharp/pars.fsy"
                             [ SynModuleDecl.Open(_1, (rhs parseState 1)) ] 
                   )
//# 1308 "../../../src/fsharp/pars.fsy"
                 : 'moduleDefn));
//# 4763 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1313 "../../../src/fsharp/pars.fsy"
                             SynOpenDeclTarget.ModuleOrNamespace(_2.Lid, (rhs parseState 2)) 
                   )
//# 1313 "../../../src/fsharp/pars.fsy"
                 : 'openDecl));
//# 4774 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1316 "../../../src/fsharp/pars.fsy"
                             SynOpenDeclTarget.Type(_3, (rhs parseState 3)) 
                   )
//# 1316 "../../../src/fsharp/pars.fsy"
                 : 'openDecl));
//# 4786 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1323 "../../../src/fsharp/pars.fsy"
                            _2.Lid 
                   )
//# 1323 "../../../src/fsharp/pars.fsy"
                 : 'namedModuleAbbrevBlock));
//# 4798 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1326 "../../../src/fsharp/pars.fsy"
                            _1.Lid  
                   )
//# 1326 "../../../src/fsharp/pars.fsy"
                 : 'namedModuleAbbrevBlock));
//# 4809 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1332 "../../../src/fsharp/pars.fsy"
                            Choice2Of2 _2  
                   )
//# 1332 "../../../src/fsharp/pars.fsy"
                 : 'namedModuleDefnBlock));
//# 4821 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1335 "../../../src/fsharp/pars.fsy"
                            // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                            Choice2Of2 _2 
                   )
//# 1335 "../../../src/fsharp/pars.fsy"
                 : 'namedModuleDefnBlock));
//# 4834 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1339 "../../../src/fsharp/pars.fsy"
                              // There is an ambiguity here 
                              // In particular, consider the following two:
                              //
                              // module M2 = 
                              //    System.DateTime.Now
                              // module M2 = 
                              //    Microsoft.FSharp.Core.List
                              // The second is a module abbreviation, the first a module containing a single expression.
                              // The resolution is in favour of the module abbreviation, i.e. anything of the form 
                              //    module M2 = ID.ID.ID.ID
                              // will be taken as a module abbreviation, regardles of the identifiers themselves.
                              //
                              // This is similar to the ambiguitty between 
                              //    type X = int
                              // and 
                              //    type X = OneValue
                              // However in that case we do use type name lookup to make the resolution.
                              match _2 with 
                              | [ SynModuleDecl.DoExpr (_, LongOrSingleIdent(false, LongIdentWithDots(path, _), None, _), _) ] -> 
                                  Choice1Of2  path
                              | _ -> 
                                  Choice2Of2 _2 
                            
                   )
//# 1339 "../../../src/fsharp/pars.fsy"
                 : 'namedModuleDefnBlock));
//# 4868 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1365 "../../../src/fsharp/pars.fsy"
                            // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                            // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight())   
                            Choice2Of2 _2 
                   )
//# 1365 "../../../src/fsharp/pars.fsy"
                 : 'namedModuleDefnBlock));
//# 4882 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1370 "../../../src/fsharp/pars.fsy"
                            Choice2Of2 [] 
                   )
//# 1370 "../../../src/fsharp/pars.fsy"
                 : 'namedModuleDefnBlock));
//# 4893 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1373 "../../../src/fsharp/pars.fsy"
                            Choice2Of2 _1 
                   )
//# 1373 "../../../src/fsharp/pars.fsy"
                 : 'namedModuleDefnBlock));
//# 4904 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1376 "../../../src/fsharp/pars.fsy"
                            Choice1Of2 _1.Lid 
                   )
//# 1376 "../../../src/fsharp/pars.fsy"
                 : 'namedModuleDefnBlock));
//# 4915 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1382 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 1382 "../../../src/fsharp/pars.fsy"
                 : 'wrappedNamedModuleDefn));
//# 4927 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1385 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBeginOrStruct())  
                            _2 
                   )
//# 1385 "../../../src/fsharp/pars.fsy"
                 : 'wrappedNamedModuleDefn));
//# 4941 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1389 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 1389 "../../../src/fsharp/pars.fsy"
                 : 'wrappedNamedModuleDefn));
//# 4952 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1394 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 1394 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynMemberDefns));
//# 4964 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1400 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 1400 "../../../src/fsharp/pars.fsy"
                 : 'opt_attributes));
//# 4975 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1403 "../../../src/fsharp/pars.fsy"
                             [] 
                   )
//# 1403 "../../../src/fsharp/pars.fsy"
                 : 'opt_attributes));
//# 4985 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1408 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 1408 "../../../src/fsharp/pars.fsy"
                 : 'attributes));
//# 4996 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeList)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1411 "../../../src/fsharp/pars.fsy"
                            _1 @ _2 
                   )
//# 1411 "../../../src/fsharp/pars.fsy"
                 : 'attributes));
//# 5008 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1417 "../../../src/fsharp/pars.fsy"
                             mkAttributeList _2 (rhs2 parseState 1 4) 
                   )
//# 1417 "../../../src/fsharp/pars.fsy"
                 : 'attributeList));
//# 5021 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1420 "../../../src/fsharp/pars.fsy"
                             mkAttributeList [] (rhs2 parseState 1 3) 
                   )
//# 1420 "../../../src/fsharp/pars.fsy"
                 : 'attributeList));
//# 5032 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1423 "../../../src/fsharp/pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedLBrackLess())
                             mkAttributeList _2 (rhs2 parseState 1 2) 
                   )
//# 1423 "../../../src/fsharp/pars.fsy"
                 : 'attributeList));
//# 5046 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1427 "../../../src/fsharp/pars.fsy"
                             if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedLBrackLess())
                             mkAttributeList [] (rhs parseState 1) 
                   )
//# 1427 "../../../src/fsharp/pars.fsy"
                 : 'attributeList));
//# 5058 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attribute)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1434 "../../../src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 1434 "../../../src/fsharp/pars.fsy"
                 : 'attributeListElements));
//# 5069 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attribute)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1437 "../../../src/fsharp/pars.fsy"
                            _1 @ [_3] 
                   )
//# 1437 "../../../src/fsharp/pars.fsy"
                 : 'attributeListElements));
//# 5082 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1444 "../../../src/fsharp/pars.fsy"
                            let arg = match _3 with None -> mkSynUnit _1.Range | Some e -> e 
                            ({ TypeName=_1; ArgExpr=arg; Target=None; AppliesToGetterAndSetter=false; Range=_1.Range } : SynAttribute) 
                   )
//# 1444 "../../../src/fsharp/pars.fsy"
                 : 'attribute));
//# 5096 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeTarget)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1449 "../../../src/fsharp/pars.fsy"
                            let arg = match _4 with None -> mkSynUnit _2.Range | Some e -> e 
                            ({ TypeName=_2; ArgExpr=arg; Target=_1; AppliesToGetterAndSetter=false; Range=_2.Range } : SynAttribute) 
                   )
//# 1449 "../../../src/fsharp/pars.fsy"
                 : 'attribute));
//# 5111 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeTarget)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1454 "../../../src/fsharp/pars.fsy"
                            let arg = match _6 with None -> mkSynUnit _3.Range | Some e -> e 
                            ({ TypeName=_3; ArgExpr=arg; Target=_1; AppliesToGetterAndSetter=false; Range=_3.Range } : SynAttribute) 
                   )
//# 1454 "../../../src/fsharp/pars.fsy"
                 : 'attribute));
//# 5127 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1461 "../../../src/fsharp/pars.fsy"
                             Some(ident("module", (rhs parseState 1))) 
                   )
//# 1461 "../../../src/fsharp/pars.fsy"
                 : 'attributeTarget));
//# 5138 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1464 "../../../src/fsharp/pars.fsy"
                             Some(ident("type", (rhs parseState 1))) 
                   )
//# 1464 "../../../src/fsharp/pars.fsy"
                 : 'attributeTarget));
//# 5149 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1466 "../../../src/fsharp/pars.fsy"
                                       Some(_1) 
                   )
//# 1466 "../../../src/fsharp/pars.fsy"
                 : 'attributeTarget));
//# 5160 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1470 "../../../src/fsharp/pars.fsy"
                             if _1 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSyntaxError())
                             Some(ident("return", (rhs parseState 1))) 
                   )
//# 1470 "../../../src/fsharp/pars.fsy"
                 : 'attributeTarget));
//# 5172 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1475 "../../../src/fsharp/pars.fsy"
                                           (true, StaticMemberFlags) 
                   )
//# 1475 "../../../src/fsharp/pars.fsy"
                 : 'memberFlags));
//# 5182 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1476 "../../../src/fsharp/pars.fsy"
                                           (false, NonVirtualMemberFlags) 
                   )
//# 1476 "../../../src/fsharp/pars.fsy"
                 : 'memberFlags));
//# 5192 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1477 "../../../src/fsharp/pars.fsy"
                                           (false, OverrideMemberFlags) 
                   )
//# 1477 "../../../src/fsharp/pars.fsy"
                 : 'memberFlags));
//# 5202 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1478 "../../../src/fsharp/pars.fsy"
                                          (false, OverrideMemberFlags) 
                   )
//# 1478 "../../../src/fsharp/pars.fsy"
                 : 'memberFlags));
//# 5212 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconNameAndTyparDecls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1483 "../../../src/fsharp/pars.fsy"
                            let typars, lid, fixity, tpcs1, vis, xmlDoc = _2 
                            let tpcs2 = _3 
                            ComponentInfo(_1, typars, (tpcs1 @ tpcs2), lid, xmlDoc, fixity, vis, rangeOfLid lid)  
                   )
//# 1483 "../../../src/fsharp/pars.fsy"
                 : 'typeNameInfo));
//# 5227 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1490 "../../../src/fsharp/pars.fsy"
                            _2 :: _3 
                   )
//# 1490 "../../../src/fsharp/pars.fsy"
                 : 'tyconDefnList));
//# 5239 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1492 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 1492 "../../../src/fsharp/pars.fsy"
                 : 'tyconDefnList));
//# 5249 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1497 "../../../src/fsharp/pars.fsy"
                            TypeDefn(_1, SynTypeDefnRepr.Simple(SynTypeDefnSimpleRepr.None(_1.Range), _1.Range), [], _1.Range) 
                   )
//# 1497 "../../../src/fsharp/pars.fsy"
                 : 'tyconDefn));
//# 5260 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_equals)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1500 "../../../src/fsharp/pars.fsy"
                            if not _2 then (
                                 let (ComponentInfo(_, _, _, lid, _, _, _, _)) = _1 
                                 // While the spec doesn't allow long idents here, the parser doesn't enforce this, so take one ident
                                 let typeNameId = List.last lid
                                 raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsEqualsMissingInTypeDefinition(typeNameId.ToString()))
                            )
                            let nameRange = rhs parseState 1
                            let (tcDefRepr:SynTypeDefnRepr), members = _3 nameRange
                            let declRange = unionRanges (rhs parseState 1) tcDefRepr.Range
                            let mWhole = (declRange, members) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)    
                            TypeDefn(_1, tcDefRepr, members, mWhole) 
                   )
//# 1500 "../../../src/fsharp/pars.fsy"
                 : 'tyconDefn));
//# 5283 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynMemberDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1513 "../../../src/fsharp/pars.fsy"
                            let m = (rhs parseState 1, _2) ||> unionRangeWithListBy (fun mem -> mem.Range)
                            TypeDefn(_1, SynTypeDefnRepr.ObjectModel(TyconAugmentation, [], m), _2, m) 
                   )
//# 1513 "../../../src/fsharp/pars.fsy"
                 : 'tyconDefn));
//# 5296 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatterns)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'optAsSpec)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1517 "../../../src/fsharp/pars.fsy"
                            let vis, spats, az = _3, _5, _6
                            let nameRange = rhs parseState 1
                            let (tcDefRepr, members) = _8 nameRange
                            let (ComponentInfo(_, _, _, lid, _, _, _, _)) = _1 
                            // Gets the XML doc comments prior to the implicit constructor
                            let xmlDoc = grabXmlDoc(parseState, 5)
                            let memberCtorPattern = SynMemberDefn.ImplicitCtor (vis, _2, spats, az, xmlDoc, rangeOfLid lid)
                            let tcDefRepr = 
                              match tcDefRepr with
                              | SynTypeDefnRepr.ObjectModel (k, cspec, m) -> SynTypeDefnRepr.ObjectModel (k, memberCtorPattern :: cspec, m)
                              | _ -> reportParseErrorAt (rhs2 parseState 1 5) (FSComp.SR.parsOnlyClassCanTakeValueArguments()); tcDefRepr
                            let declRange = unionRanges (rhs parseState 1) tcDefRepr.Range
                            let mWhole = (declRange, members) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)
                            
                            TypeDefn(_1, tcDefRepr, members, mWhole) 
                   )
//# 1517 "../../../src/fsharp/pars.fsy"
                 : 'tyconDefn));
//# 5327 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1545 "../../../src/fsharp/pars.fsy"
                            let m = unionRanges (rhs parseState 1) (match _7 with [] -> (match _5 with [] -> (rhs parseState 4) | _ -> (rhs parseState 5)) | _ -> (rhs parseState 7))
                            (fun nameRange -> _2 nameRange (checkForMultipleAugmentations m (_4 @ _5) _7)) 
                   )
//# 1545 "../../../src/fsharp/pars.fsy"
                 : 'tyconDefnRhsBlock));
//# 5344 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1549 "../../../src/fsharp/pars.fsy"
                            if not _6 then reportParseErrorAt (rhs parseState 6) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition())
                            let m = unionRanges (rhs parseState 1) (match _5 with [] -> (rhs parseState 4) | _ -> (rhs parseState 5))
                            (fun nameRange -> _2 nameRange (checkForMultipleAugmentations m (_4 @ _5) [])) 
                   )
//# 1549 "../../../src/fsharp/pars.fsy"
                 : 'tyconDefnRhsBlock));
//# 5361 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1554 "../../../src/fsharp/pars.fsy"
                            let m = rhs parseState 1
                            (fun nameRange -> _1 nameRange _2) 
                   )
//# 1554 "../../../src/fsharp/pars.fsy"
                 : 'tyconDefnRhsBlock));
//# 5374 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypeDefnSimpleRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1563 "../../../src/fsharp/pars.fsy"
                            let m = _1.Range
                            (fun nameRange augmentation -> SynTypeDefnRepr.Simple (_1, m), augmentation) 
                   )
//# 1563 "../../../src/fsharp/pars.fsy"
                 : 'tyconDefnRhs));
//# 5386 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconClassDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1568 "../../../src/fsharp/pars.fsy"
                            let needsCheck, (kind, decls), mopt = _1 
                            let m = match mopt with 
                                    | None -> (lhs parseState).StartRange // create a zero-width range
                                    | Some m -> m
                            (fun nameRange augmentation -> 
                                if needsCheck && isNil decls then 
                                    reportParseErrorAt nameRange (FSComp.SR.parsEmptyTypeDefinition())
                                SynTypeDefnRepr.ObjectModel (kind, decls, m), augmentation) 
                   )
//# 1568 "../../../src/fsharp/pars.fsy"
                 : 'tyconDefnRhs));
//# 5404 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1579 "../../../src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            let ty, arity = _3
                            (fun nameRange augmentation -> 
                                let valSpfn = ValSpfn([], mkSynId m "Invoke", inferredTyparDecls, ty, arity, false, false, PreXmlDoc.Empty, None, None, m) 
                                let invoke = SynMemberDefn.AbstractSlot(valSpfn, AbstractMemberFlags MemberKind.Member, m) 
                                if not (isNil augmentation) then raiseParseErrorAt m (FSComp.SR.parsAugmentationsIllegalOnDelegateType())
                                SynTypeDefnRepr.ObjectModel (TyconDelegate (ty, arity), [invoke], m), []) 
                   )
//# 1579 "../../../src/fsharp/pars.fsy"
                 : 'tyconDefnRhs));
//# 5421 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlockKindUnspecified)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1591 "../../../src/fsharp/pars.fsy"
                            let needsCheck, decls, mopt = _1 
                            needsCheck, (TyconUnspecified, decls), mopt 
                   )
//# 1591 "../../../src/fsharp/pars.fsy"
                 : 'tyconClassDefn));
//# 5433 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1595 "../../../src/fsharp/pars.fsy"
                            false, (_1, _2), Some (rhs2 parseState 1 3) 
                   )
//# 1595 "../../../src/fsharp/pars.fsy"
                 : 'tyconClassDefn));
//# 5445 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1598 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedClassInterfaceOrStruct())
                            let m = (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range)
                            false, (_1, _2), Some(m) 
                   )
//# 1598 "../../../src/fsharp/pars.fsy"
                 : 'tyconClassDefn));
//# 5460 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1603 "../../../src/fsharp/pars.fsy"
                            // silent recovery 
                            false, (_1, []), Some (rhs2 parseState 1 3) 
                   )
//# 1603 "../../../src/fsharp/pars.fsy"
                 : 'tyconClassDefn));
//# 5472 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1610 "../../../src/fsharp/pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition())
                            let mopt =
                                match _2 with
                                | _ :: _ -> Some( (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range) )
                                | _ -> None
                            false, _2, mopt 
                   )
//# 1610 "../../../src/fsharp/pars.fsy"
                 : 'classDefnBlockKindUnspecified));
//# 5489 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1618 "../../../src/fsharp/pars.fsy"
                            let mopt =
                                match _2 with
                                | _ :: _ -> Some( (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range) )
                                | _ -> None
                            true, _2, mopt 
                   )
//# 1618 "../../../src/fsharp/pars.fsy"
                 : 'classDefnBlockKindUnspecified));
//# 5505 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1628 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition())
                             _2 
                   )
//# 1628 "../../../src/fsharp/pars.fsy"
                 : 'classDefnBlock));
//# 5518 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1632 "../../../src/fsharp/pars.fsy"
                             _2 
                   )
//# 1632 "../../../src/fsharp/pars.fsy"
                 : 'classDefnBlock));
//# 5530 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1635 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 1635 "../../../src/fsharp/pars.fsy"
                 : 'classDefnBlock));
//# 5541 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembersAtLeastOne)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1641 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 1641 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMembers));
//# 5552 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1645 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 1645 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMembers));
//# 5563 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1648 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 1648 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMembers));
//# 5573 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1654 "../../../src/fsharp/pars.fsy"
                            _1 @  _3 
                   )
//# 1654 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMembersAtLeastOne));
//# 5586 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1660 "../../../src/fsharp/pars.fsy"
                            _2  
                   )
//# 1660 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMemberGetSet));
//# 5597 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1663 "../../../src/fsharp/pars.fsy"
                            _2  
                   )
//# 1663 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMemberGetSet));
//# 5608 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1666 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedWith())
                            _2  
                   )
//# 1666 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMemberGetSet));
//# 5620 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1672 "../../../src/fsharp/pars.fsy"
                            [_1]  
                   )
//# 1672 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMemberGetSetElements));
//# 5631 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1674 "../../../src/fsharp/pars.fsy"
                            [_1;_3] 
                   )
//# 1674 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMemberGetSetElements));
//# 5643 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1678 "../../../src/fsharp/pars.fsy"
                            let mRhs = (_6 : SynExpr).Range 
                            (_1, _2, _3, _4, _6, mRhs) 
                   )
//# 1678 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMemberGetSetElement));
//# 5659 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1686 "../../../src/fsharp/pars.fsy"
                            let mRhs = _5.Range 
                            let optReturnType = _3 
                            let bindingBuilder, mBindLhs = _2 
                            (fun vis memFlagsBuilder attrs rangeStart ->
                                 let memberFlags = Some (memFlagsBuilder MemberKind.Member)
                                 let binding = bindingBuilder (vis, _1, false, mBindLhs, NoDebugPointAtInvisibleBinding, optReturnType, _5, mRhs, [], attrs, memberFlags)
                                 let memberRange = unionRanges rangeStart mRhs
                                 [ SynMemberDefn.Member (binding, memberRange) ]) 
                   )
//# 1686 "../../../src/fsharp/pars.fsy"
                 : 'memberCore));
//# 5680 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSet)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1697 "../../../src/fsharp/pars.fsy"
                            let mWhole = (rhs parseState 2, _4) ||> unionRangeWithListBy (fun (_, _, _, _, _, m2) -> m2) 
                            let propertyNameBindingBuilder, _ = _2 
                            let optPropertyType = _3 
                            let isMutable = false
                            (fun visNoLongerUsed memFlagsBuilder attrs rangeStart -> 
                                  let hasGet = ref false
                                  let hasSet = ref false
                                  // Iterate over 1 or 2 'get'/'set' entries
                                  _4 |> List.choose (fun (optInline, optAttrs, (bindingBuilder, mBindLhs), optReturnType, expr, exprm) ->
                                        let optInline = _1 || optInline 
                                        // optional attributes are only applied to getters and setters
                                        // the "top level" attrs will be applied to both
                                        let optAttrs =
                                            optAttrs |> List.map (fun attrList ->
                                                { attrList with Attributes = attrList.Attributes |> List.map (fun a -> { a with AppliesToGetterAndSetter = true } ) })
                                        let attrs = attrs @ optAttrs
                                        
                                        let binding = bindingBuilder (visNoLongerUsed, optInline, isMutable, mBindLhs, NoDebugPointAtInvisibleBinding, optReturnType, expr, exprm, [], attrs, Some (memFlagsBuilder MemberKind.Member))
                                        let (Binding (vis, _, isInline, _, attrs, doc, valSynData, pv, _, _, mBindLhs, spBind)) = binding 
                                        let memberKind = 
                                              let getset = 
                                                    let rec go p = 
                                                        match p with 
                                                        | SynPat.LongIdent (LongIdentWithDots([id], _), _, _, _, _, _) ->  id.idText
                                                        | SynPat.Named (_, nm, _, _, _) ->  nm.idText
                                                        | SynPat.Typed (p, _, _) ->  go p
                                                        | SynPat.Attrib (p, _, _) ->  go p
                                                        | _ -> raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                                    go pv 
                                              if getset = "get" then
                                                  if !hasGet then 
                                                      reportParseErrorAt mBindLhs (FSComp.SR.parsGetAndOrSetRequired())
                                                      None
                                                  else
                                                      hasGet := true
                                                      Some MemberKind.PropertyGet
                                              else if getset = "set" then
                                                  if !hasSet then 
                                                      reportParseErrorAt mBindLhs (FSComp.SR.parsGetAndOrSetRequired())
                                                      None
                                                  else
                                                      hasSet := true
                                                      Some MemberKind.PropertySet
                                              else
                                                  raiseParseErrorAt mBindLhs (FSComp.SR.parsGetAndOrSetRequired())
                                        match memberKind with
                                        | None -> None
                                        | Some memberKind ->
                                        // REVIEW: It's hard not to ignore the optPropertyType type annotation for 'set' properties. To apply it,
                                        // we should apply it to the last argument, but at this point we've already pushed the patterns that 
                                        // make up the arguments onto the RHS. So we just always give a warning. 
                                        begin match optPropertyType with 
                                        | Some _ -> errorR(Error(FSComp.SR.parsTypeAnnotationsOnGetSet(), mBindLhs))
                                        | None -> ()
                                        end
                                        
                                        let optReturnType = 
                                            match (memberKind, optReturnType) with 
                                            | MemberKind.PropertySet, _ -> optReturnType
                                            | _, None -> optPropertyType
                                            | _ -> optReturnType 
                                        // REDO with the correct member kind 
                                        let binding = bindingBuilder(vis, isInline, isMutable, mBindLhs, NoDebugPointAtInvisibleBinding, optReturnType, expr, exprm, [], attrs, Some(memFlagsBuilder memberKind)) 
                                        let (Binding (vis, _, isInline, _, attrs, doc, valSynData, pv, rhsRetInfo, rhsExpr, mBindLhs, spBind)) = binding 
                                     
                                        let (SynValData(_, valSynInfo, _)) = valSynData 
                                        // Setters have all arguments tupled in their internal TAST form, though they don't appear to be 
                                        // tupled from the syntax
                                        let memFlags = memFlagsBuilder memberKind
                                        let valSynInfo = 
                                            let adjustValueArg valueArg = 
                                                match valueArg with
                                                | [_] -> valueArg
                                                | _ -> SynInfo.unnamedTopArg
                                            match memberKind, valSynInfo, memFlags.IsInstance with 
                                            | MemberKind.PropertyGet, SynValInfo ([], _ret), false
                                            | MemberKind.PropertyGet, SynValInfo ([_], _ret), true  -> 
                                                raiseParseErrorAt mBindLhs (FSComp.SR.parsGetterMustHaveAtLeastOneArgument()) 
                                            | MemberKind.PropertyGet, SynValInfo (thisArg :: indexOrUnitArgs :: rest, ret), true  -> 
                                                if not rest.IsEmpty then
                                                    reportParseErrorAt mBindLhs (FSComp.SR.parsGetterAtMostOneArgument ())
                                                SynValInfo ([thisArg; indexOrUnitArgs], ret)
                                            | MemberKind.PropertyGet, SynValInfo (indexOrUnitArgs :: rest, ret), false ->
                                                if not rest.IsEmpty then
                                                    reportParseErrorAt mBindLhs (FSComp.SR.parsGetterAtMostOneArgument ())
                                                SynValInfo ([indexOrUnitArgs], ret)
                                            | MemberKind.PropertySet, SynValInfo ([thisArg;valueArg], ret), true  -> 
                                                SynValInfo ([thisArg; adjustValueArg valueArg], ret)
                                            | MemberKind.PropertySet, SynValInfo (thisArg :: indexArgs :: valueArg :: rest, ret), true  -> 
                                                if not rest.IsEmpty then
                                                    reportParseErrorAt mBindLhs (FSComp.SR.parsSetterAtMostTwoArguments ())
                                                SynValInfo ([thisArg; indexArgs @ adjustValueArg valueArg], ret)
                                            | MemberKind.PropertySet, SynValInfo ([valueArg], ret), false -> 
                                                SynValInfo ([adjustValueArg valueArg], ret)
                                            | MemberKind.PropertySet, SynValInfo (indexArgs :: valueArg :: rest, ret), _ -> 
                                                if not rest.IsEmpty then
                                                    reportParseErrorAt mBindLhs (FSComp.SR.parsSetterAtMostTwoArguments ())
                                                SynValInfo ([indexArgs @ adjustValueArg valueArg], ret)
                                            | _ -> 
                                                // should be unreachable, cover just in case
                                                raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidProperty ())
                                        let valSynData = SynValData(Some(memFlags), valSynInfo, None) 
                                        // Fold together the information from the first lambda pattern and the get/set binding
                                        // This uses the 'this' variable from the first and the patterns for the get/set binding,
                                        // replacing the get/set identifier. A little gross. 
                                        let bindingPatAdjusted, xmlDocAdjusted = 
                                            let bindingOuter = propertyNameBindingBuilder(vis, optInline, isMutable, mBindLhs, spBind, optReturnType, expr, exprm, [], attrs, Some(memFlagsBuilder MemberKind.Member))
                                            let (Binding (_, _, _, _, _, doc2, _, bindingPatOuter, _, _, _, _)) = bindingOuter 
                                            
                                        
                                            let lidOuter, lidVisOuter = 
                                                match bindingPatOuter with 
                                                | SynPat.LongIdent (lid, None, None, SynArgPats.Pats [], lidVisOuter, m) ->  lid, lidVisOuter
                                                | SynPat.Named (_, id, _, visOuter, m) -> LongIdentWithDots([id], []), visOuter
                                                | p -> raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                            // Merge the visibility from the outer point with the inner point, e.g.
                                            //    member <VIS1>  this.Size with <VIS2> get ()      = m_size
                                            
                                            let mergeLidVisOuter lidVisInner =
                                                match lidVisInner, lidVisOuter with 
                                                | None, None -> None
                                                | Some lidVisInner, None | None, Some lidVisInner -> Some lidVisInner
                                                | Some _, Some _ ->  
                                                    errorR(Error(FSComp.SR.parsMultipleAccessibilitiesForGetSet(), mBindLhs))
                                                    lidVisInner
                                        
                                            // Replace the "get" or the "set" with the right name
                                            let rec go p = 
                                                match p with 
                                                | SynPat.LongIdent (LongIdentWithDots([id], _), _, tyargs, SynArgPats.Pats args, lidVisInner, m) ->  
                                                    // Setters have all arguments tupled in their internal form, though they don't 
                                                    // appear to be tupled from the syntax. Somewhat unfortunate
                                                    let args = 
                                                        if id.idText = "set" then 
                                                            match args with 
                                                            | [SynPat.Paren(SynPat.Tuple (false, indexPats, _), indexPatRange);valuePat] when id.idText = "set" -> 
                                                                [SynPat.Tuple(false, indexPats@[valuePat], unionRanges indexPatRange valuePat.Range)] 
                                                            | [indexPat;valuePat] -> 
                                                                [SynPat.Tuple(false, args, unionRanges indexPat.Range valuePat.Range)] 
                                                            | [valuePat] -> 
                                                                [valuePat] 
                                                            | _ -> 
                                                                raiseParseErrorAt m (FSComp.SR.parsSetSyntax())
                                                        else 
                                                            args
                     //                               let idTool : Ident list = lidOuter |> List.map (fun (li:Ident) -> ident(li.idText, id.idRange)) |> List.rev |> List.take 1
                                                    SynPat.LongIdent (lidOuter, Some(id), tyargs, SynArgPats.Pats args, mergeLidVisOuter lidVisInner, m)
                                                | SynPat.Named (_, nm, _, lidVisInner, m) ->  SynPat.LongIdent (lidOuter, None, None, SynArgPats.Pats [], mergeLidVisOuter lidVisInner, m)
                                                | SynPat.Typed (p, ty, m) ->  SynPat.Typed(go p, ty, m)
                                                | SynPat.Attrib (p, attribs, m) ->  SynPat.Attrib(go p, attribs, m)
                                                | SynPat.Wild(m) ->  SynPat.Wild(m)
                                                | _ -> raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                            go pv, PreXmlDoc.Merge doc2 doc
                                        let binding = Binding (vis, NormalBinding, isInline, isMutable, attrs, xmlDocAdjusted, valSynData, bindingPatAdjusted, rhsRetInfo, rhsExpr, mBindLhs, spBind)
                                        let memberRange = unionRanges rangeStart mWhole
                                        Some (SynMemberDefn.Member (binding, memberRange))))
                            
                   )
//# 1697 "../../../src/fsharp/pars.fsy"
                 : 'memberCore));
//# 5850 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1883 "../../../src/fsharp/pars.fsy"
                                   
                   )
//# 1883 "../../../src/fsharp/pars.fsy"
                 : 'abstractMemberFlags));
//# 5860 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1884 "../../../src/fsharp/pars.fsy"
                                          
                   )
//# 1884 "../../../src/fsharp/pars.fsy"
                 : 'abstractMemberFlags));
//# 5870 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1890 "../../../src/fsharp/pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            [mkClassMemberLocalBindings(false, None, _1, _2, _3)] 
                   )
//# 1890 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 5884 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1894 "../../../src/fsharp/pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            [mkClassMemberLocalBindings(true, Some (rhs parseState 3), _1, _2, _4)] 
                   )
//# 1894 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 5898 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1898 "../../../src/fsharp/pars.fsy"
                            let rangeStart = rhs parseState 1
                            if Option.isSome _2 then
                                errorR (Error (FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier (), rhs parseState 2))
                            let _, flags = _3
                            _4 _2 flags _1 rangeStart 
                   )
//# 1898 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 5917 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_interfaceImplDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1905 "../../../src/fsharp/pars.fsy"
                             if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesAreNotPermittedOnInterfaceImplementations(), rhs parseState 1))
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsInterfacesHaveSameVisibilityAsEnclosingType(), rhs parseState 3))
                             let mWhole = 
                                 match _5 with
                                 | None -> rhs2 parseState 1 4
                                 | Some(mems) -> (rhs2 parseState 1 4, mems) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)
                             [ SynMemberDefn.Interface (_4, _5, mWhole) ] 
                   )
//# 1905 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 5938 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'abstractMemberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1914 "../../../src/fsharp/pars.fsy"
                            let ty, arity = _8
                            let isInline, doc, id, explicitValTyparDecls = _4, grabXmlDoc(parseState, 3), _5, _6
                            let getSetRangeOpt, getSet = _9
                            let getSetAdjuster arity = match arity, getSet with SynValInfo([], _), MemberKind.Member -> MemberKind.PropertyGet | _ -> getSet
                            let wholeRange = 
                                let m = rhs parseState 1
                                match getSetRangeOpt with 
                                | None -> unionRanges m ty.Range
                                | Some m2 -> unionRanges m m2
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsAccessibilityModsIllegalForAbstract(), wholeRange))
                            let valSpfn = ValSpfn(_1, id, explicitValTyparDecls, ty, arity, isInline, false, doc, None, None, wholeRange)
                            [ SynMemberDefn.AbstractSlot(valSpfn, AbstractMemberFlags (getSetAdjuster arity), wholeRange) ] 
                   )
//# 1914 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 5968 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'inheritsDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1928 "../../../src/fsharp/pars.fsy"
                             if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalOnInherit(), rhs parseState 1))
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityIllegalOnInherit(), rhs parseState 1))
                             [ _3 ] 
                   )
//# 1928 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 5983 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'valDefnDecl)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1933 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let rangeStart = rhs parseState 1
                             _3 rangeStart _1 false 
                   )
//# 1933 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 5999 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'valDefnDecl)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1938 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let rangeStart = rhs parseState 1
                             _4 rangeStart _1 true  
                   )
//# 1938 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 6015 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'autoPropsDefnDecl)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1943 "../../../src/fsharp/pars.fsy"
                            let rangeStart = rhs parseState 1 
                            if Option.isSome _2 then
                                errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            let isStatic, flags = _3
                            _4 _1 isStatic flags rangeStart 
                   )
//# 1943 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 6034 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optAsSpec)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1950 "../../../src/fsharp/pars.fsy"
                             let m = unionRanges (rhs2 parseState 1 6) _7.Range 
                             let expr = _7
                             let valSynData = SynValData (Some CtorMemberFlags, SynValInfo([SynInfo.InferSynArgInfoFromPat _4], SynInfo.unnamedRetVal), _5) 
                             let vis = _2 
                             let declPat = SynPat.LongIdent (LongIdentWithDots([mkSynId (rhs parseState 3) "new"], []), None, Some noInferredTypars, SynArgPats.Pats [_4], vis, rhs parseState 3)
                             // Check that 'SynPatForConstructorDecl' matches this correctly
                             assert (match declPat with SynPatForConstructorDecl _ -> true | _ -> false)
                             [ SynMemberDefn.Member(Binding (None, NormalBinding, false, false, _1, grabXmlDoc(parseState, 3), valSynData, declPat, None, expr, m, NoDebugPointAtInvisibleBinding), m) ] 
                   )
//# 1950 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 6057 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1960 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             [ SynMemberDefn.NestedType(_5, None, rhs2 parseState 1 5) ] 
                   )
//# 1960 "../../../src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 6072 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1967 "../../../src/fsharp/pars.fsy"
                             let mRhs = rhs2 parseState 4 6
                             let doc = grabXmlDoc(parseState, 4)
                             let mValDecl = rhs2 parseState 1 6
                             (fun rangeStart attribs isStatic -> 
                                 let mValDecl = unionRanges rangeStart mValDecl
                                 let fld = Field(attribs, isStatic, Some _4, _6, _2, doc, _3, mRhs)
                                 [ SynMemberDefn.ValField(fld, mValDecl) ]) 
                   )
//# 1967 "../../../src/fsharp/pars.fsy"
                 : 'valDefnDecl));
//# 6092 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typ)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1979 "../../../src/fsharp/pars.fsy"
                            let doc = grabXmlDoc(parseState, 5)
                            let mGetSetOpt, getSet = _8
                            if _2 then
                                errorR (Error (FSComp.SR.parsMutableOnAutoPropertyShouldBeGetSet (), rhs parseState 3))
                            (fun attribs isStatic flags rangeStart ->
                                let memberRange = unionRanges rangeStart _7.Range
                                [ SynMemberDefn.AutoProperty(attribs, isStatic, _4, _5, getSet, flags, doc, _3, _7, mGetSetOpt, memberRange) ]) 
                   )
//# 1979 "../../../src/fsharp/pars.fsy"
                 : 'autoPropsDefnDecl));
//# 6114 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1990 "../../../src/fsharp/pars.fsy"
                                        None 
                   )
//# 1990 "../../../src/fsharp/pars.fsy"
                 : 'opt_typ));
//# 6124 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1991 "../../../src/fsharp/pars.fsy"
                                      Some _2 
                   )
//# 1991 "../../../src/fsharp/pars.fsy"
                 : 'opt_typ));
//# 6135 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1996 "../../../src/fsharp/pars.fsy"
                            if not (parseState.LexBuffer.SupportsFeature LanguageFeature.SingleUnderscorePattern) then
                               raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedSymbolDot())
                            let (LongIdentWithDots(lid, dotms)) = _3
                            (None, LongIdentWithDots(ident("_", rhs parseState 1)::lid, rhs parseState 2::dotms)) 
                   )
//# 1996 "../../../src/fsharp/pars.fsy"
                 : 'atomicPatternLongIdent));
//# 6149 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2002 "../../../src/fsharp/pars.fsy"
                            let (LongIdentWithDots(lid, dotms)) = _3
                            (None, LongIdentWithDots(ident(MangledGlobalName, rhs parseState 1) :: lid, rhs parseState 2 :: dotms)) 
                   )
//# 2002 "../../../src/fsharp/pars.fsy"
                 : 'atomicPatternLongIdent));
//# 6161 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2006 "../../../src/fsharp/pars.fsy"
                            (None, _1) 
                   )
//# 2006 "../../../src/fsharp/pars.fsy"
                 : 'atomicPatternLongIdent));
//# 6172 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2009 "../../../src/fsharp/pars.fsy"
                            if not (parseState.LexBuffer.SupportsFeature LanguageFeature.SingleUnderscorePattern) then
                               raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedSymbolDot())
                            let (LongIdentWithDots(lid, dotms)) = _4
                            (Some(_1), LongIdentWithDots(ident("_", rhs parseState 2)::lid, rhs parseState 3::dotms)) 
                   )
//# 2009 "../../../src/fsharp/pars.fsy"
                 : 'atomicPatternLongIdent));
//# 6187 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2015 "../../../src/fsharp/pars.fsy"
                            (Some(_1), _2) 
                   )
//# 2015 "../../../src/fsharp/pars.fsy"
                 : 'atomicPatternLongIdent));
//# 6199 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2020 "../../../src/fsharp/pars.fsy"
                            None 
                   )
//# 2020 "../../../src/fsharp/pars.fsy"
                 : 'opt_access));
//# 6209 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2023 "../../../src/fsharp/pars.fsy"
                            Some(_1) 
                   )
//# 2023 "../../../src/fsharp/pars.fsy"
                 : 'opt_access));
//# 6220 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2028 "../../../src/fsharp/pars.fsy"
                            SynAccess.Private 
                   )
//# 2028 "../../../src/fsharp/pars.fsy"
                 : 'access));
//# 6230 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2031 "../../../src/fsharp/pars.fsy"
                            SynAccess.Public 
                   )
//# 2031 "../../../src/fsharp/pars.fsy"
                 : 'access));
//# 6240 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2034 "../../../src/fsharp/pars.fsy"
                            SynAccess.Internal 
                   )
//# 2034 "../../../src/fsharp/pars.fsy"
                 : 'access));
//# 6250 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2039 "../../../src/fsharp/pars.fsy"
                            Some(_1) 
                   )
//# 2039 "../../../src/fsharp/pars.fsy"
                 : 'opt_declVisibility));
//# 6261 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2042 "../../../src/fsharp/pars.fsy"
                            None 
                   )
//# 2042 "../../../src/fsharp/pars.fsy"
                 : 'opt_declVisibility));
//# 6271 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2047 "../../../src/fsharp/pars.fsy"
                            Some(_2) 
                   )
//# 2047 "../../../src/fsharp/pars.fsy"
                 : 'opt_interfaceImplDefn));
//# 6283 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2050 "../../../src/fsharp/pars.fsy"
                            None 
                   )
//# 2050 "../../../src/fsharp/pars.fsy"
                 : 'opt_interfaceImplDefn));
//# 6293 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2055 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 2055 "../../../src/fsharp/pars.fsy"
                 : 'opt_classDefn));
//# 6305 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2058 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 2058 "../../../src/fsharp/pars.fsy"
                 : 'opt_classDefn));
//# 6315 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optBaseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2064 "../../../src/fsharp/pars.fsy"
                            let mDecl = unionRanges (rhs parseState 1) ((_2): SynType).Range 
                            SynMemberDefn.Inherit(_2, _3, mDecl) 
                   )
//# 2064 "../../../src/fsharp/pars.fsy"
                 : 'inheritsDefn));
//# 6328 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optBaseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2068 "../../../src/fsharp/pars.fsy"
                            let mDecl = unionRanges (rhs parseState 1) _4.Range 
                            SynMemberDefn.ImplicitInherit(_2, _4, _5, mDecl) 
                   )
//# 2068 "../../../src/fsharp/pars.fsy"
                 : 'inheritsDefn));
//# 6343 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2072 "../../../src/fsharp/pars.fsy"
                            let mDecl = (rhs parseState 1)
                            if not _2 then errorR(Error(FSComp.SR.parsTypeNameCannotBeEmpty(), mDecl))
                            SynMemberDefn.Inherit(SynType.LongIdent(LongIdentWithDots([], [])), None, mDecl) 
                   )
//# 2072 "../../../src/fsharp/pars.fsy"
                 : 'inheritsDefn));
//# 6356 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'asSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2078 "../../../src/fsharp/pars.fsy"
                             Some(_1) 
                   )
//# 2078 "../../../src/fsharp/pars.fsy"
                 : 'optAsSpec));
//# 6367 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2081 "../../../src/fsharp/pars.fsy"
                             None 
                   )
//# 2081 "../../../src/fsharp/pars.fsy"
                 : 'optAsSpec));
//# 6377 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2085 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 2085 "../../../src/fsharp/pars.fsy"
                 : 'asSpec));
//# 6388 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'baseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2089 "../../../src/fsharp/pars.fsy"
                            Some(_1) 
                   )
//# 2089 "../../../src/fsharp/pars.fsy"
                 : 'optBaseSpec));
//# 6399 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2092 "../../../src/fsharp/pars.fsy"
                            None 
                   )
//# 2092 "../../../src/fsharp/pars.fsy"
                 : 'optBaseSpec));
//# 6409 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2096 "../../../src/fsharp/pars.fsy"
                             if (_2).idText <> "base" then 
                                  errorR(Error(FSComp.SR.parsInheritDeclarationsCannotHaveAsBindings(), rhs2 parseState 1 2)) 
                             ident("base", rhs parseState 2) 
                   )
//# 2096 "../../../src/fsharp/pars.fsy"
                 : 'baseSpec));
//# 6422 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2101 "../../../src/fsharp/pars.fsy"
                             errorR(Error(FSComp.SR.parsInheritDeclarationsCannotHaveAsBindings(), rhs2 parseState 1 2)) 
                             ident("base", rhs parseState 2) 
                   )
//# 2101 "../../../src/fsharp/pars.fsy"
                 : 'baseSpec));
//# 6433 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2108 "../../../src/fsharp/pars.fsy"
                             _2 
                   )
//# 2108 "../../../src/fsharp/pars.fsy"
                 : 'objectImplementationBlock));
//# 6445 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2111 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileObjectMembers())
                             _2 
                   )
//# 2111 "../../../src/fsharp/pars.fsy"
                 : 'objectImplementationBlock));
//# 6458 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2115 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 2115 "../../../src/fsharp/pars.fsy"
                 : 'objectImplementationBlock));
//# 6469 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2121 "../../../src/fsharp/pars.fsy"
                             _1 @  _3 
                   )
//# 2121 "../../../src/fsharp/pars.fsy"
                 : 'objectImplementationMembers));
//# 6482 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2124 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 2124 "../../../src/fsharp/pars.fsy"
                 : 'objectImplementationMembers));
//# 6494 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2130 "../../../src/fsharp/pars.fsy"
                            let rangeStart = rhs parseState 1
                            _3 None OverrideMemberFlags _1 rangeStart 
                   )
//# 2130 "../../../src/fsharp/pars.fsy"
                 : 'objectImplementationMember));
//# 6509 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'autoPropsDefnDecl)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2134 "../../../src/fsharp/pars.fsy"
                            let rangeStart = rhs parseState 1
                            _3 _1 false OverrideMemberFlags rangeStart 
                   )
//# 2134 "../../../src/fsharp/pars.fsy"
                 : 'objectImplementationMember));
//# 6524 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2138 "../../../src/fsharp/pars.fsy"
                             [] 
                   )
//# 2138 "../../../src/fsharp/pars.fsy"
                 : 'objectImplementationMember));
//# 6536 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2141 "../../../src/fsharp/pars.fsy"
                             [] 
                   )
//# 2141 "../../../src/fsharp/pars.fsy"
                 : 'objectImplementationMember));
//# 6549 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2145 "../../../src/fsharp/pars.fsy"
                                    
                   )
//# 2145 "../../../src/fsharp/pars.fsy"
                 : 'memberOrOverride));
//# 6559 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2146 "../../../src/fsharp/pars.fsy"
                                      
                   )
//# 2146 "../../../src/fsharp/pars.fsy"
                 : 'memberOrOverride));
//# 6569 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : string * ParseHelpers.LexerContinuation)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2154 "../../../src/fsharp/pars.fsy"
                            errorR(Error(FSComp.SR.parsUnexpectedQuotationOperatorInTypeAliasDidYouMeanVerbatimString(), rhs parseState 4)) 
                            SynTypeDefnSimpleRepr.TypeAbbrev (ParserDetail.ErrorRecovery, SynType.LongIdent(_3), unionRanges (rhs parseState 1) _3.Range)  
                   )
//# 2154 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynTypeDefnSimpleRepr));
//# 6586 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2159 "../../../src/fsharp/pars.fsy"
                            if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalHere(), rhs parseState 1))
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsTypeAbbreviationsCannotHaveVisibilityDeclarations(), rhs parseState 2))
                            SynTypeDefnSimpleRepr.TypeAbbrev (ParserDetail.Ok, _3, unionRanges (rhs parseState 1) _3.Range) 
                   )
//# 2159 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynTypeDefnSimpleRepr));
//# 6601 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Choice<SyntaxTree.SynEnumCase, SyntaxTree.SynUnionCase> list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2165 "../../../src/fsharp/pars.fsy"
                            if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalHere(), rhs parseState 1))
                            let rangesOf3 = _3 |> List.map (function |Choice1Of2(ec)->ec.Range | Choice2Of2(uc)->uc.Range)
                            let mWhole = (rhs2 parseState 1 2, rangesOf3) ||> List.fold unionRanges 
                            if _3 |> List.exists (function Choice1Of2 _ -> true | _ -> false) then (
                                if Option.isSome _2 then errorR(Error(FSComp.SR.parsEnumTypesCannotHaveVisibilityDeclarations(), rhs parseState 2));
                                SynTypeDefnSimpleRepr.Enum (_3 |> List.choose (function 
                                                                   | Choice1Of2 data ->  
                                                                     Some(data) 
                                                                   | Choice2Of2(UnionCase(_, _, _, _, _, m)) -> 
                                                                     errorR(Error(FSComp.SR.parsAllEnumFieldsRequireValues(), m)); None),
                                                mWhole)
                            ) else 
                                SynTypeDefnSimpleRepr.Union (_2,
                                                 _3 |> List.choose (function Choice2Of2 data -> Some(data) | Choice1Of2 _ -> failwith "huh?"),
                                                 mWhole) 
                   )
//# 2165 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynTypeDefnSimpleRepr));
//# 6628 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2183 "../../../src/fsharp/pars.fsy"
                            if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalHere(), rhs parseState 1))
                            SynTypeDefnSimpleRepr.Record (_2, _3, lhs parseState) 
                   )
//# 2183 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynTypeDefnSimpleRepr));
//# 6642 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'inlineAssemblyTyconRepr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2188 "../../../src/fsharp/pars.fsy"
                            if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalHere(), rhs parseState 1))
                            libraryOnlyError (lhs parseState)
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsInlineAssemblyCannotHaveVisibilityDeclarations(), rhs parseState 2))
                            _4 
                   )
//# 2188 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynTypeDefnSimpleRepr));
//# 6659 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2197 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 2197 "../../../src/fsharp/pars.fsy"
                 : 'braceFieldDeclList));
//# 6672 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2200 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()) 
                            _2 
                   )
//# 2200 "../../../src/fsharp/pars.fsy"
                 : 'braceFieldDeclList));
//# 6686 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2204 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 2204 "../../../src/fsharp/pars.fsy"
                 : 'braceFieldDeclList));
//# 6698 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceBarFieldDeclListCore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2208 "../../../src/fsharp/pars.fsy"
                               _2, true 
                   )
//# 2208 "../../../src/fsharp/pars.fsy"
                 : 'anonRecdType));
//# 6709 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceBarFieldDeclListCore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2210 "../../../src/fsharp/pars.fsy"
                               _1, false 
                   )
//# 2210 "../../../src/fsharp/pars.fsy"
                 : 'anonRecdType));
//# 6720 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bar_rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2215 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 2215 "../../../src/fsharp/pars.fsy"
                 : 'braceBarFieldDeclListCore));
//# 6732 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2218 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBraceBar()) 
                            _2 
                   )
//# 2218 "../../../src/fsharp/pars.fsy"
                 : 'braceBarFieldDeclListCore));
//# 6745 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bar_rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2222 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 2222 "../../../src/fsharp/pars.fsy"
                 : 'braceBarFieldDeclListCore));
//# 6756 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2226 "../../../src/fsharp/pars.fsy"
                            libraryOnlyError (lhs parseState)
                            let lhsm = lhs parseState 
                            SynTypeDefnSimpleRepr.LibraryOnlyILAssembly (internalParseAssemblyCodeType _2 parseState.LexBuffer.SupportsFeature (rhs parseState 2), lhsm) 
                   )
//# 2226 "../../../src/fsharp/pars.fsy"
                 : 'inlineAssemblyTyconRepr));
//# 6769 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2232 "../../../src/fsharp/pars.fsy"
                            TyconClass 
                   )
//# 2232 "../../../src/fsharp/pars.fsy"
                 : 'classOrInterfaceOrStruct));
//# 6779 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2235 "../../../src/fsharp/pars.fsy"
                            TyconInterface 
                   )
//# 2235 "../../../src/fsharp/pars.fsy"
                 : 'classOrInterfaceOrStruct));
//# 6789 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2238 "../../../src/fsharp/pars.fsy"
                            TyconStruct 
                   )
//# 2238 "../../../src/fsharp/pars.fsy"
                 : 'classOrInterfaceOrStruct));
//# 6799 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2241 "../../../src/fsharp/pars.fsy"
                                     
                   )
//# 2241 "../../../src/fsharp/pars.fsy"
                 : 'interfaceMember));
//# 6809 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2242 "../../../src/fsharp/pars.fsy"
                                                
                   )
//# 2242 "../../../src/fsharp/pars.fsy"
                 : 'interfaceMember));
//# 6819 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2246 "../../../src/fsharp/pars.fsy"
                             [], _2.Lid, false, [], _1, grabXmlDoc(parseState, 2) 
                   )
//# 2246 "../../../src/fsharp/pars.fsy"
                 : 'tyconNameAndTyparDecls));
//# 6831 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'prefixTyparDecls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2249 "../../../src/fsharp/pars.fsy"
                             _2, _3.Lid, false, [], _1, grabXmlDoc(parseState, 2) 
                   )
//# 2249 "../../../src/fsharp/pars.fsy"
                 : 'tyconNameAndTyparDecls));
//# 6844 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'postfixTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2252 "../../../src/fsharp/pars.fsy"
                             let tps, tpcs = _3 
                             tps, _2.Lid, true, tpcs, _1, grabXmlDoc(parseState, 2) 
                   )
//# 2252 "../../../src/fsharp/pars.fsy"
                 : 'tyconNameAndTyparDecls));
//# 6858 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2256 "../../../src/fsharp/pars.fsy"
                                 [ TyparDecl([], _1) ] 
                   )
//# 2256 "../../../src/fsharp/pars.fsy"
                 : 'prefixTyparDecls));
//# 6869 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2257 "../../../src/fsharp/pars.fsy"
                                                        List.rev _2 
                   )
//# 2257 "../../../src/fsharp/pars.fsy"
                 : 'prefixTyparDecls));
//# 6881 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2260 "../../../src/fsharp/pars.fsy"
                                                         _3 :: _1 
                   )
//# 2260 "../../../src/fsharp/pars.fsy"
                 : 'typarDeclList));
//# 6893 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2261 "../../../src/fsharp/pars.fsy"
                                     [_1] 
                   )
//# 2261 "../../../src/fsharp/pars.fsy"
                 : 'typarDeclList));
//# 6904 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2265 "../../../src/fsharp/pars.fsy"
                             TyparDecl(_1, _2) 
                   )
//# 2265 "../../../src/fsharp/pars.fsy"
                 : 'typarDecl));
//# 6916 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_TYAPP)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2271 "../../../src/fsharp/pars.fsy"
                             if not _2 then warning(Error(FSComp.SR.parsNonAdjacentTypars(), rhs2 parseState 2 5))
                             List.rev _3, _4 
                   )
//# 2271 "../../../src/fsharp/pars.fsy"
                 : 'postfixTyparDecls));
//# 6932 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2278 "../../../src/fsharp/pars.fsy"
                             (List.rev _1, true) 
                   )
//# 2278 "../../../src/fsharp/pars.fsy"
                 : 'explicitValTyparDeclsCore));
//# 6943 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2281 "../../../src/fsharp/pars.fsy"
                             (List.rev _1, false) 
                   )
//# 2281 "../../../src/fsharp/pars.fsy"
                 : 'explicitValTyparDeclsCore));
//# 6954 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2284 "../../../src/fsharp/pars.fsy"
                             ([], false) 
                   )
//# 2284 "../../../src/fsharp/pars.fsy"
                 : 'explicitValTyparDeclsCore));
//# 6964 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_TYAPP)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDeclsCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2288 "../../../src/fsharp/pars.fsy"
                             if not _2 then warning(Error(FSComp.SR.parsNonAdjacentTypars(), rhs2 parseState 2 5))
                             let tps, flex = _3 
                             SynValTyparDecls(tps, flex, _4) 
                   )
//# 2288 "../../../src/fsharp/pars.fsy"
                 : 'explicitValTyparDecls));
//# 6981 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2294 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 2294 "../../../src/fsharp/pars.fsy"
                 : 'opt_explicitValTyparDecls));
//# 6992 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2296 "../../../src/fsharp/pars.fsy"
                             SynValTyparDecls([], true, []) 
                   )
//# 2296 "../../../src/fsharp/pars.fsy"
                 : 'opt_explicitValTyparDecls));
//# 7002 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2300 "../../../src/fsharp/pars.fsy"
                             Some _1 
                   )
//# 2300 "../../../src/fsharp/pars.fsy"
                 : 'opt_explicitValTyparDecls2));
//# 7013 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2303 "../../../src/fsharp/pars.fsy"
                             None 
                   )
//# 2303 "../../../src/fsharp/pars.fsy"
                 : 'opt_explicitValTyparDecls2));
//# 7023 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2309 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 2309 "../../../src/fsharp/pars.fsy"
                 : 'opt_typeConstraints));
//# 7033 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2312 "../../../src/fsharp/pars.fsy"
                            List.rev _2 
                   )
//# 2312 "../../../src/fsharp/pars.fsy"
                 : 'opt_typeConstraints));
//# 7044 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraint)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2318 "../../../src/fsharp/pars.fsy"
                            _3 :: _1 
                   )
//# 2318 "../../../src/fsharp/pars.fsy"
                 : 'typeConstraints));
//# 7056 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraint)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2321 "../../../src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 2321 "../../../src/fsharp/pars.fsy"
                 : 'typeConstraints));
//# 7067 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2327 "../../../src/fsharp/pars.fsy"
                            libraryOnlyError (lhs parseState); WhereTyparDefaultsToType(_2, _4, lhs parseState) 
                   )
//# 2327 "../../../src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7079 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2330 "../../../src/fsharp/pars.fsy"
                            WhereTyparSubtypeOfType(_1, _3, lhs parseState) 
                   )
//# 2330 "../../../src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7091 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2333 "../../../src/fsharp/pars.fsy"
                            WhereTyparIsValueType(_1, lhs parseState) 
                   )
//# 2333 "../../../src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7102 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2336 "../../../src/fsharp/pars.fsy"
                            if _3 <> "not" then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(_3))  
                            WhereTyparIsReferenceType(_1, lhs parseState) 
                   )
//# 2336 "../../../src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7115 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2340 "../../../src/fsharp/pars.fsy"
                            WhereTyparSupportsNull(_1, lhs parseState) 
                   )
//# 2340 "../../../src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7126 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2343 "../../../src/fsharp/pars.fsy"
                            let tp = _1
                            WhereTyparSupportsMember([ SynType.Var(tp, tp.Range) ], _4, lhs parseState) 
                   )
//# 2343 "../../../src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7140 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2347 "../../../src/fsharp/pars.fsy"
                            WhereTyparSupportsMember(List.rev(_2), _6, lhs parseState) 
                   )
//# 2347 "../../../src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7154 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * SyntaxTree.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2350 "../../../src/fsharp/pars.fsy"
                            let _ltm, _gtm, args, _commas, mWhole = _4 in WhereTyparIsDelegate(_1, args, unionRanges _1.Range mWhole) 
                   )
//# 2350 "../../../src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7166 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * SyntaxTree.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2353 "../../../src/fsharp/pars.fsy"
                            match _3 with 
                            | "enum" -> let _ltm, _gtm, args, _commas, mWhole = _4 in WhereTyparIsEnum(_1, args, unionRanges _1.Range mWhole)
                            | nm -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(nm)) 
                   )
//# 2353 "../../../src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7181 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2358 "../../../src/fsharp/pars.fsy"
                            match _3 with 
                            | "comparison" -> WhereTyparIsComparable(_1, lhs parseState)
                            | "equality" -> WhereTyparIsEquatable(_1, lhs parseState)
                            | "unmanaged" -> WhereTyparIsUnmanaged(_1, lhs parseState)
                            | nm -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(nm)) 
                   )
//# 2358 "../../../src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7197 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2366 "../../../src/fsharp/pars.fsy"
                            _3 :: _1 
                   )
//# 2366 "../../../src/fsharp/pars.fsy"
                 : 'typarAlts));
//# 7209 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2369 "../../../src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 2369 "../../../src/fsharp/pars.fsy"
                 : 'typarAlts));
//# 7220 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2376 "../../../src/fsharp/pars.fsy"
                            _2 _1 
                   )
//# 2376 "../../../src/fsharp/pars.fsy"
                 : Choice<SyntaxTree.SynEnumCase, SyntaxTree.SynUnionCase> list));
//# 7232 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDeclOfMany)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2379 "../../../src/fsharp/pars.fsy"
                            _1 :: _3 _2 
                   )
//# 2379 "../../../src/fsharp/pars.fsy"
                 : Choice<SyntaxTree.SynEnumCase, SyntaxTree.SynUnionCase> list));
//# 7245 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2382 "../../../src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 2382 "../../../src/fsharp/pars.fsy"
                 : Choice<SyntaxTree.SynEnumCase, SyntaxTree.SynUnionCase> list));
//# 7256 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2386 "../../../src/fsharp/pars.fsy"
                            grabXmlDoc(parseState, 1) 
                   )
//# 2386 "../../../src/fsharp/pars.fsy"
                 : 'barAndgrabXmlDoc));
//# 7266 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2390 "../../../src/fsharp/pars.fsy"
                            (fun xmlDoc -> _1 xmlDoc  :: _3 _2) 
                   )
//# 2390 "../../../src/fsharp/pars.fsy"
                 : 'attrUnionCaseDecls));
//# 7279 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2393 "../../../src/fsharp/pars.fsy"
                            (fun xmlDoc -> [ _1 xmlDoc ]) 
                   )
//# 2393 "../../../src/fsharp/pars.fsy"
                 : 'attrUnionCaseDecls));
//# 7290 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2398 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(), rhs parseState 2))
                             let mDecl = rhs parseState 3
                             (fun xmlDoc -> Choice2Of2 (UnionCase ( _1, _3, UnionCaseFields [], xmlDoc, None, mDecl))) 
                   )
//# 2398 "../../../src/fsharp/pars.fsy"
                 : 'attrUnionCaseDecl));
//# 7306 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2403 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(), rhs parseState 2))
                             let mDecl = rhs2 parseState 1 5
                             (fun xmlDoc -> Choice2Of2 (UnionCase ( _1, _3, UnionCaseFields _5, xmlDoc, None, mDecl))) 
                   )
//# 2403 "../../../src/fsharp/pars.fsy"
                 : 'attrUnionCaseDecl));
//# 7323 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2408 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(), rhs parseState 2))
                             libraryOnlyWarning(lhs parseState)
                             let mDecl = rhs2 parseState 1 5
                             (fun xmlDoc -> Choice2Of2 (UnionCase ( _1, _3, UnionCaseFullType _5, xmlDoc, None, mDecl))) 
                   )
//# 2408 "../../../src/fsharp/pars.fsy"
                 : 'attrUnionCaseDecl));
//# 7341 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2414 "../../../src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsEnumFieldsCannotHaveVisibilityDeclarations(), rhs parseState 2))
                             let mDecl = rhs2 parseState 1 5
                             (fun xmlDoc -> Choice1Of2 (EnumCase ( _1, _3, _5, xmlDoc, mDecl))) 
                   )
//# 2414 "../../../src/fsharp/pars.fsy"
                 : 'attrUnionCaseDecl));
//# 7358 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2421 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 2421 "../../../src/fsharp/pars.fsy"
                 : 'unionCaseName));
//# 7369 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2424 "../../../src/fsharp/pars.fsy"
                              ident(opNameCons, rhs parseState 2) 
                   )
//# 2424 "../../../src/fsharp/pars.fsy"
                 : 'unionCaseName));
//# 7380 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2427 "../../../src/fsharp/pars.fsy"
                              ident(opNameNil, rhs2 parseState 2 3) 
                   )
//# 2427 "../../../src/fsharp/pars.fsy"
                 : 'unionCaseName));
//# 7391 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2431 "../../../src/fsharp/pars.fsy"
                             Choice2Of2 (UnionCase ( [], _1, UnionCaseFields [], PreXmlDoc.Empty, None, rhs parseState 1)) 
                   )
//# 2431 "../../../src/fsharp/pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
//# 7403 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2434 "../../../src/fsharp/pars.fsy"
                             Choice1Of2 (EnumCase ([], _1, _3, PreXmlDoc.Empty, rhs2 parseState 1 3)) 
                   )
//# 2434 "../../../src/fsharp/pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
//# 7416 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2437 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 2437 "../../../src/fsharp/pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
//# 7428 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2441 "../../../src/fsharp/pars.fsy"
                            Choice2Of2 (UnionCase ( [], _1, UnionCaseFields _3, PreXmlDoc.Empty, None, rhs2 parseState 1 3)) 
                   )
//# 2441 "../../../src/fsharp/pars.fsy"
                 : 'firstUnionCaseDecl));
//# 7440 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2444 "../../../src/fsharp/pars.fsy"
                             Choice1Of2 (EnumCase ([], _1, _3, PreXmlDoc.Empty, rhs2 parseState 1 3))  
                   )
//# 2444 "../../../src/fsharp/pars.fsy"
                 : 'firstUnionCaseDecl));
//# 7453 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElement)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2448 "../../../src/fsharp/pars.fsy"
                            _1 :: _3 
                   )
//# 2448 "../../../src/fsharp/pars.fsy"
                 : 'unionCaseReprElements));
//# 7465 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2451 "../../../src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 2451 "../../../src/fsharp/pars.fsy"
                 : 'unionCaseReprElements));
//# 7476 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2455 "../../../src/fsharp/pars.fsy"
                            let wholeRange = rhs2 parseState 1 3
                            mkNamedField(_1, _3, wholeRange) 
                   )
//# 2455 "../../../src/fsharp/pars.fsy"
                 : 'unionCaseReprElement));
//# 7489 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2459 "../../../src/fsharp/pars.fsy"
                            mkAnonField _1 
                   )
//# 2459 "../../../src/fsharp/pars.fsy"
                 : 'unionCaseReprElement));
//# 7500 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2463 "../../../src/fsharp/pars.fsy"
                            errorR(Deprecated(FSComp.SR.parsConsiderUsingSeparateRecordType(), lhs parseState)) 
                            _1 
                   )
//# 2463 "../../../src/fsharp/pars.fsy"
                 : 'unionCaseRepr));
//# 7512 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2467 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 2467 "../../../src/fsharp/pars.fsy"
                 : 'unionCaseRepr));
//# 7523 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2472 "../../../src/fsharp/pars.fsy"
                            _1 :: _3 
                   )
//# 2472 "../../../src/fsharp/pars.fsy"
                 : 'recdFieldDeclList));
//# 7536 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2475 "../../../src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 2475 "../../../src/fsharp/pars.fsy"
                 : 'recdFieldDeclList));
//# 7548 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2480 "../../../src/fsharp/pars.fsy"
                            let wholeRange = rhs2 parseState 1 2
                            let fld = _2 _1 false wholeRange
                            let (Field (a, b, c, d, e, f, vis, wholeRange)) = fld
                            if Option.isSome vis then errorR (Error (FSComp.SR.parsRecordFieldsCannotHaveVisibilityDeclarations (), rhs parseState 2))
                            Field (a, b, c, d, e, f, None, wholeRange) 
                   )
//# 2480 "../../../src/fsharp/pars.fsy"
                 : 'recdFieldDecl));
//# 7564 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2489 "../../../src/fsharp/pars.fsy"
                            let xmlDoc = grabXmlDoc (parseState, 3)
                            fun attrs stat wholeRange -> Field(attrs, stat, Some _3, _5, _1, xmlDoc, _2, wholeRange) 
                   )
//# 2489 "../../../src/fsharp/pars.fsy"
                 : 'fieldDecl));
//# 7579 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExceptionDefnRepr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2495 "../../../src/fsharp/pars.fsy"
                            SynExceptionDefn(_1, _2, (_1.Range, _2) ||> unionRangeWithListBy (fun cd -> cd.Range) ) 
                   )
//# 2495 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExceptionDefn));
//# 7591 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2500 "../../../src/fsharp/pars.fsy"
                            grabXmlDoc(parseState, 1) 
                   )
//# 2500 "../../../src/fsharp/pars.fsy"
                 : 'exceptionAndGrabDoc));
//# 7601 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'exceptionAndGrabDoc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconIntro)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2505 "../../../src/fsharp/pars.fsy"
                            SynExceptionDefnRepr(_2, _4, _5, _1, _3, (match _5 with None -> rhs2 parseState 1 4 | Some p -> unionRanges (rangeOfLongIdent p) (rhs2 parseState 1 4))) 
                   )
//# 2505 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExceptionDefnRepr));
//# 7616 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2510 "../../../src/fsharp/pars.fsy"
                             UnionCase([], _1, UnionCaseFields [], PreXmlDoc.Empty, None, lhs parseState) 
                   )
//# 2510 "../../../src/fsharp/pars.fsy"
                 : 'exconIntro));
//# 7627 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2513 "../../../src/fsharp/pars.fsy"
                             UnionCase([], _1, UnionCaseFields _3, PreXmlDoc.Empty, None, lhs parseState) 
                   )
//# 2513 "../../../src/fsharp/pars.fsy"
                 : 'exconIntro));
//# 7639 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2517 "../../../src/fsharp/pars.fsy"
                            None 
                   )
//# 2517 "../../../src/fsharp/pars.fsy"
                 : 'exconRepr));
//# 7649 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2520 "../../../src/fsharp/pars.fsy"
                            Some (_2.Lid) 
                   )
//# 2520 "../../../src/fsharp/pars.fsy"
                 : 'exconRepr));
//# 7660 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2528 "../../../src/fsharp/pars.fsy"
                             let mLetKwd = rhs parseState 1 
                             let isUse = _1
                             let isRec = _2 
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise range of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs2 parseState 1 2 (* there was some error - this will be an approximate range *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             // The first binding swallows any attributes prior to the 'let'
                             BindingSetPreAttrs(mLetKwd, isRec, isUse,
                                 (fun attrs vis -> 
                                     // apply the builder
                                     let binds = localBindingsBuilder attrs vis mLetKwd
                                     if not isRec && not (isNilOrSingleton binds) then 
                                           reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings())
                                     [], binds),
                                 bindingSetRange) 
                   )
//# 2528 "../../../src/fsharp/pars.fsy"
                 : 'defnBindings));
//# 7691 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cPrototype)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2550 "../../../src/fsharp/pars.fsy"
                             let bindRange = lhs parseState
                             BindingSetPreAttrs(bindRange, false, false, _1, bindRange)  
                   )
//# 2550 "../../../src/fsharp/pars.fsy"
                 : 'defnBindings));
//# 7703 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2557 "../../../src/fsharp/pars.fsy"
                             let mDoKwd = rhs parseState 1 
                             let mWhole = unionRanges mDoKwd _2.Range
                             // any attributes prior to the 'let' are left free, e.g. become top-level attributes 
                             // associated with the module, 'main' function or assembly depending on their target 
                             BindingSetPreAttrs(mDoKwd, false, false, (fun attrs vis -> attrs, [mkSynDoBinding (vis, true, _2, mWhole)]), mWhole) 
                   )
//# 2557 "../../../src/fsharp/pars.fsy"
                 : 'doBinding));
//# 7718 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2567 "../../../src/fsharp/pars.fsy"
                             let mLetKwd = rhs parseState 1 
                             let isUse = _1
                             let isRec = _2
                             _4 (if isUse then "use" else "let") mLetKwd  // report unterminated error 
                             
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise range of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs parseState 1 (* there was some error - this will be an approximate range *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             // the first binding swallow any attributes prior to the 'let' 
                             BindingSetPreAttrs(mLetKwd, isRec, isUse,
                               (fun attrs vis ->
                                 let binds = localBindingsBuilder attrs vis mLetKwd
                                 if not isRec && not (isNilOrSingleton binds) then
                                     reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings())
                                 [], binds),
                               bindingSetRange), (unionRanges mLetKwd bindingSetRange) 
                   )
//# 2567 "../../../src/fsharp/pars.fsy"
                 : 'hardwhiteLetBindings));
//# 7751 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2593 "../../../src/fsharp/pars.fsy"
                             let mLetKwd = rhs parseState 1 
                             let bindingSetRange = unionRanges mLetKwd _2.Range 
                             let seqPt = NoDebugPointAtDoBinding 
                             // any attributes prior to the 'let' are left free, e.g. become top-level attributes 
                             // associated with the module, 'main' function or assembly depending on their target 
                             BindingSetPreAttrs(mLetKwd, false, false, (fun attrs vis -> attrs, [mkSynDoBinding (vis, true, _2, bindingSetRange)]), bindingSetRange), _2 
                   )
//# 2593 "../../../src/fsharp/pars.fsy"
                 : 'hardwhiteDoBinding));
//# 7768 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2604 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 2604 "../../../src/fsharp/pars.fsy"
                 : 'classDefnBindings));
//# 7779 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'doBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2607 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 2607 "../../../src/fsharp/pars.fsy"
                 : 'classDefnBindings));
//# 7790 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2610 "../../../src/fsharp/pars.fsy"
                            let b, m = _1 in b 
                   )
//# 2610 "../../../src/fsharp/pars.fsy"
                 : 'classDefnBindings));
//# 7801 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDoBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2613 "../../../src/fsharp/pars.fsy"
                            fst _1 
                   )
//# 2613 "../../../src/fsharp/pars.fsy"
                 : 'classDefnBindings));
//# 7812 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2619 "../../../src/fsharp/pars.fsy"
                            (fun _ m -> ()) 
                   )
//# 2619 "../../../src/fsharp/pars.fsy"
                 : 'hardwhiteDefnBindingsTerminator));
//# 7822 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2622 "../../../src/fsharp/pars.fsy"
                            (fun kwd m ->
                              let msg = 
                                  match kwd with 
                                  | "let!" -> FSComp.SR.parsUnmatchedLetBang() 
                                  | "use!" -> FSComp.SR.parsUnmatchedUseBang() 
                                  | "use" -> FSComp.SR.parsUnmatchedUse() 
                                  | _ (*"let" *) -> FSComp.SR.parsUnmatchedLet()
                              reportParseErrorAt m msg) 
                   )
//# 2622 "../../../src/fsharp/pars.fsy"
                 : 'hardwhiteDefnBindingsTerminator));
//# 7840 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cRetType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArgs)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2634 "../../../src/fsharp/pars.fsy"
                             let rty, vis, nm, args  = _2, _3, _4, _7 
                             let xmlDoc = grabXmlDoc(parseState, 1) 
                             let nmm = rhs parseState 3 
                             let argsm = rhs parseState 6 
                             let mBindLhs = lhs parseState
                             let mWhole = lhs parseState
                             let mRhs = lhs parseState 
                             let rhsExpr = SynExpr.App (ExprAtomicFlag.NonAtomic,
                                                       false,
                                                       SynExpr.Ident (ident("failwith", rhs parseState 6)),
                                                       SynExpr.Const (SynConst.String("extern was not given a DllImport attribute", rhs parseState 8), rhs parseState 8),
                                                       mRhs)
                             (fun attrs vis -> 
                                 let bindingId = SynPat.LongIdent (LongIdentWithDots([nm], []), None, Some noInferredTypars, SynArgPats.Pats [SynPat.Tuple(false, args, argsm)], vis, nmm)
                                 let binding = mkSynBinding 
                                                   (xmlDoc, bindingId) 
                                                   (vis, false, false, mBindLhs, NoDebugPointAtInvisibleBinding, Some rty, rhsExpr, mRhs, [], attrs, None)
                                 [], [binding]) 
                   )
//# 2634 "../../../src/fsharp/pars.fsy"
                 : 'cPrototype));
//# 7873 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cMoreArgs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2656 "../../../src/fsharp/pars.fsy"
                            List.rev _1 
                   )
//# 2656 "../../../src/fsharp/pars.fsy"
                 : 'cArgs));
//# 7884 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2659 "../../../src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 2659 "../../../src/fsharp/pars.fsy"
                 : 'cArgs));
//# 7895 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2661 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 2661 "../../../src/fsharp/pars.fsy"
                 : 'cArgs));
//# 7905 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cMoreArgs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2667 "../../../src/fsharp/pars.fsy"
                            _3 :: _1 
                   )
//# 2667 "../../../src/fsharp/pars.fsy"
                 : 'cMoreArgs));
//# 7917 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2670 "../../../src/fsharp/pars.fsy"
                            [_3; _1] 
                   )
//# 2670 "../../../src/fsharp/pars.fsy"
                 : 'cMoreArgs));
//# 7929 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2676 "../../../src/fsharp/pars.fsy"
                            let m = lhs parseState in SynPat.Typed(SynPat.Wild m, _2, m) |> addAttribs _1 
                   )
//# 2676 "../../../src/fsharp/pars.fsy"
                 : 'cArg));
//# 7941 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2679 "../../../src/fsharp/pars.fsy"
                            let m = lhs parseState in SynPat.Typed(SynPat.Named (SynPat.Wild m, _3, false, None, m), _2, m) |> addAttribs _1 
                   )
//# 2679 "../../../src/fsharp/pars.fsy"
                 : 'cArg));
//# 7954 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2684 "../../../src/fsharp/pars.fsy"
                            let m = _1.Range
                            SynType.App(SynType.LongIdent(_1), None, [], [], None, false, m) 
                   )
//# 2684 "../../../src/fsharp/pars.fsy"
                 : 'cType));
//# 7966 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2688 "../../../src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("[]", m)], [])), None, [_1], [], None, true, m) 
                   )
//# 2688 "../../../src/fsharp/pars.fsy"
                 : 'cType));
//# 7979 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2692 "../../../src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("nativeptr", m)], [])), None, [_1], [], None, true, m) 
                   )
//# 2692 "../../../src/fsharp/pars.fsy"
                 : 'cType));
//# 7991 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2696 "../../../src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("byref", m)], [])), None, [_1], [], None, true, m) 
                   )
//# 2696 "../../../src/fsharp/pars.fsy"
                 : 'cType));
//# 8003 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2700 "../../../src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("nativeint", m)], [])), None, [], [], None, true, m) 
                   )
//# 2700 "../../../src/fsharp/pars.fsy"
                 : 'cType));
//# 8014 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2707 "../../../src/fsharp/pars.fsy"
                            SynReturnInfo((_2, SynArgInfo(_1, false, None)), rhs parseState 2) 
                   )
//# 2707 "../../../src/fsharp/pars.fsy"
                 : 'cRetType));
//# 8026 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2710 "../../../src/fsharp/pars.fsy"
                            let m = rhs parseState 2 
                            SynReturnInfo((SynType.App(SynType.LongIdent(LongIdentWithDots([ident("unit", m)], [])), None, [], [], None, false, m), SynArgInfo(_1, false, None)), m) 
                   )
//# 2710 "../../../src/fsharp/pars.fsy"
                 : 'cRetType));
//# 8038 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attr_localBinding)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreLocalBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2716 "../../../src/fsharp/pars.fsy"
                             let (moreBindings, moreBindingRanges) = List.unzip _2
                             let moreLocalBindingsLastRange = if moreBindingRanges.IsEmpty then None else Some (List.last moreBindingRanges)
                             match _1 with 
                             | Some (localBindingRange, attrLocalBindingBuilder) -> 
                                let lastRange = 
                                    match moreLocalBindingsLastRange with 
                                    | None -> localBindingRange 
                                    | Some m -> m
                                Some lastRange, (fun attrs vis mLetKwd -> attrLocalBindingBuilder attrs vis mLetKwd true ::  moreBindings)
                             | None -> 
                                moreLocalBindingsLastRange, (fun _attrs _vis _letm -> moreBindings) 
                   )
//# 2716 "../../../src/fsharp/pars.fsy"
                 : 'localBindings));
//# 8060 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attr_localBinding)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreLocalBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2731 "../../../src/fsharp/pars.fsy"
                             let mLetKwd = rhs parseState 1
                             (match _2 with 
                              | Some (localBindingRange, attrLocalBindingBuilder) -> (attrLocalBindingBuilder [] None mLetKwd false, localBindingRange) :: _3 
                              | None -> _3) 
                   )
//# 2731 "../../../src/fsharp/pars.fsy"
                 : 'moreLocalBindings));
//# 8075 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2737 "../../../src/fsharp/pars.fsy"
                             [] 
                   )
//# 2737 "../../../src/fsharp/pars.fsy"
                 : 'moreLocalBindings));
//# 8085 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2743 "../../../src/fsharp/pars.fsy"
                             let attrs2 = _1
                             let localBindingRange, localBindingBuilder = _2
                             let attrLocalBindingBuilder = (fun attrs vis mLetKwd _ -> localBindingBuilder (attrs@attrs2) vis mLetKwd)
                             Some(localBindingRange, attrLocalBindingBuilder) 
                   )
//# 2743 "../../../src/fsharp/pars.fsy"
                 : 'attr_localBinding));
//# 8100 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2749 "../../../src/fsharp/pars.fsy"
                             None 
                   )
//# 2749 "../../../src/fsharp/pars.fsy"
                 : 'attr_localBinding));
//# 8110 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizationsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2755 "../../../src/fsharp/pars.fsy"
                             let (expr:SynExpr), opts = _6
                             let eqm = rhs parseState 5 
                             let mRhs = expr.Range 
                             let optReturnType = _4 
                             let bindingBuilder, mBindLhs = _3 
                             let localBindingRange = unionRanges (rhs2 parseState 1 5) mRhs
                             let localBindingBuilder = 
                               (fun attrs vis mLetKwd -> 
                                 let mWhole = unionRanges mLetKwd mRhs
                                 let spBind = if IsControlFlowExpression expr then NoDebugPointAtLetBinding else DebugPointAtBinding mWhole
                                 bindingBuilder (vis, _1, _2, mBindLhs, spBind, optReturnType, expr, mRhs, opts, attrs, None))
                             localBindingRange, localBindingBuilder 
                   )
//# 2755 "../../../src/fsharp/pars.fsy"
                 : 'localBinding));
//# 8136 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2769 "../../../src/fsharp/pars.fsy"
                             let mWhole = rhs2 parseState 1 5 
                             let mRhs = rhs parseState 5
                             let optReturnType = _4 
                             let bindingBuilder, mBindLhs = _3 
                             let localBindingBuilder = 
                               (fun attrs vis mLetKwd -> 
                                 let spBind = DebugPointAtBinding (unionRanges mLetKwd mRhs)
                                 let eqm = rhs parseState 5
                                 let zeroWidthAtEnd = eqm.EndRange
                                 bindingBuilder (vis, _1, _2, mBindLhs, spBind, optReturnType, arbExpr("localBinding1", zeroWidthAtEnd), mRhs, [], attrs, None))  
                             mWhole, localBindingBuilder 
                   )
//# 2769 "../../../src/fsharp/pars.fsy"
                 : 'localBinding));
//# 8160 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2782 "../../../src/fsharp/pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 5) (FSComp.SR.parsUnexpectedEndOfFileDefinition())
                             let optReturnType = _4 
                             let mWhole = rhs2 parseState 1 (match optReturnType with None -> 3 | _ -> 4)
                             let mRhs = mWhole.EndRange  // zero-width range at end of last good token
                             let bindingBuilder, mBindLhs = _3 
                             let localBindingBuilder = 
                               (fun attrs vis mLetKwd -> 
                                 let spBind = DebugPointAtBinding (unionRanges mLetKwd mRhs)
                                 bindingBuilder (vis, _1, _2, mBindLhs, spBind, optReturnType, arbExpr("localBinding2", mRhs), mRhs, [], attrs, None))  
                             mWhole, localBindingBuilder 
                   )
//# 2782 "../../../src/fsharp/pars.fsy"
                 : 'localBinding));
//# 8184 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2797 "../../../src/fsharp/pars.fsy"
                             _2 
                   )
//# 2797 "../../../src/fsharp/pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
//# 8196 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2800 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFile())
                             let a, b = _2
                             (exprFromParseError a, b) 
                   )
//# 2800 "../../../src/fsharp/pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
//# 8210 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2805 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 2805 "../../../src/fsharp/pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
//# 8221 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_staticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2809 "../../../src/fsharp/pars.fsy"
                             _1, List.rev _2 
                   )
//# 2809 "../../../src/fsharp/pars.fsy"
                 : 'typedExprWithStaticOptimizations));
//# 8233 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_staticOptimizations)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimization)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2813 "../../../src/fsharp/pars.fsy"
                             _2 :: _1 
                   )
//# 2813 "../../../src/fsharp/pars.fsy"
                 : 'opt_staticOptimizations));
//# 8245 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2816 "../../../src/fsharp/pars.fsy"
                             [] 
                   )
//# 2816 "../../../src/fsharp/pars.fsy"
                 : 'opt_staticOptimizations));
//# 8255 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationConditions)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2820 "../../../src/fsharp/pars.fsy"
                             (_2, _4) 
                   )
//# 2820 "../../../src/fsharp/pars.fsy"
                 : 'staticOptimization));
//# 8267 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationConditions)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationCondition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2824 "../../../src/fsharp/pars.fsy"
                             _3 :: _1 
                   )
//# 2824 "../../../src/fsharp/pars.fsy"
                 : 'staticOptimizationConditions));
//# 8279 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationCondition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2827 "../../../src/fsharp/pars.fsy"
                             [_1 ] 
                   )
//# 2827 "../../../src/fsharp/pars.fsy"
                 : 'staticOptimizationConditions));
//# 8290 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2831 "../../../src/fsharp/pars.fsy"
                             WhenTyparTyconEqualsTycon(_1, _3, lhs parseState) 
                   )
//# 2831 "../../../src/fsharp/pars.fsy"
                 : 'staticOptimizationCondition));
//# 8302 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2834 "../../../src/fsharp/pars.fsy"
                             WhenTyparIsStruct(_1, lhs parseState) 
                   )
//# 2834 "../../../src/fsharp/pars.fsy"
                 : 'staticOptimizationCondition));
//# 8313 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : sbyte * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2838 "../../../src/fsharp/pars.fsy"
                           if snd _1 then errorR(Error(FSComp.SR.lexOutsideEightBitSigned(), lhs parseState))
                           SynConst.SByte (fst _1) 
                   )
//# 2838 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8325 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : byte)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2842 "../../../src/fsharp/pars.fsy"
                           SynConst.Byte _1 
                   )
//# 2842 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8336 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int16 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2845 "../../../src/fsharp/pars.fsy"
                           if snd _1 then errorR(Error(FSComp.SR.lexOutsideSixteenBitSigned(), lhs parseState))
                           SynConst.Int16 (fst _1) 
                   )
//# 2845 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8348 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint16)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2849 "../../../src/fsharp/pars.fsy"
                           SynConst.UInt16 _1 
                   )
//# 2849 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8359 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2852 "../../../src/fsharp/pars.fsy"
                           if snd _1 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                           SynConst.Int32 (fst _1) 
                   )
//# 2852 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8371 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint32)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2856 "../../../src/fsharp/pars.fsy"
                           SynConst.UInt32 _1 
                   )
//# 2856 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8382 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int64 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2859 "../../../src/fsharp/pars.fsy"
                           if snd _1 then errorR(Error(FSComp.SR.lexOutsideSixtyFourBitSigned(), lhs parseState))
                           SynConst.Int64 (fst _1) 
                   )
//# 2859 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8394 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2863 "../../../src/fsharp/pars.fsy"
                           SynConst.UInt64 _1 
                   )
//# 2863 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8405 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int64 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2866 "../../../src/fsharp/pars.fsy"
                           if snd _1 then errorR(Error(FSComp.SR.lexOutsideNativeSigned(), lhs parseState))
                           SynConst.IntPtr (fst _1) 
                   )
//# 2866 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8417 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2870 "../../../src/fsharp/pars.fsy"
                           SynConst.UIntPtr _1 
                   )
//# 2870 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8428 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : single)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2873 "../../../src/fsharp/pars.fsy"
                           SynConst.Single _1 
                   )
//# 2873 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8439 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : double)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2876 "../../../src/fsharp/pars.fsy"
                           SynConst.Double _1 
                   )
//# 2876 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8450 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2879 "../../../src/fsharp/pars.fsy"
                           SynConst.Char _1 
                   )
//# 2879 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8461 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.Decimal)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2882 "../../../src/fsharp/pars.fsy"
                           SynConst.Decimal _1 
                   )
//# 2882 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8472 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : (string * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2885 "../../../src/fsharp/pars.fsy"
                           SynConst.UserNum _1 
                   )
//# 2885 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8483 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2888 "../../../src/fsharp/pars.fsy"
                           SynConst.String (_1, lhs parseState) 
                   )
//# 2888 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8494 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : byte[] * ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2891 "../../../src/fsharp/pars.fsy"
                           SynConst.Bytes (fst _1, lhs parseState) 
                   )
//# 2891 "../../../src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8505 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2895 "../../../src/fsharp/pars.fsy"
                           if _2 <> "/" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure())
                           if fst _3 = 0 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsIllegalDenominatorForMeasureExponent())
                           if (snd _1) || (snd _3) then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                           SynRationalConst.Rational(fst _1, fst _3, lhs parseState) 
                   )
//# 2895 "../../../src/fsharp/pars.fsy"
                 : 'rationalConstant));
//# 8521 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2901 "../../../src/fsharp/pars.fsy"
                           if _3 <> "/" then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure())
                           if fst _4 = 0 then reportParseErrorAt (rhs parseState 4) (FSComp.SR.parsIllegalDenominatorForMeasureExponent())
                           if (snd _2) || (snd _4) then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                           SynRationalConst.Negate(SynRationalConst.Rational(fst _2, fst _4, lhs parseState)) 
                   )
//# 2901 "../../../src/fsharp/pars.fsy"
                 : 'rationalConstant));
//# 8537 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2907 "../../../src/fsharp/pars.fsy"
                           if snd _1 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                           SynRationalConst.Integer(fst _1) 
                   )
//# 2907 "../../../src/fsharp/pars.fsy"
                 : 'rationalConstant));
//# 8549 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2911 "../../../src/fsharp/pars.fsy"
                           if snd _2 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                           SynRationalConst.Negate(SynRationalConst.Integer(fst _2)) 
                   )
//# 2911 "../../../src/fsharp/pars.fsy"
                 : 'rationalConstant));
//# 8561 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2915 "../../../src/fsharp/pars.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                                 SynRationalConst.Integer(fst _1) 
                   )
//# 2915 "../../../src/fsharp/pars.fsy"
                 : 'atomicUnsignedRationalConstant));
//# 8573 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rationalConstant)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2919 "../../../src/fsharp/pars.fsy"
                           _2 
                   )
//# 2919 "../../../src/fsharp/pars.fsy"
                 : 'atomicUnsignedRationalConstant));
//# 8585 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicUnsignedRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2922 "../../../src/fsharp/pars.fsy"
                                                          _1 
                   )
//# 2922 "../../../src/fsharp/pars.fsy"
                 : 'atomicRationalConstant));
//# 8596 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicUnsignedRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2925 "../../../src/fsharp/pars.fsy"
                           SynRationalConst.Negate(_2) 
                   )
//# 2925 "../../../src/fsharp/pars.fsy"
                 : 'atomicRationalConstant));
//# 8607 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2929 "../../../src/fsharp/pars.fsy"
                           _1 
                   )
//# 2929 "../../../src/fsharp/pars.fsy"
                 : 'constant));
//# 8618 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2932 "../../../src/fsharp/pars.fsy"
                           SynConst.Measure(_1, _3) 
                   )
//# 2932 "../../../src/fsharp/pars.fsy"
                 : 'constant));
//# 8630 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2937 "../../../src/fsharp/pars.fsy"
                             // Adds a grab point at the start of the binding, so as not to include XML doc comments on the arguments
                             let xmlDoc = LexbufLocalXmlDocStore.GrabXmlDocBeforeMarker(parseState.LexBuffer, (lhs parseState).StartRange)
                             // Adds grab point at the end of the binding head, so subsequent types don't erroneously include argument doc comemnts
                             grabXmlDoc(parseState, 1) |> ignore
                          
                             mkSynBinding (xmlDoc, _1), rhs parseState 1 
                   )
//# 2937 "../../../src/fsharp/pars.fsy"
                 : 'bindingPattern));
//# 8646 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2949 "../../../src/fsharp/pars.fsy"
                             let m = rhs parseState 1 
                             SynPat.Named(SynPat.Wild m, _1, false, None, m) 
                   )
//# 2949 "../../../src/fsharp/pars.fsy"
                 : 'simplePattern));
//# 8658 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2953 "../../../src/fsharp/pars.fsy"
                             SynPat.OptionalVal(_2, rhs parseState 2) 
                   )
//# 2953 "../../../src/fsharp/pars.fsy"
                 : 'simplePattern));
//# 8669 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2956 "../../../src/fsharp/pars.fsy"
                             SynPat.Typed(_1, _3, lhs parseState) 
                   )
//# 2956 "../../../src/fsharp/pars.fsy"
                 : 'simplePattern));
//# 8681 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2959 "../../../src/fsharp/pars.fsy"
                             SynPat.Attrib(_2, _1, lhs parseState) 
                   )
//# 2959 "../../../src/fsharp/pars.fsy"
                 : 'simplePattern));
//# 8693 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2963 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 2963 "../../../src/fsharp/pars.fsy"
                 : 'simplePatternCommaList));
//# 8704 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2966 "../../../src/fsharp/pars.fsy"
                             match _3 with
                             | SynPat.Tuple(_, pats, _) -> SynPat.Tuple(false, _1 :: pats, rhs2 parseState 1 3)
                             | _ -> SynPat.Tuple(false, [_1; _3], rhs2 parseState 1 3) 
                   )
//# 2966 "../../../src/fsharp/pars.fsy"
                 : 'simplePatternCommaList));
//# 8718 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2972 "../../../src/fsharp/pars.fsy"
                             let parenPat = SynPat.Paren(_2, rhs2 parseState 1 3)
                             let simplePats, _ = SimplePatsOfPat parseState.SynArgNameGenerator parenPat
                             simplePats 
                   )
//# 2972 "../../../src/fsharp/pars.fsy"
                 : 'simplePatterns));
//# 8732 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2977 "../../../src/fsharp/pars.fsy"
                             let pat = SynPat.Const(SynConst.Unit, rhs2 parseState 1 2)
                             let simplePats, _ = SimplePatsOfPat parseState.SynArgNameGenerator pat
                             simplePats 
                   )
//# 2977 "../../../src/fsharp/pars.fsy"
                 : 'simplePatterns));
//# 8745 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2982 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let parenPat = SynPat.Paren(SynPat.Tuple(false, [], rhs2 parseState 1 2), rhs2 parseState 1 2) // todo: report parsed pats anyway?
                             let simplePats, _ = SimplePatsOfPat parseState.SynArgNameGenerator parenPat
                             simplePats 
                   )
//# 2982 "../../../src/fsharp/pars.fsy"
                 : 'simplePatterns));
//# 8760 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2988 "../../../src/fsharp/pars.fsy"
                             let parenPat = SynPat.Paren(SynPat.Wild(rhs parseState 2), rhs2 parseState 1 3) // silent recovery
                             let simplePats, _ = SimplePatsOfPat parseState.SynArgNameGenerator parenPat
                             simplePats 
                   )
//# 2988 "../../../src/fsharp/pars.fsy"
                 : 'simplePatterns));
//# 8773 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2993 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let pat = SynPat.Wild(lhs parseState)
                             let simplePats, _ = SimplePatsOfPat parseState.SynArgNameGenerator pat
                             simplePats 
                   )
//# 2993 "../../../src/fsharp/pars.fsy"
                 : 'simplePatterns));
//# 8787 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3001 "../../../src/fsharp/pars.fsy"
                             SynPat.Named (_1, _3, false, None, rhs2 parseState 1 3) 
                   )
//# 3001 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynPat));
//# 8799 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3004 "../../../src/fsharp/pars.fsy"
                             SynPat.Or(_1, _3, rhs2 parseState 1 3) 
                   )
//# 3004 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynPat));
//# 8811 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3007 "../../../src/fsharp/pars.fsy"
                             SynPat.LongIdent (LongIdentWithDots(mkSynCaseName (rhs parseState 2) opNameCons, []), None, None, SynArgPats.Pats [SynPat.Tuple (false, [_1;_3], rhs2 parseState 1 3)], None, lhs parseState) 
                   )
//# 3007 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynPat));
//# 8823 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3010 "../../../src/fsharp/pars.fsy"
                             SynPat.Tuple(false, List.rev _1, lhs parseState) 
                   )
//# 3010 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynPat));
//# 8834 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3013 "../../../src/fsharp/pars.fsy"
                             SynPat.Ands(List.rev _1, lhs parseState) 
                   )
//# 3013 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynPat));
//# 8845 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3016 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 3016 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynPat));
//# 8856 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3020 "../../../src/fsharp/pars.fsy"
                             _3 :: _1 
                   )
//# 3020 "../../../src/fsharp/pars.fsy"
                 : 'tuplePatternElements));
//# 8868 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3023 "../../../src/fsharp/pars.fsy"
                             _3 :: _1 :: [] 
                   )
//# 3023 "../../../src/fsharp/pars.fsy"
                 : 'tuplePatternElements));
//# 8880 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3027 "../../../src/fsharp/pars.fsy"
                            _3 :: _1 
                   )
//# 3027 "../../../src/fsharp/pars.fsy"
                 : 'conjPatternElements));
//# 8892 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3030 "../../../src/fsharp/pars.fsy"
                            _3 :: _1 :: [] 
                   )
//# 3030 "../../../src/fsharp/pars.fsy"
                 : 'conjPatternElements));
//# 8904 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPair)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3034 "../../../src/fsharp/pars.fsy"
                            [_1], lhs parseState 
                   )
//# 3034 "../../../src/fsharp/pars.fsy"
                 : 'namePatPairs));
//# 8916 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPair)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3037 "../../../src/fsharp/pars.fsy"
                            let (rs, _) = _3 in (_1 :: rs), lhs parseState 
                   )
//# 3037 "../../../src/fsharp/pars.fsy"
                 : 'namePatPairs));
//# 8929 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3041 "../../../src/fsharp/pars.fsy"
                            (_1, _3) 
                   )
//# 3041 "../../../src/fsharp/pars.fsy"
                 : 'namePatPair));
//# 8941 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3045 "../../../src/fsharp/pars.fsy"
                             let vis, lid = _1 in SynPat.LongIdent (lid, None, Some _2, SynArgPats.Pats [], vis, lhs parseState) 
                   )
//# 3045 "../../../src/fsharp/pars.fsy"
                 : 'constrPattern));
//# 8953 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatsOrNamePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3048 "../../../src/fsharp/pars.fsy"
                             let vis, lid = _1 in SynPat.LongIdent (lid, None, _2, _3, vis, lhs parseState) 
                   )
//# 3048 "../../../src/fsharp/pars.fsy"
                 : 'constrPattern));
//# 8966 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatsOrNamePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3051 "../../../src/fsharp/pars.fsy"
                             let vis, lid = _1 in SynPat.LongIdent (lid, None, _2, _4, vis, lhs parseState) 
                   )
//# 3051 "../../../src/fsharp/pars.fsy"
                 : 'constrPattern));
//# 8979 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatsOrNamePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3054 "../../../src/fsharp/pars.fsy"
                             let vis, lid = _1 in SynPat.LongIdent (lid, None, _2, _4, vis, lhs parseState) 
                   )
//# 3054 "../../../src/fsharp/pars.fsy"
                 : 'constrPattern));
//# 8992 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeOrAnonRecdType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3057 "../../../src/fsharp/pars.fsy"
                             SynPat.IsInst(_2, lhs parseState) 
                   )
//# 3057 "../../../src/fsharp/pars.fsy"
                 : 'constrPattern));
//# 9003 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3060 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 3060 "../../../src/fsharp/pars.fsy"
                 : 'constrPattern));
//# 9014 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPairs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3064 "../../../src/fsharp/pars.fsy"
                             SynArgPats.NamePatPairs _2 
                   )
//# 3064 "../../../src/fsharp/pars.fsy"
                 : 'atomicPatsOrNamePatPairs));
//# 9026 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3067 "../../../src/fsharp/pars.fsy"
                             SynArgPats.Pats _1 
                   )
//# 3067 "../../../src/fsharp/pars.fsy"
                 : 'atomicPatsOrNamePatPairs));
//# 9037 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3071 "../../../src/fsharp/pars.fsy"
                             _1 :: _2 
                   )
//# 3071 "../../../src/fsharp/pars.fsy"
                 : 'atomicPatterns));
//# 9049 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3074 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessivePatternsShouldBeSpacedOrTupled())
                             _1 :: _3 
                   )
//# 3074 "../../../src/fsharp/pars.fsy"
                 : 'atomicPatterns));
//# 9062 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3078 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessivePatternsShouldBeSpacedOrTupled())
                             _1 :: _3 
                   )
//# 3078 "../../../src/fsharp/pars.fsy"
                 : 'atomicPatterns));
//# 9075 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3082 "../../../src/fsharp/pars.fsy"
                             [_1] 
                   )
//# 3082 "../../../src/fsharp/pars.fsy"
                 : 'atomicPatterns));
//# 9086 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'quoteExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3087 "../../../src/fsharp/pars.fsy"
                             SynPat.QuoteExpr(_1, lhs parseState) 
                   )
//# 3087 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9097 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3090 "../../../src/fsharp/pars.fsy"
                             SynPat.DeprecatedCharRange (_1, _3, rhs2 parseState 1 3) 
                   )
//# 3090 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9109 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElementsAux)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3093 "../../../src/fsharp/pars.fsy"
                             let rs, m = _2 in SynPat.Record (rs, rhs2 parseState 1 3) 
                   )
//# 3093 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9122 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3096 "../../../src/fsharp/pars.fsy"
                             SynPat.ArrayOrList(false, _2, lhs parseState) 
                   )
//# 3096 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9133 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3099 "../../../src/fsharp/pars.fsy"
                             SynPat.ArrayOrList(true, _2, lhs parseState) 
                   )
//# 3099 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9144 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3102 "../../../src/fsharp/pars.fsy"
                             SynPat.Wild (lhs parseState) 
                   )
//# 3102 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9154 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3105 "../../../src/fsharp/pars.fsy"
                             SynPat.OptionalVal(_2, lhs parseState) 
                   )
//# 3105 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9165 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3108 "../../../src/fsharp/pars.fsy"
                             let vis, lidwd = _1 
                             if not (isNilOrSingleton lidwd.Lid) || String.isLeadingIdentifierCharacterUpperCase (List.head lidwd.Lid).idText
                             then mkSynPatMaybeVar lidwd vis (lhs parseState)
                             else mkSynPatVar vis (List.head lidwd.Lid) 
                   )
//# 3108 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9179 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3114 "../../../src/fsharp/pars.fsy"
                             SynPat.Const (_1, _1.Range (lhs parseState)) 
                   )
//# 3114 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9190 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3117 "../../../src/fsharp/pars.fsy"
                             SynPat.Const(SynConst.Bool false, lhs parseState) 
                   )
//# 3117 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9200 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3120 "../../../src/fsharp/pars.fsy"
                             SynPat.Const(SynConst.Bool true, lhs parseState) 
                   )
//# 3120 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9210 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3123 "../../../src/fsharp/pars.fsy"
                             SynPat.Null(lhs parseState) 
                   )
//# 3123 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9220 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPatternBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3126 "../../../src/fsharp/pars.fsy"
                             let m = (lhs parseState)
                             SynPat.Paren(_2 m, m) 
                   )
//# 3126 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9233 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPatternBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3130 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()) 
                             patFromParseError (_2 (rhs2 parseState 1 2)) 
                   )
//# 3130 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9246 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3134 "../../../src/fsharp/pars.fsy"
                             (* silent recovery *) SynPat.Wild (lhs parseState) 
                   )
//# 3134 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9257 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3137 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()) 
                             SynPat.Wild (lhs parseState)
                   )
//# 3137 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9269 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3141 "../../../src/fsharp/pars.fsy"
                             SynPat.Tuple(true, List.rev _3, lhs parseState) 
                   )
//# 3141 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9281 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3144 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()); 
                             SynPat.Tuple(true, List.rev _3, lhs parseState) 
                   )
//# 3144 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9294 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3148 "../../../src/fsharp/pars.fsy"
                             (* silent recovery *) SynPat.Wild (lhs parseState) 
                   )
//# 3148 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9305 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3151 "../../../src/fsharp/pars.fsy"
                              reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()); 
                              SynPat.Wild (lhs parseState)
                   )
//# 3151 "../../../src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9317 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3156 "../../../src/fsharp/pars.fsy"
                             (fun m -> _1) 
                   )
//# 3156 "../../../src/fsharp/pars.fsy"
                 : 'parenPatternBody));
//# 9328 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3159 "../../../src/fsharp/pars.fsy"
                             (fun m -> SynPat.Const(SynConst.Unit, m)) 
                   )
//# 3159 "../../../src/fsharp/pars.fsy"
                 : 'parenPatternBody));
//# 9338 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3188 "../../../src/fsharp/pars.fsy"
                             SynPat.Named (_1, _3, false, None, rhs2 parseState 1 3) 
                   )
//# 3188 "../../../src/fsharp/pars.fsy"
                 : 'parenPattern));
//# 9350 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3191 "../../../src/fsharp/pars.fsy"
                             SynPat.Or(_1, _3, rhs2 parseState 1 3) 
                   )
//# 3191 "../../../src/fsharp/pars.fsy"
                 : 'parenPattern));
//# 9362 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3194 "../../../src/fsharp/pars.fsy"
                             SynPat.Tuple(false, List.rev _1, lhs parseState) 
                   )
//# 3194 "../../../src/fsharp/pars.fsy"
                 : 'parenPattern));
//# 9373 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjParenPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3197 "../../../src/fsharp/pars.fsy"
                             SynPat.Ands(List.rev _1, rhs2 parseState 1 3) 
                   )
//# 3197 "../../../src/fsharp/pars.fsy"
                 : 'parenPattern));
//# 9384 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3200 "../../../src/fsharp/pars.fsy"
                             let lhsm = lhs parseState 
                             SynPat.Typed(_1, _3, lhsm) 
                   )
//# 3200 "../../../src/fsharp/pars.fsy"
                 : 'parenPattern));
//# 9397 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3204 "../../../src/fsharp/pars.fsy"
                             let lhsm = lhs parseState 
                             SynPat.Attrib(_2, _1, lhsm) 
                   )
//# 3204 "../../../src/fsharp/pars.fsy"
                 : 'parenPattern));
//# 9410 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3208 "../../../src/fsharp/pars.fsy"
                             SynPat.LongIdent (LongIdentWithDots(mkSynCaseName (rhs parseState 2) opNameCons, []), None, None, SynArgPats.Pats [ SynPat.Tuple (false, [_1;_3], rhs2 parseState 1 3) ], None, lhs parseState) 
                   )
//# 3208 "../../../src/fsharp/pars.fsy"
                 : 'parenPattern));
//# 9422 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3210 "../../../src/fsharp/pars.fsy"
                                         _1 
                   )
//# 3210 "../../../src/fsharp/pars.fsy"
                 : 'parenPattern));
//# 9433 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3214 "../../../src/fsharp/pars.fsy"
                             _3 :: _1 
                   )
//# 3214 "../../../src/fsharp/pars.fsy"
                 : 'tupleParenPatternElements));
//# 9445 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3217 "../../../src/fsharp/pars.fsy"
                             _3 :: _1 :: [] 
                   )
//# 3217 "../../../src/fsharp/pars.fsy"
                 : 'tupleParenPatternElements));
//# 9457 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjParenPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3221 "../../../src/fsharp/pars.fsy"
                             _3 :: _1 
                   )
//# 3221 "../../../src/fsharp/pars.fsy"
                 : 'conjParenPatternElements));
//# 9469 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3224 "../../../src/fsharp/pars.fsy"
                             _3 :: _1 :: [] 
                   )
//# 3224 "../../../src/fsharp/pars.fsy"
                 : 'conjParenPatternElements));
//# 9481 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElement)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3228 "../../../src/fsharp/pars.fsy"
                             [_1], lhs parseState 
                   )
//# 3228 "../../../src/fsharp/pars.fsy"
                 : 'recordPatternElementsAux));
//# 9493 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElement)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElementsAux)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3231 "../../../src/fsharp/pars.fsy"
                             let r = _1 in let (rs, dropMark) = _3 in (r :: rs), lhs parseState 
                   )
//# 3231 "../../../src/fsharp/pars.fsy"
                 : 'recordPatternElementsAux));
//# 9506 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3234 "../../../src/fsharp/pars.fsy"
                                                    (List.frontAndBack _1.Lid, _3) 
                   )
//# 3234 "../../../src/fsharp/pars.fsy"
                 : 'recordPatternElement));
//# 9518 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3238 "../../../src/fsharp/pars.fsy"
                             [] 
                   )
//# 3238 "../../../src/fsharp/pars.fsy"
                 : 'listPatternElements));
//# 9528 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3241 "../../../src/fsharp/pars.fsy"
                             [_1] 
                   )
//# 3241 "../../../src/fsharp/pars.fsy"
                 : 'listPatternElements));
//# 9540 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3244 "../../../src/fsharp/pars.fsy"
                             _1 :: _3 
                   )
//# 3244 "../../../src/fsharp/pars.fsy"
                 : 'listPatternElements));
//# 9553 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3249 "../../../src/fsharp/pars.fsy"
                             _2 
                   )
//# 3249 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 9565 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3252 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileExpression())
                             exprFromParseError _2 
                   )
//# 3252 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 9578 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3256 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 3256 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 9589 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3261 "../../../src/fsharp/pars.fsy"
                             _2 
                   )
//# 3261 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 9601 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3264 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 3264 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 9612 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3270 "../../../src/fsharp/pars.fsy"
                           _1 
                   )
//# 3270 "../../../src/fsharp/pars.fsy"
                 : 'typedSeqExprBlockR));
//# 9623 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3273 "../../../src/fsharp/pars.fsy"
                           _1 
                   )
//# 3273 "../../../src/fsharp/pars.fsy"
                 : 'typedSeqExprBlockR));
//# 9634 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3277 "../../../src/fsharp/pars.fsy"
                           SynExpr.Typed (_1, _3, unionRanges _1.Range _3.Range) 
                   )
//# 3277 "../../../src/fsharp/pars.fsy"
                 : 'typedSeqExpr));
//# 9646 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3280 "../../../src/fsharp/pars.fsy"
                           _1 
                   )
//# 3280 "../../../src/fsharp/pars.fsy"
                 : 'typedSeqExpr));
//# 9657 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3284 "../../../src/fsharp/pars.fsy"
                           checkEndOfFileError _2; _1 
                   )
//# 3284 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 9669 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3288 "../../../src/fsharp/pars.fsy"
                             SynExpr.Sequential (DebugPointAtSequential.Both, true, _1, _3, unionRanges _1.Range _3.Range) 
                   )
//# 3288 "../../../src/fsharp/pars.fsy"
                 : 'seqExpr));
//# 9682 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3291 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 3291 "../../../src/fsharp/pars.fsy"
                 : 'seqExpr));
//# 9694 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3294 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 3294 "../../../src/fsharp/pars.fsy"
                 : 'seqExpr));
//# 9705 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3297 "../../../src/fsharp/pars.fsy"
                             SynExpr.Sequential (DebugPointAtSequential.Both, false, _1, _3, unionRanges _1.Range _3.Range ) 
                   )
//# 3297 "../../../src/fsharp/pars.fsy"
                 : 'seqExpr));
//# 9717 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3300 "../../../src/fsharp/pars.fsy"
                             SynExpr.Sequential (DebugPointAtSequential.Both, false, _1, _4, unionRanges _1.Range _4.Range) 
                   )
//# 3300 "../../../src/fsharp/pars.fsy"
                 : 'seqExpr));
//# 9730 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3303 "../../../src/fsharp/pars.fsy"
                            let hwlb, m = _1
                            let mLetKwd, isUse = match hwlb with (BindingSetPreAttrs(m, _, isUse, _, _))  -> m, isUse
                            let usedKeyword = if isUse then "use" else "let"
                            reportParseErrorAt mLetKwd (FSComp.SR.parsExpectedExpressionAfterLet(usedKeyword, usedKeyword))
                            let fauxRange = m.EndRange // zero width range at end of m
                            mkLocalBindings (m, hwlb, arbExpr("seqExpr", fauxRange)) 
                   )
//# 3303 "../../../src/fsharp/pars.fsy"
                 : 'seqExpr));
//# 9746 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3316 "../../../src/fsharp/pars.fsy"
                             debugPrint("recovering via error"); true 
                   )
//# 3316 "../../../src/fsharp/pars.fsy"
                 : 'recover));
//# 9756 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3319 "../../../src/fsharp/pars.fsy"
                             debugPrint("recovering via EOF"); false 
                   )
//# 3319 "../../../src/fsharp/pars.fsy"
                 : 'recover));
//# 9767 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreBinders)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3323 "../../../src/fsharp/pars.fsy"
                            let spBind = DebugPointAtBinding(rhs2 parseState 1 5) (* TODO Pretty sure this is wrong *)
                            let m = rhs parseState 1 (* TODO Pretty sure this is wrong *)
                            (spBind, _1, true, _2, _4, m) :: _6 
                   )
//# 3323 "../../../src/fsharp/pars.fsy"
                 : 'moreBinders));
//# 9783 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreBinders)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3328 "../../../src/fsharp/pars.fsy"
                            _5 "and!" (rhs parseState 1)  // report unterminated error
                            let spBind = DebugPointAtBinding(rhs2 parseState 1 5) (* TODO Pretty sure this is wrong *)
                            let m = rhs parseState 1 (* TODO Pretty sure this is wrong *)
                            (spBind, _1, true, _2, _4, m) :: _7 
                   )
//# 3328 "../../../src/fsharp/pars.fsy"
                 : 'moreBinders));
//# 9802 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3334 "../../../src/fsharp/pars.fsy"
                             [] 
                   )
//# 3334 "../../../src/fsharp/pars.fsy"
                 : 'moreBinders));
//# 9812 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3338 "../../../src/fsharp/pars.fsy"
                            mkLocalBindings (unionRanges (rhs2 parseState 1 2) _3.Range, _1, _3) 
                   )
//# 3338 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 9824 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3341 "../../../src/fsharp/pars.fsy"
                            mkLocalBindings (rhs2 parseState 1 2, _1, arbExpr("declExpr1", (rhs parseState 3))) 
                   )
//# 3341 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 9835 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3347 "../../../src/fsharp/pars.fsy"
                            let hwlb, m = _1
                            mkLocalBindings (unionRanges m _2.Range, hwlb, _2) 
                   )
//# 3347 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 9848 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3351 "../../../src/fsharp/pars.fsy"
                            let hwlb, m = _1
                            reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m, _, _, _, _))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (m, hwlb, arbExpr("declExpr2", (rhs parseState 2))) 
                   )
//# 3351 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 9861 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3356 "../../../src/fsharp/pars.fsy"
                            let hwlb, m = _1
                            mkLocalBindings (unionRanges m _3.Range, hwlb, _3) 
                   )
//# 3356 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 9874 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3360 "../../../src/fsharp/pars.fsy"
                            let hwlb, m = _1
                            //reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m, _, _, _, _))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (unionRanges m (rhs parseState 3), hwlb, arbExpr("declExpr3", (rhs parseState 3))) 
                   )
//# 3360 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 9887 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDoBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3365 "../../../src/fsharp/pars.fsy"
                            let e = snd _1
                            SynExpr.Do (e, e.Range) 
                   )
//# 3365 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 9899 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonMatchingExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3369 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 3369 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 9910 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonLambdaExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3372 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 3372 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 9921 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3375 "../../../src/fsharp/pars.fsy"
                             let mMatch = (rhs parseState 1)
                             let mWith, (clauses, mLast) = _3 
                             let spBind = DebugPointAtBinding(unionRanges mMatch mWith) 
                             SynExpr.Match (spBind, _2, clauses, unionRanges mMatch mLast) 
                   )
//# 3375 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 9936 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3381 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileMatch())
                             // Produce approximate expression during error recovery 
                             exprFromParseError _2 
                   )
//# 3381 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 9950 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3386 "../../../src/fsharp/pars.fsy"
                             let mMatch = (rhs parseState 1)
                             let mWith, (clauses, mLast) = _3 
                             let spBind = DebugPointAtBinding(unionRanges mMatch mWith) 
                             SynExpr.MatchBang (spBind, _2, clauses, unionRanges mMatch mLast) 
                   )
//# 3386 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 9965 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3392 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileMatch())
                             // Produce approximate expression during error recovery 
                             exprFromParseError _2 
                   )
//# 3392 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 9979 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3397 "../../../src/fsharp/pars.fsy"
                             let mTry = (rhs parseState 1)
                             let spTry = DebugPointAtTry.Yes mTry
                             let mWith, (clauses, mLast) = _3 
                             let spWith = DebugPointAtWith.Yes mWith
                             let mTryToWith = unionRanges mTry mWith 
                             let mWithToLast = unionRanges mWith mLast 
                             let mTryToLast = unionRanges mTry mLast
                             SynExpr.TryWith (_2, mTryToWith, clauses, mWithToLast, mTryToLast, spTry, spWith) 
                   )
//# 3397 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 9998 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3407 "../../../src/fsharp/pars.fsy"
                             // Produce approximate expression during error recovery 
                             // Include any expressions to make sure they gets type checked in case that generates useful results for intellisense 
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileTry())
                             exprFromParseError _2 
                   )
//# 3407 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10013 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3413 "../../../src/fsharp/pars.fsy"
                             let mTry = rhs parseState 1 
                             let spTry = DebugPointAtTry.Yes mTry
                             let spFinally = DebugPointAtFinally.Yes (rhs parseState 3) 
                             let mTryToLast = unionRanges mTry _4.Range 
                             SynExpr.TryFinally (_2, _4, mTryToLast, spTry, spFinally) 
                   )
//# 3413 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10029 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3420 "../../../src/fsharp/pars.fsy"
                             let mIf = (rhs parseState 1)
                             _3 _2 mIf 
                   )
//# 3420 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10042 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3424 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsIncompleteIf()) 
                             // Produce an approximate expression during error recovery. 
                             // Include expressions to make sure they get type checked in case that generates useful results for intellisense. 
                             // Generate a throwAway for the expression so it isn't forced to have a type 'bool' 
                             // from the context it is used in. 
                             exprFromParseError _2 
                   )
//# 3424 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10059 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3432 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsIncompleteIf())
                             // Produce an approximate expression during error recovery. There can still be value in doing this even
                             // for this pathological case.
                             let m = rhs parseState 1
                             let mEnd = m.EndRange
                             let spIfToThen = DebugPointAtBinding mEnd
                             exprFromParseError (SynExpr.IfThenElse (arbExpr("ifGuard1", mEnd), arbExpr("thenBody1", mEnd), None, spIfToThen, true, m, m)) 
                   )
//# 3432 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10076 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3441 "../../../src/fsharp/pars.fsy"
                             SynExpr.Lazy (_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 3441 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10087 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3444 "../../../src/fsharp/pars.fsy"
                             SynExpr.Assert (_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 3444 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10098 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3447 "../../../src/fsharp/pars.fsy"
                             raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsAssertIsNotFirstClassValue()) 
                   )
//# 3447 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10108 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3450 "../../../src/fsharp/pars.fsy"
                             SynExpr.Lazy (_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 3450 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10119 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3453 "../../../src/fsharp/pars.fsy"
                             SynExpr.Assert (_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 3453 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10130 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3456 "../../../src/fsharp/pars.fsy"
                             raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsAssertIsNotFirstClassValue()) 
                   )
//# 3456 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10140 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3459 "../../../src/fsharp/pars.fsy"
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = DebugPointAtWhile.Yes mWhileHeader 
                             let mWhileAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.While (spWhile, _2, _4, mWhileAll) 
                   )
//# 3459 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10157 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3465 "../../../src/fsharp/pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWhile())
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = DebugPointAtWhile.Yes mWhileHeader 
                             let mWhileAll = unionRanges (rhs parseState 1) _4.Range
                             exprFromParseError (SynExpr.While (spWhile, _2, _4, mWhileAll)) 
                   )
//# 3465 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10175 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3472 "../../../src/fsharp/pars.fsy"
                             // silent recovery 
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = DebugPointAtWhile.Yes mWhileHeader 
                             let mWhileBodyArb = unionRanges (rhs parseState 4) (rhs parseState 5)
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 5)
                             SynExpr.While (spWhile, _2, arbExpr("whileBody1", mWhileBodyArb), mWhileAll) 
                   )
//# 3472 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10193 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3480 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsWhileDoExpected())
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = DebugPointAtWhile.Yes mWhileHeader 
                             let mWhileBodyArb = rhs parseState 3
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 3)
                             exprFromParseError (SynExpr.While (spWhile, _2, arbExpr("whileBody2", mWhileBodyArb), mWhileAll))  
                   )
//# 3480 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10210 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3488 "../../../src/fsharp/pars.fsy"
                             if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWhile())
                             arbExpr("whileLoop1", rhs parseState 1)  
                   )
//# 3488 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10222 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3492 "../../../src/fsharp/pars.fsy"
                             //silent recovery
                             let mWhileHeader = rhs parseState 1
                             let spWhile = DebugPointAtWhile.Yes mWhileHeader 
                             let mWhileBodyArb = rhs parseState 3
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 3)
                             exprFromParseError (SynExpr.While (spWhile, arbExpr("whileGuard1", mWhileHeader), arbExpr("whileBody3", mWhileBodyArb), mWhileAll))  
                   )
//# 3492 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10238 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3500 "../../../src/fsharp/pars.fsy"
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, _) = _2 
                             SynExpr.ForEach (spBind, SeqExprOnly false, true, a, b, _4, unionRanges (rhs parseState 1) _4.Range) 
                   )
//# 3500 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10255 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3506 "../../../src/fsharp/pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, _) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.ForEach (spBind, SeqExprOnly false, true, a, b, _4, mForLoopAll) 
                   )
//# 3506 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10274 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3514 "../../../src/fsharp/pars.fsy"
                             // Silent recovery
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, _) = _2 
                             let mForLoopBodyArb = rhs parseState 5
                             let mForLoopAll = rhs2 parseState 1 5
                             SynExpr.ForEach (spBind, SeqExprOnly false, true, a, b, arbExpr("forLoopBody2a", mForLoopBodyArb), mForLoopAll) 
                   )
//# 3514 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10293 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3523 "../../../src/fsharp/pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, _) = _2 
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             SynExpr.ForEach (spBind, SeqExprOnly false, true, a, b, arbExpr("forLoopBody2", mForLoopBodyArb), mForLoopAll) 
                   )
//# 3523 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10312 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3532 "../../../src/fsharp/pars.fsy"
                             let (a, b, ok) = _2 
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsForDoExpected())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             SynExpr.ForEach (spBind, SeqExprOnly false, true, a, b, arbExpr("forLoopBody1", mForLoopBodyArb), mForLoopAll) 
                   )
//# 3532 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10330 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3541 "../../../src/fsharp/pars.fsy"
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, c, d) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.For (spBind, a, b, c, d, _4, mForLoopAll) 
                   )
//# 3541 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10348 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3548 "../../../src/fsharp/pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             // Still produce an expression
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, c, d) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             exprFromParseError (SynExpr.For (spBind, a, b, c, d, _4, mForLoopAll)) 
                   )
//# 3548 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10368 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3557 "../../../src/fsharp/pars.fsy"
                             // silent recovery 
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, c, d) = _2 
                             let mForLoopBodyArb = rhs parseState 5
                             let mForLoopAll = rhs2 parseState 1 5
                             SynExpr.For (spBind, a, b, c, d, arbExpr("declExpr11", mForLoopBodyArb), mForLoopAll) 
                   )
//# 3557 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10387 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3566 "../../../src/fsharp/pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, c, d) = _2 
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             exprFromParseError (SynExpr.For (spBind, a, b, c, d, arbExpr("declExpr11", mForLoopBodyArb), mForLoopAll)) 
                   )
//# 3566 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10406 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3575 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, c, d) = _2 
                             let mForLoopBodyArb = (rhs parseState 2).EndRange
                             let mForLoopAll = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.For (spBind, a, b, c, d, arbExpr("declExpr11", mForLoopBodyArb), mForLoopAll)) 
                   )
//# 3575 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10424 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3585 "../../../src/fsharp/pars.fsy"
                             // silent recovery 
                             let mForLoopHeader = rhs2 parseState 1 2
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             SynExpr.For (spBind, mkSynId mForLoopHeader "_loopVar", arbExpr("startLoopRange1", mForLoopHeader), true, arbExpr("endLoopRange1", rhs parseState 3), _4, mForLoopAll) 
                   )
//# 3585 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10441 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3592 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsIdentifierExpected())
                             arbExpr("declExpr12", (rhs parseState 1)) 
                   )
//# 3592 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10453 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3596 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsInOrEqualExpected())
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let mForLoopBodyArb = rhs parseState 4
                             let mForLoopAll = rhs2 parseState 1 4
                             SynExpr.ForEach (spBind, SeqExprOnly false, true, _2, arbExpr("forLoopCollection", mForLoopHeader), arbExpr("forLoopBody3", mForLoopBodyArb), mForLoopAll) 
                   )
//# 3596 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10470 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3604 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let mForLoopBodyArb = (rhs parseState 2).EndRange
                             let mForLoopAll = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.ForEach (spBind, SeqExprOnly false, true, _2, arbExpr("forLoopCollection", mForLoopHeader), arbExpr("forLoopBody3", mForLoopBodyArb), mForLoopAll)) 
                   )
//# 3604 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10487 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3612 "../../../src/fsharp/pars.fsy"
                            SynExpr.YieldOrReturn ((_1, not _1), _2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 3612 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10499 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3615 "../../../src/fsharp/pars.fsy"
                            SynExpr.YieldOrReturnFrom ((_1, not _1), _2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 3615 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10511 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3618 "../../../src/fsharp/pars.fsy"
                            let mYieldAll = rhs parseState 1
                            SynExpr.YieldOrReturn ((_1, not _1), arbExpr("yield", mYieldAll), mYieldAll) 
                   )
//# 3618 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10524 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3622 "../../../src/fsharp/pars.fsy"
                            let mYieldAll = rhs parseState 1
                            SynExpr.YieldOrReturnFrom ((_1, not _1), arbExpr("yield!", mYieldAll), mYieldAll) 
                   )
//# 3622 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10537 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreBinders)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3626 "../../../src/fsharp/pars.fsy"
                            let spBind = DebugPointAtBinding(rhs2 parseState 1 5)
                            let m = unionRanges (rhs parseState 1) _8.Range
                            SynExpr.LetOrUseBang(spBind, (_1 = "use"), true, _2, _4, _7, _8, m) 
                   )
//# 3626 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10555 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreBinders)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3631 "../../../src/fsharp/pars.fsy"
                            _5 (if _1 = "use" then "use!" else "let!") (rhs parseState 1)  // report unterminated error 
                            let spBind = DebugPointAtBinding(unionRanges (rhs parseState 1) _4.Range)
                            let m = unionRanges (rhs parseState 1) _8.Range
                            SynExpr.LetOrUseBang(spBind, (_1 = "use"), true, _2, _4, _7, _8, m) 
                   )
//# 3631 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10575 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3637 "../../../src/fsharp/pars.fsy"
                            // error recovery that allows intellisense when writing incomplete computation expressions 
                            let spBind = DebugPointAtBinding(unionRanges (rhs parseState 1) _4.Range) 
                            let mAll = unionRanges (rhs parseState 1) (rhs parseState 7)
                            let m = _4.Range.EndRange // zero-width range
                            SynExpr.LetOrUseBang(spBind, (_1 = "use"), true, _2, _4, [], SynExpr.ImplicitZero m, mAll) 
                   )
//# 3637 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10594 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3644 "../../../src/fsharp/pars.fsy"
                            let spBind = NoDebugPointAtDoBinding
                            SynExpr.LetOrUseBang(spBind, false, true, SynPat.Const(SynConst.Unit, _2.Range), _2, [], _5, unionRanges (rhs parseState 1) _5.Range) 
                   )
//# 3644 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10608 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3648 "../../../src/fsharp/pars.fsy"
                            SynExpr.DoBang (_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 3648 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10620 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrowThenExprR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3651 "../../../src/fsharp/pars.fsy"
                            let spBind = DebugPointAtFor.Yes (rhs2 parseState 1 2)
                            let (a, b, _) = _2 in SynExpr.ForEach (spBind, SeqExprOnly true, true, a, b, _4, unionRanges (rhs parseState 1) _4.Range) 
                   )
//# 3651 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10634 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3655 "../../../src/fsharp/pars.fsy"
                            SynExpr.Fixed (_2, (unionRanges (rhs parseState 1) _2.Range)) 
                   )
//# 3655 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10645 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3658 "../../../src/fsharp/pars.fsy"
                            errorR(Error(FSComp.SR.parsArrowUseIsLimited(), lhs parseState))
                            SynExpr.YieldOrReturn ((true, true), _2, (unionRanges (rhs parseState 1) _2.Range)) 
                   )
//# 3658 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10657 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3662 "../../../src/fsharp/pars.fsy"
                            SynExpr.TypeTest (_1, _3, unionRanges _1.Range _3.Range) 
                   )
//# 3662 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10669 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3665 "../../../src/fsharp/pars.fsy"
                            SynExpr.Upcast (_1, _3, unionRanges _1.Range _3.Range) 
                   )
//# 3665 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10681 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3668 "../../../src/fsharp/pars.fsy"
                            SynExpr.Downcast (_1, _3, unionRanges _1.Range _3.Range) 
                   )
//# 3668 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10693 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3671 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 ":=" _3 
                   )
//# 3671 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10705 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3674 "../../../src/fsharp/pars.fsy"
                            mkSynAssign _1 _3 
                   )
//# 3674 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10717 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3677 "../../../src/fsharp/pars.fsy"
                            let exprs, commas = _1
                            SynExpr.Tuple (false, List.rev exprs, List.rev commas, (commas.Head, exprs) ||> unionRangeWithListBy (fun e -> e.Range) ) 
                   )
//# 3677 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10729 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3681 "../../../src/fsharp/pars.fsy"
                            SynExpr.JoinIn (_1, rhs parseState 2, _3, unionRanges _1.Range _3.Range) 
                   )
//# 3681 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10741 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3684 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "||" _3 
                   )
//# 3684 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10753 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3687 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
//# 3687 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10766 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3690 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "or" _3 
                   )
//# 3690 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10778 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3693 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "&" _3 
                   )
//# 3693 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10790 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3696 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "&&" _3 
                   )
//# 3696 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10802 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3699 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
//# 3699 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10815 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3702 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "=" _3 
                   )
//# 3702 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10827 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3705 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
//# 3705 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10840 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3708 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "$" _3 
                   )
//# 3708 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10852 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3711 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "<" _3 
                   )
//# 3711 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10865 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3714 "../../../src/fsharp/pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("<"))  
                            exprFromParseError (mkSynInfix (rhs parseState 2) _1 "<" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3714 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10879 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3718 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 ">" _3 
                   )
//# 3718 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10892 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3721 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
//# 3721 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10905 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3724 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
//# 3724 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10918 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3727 "../../../src/fsharp/pars.fsy"
                            let tupExpr = SynExpr.Tuple (false, [_1;_3], [rhs parseState 2], unionRanges _1.Range _3.Range)
                            SynExpr.App (ExprAtomicFlag.NonAtomic, true, mkSynIdGet (rhs parseState 2) opNameCons, tupExpr, unionRanges _1.Range _3.Range) 
                   )
//# 3727 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10931 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3731 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
//# 3731 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10944 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3734 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "-" _3 
                   )
//# 3734 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10956 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3737 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "*" _3 
                   )
//# 3737 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10968 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3740 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
//# 3740 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10981 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3743 "../../../src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
//# 3743 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 10994 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3746 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("in")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "@in" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3746 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11006 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3750 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("||")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "||" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3750 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11018 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3754 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3754 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11031 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3758 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("or")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "or" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3758 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11043 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3762 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("&")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "&" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3762 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11055 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3766 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("&&")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "&&" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3766 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11067 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3770 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3770 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11080 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3774 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("=")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "=" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3774 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11092 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3778 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3778 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11105 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3782 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("$")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "$" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3782 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11117 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3786 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("<")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "<" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3786 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11130 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3790 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(">")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 ">" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3790 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11143 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3794 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3794 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11156 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3798 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3798 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11169 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3802 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("::")) 
                            let tupExpr = SynExpr.Tuple (false, [_1;(arbExpr("declExprInfix", (rhs parseState 3).StartRange))], [rhs parseState 2], unionRanges _1.Range (rhs parseState 3).StartRange)
                            SynExpr.App (ExprAtomicFlag.NonAtomic, true, mkSynIdGet (rhs parseState 2) opNameCons, tupExpr, unionRanges _1.Range (rhs parseState 3).StartRange) 
                   )
//# 3802 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11182 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3807 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3807 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11195 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3811 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("-")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "-" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3811 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11207 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3815 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("*")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "*" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3815 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11219 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3819 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3819 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11232 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3823 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3823 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11245 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3826 "../../../src/fsharp/pars.fsy"
                                                                  _1 
                   )
//# 3826 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11256 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3830 "../../../src/fsharp/pars.fsy"
                             let con = SynConst.String (_1, rhs parseState 1)
                             let arg2 = SynExpr.Const (con, con.Range (rhs parseState 1)) 
                             arg2 
                   )
//# 3830 "../../../src/fsharp/pars.fsy"
                 : 'dynamicArg));
//# 11269 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3835 "../../../src/fsharp/pars.fsy"
                             _2 
                   )
//# 3835 "../../../src/fsharp/pars.fsy"
                 : 'dynamicArg));
//# 11281 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3839 "../../../src/fsharp/pars.fsy"
                             rhs parseState 1, _2 
                   )
//# 3839 "../../../src/fsharp/pars.fsy"
                 : 'withClauses));
//# 11292 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3842 "../../../src/fsharp/pars.fsy"
                             rhs parseState 1, _2 
                   )
//# 3842 "../../../src/fsharp/pars.fsy"
                 : 'withClauses));
//# 11303 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3845 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWith())
                             rhs parseState 1, _2 
                   )
//# 3845 "../../../src/fsharp/pars.fsy"
                 : 'withClauses));
//# 11316 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3850 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 3850 "../../../src/fsharp/pars.fsy"
                 : 'withPatternClauses));
//# 11327 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3853 "../../../src/fsharp/pars.fsy"
                             _2 
                   )
//# 3853 "../../../src/fsharp/pars.fsy"
                 : 'withPatternClauses));
//# 11338 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3856 "../../../src/fsharp/pars.fsy"
                             // silent recovery 
                             let mLast = rhs parseState 1
                             [], mLast 
                   )
//# 3856 "../../../src/fsharp/pars.fsy"
                 : 'withPatternClauses));
//# 11350 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3861 "../../../src/fsharp/pars.fsy"
                             // silent recovery 
                             let mLast = rhs parseState 1
                             [], mLast 
                   )
//# 3861 "../../../src/fsharp/pars.fsy"
                 : 'withPatternClauses));
//# 11362 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternGuard)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3868 "../../../src/fsharp/pars.fsy"
                             _1, _2, rhs parseState 1 
                   )
//# 3868 "../../../src/fsharp/pars.fsy"
                 : 'patternAndGuard));
//# 11374 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3872 "../../../src/fsharp/pars.fsy"
                            let pat, guard, patm = _1 
                            let mLast = _2.Range 
                            [Clause(pat, guard, _2, patm, DebugPointForTarget.Yes)], mLast  
                   )
//# 3872 "../../../src/fsharp/pars.fsy"
                 : 'patternClauses));
//# 11388 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3877 "../../../src/fsharp/pars.fsy"
                            let pat, guard, patm = _1 
                            let clauses, mLast = _4 
                            (Clause(pat, guard, _2, patm, DebugPointForTarget.Yes) :: clauses), mLast 
                   )
//# 3877 "../../../src/fsharp/pars.fsy"
                 : 'patternClauses));
//# 11403 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3882 "../../../src/fsharp/pars.fsy"
                            let pat, guard, patm = _1 
                            let mLast = rhs parseState 3 
                            // silent recovery 
                            [Clause(pat, guard, _2, patm, DebugPointForTarget.Yes)], mLast  
                   )
//# 3882 "../../../src/fsharp/pars.fsy"
                 : 'patternClauses));
//# 11418 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3888 "../../../src/fsharp/pars.fsy"
                            let pat, guard, patm = _1 
                            let mLast = _2.Range 
                            // silent recovery 
                            [Clause(pat, guard, _2, patm, DebugPointForTarget.Yes)], mLast 
                   )
//# 3888 "../../../src/fsharp/pars.fsy"
                 : 'patternClauses));
//# 11433 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3894 "../../../src/fsharp/pars.fsy"
                            let pat, guard, patm = _1 
                            let mLast = rhs parseState 2
                            // silent recovery 
                            [Clause(pat, guard, SynExpr.Const (SynConst.Unit, mLast.EndRange), patm, DebugPointForTarget.Yes)], mLast 
                   )
//# 3894 "../../../src/fsharp/pars.fsy"
                 : 'patternClauses));
//# 11447 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3901 "../../../src/fsharp/pars.fsy"
                            Some _2 
                   )
//# 3901 "../../../src/fsharp/pars.fsy"
                 : 'patternGuard));
//# 11458 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3904 "../../../src/fsharp/pars.fsy"
                            None 
                   )
//# 3904 "../../../src/fsharp/pars.fsy"
                 : 'patternGuard));
//# 11468 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3908 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 3908 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11479 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprThen)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprElifs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3912 "../../../src/fsharp/pars.fsy"
                             let exprThen, mThen = _1 
                             (fun exprGuard mIf -> 
                                 let mIfToThen = unionRanges mIf mThen
                                 let lastBranch : SynExpr = match _2 with None -> exprThen | Some e -> e
                                 let mIfToEndOfLastBranch = unionRanges mIf lastBranch.Range
                                 let spIfToThen = DebugPointAtBinding(mIfToThen)
                                 SynExpr.IfThenElse (exprGuard, exprThen, _2, spIfToThen, false, mIfToThen, mIfToEndOfLastBranch)) 
                   )
//# 3912 "../../../src/fsharp/pars.fsy"
                 : 'ifExprCases));
//# 11497 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3922 "../../../src/fsharp/pars.fsy"
                             _2, rhs parseState 1 
                   )
//# 3922 "../../../src/fsharp/pars.fsy"
                 : 'ifExprThen));
//# 11508 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3925 "../../../src/fsharp/pars.fsy"
                             _3, rhs parseState 1 
                   )
//# 3925 "../../../src/fsharp/pars.fsy"
                 : 'ifExprThen));
//# 11520 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3928 "../../../src/fsharp/pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileThen())
                             exprFromParseError _3, rhs parseState 1 
                   )
//# 3928 "../../../src/fsharp/pars.fsy"
                 : 'ifExprThen));
//# 11533 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3933 "../../../src/fsharp/pars.fsy"
                             None 
                   )
//# 3933 "../../../src/fsharp/pars.fsy"
                 : 'ifExprElifs));
//# 11543 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3936 "../../../src/fsharp/pars.fsy"
                             Some _2 
                   )
//# 3936 "../../../src/fsharp/pars.fsy"
                 : 'ifExprElifs));
//# 11554 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3939 "../../../src/fsharp/pars.fsy"
                             Some _3 
                   )
//# 3939 "../../../src/fsharp/pars.fsy"
                 : 'ifExprElifs));
//# 11566 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3942 "../../../src/fsharp/pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileElse())
                             Some (exprFromParseError _3) 
                   )
//# 3942 "../../../src/fsharp/pars.fsy"
                 : 'ifExprElifs));
//# 11579 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3946 "../../../src/fsharp/pars.fsy"
                             let mElif = rhs parseState 1 
                             Some (_3 _2 mElif) 
                   )
//# 3946 "../../../src/fsharp/pars.fsy"
                 : 'ifExprElifs));
//# 11592 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3950 "../../../src/fsharp/pars.fsy"
                             Some (exprFromParseError _2) 
                   )
//# 3950 "../../../src/fsharp/pars.fsy"
                 : 'ifExprElifs));
//# 11604 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3954 "../../../src/fsharp/pars.fsy"
                             let exprs, commas = _1 in (_3 :: exprs), ((rhs parseState 2) :: commas) 
                   )
//# 3954 "../../../src/fsharp/pars.fsy"
                 : 'tupleExpr));
//# 11616 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3957 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let exprs, commas = _1     
                             let zeroWidthAtNextToken = (rhs parseState 3).StartRange
                             ((arbExpr("tupleExpr1", zeroWidthAtNextToken)) :: exprs), (rhs parseState 2) :: commas 
                   )
//# 3957 "../../../src/fsharp/pars.fsy"
                 : 'tupleExpr));
//# 11631 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3963 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let zeroWidthAtNextToken = (rhs parseState 3).StartRange 
                             ((arbExpr("tupleExpr2", zeroWidthAtNextToken)) :: [_1]), [rhs parseState 2] 
                   )
//# 3963 "../../../src/fsharp/pars.fsy"
                 : 'tupleExpr));
//# 11645 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3968 "../../../src/fsharp/pars.fsy"
                             [_3 ; _1], [rhs parseState 2] 
                   )
//# 3968 "../../../src/fsharp/pars.fsy"
                 : 'tupleExpr));
//# 11657 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3972 "../../../src/fsharp/pars.fsy"
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) "~-" _2 
                   )
//# 3972 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11668 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3975 "../../../src/fsharp/pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"+(_1)) _2 
                   )
//# 3975 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11681 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3979 "../../../src/fsharp/pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"+(_1)) _2 
                   )
//# 3979 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11694 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3983 "../../../src/fsharp/pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"+(_1)) _2 
                   )
//# 3983 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11707 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3987 "../../../src/fsharp/pars.fsy"
                             SynExpr.AddressOf (true, _2, rhs parseState 1, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 3987 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11718 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3990 "../../../src/fsharp/pars.fsy"
                             SynExpr.AddressOf (false, _2, rhs parseState 1, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 3990 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11729 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3993 "../../../src/fsharp/pars.fsy"
                             SynExpr.New (false, _2, _4, unionRanges (rhs parseState 1) _4.Range) 
                   )
//# 3993 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11742 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3996 "../../../src/fsharp/pars.fsy"
                             SynExpr.New (false, _2, arbExpr("minusExpr", (rhs parseState 4)), unionRanges (rhs parseState 1) (_2).Range) 
                   )
//# 3996 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11754 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3999 "../../../src/fsharp/pars.fsy"
                             arbExpr("minusExpr2", (rhs parseState 1)) 
                   )
//# 3999 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11764 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4002 "../../../src/fsharp/pars.fsy"
                             SynExpr.InferredUpcast (_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 4002 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11775 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4005 "../../../src/fsharp/pars.fsy"
                             SynExpr.InferredDowncast (_2, unionRanges (rhs parseState 1) _2.Range)
                   )
//# 4005 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11786 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4008 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 4008 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11797 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4012 "../../../src/fsharp/pars.fsy"
                             SynExpr.App (ExprAtomicFlag.NonAtomic, false, _1, _2, unionRanges _1.Range _2.Range)  
                   )
//# 4012 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11809 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4015 "../../../src/fsharp/pars.fsy"
                             let arg, _ = _1 
                             arg 
                   )
//# 4015 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11821 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4020 "../../../src/fsharp/pars.fsy"
                             let arg2, hpa2 = _2 
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt arg2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             if hpa2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessiveArgsShouldBeSpacedOrTupled())
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) arg2.Range) ("~"+(_1)) arg2 
                   )
//# 4020 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11836 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4026 "../../../src/fsharp/pars.fsy"
                             let arg, hpa = _1 
                             if hpa then reportParseErrorAt arg.Range (FSComp.SR.parsSuccessiveArgsShouldBeSpacedOrTupled())
                             arg 
                   )
//# 4026 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 11849 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4032 "../../../src/fsharp/pars.fsy"
                             let arg1, _ = _1 
                             let arg2, _ = _3 
                             SynExpr.App (ExprAtomicFlag.Atomic, false, arg1, arg2, unionRanges arg1.Range arg2.Range), true  
                   )
//# 4032 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr * bool));
//# 11863 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4037 "../../../src/fsharp/pars.fsy"
                             let arg1, _ = _1 
                             let arg2, _ = _3 
                             SynExpr.App (ExprAtomicFlag.Atomic, false, arg1, arg2, unionRanges arg1.Range arg2.Range), true  
                   )
//# 4037 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr * bool));
//# 11877 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * bool     * SyntaxTree.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4042 "../../../src/fsharp/pars.fsy"
                             let arg1, _ = _1 
                             let mLessThan, mGreaterThan, _, args, commas, mTypeArgs = _3
                             let mWholeExpr = unionRanges arg1.Range mTypeArgs
                             SynExpr.TypeApp (arg1, mLessThan, args, commas, mGreaterThan, mTypeArgs, mWholeExpr), false 
                   )
//# 4042 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr * bool));
//# 11892 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4048 "../../../src/fsharp/pars.fsy"
                             let arg2, hpa2 = _2 
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt arg2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             mkSynPrefixPrim (rhs parseState 1) (unionRanges (rhs parseState 1) arg2.Range) _1 arg2, hpa2 
                   )
//# 4048 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr * bool));
//# 11906 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4053 "../../../src/fsharp/pars.fsy"
                             let arg1, hpa1 = _1 
                             _3 arg1 (lhs parseState) (rhs parseState 2), hpa1 
                   )
//# 4053 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr * bool));
//# 11919 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4057 "../../../src/fsharp/pars.fsy"
                             let arg1 = SynExpr.Ident (ident("base", rhs parseState 1))
                             _3 arg1 (lhs parseState) (rhs parseState 2), false 
                   )
//# 4057 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr * bool));
//# 11931 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4061 "../../../src/fsharp/pars.fsy"
                             SynExpr.LongIdent (true, LongIdentWithDots([_2], []), None, rhs parseState 2), false 
                   )
//# 4061 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr * bool));
//# 11942 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'dynamicArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4064 "../../../src/fsharp/pars.fsy"
                             let arg1, hpa1 = _1
                             mkSynInfix (rhs parseState 2) arg1 "?" _3, hpa1 
                   )
//# 4064 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr * bool));
//# 11955 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4068 "../../../src/fsharp/pars.fsy"
                             SynExpr.Ident (ident(MangledGlobalName, rhs parseState 1)), false 
                   )
//# 4068 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr * bool));
//# 11965 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4071 "../../../src/fsharp/pars.fsy"
                             _1, false 
                   )
//# 4071 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr * bool));
//# 11976 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4074 "../../../src/fsharp/pars.fsy"
                             _2 (lhs parseState) false, false 
                   )
//# 4074 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr * bool));
//# 11987 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4077 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()) 
                             exprFromParseError (_2 (rhs2 parseState 1 2) false), false 
                   )
//# 4077 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr * bool));
//# 12000 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4081 "../../../src/fsharp/pars.fsy"
                             // silent recovery 
                             SynExpr.ArrayOrList (false, [ ], lhs parseState), false  
                   )
//# 4081 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr * bool));
//# 12011 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4085 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()) 
                             // silent recovery 
                             exprFromParseError (SynExpr.ArrayOrList (false, [ ], rhs parseState 1)), false  
                   )
//# 4085 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr * bool));
//# 12024 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4090 "../../../src/fsharp/pars.fsy"
                             let exprs, commas = _3 in SynExpr.Tuple (true, List.rev exprs, List.rev commas, (commas.Head, exprs) ||> unionRangeWithListBy (fun e -> e.Range) ), false 
                   )
//# 4090 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr * bool));
//# 12036 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4093 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedBracket()); 
                             let exprs, commas = _3 in SynExpr.Tuple (true, List.rev exprs, List.rev commas, (commas.Head, exprs) ||> unionRangeWithListBy (fun e -> e.Range) ), false 
                   )
//# 4093 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr * bool));
//# 12049 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4097 "../../../src/fsharp/pars.fsy"
                             _1, false 
                   )
//# 4097 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr * bool));
//# 12060 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identOrOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4101 "../../../src/fsharp/pars.fsy"
                             let idm = rhs parseState 1 
                             (fun e lhsm dotm -> mkSynDot dotm lhsm e _1) 
                   )
//# 4101 "../../../src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12072 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4105 "../../../src/fsharp/pars.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt (rhs parseState 3) (FSComp.SR.nrGlobalUsedOnlyAsFirstName()) 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm.Start dotm.End // previous lhsm is wrong after 'recover'
                                 mkSynDotMissing dotm fixedLhsm e) 
                   )
//# 4105 "../../../src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12085 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4111 "../../../src/fsharp/pars.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt dotm (FSComp.SR.parsMissingQualificationAfterDot()) 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm.Start dotm.End // previous lhsm is wrong after 'recover'
                                 mkSynDotMissing dotm fixedLhsm e) 
                   )
//# 4111 "../../../src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12098 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4116 "../../../src/fsharp/pars.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt dotm (FSComp.SR.parsMissingQualificationAfterDot()) 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm.Start dotm.End // previous lhsm is wrong after 'recover'
                                 // Include 'e' in the returned expression but throw it away
                                 SynExpr.DiscardAfterMissingQualificationAfterDot (e, fixedLhsm)) 
                   )
//# 4116 "../../../src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12113 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4122 "../../../src/fsharp/pars.fsy"
                             (fun e lhsm dotm -> 
                                 libraryOnlyError(lhs parseState)
                                 SynExpr.LibraryOnlyUnionCaseFieldGet (e, mkSynCaseName lhsm opNameCons, (fst _5), lhsm)) 
                   )
//# 4122 "../../../src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12127 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4127 "../../../src/fsharp/pars.fsy"
                             (fun e lhsm dotm -> 
                                 mlCompatWarning (FSComp.SR.parsParenFormIsForML()) (lhs parseState) 
                                 mkSynDotParenGet lhsm dotm e _2) 
                   )
//# 4127 "../../../src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12141 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4132 "../../../src/fsharp/pars.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackGet lhsm dotm e _2 false) 
                   )
//# 4132 "../../../src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12152 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4135 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()) 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackGet lhsm dotm e _2 false)) 
                   )
//# 4135 "../../../src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12165 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRangeSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4139 "../../../src/fsharp/pars.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackSeqSliceGet lhsm dotm e _2) 
                   )
//# 4139 "../../../src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12176 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRangeSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4142 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()) 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackSeqSliceGet lhsm dotm e _2)) 
                   )
//# 4142 "../../../src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12189 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4146 "../../../src/fsharp/pars.fsy"
                             let mArg = rhs2 parseState 1 3
                             (fun e lhsm dotm -> mkSynDotBrackGet lhsm dotm e (arbExpr("indexerExpr1", mArg)) false) 
                   )
//# 4146 "../../../src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12200 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4150 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket())
                             let mArg = (rhs parseState 1).EndRange 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackGet lhsm dotm e (arbExpr("indexerExpr2", mArg)) false)) 
                   )
//# 4150 "../../../src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12213 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRangeSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4156 "../../../src/fsharp/pars.fsy"
                                                                            _1 :: _3 
                   )
//# 4156 "../../../src/fsharp/pars.fsy"
                 : 'optRangeSeqExpr));
//# 12225 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4158 "../../../src/fsharp/pars.fsy"
                                    [_1] 
                   )
//# 4158 "../../../src/fsharp/pars.fsy"
                 : 'optRangeSeqExpr));
//# 12236 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeDeclExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeDeclExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4162 "../../../src/fsharp/pars.fsy"
                             SynIndexerArg.Two(
                               mkSynOptionalExpr (rhs parseState 1) (Some (fst _1)),
                               (snd _1),
                               mkSynOptionalExpr (rhs parseState 3) (Some (fst _3)),
                               (snd _3),
                               (rhs parseState 1),
                               (rhs parseState 3)) 
                   )
//# 4162 "../../../src/fsharp/pars.fsy"
                 : 'optRange));
//# 12254 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeDeclExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4171 "../../../src/fsharp/pars.fsy"
                             SynIndexerArg.Two(
                               mkSynOptionalExpr (rhs parseState 1) (Some (fst _1)),
                               (snd _1),
                               mkSynOptionalExpr (rhs parseState 2) None,
                               false,
                               (rhs parseState 1),
                               (rhs parseState 2)) 
                   )
//# 4171 "../../../src/fsharp/pars.fsy"
                 : 'optRange));
//# 12271 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeDeclExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4180 "../../../src/fsharp/pars.fsy"
                             SynIndexerArg.Two(
                               mkSynOptionalExpr (rhs parseState 1) None,
                               false,
                               mkSynOptionalExpr (rhs parseState 2) (Some (fst _2)),
                               (snd _2),
                               (rhs parseState 2),
                               (rhs parseState 1)) 
                   )
//# 4180 "../../../src/fsharp/pars.fsy"
                 : 'optRange));
//# 12288 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4189 "../../../src/fsharp/pars.fsy"
                             SynIndexerArg.Two(
                               mkSynOptionalExpr (rhs parseState 1) None,
                               false,
                               (mkSynOptionalExpr (rhs parseState 1) None),
                               false,
                               (rhs parseState 1),
                               (rhs parseState 1)) 
                   )
//# 4189 "../../../src/fsharp/pars.fsy"
                 : 'optRange));
//# 12304 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeDeclExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4198 "../../../src/fsharp/pars.fsy"
                             SynIndexerArg.One((fst _1), (snd _1), (rhs parseState 1)) 
                   )
//# 4198 "../../../src/fsharp/pars.fsy"
                 : 'optRange));
//# 12315 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4202 "../../../src/fsharp/pars.fsy"
                           _1, false 
                   )
//# 4202 "../../../src/fsharp/pars.fsy"
                 : 'rangeDeclExpr));
//# 12326 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4205 "../../../src/fsharp/pars.fsy"
                           if not (parseState.LexBuffer.SupportsFeature LanguageFeature.FromEndSlicing) then 
                             raiseParseErrorAt (rhs parseState 1) (FSComp.SR.fromEndSlicingRequiresVFive())
                           if _1 <> "^" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInvalidPrefixOperator())
                           _2, true 
                   )
//# 4205 "../../../src/fsharp/pars.fsy"
                 : 'rangeDeclExpr));
//# 12341 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4213 "../../../src/fsharp/pars.fsy"
                             SynExpr.Const (_1, _1.Range (lhs parseState)) 
                   )
//# 4213 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 12352 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4216 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 4216 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 12363 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4219 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 4219 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 12374 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceBarExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4222 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 4222 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 12385 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interpolatedString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4225 "../../../src/fsharp/pars.fsy"
                             SynExpr.InterpolatedString(_1, rhs parseState 1) 
                   )
//# 4225 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 12396 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4228 "../../../src/fsharp/pars.fsy"
                             SynExpr.Null (lhs parseState) 
                   )
//# 4228 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 12406 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4231 "../../../src/fsharp/pars.fsy"
                             SynExpr.Const (SynConst.Bool false, lhs parseState) 
                   )
//# 4231 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 12416 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4234 "../../../src/fsharp/pars.fsy"
                             SynExpr.Const (SynConst.Bool true, lhs parseState) 
                   )
//# 4234 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 12426 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'quoteExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4237 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 4237 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 12437 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4240 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 4240 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 12448 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'beginEndExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4243 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 4243 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynExpr));
//# 12459 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4247 "../../../src/fsharp/pars.fsy"
                             SynExpr.Paren (_2, rhs parseState 1, Some(rhs parseState 3), rhs2 parseState 1 3) 
                   )
//# 4247 "../../../src/fsharp/pars.fsy"
                 : 'beginEndExpr));
//# 12470 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4250 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBegin()); exprFromParseError _2 
                   )
//# 4250 "../../../src/fsharp/pars.fsy"
                 : 'beginEndExpr));
//# 12482 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4253 "../../../src/fsharp/pars.fsy"
                             (* silent recovery *) arbExpr("beginEndExpr", (lhs parseState))  
                   )
//# 4253 "../../../src/fsharp/pars.fsy"
                 : 'beginEndExpr));
//# 12492 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4256 "../../../src/fsharp/pars.fsy"
                             mkSynUnit (lhs parseState) 
                   )
//# 4256 "../../../src/fsharp/pars.fsy"
                 : 'beginEndExpr));
//# 12502 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4260 "../../../src/fsharp/pars.fsy"
                             if _1 <> _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMismatchedQuote(fst _1))
                             (SynExpr.Quote (mkSynIdGet (lhs parseState) (CompileOpName (fst _1)), snd _1, _2, false, lhs parseState)) 
                   )
//# 4260 "../../../src/fsharp/pars.fsy"
                 : 'quoteExpr));
//# 12516 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4264 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatched(fst _1))  
                             let mExpr = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.Quote (mkSynIdGet (lhs parseState) (CompileOpName (fst _1)), snd _1, _2, false, mExpr))  
                   )
//# 4264 "../../../src/fsharp/pars.fsy"
                 : 'quoteExpr));
//# 12531 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4269 "../../../src/fsharp/pars.fsy"
                             (* silent recovery *) SynExpr.Quote (mkSynIdGet (lhs parseState) (CompileOpName (fst _1)), snd _1, arbExpr("quoteExpr", (rhs parseState 2)), false, lhs parseState)  
                   )
//# 4269 "../../../src/fsharp/pars.fsy"
                 : 'quoteExpr));
//# 12543 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4272 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatched(fst _1))
                             exprFromParseError (SynExpr.Quote (mkSynIdGet (lhs parseState) (CompileOpName (fst _1)), snd _1, arbExpr("quoteExpr2", (rhs parseState 1).EndRange), false, rhs parseState 1))  
                   )
//# 4272 "../../../src/fsharp/pars.fsy"
                 : 'quoteExpr));
//# 12556 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4277 "../../../src/fsharp/pars.fsy"
                              _2 (lhs parseState) true 
                   )
//# 4277 "../../../src/fsharp/pars.fsy"
                 : 'arrayExpr));
//# 12567 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4280 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracketBar()) 
                             exprFromParseError (_2 (rhs2 parseState 1 2) true) 
                   )
//# 4280 "../../../src/fsharp/pars.fsy"
                 : 'arrayExpr));
//# 12580 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4284 "../../../src/fsharp/pars.fsy"
                              (* silent recovery *) SynExpr.ArrayOrList (true, [ ], lhs parseState) 
                   )
//# 4284 "../../../src/fsharp/pars.fsy"
                 : 'arrayExpr));
//# 12590 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4287 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracketBar())  
                             (* silent recovery *) 
                             exprFromParseError (SynExpr.ArrayOrList (true, [ ], rhs parseState 1)) 
                   )
//# 4287 "../../../src/fsharp/pars.fsy"
                 : 'arrayExpr));
//# 12603 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4293 "../../../src/fsharp/pars.fsy"
                             SynExpr.Const (SynConst.Unit, (rhs2 parseState 1 2)) 
                   )
//# 4293 "../../../src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12614 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4296 "../../../src/fsharp/pars.fsy"
                             let m = rhs2 parseState 1 3
                             SynExpr.Paren (_2 m, rhs parseState 1, Some(rhs parseState 3), m) 
                   )
//# 4296 "../../../src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12627 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_other_than_rparen_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4300 "../../../src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).End
                             SynExpr.Paren (exprFromParseError (_2 lhsm), rhs parseState 1, None, lhsm) 
                   )
//# 4300 "../../../src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12641 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4305 "../../../src/fsharp/pars.fsy"
                             // silent recovery
                             SynExpr.Paren (arbExpr("parenExpr1", (rhs parseState 1).EndRange), (rhs parseState 1), Some(rhs parseState 3), (rhs2 parseState 1 3)) 
                   )
//# 4305 "../../../src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12653 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4309 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2tcs", lhsm) 
                   )
//# 4309 "../../../src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12665 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4314 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2mcs", lhsm) 
                   )
//# 4314 "../../../src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12677 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4319 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2rbcs", lhsm) 
                   )
//# 4319 "../../../src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12689 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4324 "../../../src/fsharp/pars.fsy"
                             let lparenRange = (rhs parseState 1)
                             reportParseErrorAt lparenRange (FSComp.SR.parsUnmatchedParen())
                             SynExpr.Paren(arbExpr("parenExpr2obecs", lparenRange.EndRange), lparenRange, None, lparenRange) 
                   )
//# 4324 "../../../src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12701 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4329 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()) 
                             arbExpr("parenExpr2", (lhs parseState))  
                   )
//# 4329 "../../../src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12713 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypars)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4341 "../../../src/fsharp/pars.fsy"
                             (fun m -> SynExpr.TraitCall (_1, _4, _6, m)) 
                   )
//# 4341 "../../../src/fsharp/pars.fsy"
                 : 'parenExprBody));
//# 12727 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4344 "../../../src/fsharp/pars.fsy"
                             (fun _m -> _1) 
                   )
//# 4344 "../../../src/fsharp/pars.fsy"
                 : 'parenExprBody));
//# 12738 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'inlineAssemblyExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4347 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 4347 "../../../src/fsharp/pars.fsy"
                 : 'parenExprBody));
//# 12749 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4351 "../../../src/fsharp/pars.fsy"
                             [_1] 
                   )
//# 4351 "../../../src/fsharp/pars.fsy"
                 : 'staticallyKnownHeadTypars));
//# 12760 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTyparAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4354 "../../../src/fsharp/pars.fsy"
                             List.rev _2 
                   )
//# 4354 "../../../src/fsharp/pars.fsy"
                 : 'staticallyKnownHeadTypars));
//# 12772 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTyparAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4358 "../../../src/fsharp/pars.fsy"
                            _3 :: _1
                   )
//# 4358 "../../../src/fsharp/pars.fsy"
                 : 'staticallyKnownHeadTyparAlts));
//# 12784 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4361 "../../../src/fsharp/pars.fsy"
                             [_1] 
                   )
//# 4361 "../../../src/fsharp/pars.fsy"
                 : 'staticallyKnownHeadTyparAlts));
//# 12795 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4365 "../../../src/fsharp/pars.fsy"
                             let m, r = _2 in r (rhs2 parseState 1 3) 
                   )
//# 4365 "../../../src/fsharp/pars.fsy"
                 : 'braceExpr));
//# 12808 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4368 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace())  
                            let m, r = _2 
                            // Note, we can't use 'exprFromParseError' because the extra syntax node interferes with some syntax-directed transformations for computation expressions
                            r (unionRanges (rhs parseState 1) m) 
                   )
//# 4368 "../../../src/fsharp/pars.fsy"
                 : 'braceExpr));
//# 12824 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4374 "../../../src/fsharp/pars.fsy"
                            // silent recovery 
                            arbExpr("braceExpr", rhs2 parseState 1 3)  
                   )
//# 4374 "../../../src/fsharp/pars.fsy"
                 : 'braceExpr));
//# 12837 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4378 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace())  
                            // Note, we can't use 'exprFromParseError' because the extra syntax node interferes with some syntax-directed transformations for computation expressions
                            SynExpr.Record (None, None, [], rhs parseState 1) 
                   )
//# 4378 "../../../src/fsharp/pars.fsy"
                 : 'braceExpr));
//# 12851 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4383 "../../../src/fsharp/pars.fsy"
                             let m = rhs2 parseState 1 2 
                             SynExpr.Record (None, None, [], m) 
                   )
//# 4383 "../../../src/fsharp/pars.fsy"
                 : 'braceExpr));
//# 12864 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4388 "../../../src/fsharp/pars.fsy"
                             (lhs parseState), (fun m -> let a, b, c = _1 in SynExpr.Record (a, b, c, m)) 
                   )
//# 4388 "../../../src/fsharp/pars.fsy"
                 : 'braceExprBody));
//# 12875 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4391 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 4391 "../../../src/fsharp/pars.fsy"
                 : 'braceExprBody));
//# 12886 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4394 "../../../src/fsharp/pars.fsy"
                            let m, r = _1 in (m, r false) 
                   )
//# 4394 "../../../src/fsharp/pars.fsy"
                 : 'braceExprBody));
//# 12897 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4398 "../../../src/fsharp/pars.fsy"
                            let m, r = _1 in (fun lhsm isArray -> SynExpr.ArrayOrListOfSeqExpr (isArray, r true m, lhsm)) 
                   )
//# 4398 "../../../src/fsharp/pars.fsy"
                 : 'listExprElements));
//# 12908 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4401 "../../../src/fsharp/pars.fsy"
                            (fun lhsm isArray -> SynExpr.ArrayOrList (isArray, [ ], lhsm)) 
                   )
//# 4401 "../../../src/fsharp/pars.fsy"
                 : 'listExprElements));
//# 12918 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4405 "../../../src/fsharp/pars.fsy"
                            _1.Range, (fun isArrayOrList lhsm -> SynExpr.CompExpr (isArrayOrList, ref(isArrayOrList), _1, lhsm)) 
                   )
//# 4405 "../../../src/fsharp/pars.fsy"
                 : 'monadicExprInitial));
//# 12929 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4408 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 4408 "../../../src/fsharp/pars.fsy"
                 : 'monadicExprInitial));
//# 12940 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4412 "../../../src/fsharp/pars.fsy"
                            let opm = (rhs parseState 2)
                            (unionRanges _1.Range _3.Range), (fun _isArray wholem -> 
                                                                     // in the case of "{ 1 .. 10 }", we want the range of the expression to include the curlies, that comes from a higher level rule in the grammar,
                                                                     // passed down as 'wholem', so patch up that range here
                                                                     match (mkSynInfix opm _1 ".." _3) with
                                                                     | SynExpr.App (a, b, c, d, _) -> SynExpr.App (a, b, c, d, wholem)
                                                                     | _ -> failwith "impossible") 
                   )
//# 4412 "../../../src/fsharp/pars.fsy"
                 : 'rangeSequenceExpr));
//# 12958 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4421 "../../../src/fsharp/pars.fsy"
                            (unionRanges _1.Range _5.Range), (fun _isArray wholem -> mkSynTrifix wholem ".. .." _1 _3 _5) 
                   )
//# 4421 "../../../src/fsharp/pars.fsy"
                 : 'rangeSequenceExpr));
//# 12971 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4424 "../../../src/fsharp/pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileExpression())
                            let opm = (rhs parseState 2)
                            let e = arbExpr("rangeSeqError1", (rhs parseState 3).StartRange)
                            (unionRanges _1.Range e.Range), (fun _isArray wholem -> 
                                                                     // in the case of "{ 1 .. 10 }", we want the range of the expression to include the curlies, that comes from a higher level rule in the grammar,
                                                                     // passed down as 'wholem', so patch up that range here
                                                                     match (mkSynInfix opm _1 ".." e) with
                                                                     | SynExpr.App (a, b, c, d, _) -> SynExpr.App (a, b, c, d, wholem)
                                                                     | _ -> failwith "impossible") 
                   )
//# 4424 "../../../src/fsharp/pars.fsy"
                 : 'rangeSequenceExpr));
//# 12991 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4437 "../../../src/fsharp/pars.fsy"
                            SynExpr.YieldOrReturn ((true, false), _2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 4437 "../../../src/fsharp/pars.fsy"
                 : 'arrowThenExprR));
//# 13002 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4442 "../../../src/fsharp/pars.fsy"
                            (_1, _3, true) 
                   )
//# 4442 "../../../src/fsharp/pars.fsy"
                 : 'forLoopBinder));
//# 13014 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4445 "../../../src/fsharp/pars.fsy"
                            let m, r = _3 in (_1, r false m, true) 
                   )
//# 4445 "../../../src/fsharp/pars.fsy"
                 : 'forLoopBinder));
//# 13026 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4448 "../../../src/fsharp/pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                            (_1, arbExpr("forLoopBinder", (rhs parseState 2)), false) 
                   )
//# 4448 "../../../src/fsharp/pars.fsy"
                 : 'forLoopBinder));
//# 13039 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4452 "../../../src/fsharp/pars.fsy"
                            if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInOrEqualExpected())
                            (_1, arbExpr("forLoopBinder2", (rhs parseState 1).EndRange), false) 
                   )
//# 4452 "../../../src/fsharp/pars.fsy"
                 : 'forLoopBinder));
//# 13052 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopDirection)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4457 "../../../src/fsharp/pars.fsy"
                             idOfPat parseState (rhs parseState 1) _1, _3, _4, _5 
                   )
//# 4457 "../../../src/fsharp/pars.fsy"
                 : 'forLoopRange));
//# 13066 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4460 "../../../src/fsharp/pars.fsy"
                            raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedSymbolEqualsInsteadOfIn()) 
                   )
//# 4460 "../../../src/fsharp/pars.fsy"
                 : 'forLoopRange));
//# 13078 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4463 "../../../src/fsharp/pars.fsy"
                                  true 
                   )
//# 4463 "../../../src/fsharp/pars.fsy"
                 : 'forLoopDirection));
//# 13088 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4465 "../../../src/fsharp/pars.fsy"
                                  false 
                   )
//# 4465 "../../../src/fsharp/pars.fsy"
                 : 'forLoopDirection));
//# 13098 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inlineAssemblyTypeArg)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'optCurriedArgExprs)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optInlineAssemblyReturnTypes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4469 "../../../src/fsharp/pars.fsy"
                             libraryOnlyWarning (lhs parseState)
                             let s, sm = _2, rhs parseState 2
                             (fun m -> SynExpr.LibraryOnlyILAssembly (internalParseAssemblyCodeInstructions s parseState.LexBuffer.SupportsFeature sm, _3, List.rev _4, _5, m)) 
                   )
//# 4469 "../../../src/fsharp/pars.fsy"
                 : 'inlineAssemblyExpr));
//# 13114 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optCurriedArgExprs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4475 "../../../src/fsharp/pars.fsy"
                             _2 :: _1 
                   )
//# 4475 "../../../src/fsharp/pars.fsy"
                 : 'optCurriedArgExprs));
//# 13126 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4478 "../../../src/fsharp/pars.fsy"
                             [] 
                   )
//# 4478 "../../../src/fsharp/pars.fsy"
                 : 'optCurriedArgExprs));
//# 13136 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4482 "../../../src/fsharp/pars.fsy"
                             None 
                   )
//# 4482 "../../../src/fsharp/pars.fsy"
                 : 'opt_atomicExprAfterType));
//# 13146 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4485 "../../../src/fsharp/pars.fsy"
                             Some(_1) 
                   )
//# 4485 "../../../src/fsharp/pars.fsy"
                 : 'opt_atomicExprAfterType));
//# 13157 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4489 "../../../src/fsharp/pars.fsy"
                             [] 
                   )
//# 4489 "../../../src/fsharp/pars.fsy"
                 : 'opt_inlineAssemblyTypeArg));
//# 13167 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4492 "../../../src/fsharp/pars.fsy"
                              [_3] 
                   )
//# 4492 "../../../src/fsharp/pars.fsy"
                 : 'opt_inlineAssemblyTypeArg));
//# 13180 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4496 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 4496 "../../../src/fsharp/pars.fsy"
                 : 'optInlineAssemblyReturnTypes));
//# 13190 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4499 "../../../src/fsharp/pars.fsy"
                            [_2] 
                   )
//# 4499 "../../../src/fsharp/pars.fsy"
                 : 'optInlineAssemblyReturnTypes));
//# 13201 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4502 "../../../src/fsharp/pars.fsy"
                             [] 
                   )
//# 4502 "../../../src/fsharp/pars.fsy"
                 : 'optInlineAssemblyReturnTypes));
//# 13212 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4506 "../../../src/fsharp/pars.fsy"
                            let arg = match _4 with None -> mkSynUnit (lhs parseState) | Some e -> e 
                            let l = List.rev _5
                            let dummyField = mkRecdField (LongIdentWithDots([], [])) // dummy identifier, it will be discarded
                            let l = rebindRanges (dummyField, None) l _6 
                            let (_, _, inheritsSep) = List.head l
                            let bindings = List.tail l
                            (Some (_2, arg, rhs2 parseState 2 4, inheritsSep, rhs parseState 1), None, bindings) 
                   )
//# 4506 "../../../src/fsharp/pars.fsy"
                 : 'recdExpr));
//# 13233 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprCore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4515 "../../../src/fsharp/pars.fsy"
                           let a, b = _1 in (None, a, b) 
                   )
//# 4515 "../../../src/fsharp/pars.fsy"
                 : 'recdExpr));
//# 13244 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4519 "../../../src/fsharp/pars.fsy"
                            match _1 with 
                            | LongOrSingleIdent(false, (LongIdentWithDots(_, _) as f), None, m) ->  
                                 let f = mkRecdField f
                                 let l = List.rev _4
                                 let l = rebindRanges (f, Some _3) l _5
                                 (None, l)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsFieldBinding()) 
                   )
//# 4519 "../../../src/fsharp/pars.fsy"
                 : 'recdExprCore));
//# 13264 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4532 "../../../src/fsharp/pars.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())
                           reportParseErrorAt m (FSComp.SR.parsFieldBinding())
                           let f = mkUnderscoreRecdField m
                           (None, [ (f, None, None)  ]) 
                   )
//# 4532 "../../../src/fsharp/pars.fsy"
                 : 'recdExprCore));
//# 13278 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4539 "../../../src/fsharp/pars.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())      
                           let f = mkUnderscoreRecdField m
                           reportParseErrorAt (rhs2 parseState 1 2) (FSComp.SR.parsFieldBinding())
                           
                           (None, [ (f, None, None) ]) 
                   )
//# 4539 "../../../src/fsharp/pars.fsy"
                 : 'recdExprCore));
//# 13293 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4548 "../../../src/fsharp/pars.fsy"
                           reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnderscoreInvalidFieldName())
                           let f = mkUnderscoreRecdField (rhs parseState 1)
                           let l = List.rev _4
                           let l = rebindRanges (f, Some _3) l _5
                           (None, l) 
                   )
//# 4548 "../../../src/fsharp/pars.fsy"
                 : 'recdExprCore));
//# 13310 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4556 "../../../src/fsharp/pars.fsy"
                             let l = List.rev _4
                             let l = rebindRanges _3 l _5
                             (Some (_1, (rhs parseState 2, None)), l) 
                   )
//# 4556 "../../../src/fsharp/pars.fsy"
                 : 'recdExprCore));
//# 13326 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4561 "../../../src/fsharp/pars.fsy"
                            (Some (_1, (rhs parseState 2, None)), []) 
                   )
//# 4561 "../../../src/fsharp/pars.fsy"
                 : 'recdExprCore));
//# 13338 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4564 "../../../src/fsharp/pars.fsy"
                             let l = List.rev _4
                             let l = rebindRanges _3 l _5
                             (Some (_1, (rhs parseState 2, None)), l) 
                   )
//# 4564 "../../../src/fsharp/pars.fsy"
                 : 'recdExprCore));
//# 13354 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4570 "../../../src/fsharp/pars.fsy"
                            Some _1 
                   )
//# 4570 "../../../src/fsharp/pars.fsy"
                 : 'opt_seps_recd));
//# 13365 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4573 "../../../src/fsharp/pars.fsy"
                            None 
                   )
//# 4573 "../../../src/fsharp/pars.fsy"
                 : 'opt_seps_recd));
//# 13375 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4577 "../../../src/fsharp/pars.fsy"
                            (rhs parseState 1), None 
                   )
//# 4577 "../../../src/fsharp/pars.fsy"
                 : 'seps_recd));
//# 13385 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4580 "../../../src/fsharp/pars.fsy"
                            let m = (rhs parseState 1) in (m, Some m.End) 
                   )
//# 4580 "../../../src/fsharp/pars.fsy"
                 : 'seps_recd));
//# 13395 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4583 "../../../src/fsharp/pars.fsy"
                            (rhs2 parseState 1 2), Some (rhs parseState 1).End 
                   )
//# 4583 "../../../src/fsharp/pars.fsy"
                 : 'seps_recd));
//# 13405 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4586 "../../../src/fsharp/pars.fsy"
                            (rhs2 parseState 1 2), Some (rhs parseState 2).End 
                   )
//# 4586 "../../../src/fsharp/pars.fsy"
                 : 'seps_recd));
//# 13415 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4592 "../../../src/fsharp/pars.fsy"
                           mkRecdField _1 
                   )
//# 4592 "../../../src/fsharp/pars.fsy"
                 : 'pathOrUnderscore));
//# 13426 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4595 "../../../src/fsharp/pars.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())
                           mkUnderscoreRecdField m 
                   )
//# 4595 "../../../src/fsharp/pars.fsy"
                 : 'pathOrUnderscore));
//# 13438 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps_recd)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4601 "../../../src/fsharp/pars.fsy"
                            (_3, Some _2) :: _1 
                   )
//# 4601 "../../../src/fsharp/pars.fsy"
                 : 'recdExprBindings));
//# 13451 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4604 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 4604 "../../../src/fsharp/pars.fsy"
                 : 'recdExprBindings));
//# 13461 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4608 "../../../src/fsharp/pars.fsy"
                            (_1, Some _3) 
                   )
//# 4608 "../../../src/fsharp/pars.fsy"
                 : 'recdBinding));
//# 13473 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4611 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                            (_1, None) 
                   )
//# 4611 "../../../src/fsharp/pars.fsy"
                 : 'recdBinding));
//# 13485 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4615 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                            (_1, None) 
                   )
//# 4615 "../../../src/fsharp/pars.fsy"
                 : 'recdBinding));
//# 13498 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4619 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                            (_1, None) 
                   )
//# 4619 "../../../src/fsharp/pars.fsy"
                 : 'recdBinding));
//# 13510 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4623 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                            (_1, None) 
                   )
//# 4623 "../../../src/fsharp/pars.fsy"
                 : 'recdBinding));
//# 13523 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBaseCall)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4634 "../../../src/fsharp/pars.fsy"
                            let mNewExpr = rhs parseState 1
                            let fullRange = match _4 with [] -> (rhs parseState 1) | _ -> (rhs2 parseState 1 4)
                            fullRange, (fun m -> let (a, b) = _1 in SynExpr.ObjExpr (a, b, _2, _4, mNewExpr, m)) 
                   )
//# 4634 "../../../src/fsharp/pars.fsy"
                 : 'objExpr));
//# 13539 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBaseCall)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4639 "../../../src/fsharp/pars.fsy"
                            let mNewExpr = rhs parseState 1 
                            let fullRange = match _3 with [] -> (rhs parseState 1) | _ -> (rhs2 parseState 1 3)
                            fullRange, (fun m -> let (a, b) = _1 in SynExpr.ObjExpr (a, b, [], _3, mNewExpr, m)) 
                   )
//# 4639 "../../../src/fsharp/pars.fsy"
                 : 'objExpr));
//# 13554 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4644 "../../../src/fsharp/pars.fsy"
                            let mNewExpr = rhs parseState 1 
                            (rhs2 parseState 1 2), (fun m -> let (a, b) = _2, None in SynExpr.ObjExpr (a, b, [], [], mNewExpr, m)) 
                   )
//# 4644 "../../../src/fsharp/pars.fsy"
                 : 'objExpr));
//# 13566 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'baseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4649 "../../../src/fsharp/pars.fsy"
                            (_2, Some(_4, Some(_5))) 
                   )
//# 4649 "../../../src/fsharp/pars.fsy"
                 : 'objExprBaseCall));
//# 13580 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4652 "../../../src/fsharp/pars.fsy"
                            (_2, Some(_4, None)) 
                   )
//# 4652 "../../../src/fsharp/pars.fsy"
                 : 'objExprBaseCall));
//# 13593 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4655 "../../../src/fsharp/pars.fsy"
                            _2, None 
                   )
//# 4655 "../../../src/fsharp/pars.fsy"
                 : 'objExprBaseCall));
//# 13604 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4661 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 4661 "../../../src/fsharp/pars.fsy"
                 : 'opt_objExprBindings));
//# 13615 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4664 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 4664 "../../../src/fsharp/pars.fsy"
                 : 'opt_objExprBindings));
//# 13625 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4668 "../../../src/fsharp/pars.fsy"
                             let mWithKwd = (rhs parseState 1)
                             let _localBindingsLastRange, localBindingsBuilder = _2 
                             localBindingsBuilder [] None mWithKwd 
                   )
//# 4668 "../../../src/fsharp/pars.fsy"
                 : 'objExprBindings));
//# 13638 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4673 "../../../src/fsharp/pars.fsy"
                             let mWithKwd = (rhs parseState 1)
                             let _localBindingsLastRange, localBindingsBuilder = _2 
                             localBindingsBuilder [] None mWithKwd 
                   )
//# 4673 "../../../src/fsharp/pars.fsy"
                 : 'objExprBindings));
//# 13651 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4678 "../../../src/fsharp/pars.fsy"
                             _2 |> 
                             (List.choose (function 
                                               | SynMemberDefn.Member(b, m) -> Some b
                                               | SynMemberDefn.AutoProperty(_, _, _, _, _, _, _, _, _, _, m) -> errorR(Error(FSComp.SR.parsIllegalMemberVarInObjectImplementation(), m)); None
                                               | x -> errorR(Error(FSComp.SR.parsMemberIllegalInObjectImplementation(), x.Range)); None)) 
                   )
//# 4678 "../../../src/fsharp/pars.fsy"
                 : 'objExprBindings));
//# 13667 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterface)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4685 "../../../src/fsharp/pars.fsy"
                                                                  _1 :: _2 
                   )
//# 4685 "../../../src/fsharp/pars.fsy"
                 : 'objExprInterfaces));
//# 13679 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4689 "../../../src/fsharp/pars.fsy"
                            [] 
                   )
//# 4689 "../../../src/fsharp/pars.fsy"
                 : 'opt_objExprInterfaces));
//# 13689 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterface)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4692 "../../../src/fsharp/pars.fsy"
                            _1 :: _2 
                   )
//# 4692 "../../../src/fsharp/pars.fsy"
                 : 'opt_objExprInterfaces));
//# 13701 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4695 "../../../src/fsharp/pars.fsy"
                            (* silent recovery *) _2 
                   )
//# 4695 "../../../src/fsharp/pars.fsy"
                 : 'opt_objExprInterfaces));
//# 13712 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprBindings)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declEnd)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4699 "../../../src/fsharp/pars.fsy"
                           InterfaceImpl(_2, _3, lhs parseState) 
                   )
//# 4699 "../../../src/fsharp/pars.fsy"
                 : 'objExprInterface));
//# 13727 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceBarExprCore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4703 "../../../src/fsharp/pars.fsy"
                             _2 true 
                   )
//# 4703 "../../../src/fsharp/pars.fsy"
                 : 'braceBarExpr));
//# 13738 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceBarExprCore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4706 "../../../src/fsharp/pars.fsy"
                             _1 false 
                   )
//# 4706 "../../../src/fsharp/pars.fsy"
                 : 'braceBarExpr));
//# 13749 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprCore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bar_rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4710 "../../../src/fsharp/pars.fsy"
                            let orig, flds = _2
                            let flds = 
                                flds |> List.choose (function 
                                  | ((LongIdentWithDots([id], _), _), Some e, _) -> Some (id, e) 
                                  | ((LongIdentWithDots([id], _), _), None, _) -> Some (id, arbExpr("anonField", id.idRange)) 
                                  | _ -> reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInvalidAnonRecdType()); None) 
                            let m = rhs2 parseState 1 3
                            (fun isStruct -> SynExpr.AnonRecd (isStruct, orig, flds, m)) 
                   )
//# 4710 "../../../src/fsharp/pars.fsy"
                 : 'braceBarExprCore));
//# 13768 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprCore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4720 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBraceBar())  
                            let orig, flds = _2 
                            let flds = 
                                flds |> List.choose (function 
                                  | ((LongIdentWithDots([id], _), _), Some e, _) -> Some (id, e) 
                                  | ((LongIdentWithDots([id], _), _), None, _) -> Some (id, arbExpr("anonField", id.idRange)) 
                                  | _ -> reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInvalidAnonRecdType()); None) 
                            let m = rhs2 parseState 1 2
                            (fun isStruct -> SynExpr.AnonRecd (isStruct, orig, flds, m)) 
                   )
//# 4720 "../../../src/fsharp/pars.fsy"
                 : 'braceBarExprCore));
//# 13788 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bar_rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4731 "../../../src/fsharp/pars.fsy"
                            // silent recovery 
                            let m = rhs2 parseState 1 3
                            (fun _ -> arbExpr("braceBarExpr", m)) 
                   )
//# 4731 "../../../src/fsharp/pars.fsy"
                 : 'braceBarExprCore));
//# 13801 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4736 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBraceBar())  
                            let m = rhs2 parseState 1 1
                            (fun isStruct -> SynExpr.AnonRecd (isStruct, None, [], m)) 
                   )
//# 4736 "../../../src/fsharp/pars.fsy"
                 : 'braceBarExprCore));
//# 13814 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'bar_rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4741 "../../../src/fsharp/pars.fsy"
                            let m = rhs2 parseState 1 2
                            (fun isStruct -> SynExpr.AnonRecd (isStruct, None, [], m)) 
                   )
//# 4741 "../../../src/fsharp/pars.fsy"
                 : 'braceBarExprCore));
//# 13826 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4746 "../../../src/fsharp/pars.fsy"
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 _4 
                   )
//# 4746 "../../../src/fsharp/pars.fsy"
                 : 'anonLambdaExpr));
//# 13839 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4750 "../../../src/fsharp/pars.fsy"
                            let mAll = rhs2 parseState 1 3
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 (arbExpr("anonLambdaExpr1", (rhs parseState 4))) 
                   )
//# 4750 "../../../src/fsharp/pars.fsy"
                 : 'anonLambdaExpr));
//# 13851 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4754 "../../../src/fsharp/pars.fsy"
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 _4 
                   )
//# 4754 "../../../src/fsharp/pars.fsy"
                 : 'anonLambdaExpr));
//# 13864 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4758 "../../../src/fsharp/pars.fsy"
                            if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFunBody());
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 _4) 
                   )
//# 4758 "../../../src/fsharp/pars.fsy"
                 : 'anonLambdaExpr));
//# 13879 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4763 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs2 parseState 1 3) (FSComp.SR.parsMissingFunctionBody())
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs2 parseState 1 3) _2 (arbExpr("anonLambdaExpr2", (rhs parseState 4))) 
                   )
//# 4763 "../../../src/fsharp/pars.fsy"
                 : 'anonLambdaExpr));
//# 13891 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4767 "../../../src/fsharp/pars.fsy"
                            if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFunBody())
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs2 parseState 1 3) _2 (arbExpr("anonLambdaExpr3", (rhs parseState 4)))) 
                   )
//# 4767 "../../../src/fsharp/pars.fsy"
                 : 'anonLambdaExpr));
//# 13904 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4771 "../../../src/fsharp/pars.fsy"
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs2 parseState 1 2) _2 (arbExpr("anonLambdaExpr4", (rhs parseState 3)))) 
                   )
//# 4771 "../../../src/fsharp/pars.fsy"
                 : 'anonLambdaExpr));
//# 13915 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4774 "../../../src/fsharp/pars.fsy"
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs parseState 1) [] (arbExpr("anonLambdaExpr5", (rhs parseState 2)))) 
                   )
//# 4774 "../../../src/fsharp/pars.fsy"
                 : 'anonLambdaExpr));
//# 13925 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4778 "../../../src/fsharp/pars.fsy"
                            let clauses, mLast = _2
                            let mAll = unionRanges (rhs parseState 1) mLast
                            SynExpr.MatchLambda (false, (rhs parseState 1), clauses, NoDebugPointAtInvisibleBinding, mAll) 
                   )
//# 4778 "../../../src/fsharp/pars.fsy"
                 : 'anonMatchingExpr));
//# 13938 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4783 "../../../src/fsharp/pars.fsy"
                            let clauses, mLast = _2
                            let mAll = unionRanges (rhs parseState 1) mLast
                            SynExpr.MatchLambda (false, (rhs parseState 1), clauses, NoDebugPointAtInvisibleBinding, mAll) 
                   )
//# 4783 "../../../src/fsharp/pars.fsy"
                 : 'anonMatchingExpr));
//# 13951 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4792 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 4792 "../../../src/fsharp/pars.fsy"
                 : 'typeWithTypeConstraints));
//# 13962 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4795 "../../../src/fsharp/pars.fsy"
                            SynType.WithGlobalConstraints(_1, List.rev _3, lhs parseState) 
                   )
//# 4795 "../../../src/fsharp/pars.fsy"
                 : 'typeWithTypeConstraints));
//# 13974 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4799 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 4799 "../../../src/fsharp/pars.fsy"
                 : 'topTypeWithTypeConstraints));
//# 13985 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4802 "../../../src/fsharp/pars.fsy"
                            let ty, arity = _1 
                            // nb. it doesn't matter where the constraints go in the structure of the type. 
                            SynType.WithGlobalConstraints(ty, List.rev _3, lhs parseState), arity 
                   )
//# 4802 "../../../src/fsharp/pars.fsy"
                 : 'topTypeWithTypeConstraints));
//# 13999 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4808 "../../../src/fsharp/pars.fsy"
                            None 
                   )
//# 4808 "../../../src/fsharp/pars.fsy"
                 : 'opt_topReturnTypeWithTypeConstraints));
//# 14009 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4811 "../../../src/fsharp/pars.fsy"
                            let ty, arity = _2 
                            let arity = (match arity with SynValInfo([], rmdata)-> rmdata | _ -> SynInfo.unnamedRetVal)
                            Some (SynReturnInfo((ty, arity), rhs parseState 2)) 
                   )
//# 4811 "../../../src/fsharp/pars.fsy"
                 : 'opt_topReturnTypeWithTypeConstraints));
//# 14022 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4817 "../../../src/fsharp/pars.fsy"
                            let dty, dmdata= _1 
                            let rty, (SynValInfo(dmdatas, rmdata)) = _3 
                            SynType.Fun(dty, rty, lhs parseState), (SynValInfo(dmdata :: dmdatas, rmdata)) 
                   )
//# 4817 "../../../src/fsharp/pars.fsy"
                 : 'topType));
//# 14036 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4822 "../../../src/fsharp/pars.fsy"
                            let ty, rmdata = _1 in ty, (SynValInfo([], (match rmdata with [md] -> md | _ -> SynInfo.unnamedRetVal))) 
                   )
//# 4822 "../../../src/fsharp/pars.fsy"
                 : 'topType));
//# 14047 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4826 "../../../src/fsharp/pars.fsy"
                            let ty, mdata = _1 in let tys, mdatas = List.unzip _3 in (SynType.Tuple(false, List.map (fun ty -> (false, ty)) (ty :: tys), lhs parseState)), (mdata :: mdatas) 
                   )
//# 4826 "../../../src/fsharp/pars.fsy"
                 : 'topTupleType));
//# 14059 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4829 "../../../src/fsharp/pars.fsy"
                            let ty, mdata = _1 in ty, [mdata] 
                   )
//# 4829 "../../../src/fsharp/pars.fsy"
                 : 'topTupleType));
//# 14070 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4833 "../../../src/fsharp/pars.fsy"
                            _1 :: _3 
                   )
//# 4833 "../../../src/fsharp/pars.fsy"
                 : 'topTupleTypeElements));
//# 14082 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4836 "../../../src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 4836 "../../../src/fsharp/pars.fsy"
                 : 'topTupleTypeElements));
//# 14093 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4840 "../../../src/fsharp/pars.fsy"
                            match _2 with 
                            | SynType.LongIdent(LongIdentWithDots([id], _)) -> _4, SynArgInfo(_1, false, Some id)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsSyntaxErrorInLabeledType())  
                   )
//# 4840 "../../../src/fsharp/pars.fsy"
                 : 'topAppType));
//# 14108 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4845 "../../../src/fsharp/pars.fsy"
                            _5, SynArgInfo(_1, true, Some _3) 
                   )
//# 4845 "../../../src/fsharp/pars.fsy"
                 : 'topAppType));
//# 14121 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4848 "../../../src/fsharp/pars.fsy"
                            (_2, SynArgInfo(_1, false, None)) 
                   )
//# 4848 "../../../src/fsharp/pars.fsy"
                 : 'topAppType));
//# 14133 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4851 "../../../src/fsharp/pars.fsy"
                            match _1 with 
                            | SynType.LongIdent(LongIdentWithDots([id], _)) -> _3, SynArgInfo([], false, Some id)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsSyntaxErrorInLabeledType())  
                   )
//# 4851 "../../../src/fsharp/pars.fsy"
                 : 'topAppType));
//# 14147 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4856 "../../../src/fsharp/pars.fsy"
                            _4, SynArgInfo([], true, Some _2) 
                   )
//# 4856 "../../../src/fsharp/pars.fsy"
                 : 'topAppType));
//# 14159 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4859 "../../../src/fsharp/pars.fsy"
                            _1, SynArgInfo([], false, None) 
                   )
//# 4859 "../../../src/fsharp/pars.fsy"
                 : 'topAppType));
//# 14170 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4865 "../../../src/fsharp/pars.fsy"
                            SynType.Fun(_1, _3, lhs parseState) 
                   )
//# 4865 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynType));
//# 14182 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4868 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 4868 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynType));
//# 14193 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4871 "../../../src/fsharp/pars.fsy"
                                   checkEndOfFileError _2; _1 
                   )
//# 4871 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynType));
//# 14205 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4876 "../../../src/fsharp/pars.fsy"
                           SynType.Tuple(false, (false, _1) :: _3, lhs parseState) 
                   )
//# 4876 "../../../src/fsharp/pars.fsy"
                 : 'tupleType));
//# 14217 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4879 "../../../src/fsharp/pars.fsy"
                           if _1 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           SynType.Tuple(false, (true, SynType.StaticConstant (SynConst.Int32 1, lhs parseState)) :: _2, lhs parseState) 
                   )
//# 4879 "../../../src/fsharp/pars.fsy"
                 : 'tupleType));
//# 14230 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4883 "../../../src/fsharp/pars.fsy"
                           if _2 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           SynType.Tuple(false, (true, _1) :: _3, lhs parseState) 
                   )
//# 4883 "../../../src/fsharp/pars.fsy"
                 : 'tupleType));
//# 14244 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4887 "../../../src/fsharp/pars.fsy"
                           _1 
                   )
//# 4887 "../../../src/fsharp/pars.fsy"
                 : 'tupleType));
//# 14255 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4891 "../../../src/fsharp/pars.fsy"
                           (false, _1) :: _3 
                   )
//# 4891 "../../../src/fsharp/pars.fsy"
                 : 'tupleOrQuotTypeElements));
//# 14267 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4894 "../../../src/fsharp/pars.fsy"
                           if _2 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           (true, _1) :: _3 
                   )
//# 4894 "../../../src/fsharp/pars.fsy"
                 : 'tupleOrQuotTypeElements));
//# 14281 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4898 "../../../src/fsharp/pars.fsy"
                           [(false, _1)] 
                   )
//# 4898 "../../../src/fsharp/pars.fsy"
                 : 'tupleOrQuotTypeElements));
//# 14292 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4902 "../../../src/fsharp/pars.fsy"
                           SynType.LongIdent(_1) 
                   )
//# 4902 "../../../src/fsharp/pars.fsy"
                 : 'appTypeCon));
//# 14303 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4905 "../../../src/fsharp/pars.fsy"
                           SynType.Var(_1, lhs parseState) 
                   )
//# 4905 "../../../src/fsharp/pars.fsy"
                 : 'appTypeCon));
//# 14314 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4909 "../../../src/fsharp/pars.fsy"
                           if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                           if _2 = "^-" then SynType.MeasurePower(_1, SynRationalConst.Negate(_3), lhs parseState)
                           else SynType.MeasurePower(_1, _3, lhs parseState)  
                   )
//# 4909 "../../../src/fsharp/pars.fsy"
                 : 'appTypeConPower));
//# 14329 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4914 "../../../src/fsharp/pars.fsy"
                           _1 
                   )
//# 4914 "../../../src/fsharp/pars.fsy"
                 : 'appTypeConPower));
//# 14340 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4918 "../../../src/fsharp/pars.fsy"
                              SynType.Array(_2, _1, lhs parseState) 
                   )
//# 4918 "../../../src/fsharp/pars.fsy"
                 : 'appType));
//# 14352 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4921 "../../../src/fsharp/pars.fsy"
                              SynType.Array(_3, _1, lhs parseState) 
                   )
//# 4921 "../../../src/fsharp/pars.fsy"
                 : 'appType));
//# 14364 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4925 "../../../src/fsharp/pars.fsy"
                             SynType.App(_2, None, [_1], [], None, true, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 4925 "../../../src/fsharp/pars.fsy"
                 : 'appType));
//# 14376 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypePrefixArguments)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4928 "../../../src/fsharp/pars.fsy"
                             let args, commas = _2
                             mlCompatWarning (FSComp.SR.parsMultiArgumentGenericTypeFormDeprecated()) (unionRanges (rhs parseState 1) _4.Range); 
                             SynType.App(_4, None, args, commas, None, true, unionRanges (rhs parseState 1) _4.Range) 
                   )
//# 4928 "../../../src/fsharp/pars.fsy"
                 : 'appType));
//# 14391 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'powerType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4933 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 4933 "../../../src/fsharp/pars.fsy"
                 : 'appType));
//# 14402 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4936 "../../../src/fsharp/pars.fsy"
                              let tp, typ = _1, _3 
                              let m = lhs parseState 
                              SynType.WithGlobalConstraints(SynType.Var (tp, rhs parseState 1), [WhereTyparSubtypeOfType(tp, typ, m)], m)  
                   )
//# 4936 "../../../src/fsharp/pars.fsy"
                 : 'appType));
//# 14416 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4941 "../../../src/fsharp/pars.fsy"
                              SynType.HashConstraint(_3, lhs parseState) 
                   )
//# 4941 "../../../src/fsharp/pars.fsy"
                 : 'appType));
//# 14427 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4945 "../../../src/fsharp/pars.fsy"
                             1 
                   )
//# 4945 "../../../src/fsharp/pars.fsy"
                 : 'arrayTypeSuffix));
//# 14437 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4948 "../../../src/fsharp/pars.fsy"
                             2 
                   )
//# 4948 "../../../src/fsharp/pars.fsy"
                 : 'arrayTypeSuffix));
//# 14447 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4951 "../../../src/fsharp/pars.fsy"
                             3 
                   )
//# 4951 "../../../src/fsharp/pars.fsy"
                 : 'arrayTypeSuffix));
//# 14457 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4954 "../../../src/fsharp/pars.fsy"
                             4 
                   )
//# 4954 "../../../src/fsharp/pars.fsy"
                 : 'arrayTypeSuffix));
//# 14467 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4958 "../../../src/fsharp/pars.fsy"
                             let typeArgs, commas = _4 in _1 :: _3 :: List.rev typeArgs, (rhs parseState 2) :: (List.rev commas) 
                   )
//# 4958 "../../../src/fsharp/pars.fsy"
                 : 'appTypePrefixArguments));
//# 14480 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4962 "../../../src/fsharp/pars.fsy"
                             let typeArgs, commas = _1
                             _3 :: typeArgs, (rhs parseState 2) :: commas 
                   )
//# 4962 "../../../src/fsharp/pars.fsy"
                 : 'typeArgListElements));
//# 14493 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'dummyTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4966 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let typeArgs, commas = _1
                            _3 :: typeArgs, (rhs parseState 2) :: commas 
                   )
//# 4966 "../../../src/fsharp/pars.fsy"
                 : 'typeArgListElements));
//# 14507 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4971 "../../../src/fsharp/pars.fsy"
                             [], [] 
                   )
//# 4971 "../../../src/fsharp/pars.fsy"
                 : 'typeArgListElements));
//# 14517 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeOrAnonRecdType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4975 "../../../src/fsharp/pars.fsy"
                           _1 
                   )
//# 4975 "../../../src/fsharp/pars.fsy"
                 : 'powerType));
//# 14528 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeOrAnonRecdType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4978 "../../../src/fsharp/pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            if _2 = "^-" then SynType.MeasurePower(_1, SynRationalConst.Negate(_3), lhs parseState)
                            else SynType.MeasurePower(_1, _3, lhs parseState) 
                   )
//# 4978 "../../../src/fsharp/pars.fsy"
                 : 'powerType));
//# 14543 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypePrefixArguments)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4987 "../../../src/fsharp/pars.fsy"
                             let args, commas = _2
                             mlCompatWarning (FSComp.SR.parsMultiArgumentGenericTypeFormDeprecated()) (unionRanges (rhs parseState 1) _4.Range); 
                             SynType.App(_4, None, args, commas, None, true, unionRanges (rhs parseState 1) _4.Range) 
                   )
//# 4987 "../../../src/fsharp/pars.fsy"
                 : 'atomTypeNonAtomicDeprecated));
//# 14558 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4992 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 4992 "../../../src/fsharp/pars.fsy"
                 : 'atomTypeNonAtomicDeprecated));
//# 14569 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4996 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 4996 "../../../src/fsharp/pars.fsy"
                 : 'atomTypeOrAnonRecdType));
//# 14580 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonRecdType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4999 "../../../src/fsharp/pars.fsy"
                            let flds, isStruct = _1
                            let flds2 = 
                                flds |> List.choose (function 
                                  | (Field([], false, Some id, ty, false, _xmldoc, None, _m)) -> Some (id, ty) 
                                  | _ -> reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInvalidAnonRecdType()); None)
                            SynType.AnonRecd (isStruct, flds2, rhs parseState 1) 
                   )
//# 4999 "../../../src/fsharp/pars.fsy"
                 : 'atomTypeOrAnonRecdType));
//# 14596 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5010 "../../../src/fsharp/pars.fsy"
                            SynType.HashConstraint(_2, lhs parseState) 
                   )
//# 5010 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14607 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5013 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5013 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14618 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5016 "../../../src/fsharp/pars.fsy"
                            SynType.Anon (lhs parseState) 
                   )
//# 5016 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14628 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5019 "../../../src/fsharp/pars.fsy"
                            SynType.Paren (_2, lhs parseState) 
                   )
//# 5019 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14640 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5022 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen ())
                            SynType.Paren (_2, lhs parseState) 
                   )
//# 5022 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14653 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5026 "../../../src/fsharp/pars.fsy"
                           SynType.Tuple(true, (false, _3) :: _5, lhs parseState) 
                   )
//# 5026 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14666 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5029 "../../../src/fsharp/pars.fsy"
                           reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()) 
                           SynType.Tuple(true, (false, _3) :: _5, lhs parseState) 
                   )
//# 5029 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14680 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5033 "../../../src/fsharp/pars.fsy"
                           reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()) 
                           SynType.Anon (lhs parseState) 
                   )
//# 5033 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14693 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5037 "../../../src/fsharp/pars.fsy"
                           reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()) 
                           SynType.Anon (lhs parseState) 
                   )
//# 5037 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14706 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5041 "../../../src/fsharp/pars.fsy"
                           reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()) 
                           SynType.Anon (lhs parseState) 
                   )
//# 5041 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14718 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5045 "../../../src/fsharp/pars.fsy"
                            SynType.StaticConstant(_1, rhs parseState 1) 
                   )
//# 5045 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14729 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5048 "../../../src/fsharp/pars.fsy"
                            let m = rhs parseState 1
                            SynType.StaticConstant(SynConst.String (null, m), m) 
                   )
//# 5048 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14740 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5052 "../../../src/fsharp/pars.fsy"
                             let e, _ = _2
                             SynType.StaticConstantExpr(e, lhs parseState) 
                   )
//# 5052 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14752 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5056 "../../../src/fsharp/pars.fsy"
                             SynType.StaticConstant(SynConst.Bool false, lhs parseState) 
                   )
//# 5056 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14762 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5059 "../../../src/fsharp/pars.fsy"
                             SynType.StaticConstant(SynConst.Bool true, lhs parseState) 
                   )
//# 5059 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14772 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5062 "../../../src/fsharp/pars.fsy"
                            (* silent recovery *) SynType.Anon (lhs parseState) 
                   )
//# 5062 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14783 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * SyntaxTree.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5065 "../../../src/fsharp/pars.fsy"
                            let mLessThan, mGreaterThan, args, commas, mWhole = _2 in SynType.App(_1, Some(mLessThan), args, commas, mGreaterThan, false, unionRanges _1.Range mWhole) 
                   )
//# 5065 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14795 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5068 "../../../src/fsharp/pars.fsy"
                            SynType.LongIdentApp(_1, _3, None, [], [], None, unionRanges (rhs parseState 1) _3.Range) 
                   )
//# 5068 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14807 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * SyntaxTree.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5071 "../../../src/fsharp/pars.fsy"
                            let mLessThan, mGreaterThan, args, commas, mWhole = _4 
                            SynType.LongIdentApp(_1, _3, Some(mLessThan), args, commas, mGreaterThan, unionRanges _1.Range mWhole) 
                   )
//# 5071 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14821 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5075 "../../../src/fsharp/pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedNameAfterToken())
                            _1 
                   )
//# 5075 "../../../src/fsharp/pars.fsy"
                 : 'atomType));
//# 14834 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * bool     * SyntaxTree.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5080 "../../../src/fsharp/pars.fsy"
                            let mLessThan, mGreaterThan, parsedOk, args, commas, mAll = _1
                            if parsedOk then // if someone has "foo<bar" without a closing greater-than, then the lexfilter does not introduce a HPA, even though it is adjacent
                                warning(Error(FSComp.SR.parsNonAdjacentTyargs(), rhs parseState 1))
                            mLessThan, mGreaterThan, args, commas, mAll 
                   )
//# 5080 "../../../src/fsharp/pars.fsy"
                 : range * range option * SyntaxTree.SynType list * range list * range));
//# 14848 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * bool     * SyntaxTree.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5086 "../../../src/fsharp/pars.fsy"
                            let mLessThan, mGreaterThan, _, args, commas, mAll = _2
                            mLessThan, mGreaterThan, args, commas, mAll 
                   )
//# 5086 "../../../src/fsharp/pars.fsy"
                 : range * range option * SyntaxTree.SynType list * range list * range));
//# 14860 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5091 "../../../src/fsharp/pars.fsy"
                            let typeArgs, commas = _5
                            (rhs parseState 1), Some(rhs parseState 6), true, (_2 :: _4 :: List.rev typeArgs), (rhs parseState 3) :: (List.rev commas), lhs parseState 
                   )
//# 5091 "../../../src/fsharp/pars.fsy"
                 : range * range option * bool     * SyntaxTree.SynType list * range list * range));
//# 14876 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5095 "../../../src/fsharp/pars.fsy"
                            if not _6 then 
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileTypeArgs())
                            else
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMissingGreaterThan())
                            let typeArgs, commas = _5
                            let nextToken = rhs parseState 6
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, (_2 :: _4 :: List.rev typeArgs), (rhs parseState 3) :: (List.rev commas), unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
//# 5095 "../../../src/fsharp/pars.fsy"
                 : range * range option * bool     * SyntaxTree.SynType list * range list * range));
//# 14898 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5105 "../../../src/fsharp/pars.fsy"
                            if not _4 then reportParseErrorAt (rhs parseState 4) (FSComp.SR.parsMissingTypeArgs())
                            let nextToken = rhs parseState 4
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, [_2], [rhs parseState 3], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
//# 5105 "../../../src/fsharp/pars.fsy"
                 : range * range option * bool     * SyntaxTree.SynType list * range list * range));
//# 14914 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5111 "../../../src/fsharp/pars.fsy"
                            (rhs parseState 1), Some(rhs parseState 3), true, [_2], [], lhs parseState 
                   )
//# 5111 "../../../src/fsharp/pars.fsy"
                 : range * range option * bool     * SyntaxTree.SynType list * range list * range));
//# 14927 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5114 "../../../src/fsharp/pars.fsy"
                            let nextToken = rhs parseState 3
                            if not _3 then reportParseErrorAt nextToken (FSComp.SR.parsMissingTypeArgs())
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, [_2], [], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
//# 5114 "../../../src/fsharp/pars.fsy"
                 : range * range option * bool     * SyntaxTree.SynType list * range list * range));
//# 14943 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5120 "../../../src/fsharp/pars.fsy"
                            (rhs parseState 1), Some(rhs parseState 2), true, [], [], lhs parseState 
                   )
//# 5120 "../../../src/fsharp/pars.fsy"
                 : range * range option * bool     * SyntaxTree.SynType list * range list * range));
//# 14955 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5123 "../../../src/fsharp/pars.fsy"
                            if not _2 then  
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsExpectedTypeAfterToken())
                            else
                                reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let nextToken = rhs parseState 2
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, [], [], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
//# 5123 "../../../src/fsharp/pars.fsy"
                 : range * range option * bool     * SyntaxTree.SynType list * range list * range));
//# 14973 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5133 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5133 "../../../src/fsharp/pars.fsy"
                 : 'typeArgActual));
//# 14984 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5136 "../../../src/fsharp/pars.fsy"
                            SynType.StaticConstantNamed(_1, _3, unionRanges _1.Range _3.Range) 
                   )
//# 5136 "../../../src/fsharp/pars.fsy"
                 : 'typeArgActual));
//# 14996 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5139 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let dummy = SynType.StaticConstant(SynConst.Int32(0), rhs parseState 2)
                            SynType.StaticConstantNamed(_1, dummy, (rhs2 parseState 1 2))
                          
                   )
//# 5139 "../../../src/fsharp/pars.fsy"
                 : 'typeArgActual));
//# 15010 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5146 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5146 "../../../src/fsharp/pars.fsy"
                 : 'typeArgActualOrDummyIfEmpty));
//# 15021 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'dummyTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5149 "../../../src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMissingTypeArgs())
                            _1 
                   )
//# 5149 "../../../src/fsharp/pars.fsy"
                 : 'typeArgActualOrDummyIfEmpty));
//# 15033 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5154 "../../../src/fsharp/pars.fsy"
                            let m = rhs parseState 1
                            let dummyStatVal = SynType.StaticConstant(SynConst.Int32(0), m)
                            let dummyName = SynType.LongIdent(LongIdentWithDots([ident("", m)], []))
                            let dummyTypeArg = SynType.StaticConstantNamed(dummyName, dummyStatVal, m)
                            dummyTypeArg 
                   )
//# 5154 "../../../src/fsharp/pars.fsy"
                 : 'dummyTypeArg));
//# 15047 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5162 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 5162 "../../../src/fsharp/pars.fsy"
                 : 'measureTypeArg));
//# 15060 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5165 "../../../src/fsharp/pars.fsy"
                            SynMeasure.Anon (lhs parseState) 
                   )
//# 5165 "../../../src/fsharp/pars.fsy"
                 : 'measureTypeArg));
//# 15072 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5169 "../../../src/fsharp/pars.fsy"
                            SynMeasure.Named(_1.Lid, _1.Range) 
                   )
//# 5169 "../../../src/fsharp/pars.fsy"
                 : 'measureTypeAtom));
//# 15083 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5172 "../../../src/fsharp/pars.fsy"
                            SynMeasure.Var(_1, lhs parseState) 
                   )
//# 5172 "../../../src/fsharp/pars.fsy"
                 : 'measureTypeAtom));
//# 15094 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5175 "../../../src/fsharp/pars.fsy"
                            _2 
                   )
//# 5175 "../../../src/fsharp/pars.fsy"
                 : 'measureTypeAtom));
//# 15106 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5179 "../../../src/fsharp/pars.fsy"
                             _1 
                   )
//# 5179 "../../../src/fsharp/pars.fsy"
                 : 'measureTypePower));
//# 15117 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5182 "../../../src/fsharp/pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            if _2 = "^-" then SynMeasure.Power(_1, SynRationalConst.Negate(_3), lhs parseState)
                            else SynMeasure.Power(_1, _3, lhs parseState) 
                   )
//# 5182 "../../../src/fsharp/pars.fsy"
                 : 'measureTypePower));
//# 15132 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5187 "../../../src/fsharp/pars.fsy"
                            if fst _1 <> 1 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedIntegerLiteralForUnitOfMeasure());
                            SynMeasure.One 
                   )
//# 5187 "../../../src/fsharp/pars.fsy"
                 : 'measureTypePower));
//# 15144 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypePower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5192 "../../../src/fsharp/pars.fsy"
                           [_1] 
                   )
//# 5192 "../../../src/fsharp/pars.fsy"
                 : 'measureTypeSeq));
//# 15155 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypePower)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5195 "../../../src/fsharp/pars.fsy"
                           _1 :: _2 
                   )
//# 5195 "../../../src/fsharp/pars.fsy"
                 : 'measureTypeSeq));
//# 15167 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5199 "../../../src/fsharp/pars.fsy"
                           SynMeasure.Seq(_1, lhs parseState) 
                   )
//# 5199 "../../../src/fsharp/pars.fsy"
                 : 'measureTypeExpr));
//# 15178 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5202 "../../../src/fsharp/pars.fsy"
                           SynMeasure.Product(_1, _3, lhs parseState) 
                   )
//# 5202 "../../../src/fsharp/pars.fsy"
                 : 'measureTypeExpr));
//# 15190 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5205 "../../../src/fsharp/pars.fsy"
                           if _2 <> "*" && _2 <> "/" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                           if _2 = "*" then SynMeasure.Product(_1, _3, lhs parseState)
                           else SynMeasure.Divide(_1, _3, lhs parseState) 
                   )
//# 5205 "../../../src/fsharp/pars.fsy"
                 : 'measureTypeExpr));
//# 15205 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5210 "../../../src/fsharp/pars.fsy"
                            if _1 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            SynMeasure.Divide(SynMeasure.One, _2, lhs parseState) 
                   )
//# 5210 "../../../src/fsharp/pars.fsy"
                 : 'measureTypeExpr));
//# 15218 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5215 "../../../src/fsharp/pars.fsy"
                             let id = mkSynId (lhs parseState) (_2).idText
                             Typar(id, NoStaticReq, false) 
                   )
//# 5215 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynTypar));
//# 15230 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5219 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5219 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.SynTypar));
//# 15241 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5223 "../../../src/fsharp/pars.fsy"
                            if _1 <> "^" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedTypeParameter());
                            let id = mkSynId (lhs parseState) (_2).idText
                            Typar(id, HeadTypeStaticReq, false) 
                   )
//# 5223 "../../../src/fsharp/pars.fsy"
                 : 'staticallyKnownHeadTypar));
//# 15255 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5229 "../../../src/fsharp/pars.fsy"
                            ident(_1, rhs parseState 1) 
                   )
//# 5229 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.Ident));
//# 15266 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5234 "../../../src/fsharp/pars.fsy"
                             LongIdentWithDots([ident(MangledGlobalName, rhs parseState 1)], []) 
                   )
//# 5234 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.LongIdentWithDots));
//# 15276 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5237 "../../../src/fsharp/pars.fsy"
                            LongIdentWithDots([_1], []) 
                   )
//# 5237 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.LongIdentWithDots));
//# 15287 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5240 "../../../src/fsharp/pars.fsy"
                            let (LongIdentWithDots(lid, dotms)) = _1 in LongIdentWithDots(lid @ [_3], dotms @ [rhs parseState 2]) 
                   )
//# 5240 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.LongIdentWithDots));
//# 15299 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5243 "../../../src/fsharp/pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedNameAfterToken())
                            let (LongIdentWithDots(lid, dotms)) = _1 in LongIdentWithDots(lid, dotms @ [rhs parseState 2])  
                   )
//# 5243 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.LongIdentWithDots));
//# 15312 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'operatorName)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5250 "../../../src/fsharp/pars.fsy"
                             ident(CompileOpName _2, rhs parseState 2) 
                   )
//# 5250 "../../../src/fsharp/pars.fsy"
                 : 'opName));
//# 15324 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5253 "../../../src/fsharp/pars.fsy"
                             reportParseErrorAt (lhs parseState) (FSComp.SR.parsErrorParsingAsOperatorName()); ident(CompileOpName "****", rhs parseState 2) 
                   )
//# 5253 "../../../src/fsharp/pars.fsy"
                 : 'opName));
//# 15335 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5256 "../../../src/fsharp/pars.fsy"
                             ident(CompileOpName "*", rhs parseState 1) 
                   )
//# 5256 "../../../src/fsharp/pars.fsy"
                 : 'opName));
//# 15345 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseNames)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5260 "../../../src/fsharp/pars.fsy"
                            let text = ("|" + String.concat "|" (List.rev _2) + "|")
                            ident(text, rhs2 parseState 2 3) 
                   )
//# 5260 "../../../src/fsharp/pars.fsy"
                 : 'opName));
//# 15358 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseNames)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5265 "../../../src/fsharp/pars.fsy"
                            let text = ("|" + String.concat "|" (List.rev _2) + "|_|" )
                            ident(text, rhs2 parseState 2 5) 
                   )
//# 5265 "../../../src/fsharp/pars.fsy"
                 : 'opName));
//# 15371 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5271 "../../../src/fsharp/pars.fsy"
                            if not (IsValidPrefixOperatorDefinitionName _1) then 
                                reportParseErrorAt (lhs parseState) (FSComp.SR.parsInvalidPrefixOperatorDefinition());
                            _1 
                   )
//# 5271 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15384 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5276 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5276 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15395 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5279 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5279 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15406 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5282 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5282 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15417 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5285 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5285 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15428 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5288 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5288 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15439 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5291 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5291 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15450 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5294 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5294 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15461 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5297 "../../../src/fsharp/pars.fsy"
                            "$" 
                   )
//# 5297 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15471 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5300 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5300 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15482 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5303 "../../../src/fsharp/pars.fsy"
                            "-" 
                   )
//# 5303 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15492 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5306 "../../../src/fsharp/pars.fsy"
                            "*" 
                   )
//# 5306 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15502 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5309 "../../../src/fsharp/pars.fsy"
                            "=" 
                   )
//# 5309 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15512 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5312 "../../../src/fsharp/pars.fsy"
                            "or" 
                   )
//# 5312 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15522 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5315 "../../../src/fsharp/pars.fsy"
                            "<" 
                   )
//# 5315 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15533 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5318 "../../../src/fsharp/pars.fsy"
                            ">" 
                   )
//# 5318 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15544 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5321 "../../../src/fsharp/pars.fsy"
                            "?" 
                   )
//# 5321 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15554 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5324 "../../../src/fsharp/pars.fsy"
                            "&" 
                   )
//# 5324 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15564 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5327 "../../../src/fsharp/pars.fsy"
                            "&&" 
                   )
//# 5327 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15574 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5330 "../../../src/fsharp/pars.fsy"
                            "||" 
                   )
//# 5330 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15584 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5333 "../../../src/fsharp/pars.fsy"
                            ":=" 
                   )
//# 5333 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15594 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5336 "../../../src/fsharp/pars.fsy"
                            if _1 <> ".[]"  && _1 <> ".()" && _1 <> ".()<-" then 
                                 deprecatedOperator (lhs parseState); 
                            _1 
                   )
//# 5336 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15607 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5341 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5341 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15618 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5344 "../../../src/fsharp/pars.fsy"
                            ".." 
                   )
//# 5344 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15628 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5347 "../../../src/fsharp/pars.fsy"
                            ".. .." 
                   )
//# 5347 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15638 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5350 "../../../src/fsharp/pars.fsy"
                            if _1 <> _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMismatchedQuotationName(fst _1));  
                            fst _1 
                   )
//# 5350 "../../../src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15651 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5356 "../../../src/fsharp/pars.fsy"
                            if not (String.isLeadingIdentifierCharacterUpperCase _1) then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsActivePatternCaseMustBeginWithUpperCase());  
                            if (_1.IndexOf('|') <> -1) then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsActivePatternCaseContainsPipe());  
                            _1 
                   )
//# 5356 "../../../src/fsharp/pars.fsy"
                 : 'activePatternCaseName));
//# 15664 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5363 "../../../src/fsharp/pars.fsy"
                            [_2] 
                   )
//# 5363 "../../../src/fsharp/pars.fsy"
                 : 'activePatternCaseNames));
//# 15675 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseNames)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5366 "../../../src/fsharp/pars.fsy"
                            _3 :: _1 
                   )
//# 5366 "../../../src/fsharp/pars.fsy"
                 : 'activePatternCaseNames));
//# 15687 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5371 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5371 "../../../src/fsharp/pars.fsy"
                 : 'identOrOp));
//# 15698 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5374 "../../../src/fsharp/pars.fsy"
                            _1 
                   )
//# 5374 "../../../src/fsharp/pars.fsy"
                 : 'identOrOp));
//# 15709 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5380 "../../../src/fsharp/pars.fsy"
                            LongIdentWithDots([_1], []) 
                   )
//# 5380 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.LongIdentWithDots));
//# 15720 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5383 "../../../src/fsharp/pars.fsy"
                            LongIdentWithDots([_1], []) 
                   )
//# 5383 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.LongIdentWithDots));
//# 15731 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5386 "../../../src/fsharp/pars.fsy"
                            let (LongIdentWithDots(lid, dotms)) = _3 in LongIdentWithDots(_1 :: lid, rhs parseState 2 :: dotms) 
                   )
//# 5386 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.LongIdentWithDots));
//# 15743 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5389 "../../../src/fsharp/pars.fsy"
                            (* silent recovery *) LongIdentWithDots([_1], [rhs parseState 2]) 
                   )
//# 5389 "../../../src/fsharp/pars.fsy"
                 : SyntaxTree.LongIdentWithDots));
//# 15754 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identOrOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5394 "../../../src/fsharp/pars.fsy"
                                     _1 
                   )
//# 5394 "../../../src/fsharp/pars.fsy"
                 : 'nameop));
//# 15765 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5398 "../../../src/fsharp/pars.fsy"
                            SynExpr.Ident(_1) 
                   )
//# 5398 "../../../src/fsharp/pars.fsy"
                 : 'identExpr));
//# 15776 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5401 "../../../src/fsharp/pars.fsy"
                            let m = lhs parseState
                            let mLparen = mkFileIndexRange m.FileIndex m.Start (mkPos m.StartLine (m.StartColumn + 1))
                            let mRparen = mkFileIndexRange m.FileIndex (mkPos m.EndLine (m.EndColumn - 1)) m.End
                            SynExpr.Paren(SynExpr.Ident(_1), mLparen, Some mRparen, m) 
                   )
//# 5401 "../../../src/fsharp/pars.fsy"
                 : 'identExpr));
//# 15790 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5407 "../../../src/fsharp/pars.fsy"
                                     
                   )
//# 5407 "../../../src/fsharp/pars.fsy"
                 : 'topSeparator));
//# 15800 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5408 "../../../src/fsharp/pars.fsy"
                                               
                   )
//# 5408 "../../../src/fsharp/pars.fsy"
                 : 'topSeparator));
//# 15810 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5409 "../../../src/fsharp/pars.fsy"
                                     
                   )
//# 5409 "../../../src/fsharp/pars.fsy"
                 : 'topSeparator));
//# 15820 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5412 "../../../src/fsharp/pars.fsy"
                                        
                   )
//# 5412 "../../../src/fsharp/pars.fsy"
                 : 'topSeparators));
//# 15831 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5413 "../../../src/fsharp/pars.fsy"
                                                      
                   )
//# 5413 "../../../src/fsharp/pars.fsy"
                 : 'topSeparators));
//# 15843 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5416 "../../../src/fsharp/pars.fsy"
                                                          
                   )
//# 5416 "../../../src/fsharp/pars.fsy"
                 : 'opt_topSeparators));
//# 15855 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5417 "../../../src/fsharp/pars.fsy"
                                                          
                   )
//# 5417 "../../../src/fsharp/pars.fsy"
                 : 'opt_topSeparators));
//# 15865 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5421 "../../../src/fsharp/pars.fsy"
                                     
                   )
//# 5421 "../../../src/fsharp/pars.fsy"
                 : 'seps));
//# 15875 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5422 "../../../src/fsharp/pars.fsy"
                                     
                   )
//# 5422 "../../../src/fsharp/pars.fsy"
                 : 'seps));
//# 15885 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5423 "../../../src/fsharp/pars.fsy"
                                               
                   )
//# 5423 "../../../src/fsharp/pars.fsy"
                 : 'seps));
//# 15895 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5424 "../../../src/fsharp/pars.fsy"
                                               
                   )
//# 5424 "../../../src/fsharp/pars.fsy"
                 : 'seps));
//# 15905 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5429 "../../../src/fsharp/pars.fsy"
                             
                   )
//# 5429 "../../../src/fsharp/pars.fsy"
                 : 'declEnd));
//# 15915 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5431 "../../../src/fsharp/pars.fsy"
                               
                   )
//# 5431 "../../../src/fsharp/pars.fsy"
                 : 'declEnd));
//# 15925 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5433 "../../../src/fsharp/pars.fsy"
                             
                   )
//# 5433 "../../../src/fsharp/pars.fsy"
                 : 'declEnd));
//# 15935 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5438 "../../../src/fsharp/pars.fsy"
                            
                   )
//# 5438 "../../../src/fsharp/pars.fsy"
                 : 'opt_declEnd));
//# 15945 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5440 "../../../src/fsharp/pars.fsy"
                             
                   )
//# 5440 "../../../src/fsharp/pars.fsy"
                 : 'opt_declEnd));
//# 15955 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5442 "../../../src/fsharp/pars.fsy"
                            
                   )
//# 5442 "../../../src/fsharp/pars.fsy"
                 : 'opt_declEnd));
//# 15965 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5444 "../../../src/fsharp/pars.fsy"
                            
                   )
//# 5444 "../../../src/fsharp/pars.fsy"
                 : 'opt_declEnd));
//# 15975 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5447 "../../../src/fsharp/pars.fsy"
                                       
                   )
//# 5447 "../../../src/fsharp/pars.fsy"
                 : 'opt_ODECLEND));
//# 15985 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5448 "../../../src/fsharp/pars.fsy"
                                       
                   )
//# 5448 "../../../src/fsharp/pars.fsy"
                 : 'opt_ODECLEND));
//# 15995 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5451 "../../../src/fsharp/pars.fsy"
                                       deprecatedWithError (FSComp.SR.parsNoEqualShouldFollowNamespace()) (lhs parseState); () 
                   )
//# 5451 "../../../src/fsharp/pars.fsy"
                 : 'deprecated_opt_equals));
//# 16005 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5452 "../../../src/fsharp/pars.fsy"
                                        
                   )
//# 5452 "../../../src/fsharp/pars.fsy"
                 : 'deprecated_opt_equals));
//# 16015 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5455 "../../../src/fsharp/pars.fsy"
                                       true 
                   )
//# 5455 "../../../src/fsharp/pars.fsy"
                 : 'opt_equals));
//# 16025 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5456 "../../../src/fsharp/pars.fsy"
                                       false 
                   )
//# 5456 "../../../src/fsharp/pars.fsy"
                 : 'opt_equals));
//# 16035 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5459 "../../../src/fsharp/pars.fsy"
                                       
                   )
//# 5459 "../../../src/fsharp/pars.fsy"
                 : 'opt_OBLOCKSEP));
//# 16045 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5460 "../../../src/fsharp/pars.fsy"
                                       
                   )
//# 5460 "../../../src/fsharp/pars.fsy"
                 : 'opt_OBLOCKSEP));
//# 16055 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5463 "../../../src/fsharp/pars.fsy"
                                       
                   )
//# 5463 "../../../src/fsharp/pars.fsy"
                 : 'opt_seps));
//# 16066 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5464 "../../../src/fsharp/pars.fsy"
                                       
                   )
//# 5464 "../../../src/fsharp/pars.fsy"
                 : 'opt_seps));
//# 16076 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5467 "../../../src/fsharp/pars.fsy"
                                       true 
                   )
//# 5467 "../../../src/fsharp/pars.fsy"
                 : 'opt_rec));
//# 16086 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5468 "../../../src/fsharp/pars.fsy"
                                       false 
                   )
//# 5468 "../../../src/fsharp/pars.fsy"
                 : 'opt_rec));
//# 16096 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5471 "../../../src/fsharp/pars.fsy"
                                       
                   )
//# 5471 "../../../src/fsharp/pars.fsy"
                 : 'opt_bar));
//# 16106 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5472 "../../../src/fsharp/pars.fsy"
                                       
                   )
//# 5472 "../../../src/fsharp/pars.fsy"
                 : 'opt_bar));
//# 16116 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5475 "../../../src/fsharp/pars.fsy"
                                       true 
                   )
//# 5475 "../../../src/fsharp/pars.fsy"
                 : 'opt_inline));
//# 16126 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5476 "../../../src/fsharp/pars.fsy"
                                       false 
                   )
//# 5476 "../../../src/fsharp/pars.fsy"
                 : 'opt_inline));
//# 16136 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5479 "../../../src/fsharp/pars.fsy"
                                       true 
                   )
//# 5479 "../../../src/fsharp/pars.fsy"
                 : 'opt_mutable));
//# 16146 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5480 "../../../src/fsharp/pars.fsy"
                                       false 
                   )
//# 5480 "../../../src/fsharp/pars.fsy"
                 : 'opt_mutable));
//# 16156 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5484 "../../../src/fsharp/pars.fsy"
                               
                   )
//# 5484 "../../../src/fsharp/pars.fsy"
                 : 'doToken));
//# 16166 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5485 "../../../src/fsharp/pars.fsy"
                               
                   )
//# 5485 "../../../src/fsharp/pars.fsy"
                 : 'doToken));
//# 16176 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5488 "../../../src/fsharp/pars.fsy"
                                
                   )
//# 5488 "../../../src/fsharp/pars.fsy"
                 : 'doneDeclEnd));
//# 16186 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5489 "../../../src/fsharp/pars.fsy"
                                    
                   )
//# 5489 "../../../src/fsharp/pars.fsy"
                 : 'doneDeclEnd));
//# 16196 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5492 "../../../src/fsharp/pars.fsy"
                                  mlCompatWarning (FSComp.SR.parsSyntaxModuleStructEndDeprecated()) (lhs parseState); 
                   )
//# 5492 "../../../src/fsharp/pars.fsy"
                 : 'structOrBegin));
//# 16206 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5493 "../../../src/fsharp/pars.fsy"
                                 
                   )
//# 5493 "../../../src/fsharp/pars.fsy"
                 : 'structOrBegin));
//# 16216 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5496 "../../../src/fsharp/pars.fsy"
                               mlCompatWarning (FSComp.SR.parsSyntaxModuleSigEndDeprecated()) (lhs parseState); 
                   )
//# 5496 "../../../src/fsharp/pars.fsy"
                 : 'sigOrBegin));
//# 16226 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5497 "../../../src/fsharp/pars.fsy"
                                 
                   )
//# 5497 "../../../src/fsharp/pars.fsy"
                 : 'sigOrBegin));
//# 16236 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5500 "../../../src/fsharp/pars.fsy"
                                 mlCompatWarning (FSComp.SR.parsSyntaxModuleSigEndDeprecated()) (lhs parseState); 
                   )
//# 5500 "../../../src/fsharp/pars.fsy"
                 : 'colonOrEquals));
//# 16246 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5501 "../../../src/fsharp/pars.fsy"
                                  
                   )
//# 5501 "../../../src/fsharp/pars.fsy"
                 : 'colonOrEquals));
//# 16256 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5505 "../../../src/fsharp/pars.fsy"
                                  fst _1 
                   )
//# 5505 "../../../src/fsharp/pars.fsy"
                 : 'stringOrKeywordString));
//# 16267 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5506 "../../../src/fsharp/pars.fsy"
                                          _1 
                   )
//# 5506 "../../../src/fsharp/pars.fsy"
                 : 'stringOrKeywordString));
//# 16278 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5510 "../../../src/fsharp/pars.fsy"
                            (_1, None) 
                   )
//# 5510 "../../../src/fsharp/pars.fsy"
                 : 'interpolatedStringFill));
//# 16289 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5513 "../../../src/fsharp/pars.fsy"
                            (_1, Some _3) 
                   )
//# 5513 "../../../src/fsharp/pars.fsy"
                 : 'interpolatedStringFill));
//# 16301 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5517 "../../../src/fsharp/pars.fsy"
                            [ SynInterpolatedStringPart.String (fst _1, rhs parseState 1) ] 
                   )
//# 5517 "../../../src/fsharp/pars.fsy"
                 : 'interpolatedStringParts));
//# 16312 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interpolatedStringFill)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interpolatedStringParts)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5520 "../../../src/fsharp/pars.fsy"
                            SynInterpolatedStringPart.String (fst _1, rhs parseState 1) :: SynInterpolatedStringPart.FillExpr _2 :: _3 
                   )
//# 5520 "../../../src/fsharp/pars.fsy"
                 : 'interpolatedStringParts));
//# 16325 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interpolatedStringParts)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5523 "../../../src/fsharp/pars.fsy"
                            
                            let rbrace = parseState.InputEndPosition 1
                            let lbrace = parseState.InputStartPosition 2
                            reportParseErrorAt (mkSynRange rbrace lbrace) (FSComp.SR.parsEmptyFillInInterpolatedString())
                            SynInterpolatedStringPart.String (fst _1, rhs parseState 1) :: _2 
                   )
//# 5523 "../../../src/fsharp/pars.fsy"
                 : 'interpolatedStringParts));
//# 16341 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interpolatedStringFill)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interpolatedStringParts)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5534 "../../../src/fsharp/pars.fsy"
                           SynInterpolatedStringPart.String (fst _1, rhs parseState 1) :: SynInterpolatedStringPart.FillExpr _2 :: _3 
                   )
//# 5534 "../../../src/fsharp/pars.fsy"
                 : 'interpolatedString));
//# 16354 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5537 "../../../src/fsharp/pars.fsy"
                           [ SynInterpolatedStringPart.String (fst _1, rhs parseState 1) ] 
                   )
//# 5537 "../../../src/fsharp/pars.fsy"
                 : 'interpolatedString));
//# 16365 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interpolatedStringParts)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5540 "../../../src/fsharp/pars.fsy"
                           
                           let rbrace = parseState.InputEndPosition 1
                           let lbrace = parseState.InputStartPosition 2
                           reportParseErrorAt (mkSynRange rbrace lbrace) (FSComp.SR.parsEmptyFillInInterpolatedString())
                           SynInterpolatedStringPart.String (fst _1, rhs parseState 1) :: _2 
                   )
//# 5540 "../../../src/fsharp/pars.fsy"
                 : 'interpolatedString));
//# 16381 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5547 "../../../src/fsharp/pars.fsy"
                                                     
                   )
//# 5547 "../../../src/fsharp/pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
//# 16391 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5548 "../../../src/fsharp/pars.fsy"
                                                     
                   )
//# 5548 "../../../src/fsharp/pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
//# 16401 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5549 "../../../src/fsharp/pars.fsy"
                                         
                   )
//# 5549 "../../../src/fsharp/pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
//# 16411 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5552 "../../../src/fsharp/pars.fsy"
                                                 
                   )
//# 5552 "../../../src/fsharp/pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_TYAPP));
//# 16421 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5553 "../../../src/fsharp/pars.fsy"
                                         
                   )
//# 5553 "../../../src/fsharp/pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_TYAPP));
//# 16431 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5557 "../../../src/fsharp/pars.fsy"
                                                        
                   )
//# 5557 "../../../src/fsharp/pars.fsy"
                 : 'typeKeyword));
//# 16442 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5558 "../../../src/fsharp/pars.fsy"
                                        
                   )
//# 5558 "../../../src/fsharp/pars.fsy"
                 : 'typeKeyword));
//# 16452 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5559 "../../../src/fsharp/pars.fsy"
                                
                   )
//# 5559 "../../../src/fsharp/pars.fsy"
                 : 'typeKeyword));
//# 16462 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5563 "../../../src/fsharp/pars.fsy"
                                                            
                   )
//# 5563 "../../../src/fsharp/pars.fsy"
                 : 'moduleKeyword));
//# 16473 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5564 "../../../src/fsharp/pars.fsy"
                                          
                   )
//# 5564 "../../../src/fsharp/pars.fsy"
                 : 'moduleKeyword));
//# 16483 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5565 "../../../src/fsharp/pars.fsy"
                                  
                   )
//# 5565 "../../../src/fsharp/pars.fsy"
                 : 'moduleKeyword));
//# 16493 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5568 "../../../src/fsharp/pars.fsy"
                                                     
                   )
//# 5568 "../../../src/fsharp/pars.fsy"
                 : 'rbrace));
//# 16504 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5569 "../../../src/fsharp/pars.fsy"
                                          
                   )
//# 5569 "../../../src/fsharp/pars.fsy"
                 : 'rbrace));
//# 16514 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5570 "../../../src/fsharp/pars.fsy"
                                  
                   )
//# 5570 "../../../src/fsharp/pars.fsy"
                 : 'rbrace));
//# 16525 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5573 "../../../src/fsharp/pars.fsy"
                                      
                   )
//# 5573 "../../../src/fsharp/pars.fsy"
                 : 'bar_rbrace));
//# 16535 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5576 "../../../src/fsharp/pars.fsy"
                                                     
                   )
//# 5576 "../../../src/fsharp/pars.fsy"
                 : 'rparen));
//# 16546 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5577 "../../../src/fsharp/pars.fsy"
                                          
                   )
//# 5577 "../../../src/fsharp/pars.fsy"
                 : 'rparen));
//# 16556 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5578 "../../../src/fsharp/pars.fsy"
                                  
                   )
//# 5578 "../../../src/fsharp/pars.fsy"
                 : 'rparen));
//# 16566 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5581 "../../../src/fsharp/pars.fsy"
                                                           
                   )
//# 5581 "../../../src/fsharp/pars.fsy"
                 : 'oblockend));
//# 16577 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5582 "../../../src/fsharp/pars.fsy"
                                             
                   )
//# 5582 "../../../src/fsharp/pars.fsy"
                 : 'oblockend));
//# 16587 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5583 "../../../src/fsharp/pars.fsy"
                                     
                   )
//# 5583 "../../../src/fsharp/pars.fsy"
                 : 'oblockend));
//# 16597 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5586 "../../../src/fsharp/pars.fsy"
                                            false 
                   )
//# 5586 "../../../src/fsharp/pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
//# 16607 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5587 "../../../src/fsharp/pars.fsy"
                                              false 
                   )
//# 5587 "../../../src/fsharp/pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
//# 16617 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5588 "../../../src/fsharp/pars.fsy"
                                              false 
                   )
//# 5588 "../../../src/fsharp/pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
//# 16627 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5589 "../../../src/fsharp/pars.fsy"
                                                 false 
                   )
//# 5589 "../../../src/fsharp/pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
//# 16637 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5590 "../../../src/fsharp/pars.fsy"
                                   _1 
                   )
//# 5590 "../../../src/fsharp/pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
//# 16648 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5593 "../../../src/fsharp/pars.fsy"
                                            false 
                   )
//# 5593 "../../../src/fsharp/pars.fsy"
                 : 'ends_coming_soon_or_recover));
//# 16658 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5594 "../../../src/fsharp/pars.fsy"
                                              false 
                   )
//# 5594 "../../../src/fsharp/pars.fsy"
                 : 'ends_coming_soon_or_recover));
//# 16668 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5595 "../../../src/fsharp/pars.fsy"
                                              false 
                   )
//# 5595 "../../../src/fsharp/pars.fsy"
                 : 'ends_coming_soon_or_recover));
//# 16678 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5596 "../../../src/fsharp/pars.fsy"
                                              false 
                   )
//# 5596 "../../../src/fsharp/pars.fsy"
                 : 'ends_coming_soon_or_recover));
//# 16688 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5597 "../../../src/fsharp/pars.fsy"
                                                 false 
                   )
//# 5597 "../../../src/fsharp/pars.fsy"
                 : 'ends_coming_soon_or_recover));
//# 16698 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5598 "../../../src/fsharp/pars.fsy"
                                   _1 
                   )
//# 5598 "../../../src/fsharp/pars.fsy"
                 : 'ends_coming_soon_or_recover));
|]
//# 16710 "pars.fs"
let tables () : Internal.Utilities.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Internal.Utilities.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 204;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let signatureFile lexer lexbuf : SyntaxTree.ParsedSigFile =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
let implementationFile lexer lexbuf : SyntaxTree.ParsedImplFile =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 2))
let interaction lexer lexbuf : SyntaxTree.ParsedFsiInteraction =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 4))
let typedSeqExprEOF lexer lexbuf : SyntaxTree.SynExpr =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 6))
let typEOF lexer lexbuf : SyntaxTree.SynType =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 8))
